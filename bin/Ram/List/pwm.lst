###############################################################################
#                                                                             #
#                                                       28/Feb/2014  18:56:16 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PhotoelectricC #
#                    ar V1.1\src\Sources\C\Component_C\pwm.c                  #
#    Command line =  "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.1\src\Sources\C\Component_C\pwm.c" -D IAR -D      #
#                    TWR_K60N512 -lCN "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ #
#                    ÌÐò\PhotoelectricCar V1.1\bin\Ram\List\" -lB             #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.1\bin\Ram\List\" -o "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\frees #
#                    cale(¾Å)\³ÌÐò\PhotoelectricCar V1.1\bin\Ram\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config E:\IAREW6.3\arm\INC\c\DLib_Config_Normal.h #
#                     -I "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelec #
#                    tricCar V1.1\src\Sources\H\" -I                          #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.1\src\Sources\H\Component_H\" -I                  #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.1\src\Sources\H\Frame_H\" -Ol --use_c++_inline    #
#    List file    =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PhotoelectricC #
#                    ar V1.1\bin\Ram\List\pwm.lst                             #
#    Object file  =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PhotoelectricC #
#                    ar V1.1\bin\Ram\Obj\pwm.o                                #
#                                                                             #
#                                                                             #
###############################################################################

D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PhotoelectricCar V1.1\src\Sources\C\Component_C\pwm.c
      1          #include<pwm.h>
      2          #include<gpio.h>    
      3          
      4          extern int periph_clk_khz;

   \                                 In section .bss, align 4
      5          uint32 FTM_MOD0=0;
   \                     FTM_MOD0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      6          uint32 FTM_MOD1=0;
   \                     FTM_MOD1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      7          uint32 FTM_MOD2=0;
   \                     FTM_MOD2:
   \   00000000                      DS8 4
      8           
      9          
     10          /***************************************************************
     11          *º¯ÊýÃû£ºuint8 FTM_PWM_Init(uint8 FTMx,uint32 freq)
     12          *¹¦ÄÜ£º  ½«ÌØ¶¨µÄFTMx³õÊ¼»¯ÎªpwmÊä³ö£¬²¢ÇÒÉèÖÃÆµÂÊ
     13          *Èë¿Ú²ÎÊý£º(1)FTMx : 0
     14                               1
     15                               2
     16                     
     17                    (2)fre  :  Hz
     18          *³ö¿Ú²ÎÊý£ºÎÞ
     19          *ËµÃ÷£ºÎÞ
     20          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
     21          uint8 FTM_PWM_Init(uint8 FTMx,uint32 freq)
     22          {
   \                     FTM_PWM_Init:
   \   00000000   0xB430             PUSH     {R4,R5}
     23            uint32 bus_clk_hz;
     24            uint32 mod;
     25            uint8  ps=0;
   \   00000002   0x2300             MOVS     R3,#+0
     26            bus_clk_hz = periph_clk_khz*1000;
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable3
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0xF44F 0x747A      MOV      R4,#+1000
   \   0000000E   0x4362             MULS     R2,R4,R2
     27              
     28            if(freq>bus_clk_hz) return 0;
   \   00000010   0x428A             CMP      R2,R1
   \   00000012   0xD201             BCS.N    ??FTM_PWM_Init_0
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xE09E             B.N      ??FTM_PWM_Init_1
     29            
     30            if((mod=bus_clk_hz/(freq*128)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_0:
   \   00000018   0x2380             MOVS     R3,#+128
   \   0000001A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000001E   0xFBB2 0xF4F3      UDIV     R4,R2,R3
   \   00000022   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000026   0x429C             CMP      R4,R3
   \   00000028   0xF080 0x8117      BCS.W    ??FTM_PWM_Init_2
     31            {
     32              ps = 7;
   \   0000002C   0x2307             MOVS     R3,#+7
     33              if(FTMx==0)
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xF040 0x8092      BNE.W    ??FTM_PWM_Init_3
     34              {
     35                FTM_MOD0= mod;
   \   00000036   0x.... 0x....      LDR.W    R5,??DataTable3_1
   \   0000003A   0x602C             STR      R4,[R5, #+0]
     36              }
     37              else if(FTMx==1)
     38              {
     39                FTM_MOD1=mod;
     40              }
     41              else if(FTMx==2)
     42              {
     43                FTM_MOD2=mod;  
     44              }
     45              else
     46                return 0;
     47              if((mod=bus_clk_hz/(freq*64)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_4:
   \   0000003C   0x2440             MOVS     R4,#+64
   \   0000003E   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000042   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000046   0xF64F 0x75FF      MOVW     R5,#+65535
   \   0000004A   0x42AC             CMP      R4,R5
   \   0000004C   0xD260             BCS.N    ??FTM_PWM_Init_5
     48              {
     49                ps = 6;   
   \   0000004E   0x2306             MOVS     R3,#+6
     50                if(FTMx==0)
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xF040 0x8091      BNE.W    ??FTM_PWM_Init_6
     51                {
     52                  FTM_MOD0= mod;
   \   00000058   0x.... 0x....      LDR.W    R5,??DataTable3_1
   \   0000005C   0x602C             STR      R4,[R5, #+0]
     53                }
     54                else if(FTMx==1)
     55                {
     56                  FTM_MOD1=mod;
     57                }
     58                else if(FTMx==2)
     59                {
     60                  FTM_MOD2=mod;  
     61                }
     62              else
     63                return 0;
     64                if((mod=bus_clk_hz/(freq*32)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_7:
   \   0000005E   0x014C             LSLS     R4,R1,#+5
   \   00000060   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000064   0xF64F 0x75FF      MOVW     R5,#+65535
   \   00000068   0x42AC             CMP      R4,R5
   \   0000006A   0xD251             BCS.N    ??FTM_PWM_Init_5
     65                {
     66                  ps = 5; 
   \   0000006C   0x2305             MOVS     R3,#+5
     67                  if(FTMx==0)
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xF040 0x8092      BNE.W    ??FTM_PWM_Init_8
     68                  {
     69                    FTM_MOD0= mod;
   \   00000076   0x.... 0x....      LDR.W    R5,??DataTable3_1
   \   0000007A   0x602C             STR      R4,[R5, #+0]
     70                  }
     71                  else if(FTMx==1)
     72                  {
     73                    FTM_MOD1=mod;
     74                  }
     75                  else if(FTMx==2)
     76                  {
     77                    FTM_MOD2=mod;  
     78                  }
     79                  else
     80                    return 0;
     81                  if((mod=bus_clk_hz/(freq*16)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_9:
   \   0000007C   0x010C             LSLS     R4,R1,#+4
   \   0000007E   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000082   0xF64F 0x75FF      MOVW     R5,#+65535
   \   00000086   0x42AC             CMP      R4,R5
   \   00000088   0xD242             BCS.N    ??FTM_PWM_Init_5
     82                  {
     83                    ps = 4;  
   \   0000008A   0x2304             MOVS     R3,#+4
     84                    if(FTMx==0)
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xF040 0x8093      BNE.W    ??FTM_PWM_Init_10
     85                    {
     86                      FTM_MOD0= mod;
   \   00000094   0x.... 0x....      LDR.W    R5,??DataTable3_1
   \   00000098   0x602C             STR      R4,[R5, #+0]
     87                    }
     88                    else if(FTMx==1)
     89                    {
     90                      FTM_MOD1=mod;
     91                    }
     92                    else if(FTMx==2)
     93                    {
     94                      FTM_MOD2=mod;  
     95                    }
     96                    else
     97                      return 0;
     98                    if((mod=bus_clk_hz/(freq*8)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_11:
   \   0000009A   0x00CC             LSLS     R4,R1,#+3
   \   0000009C   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000A0   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000A4   0x42AC             CMP      R4,R5
   \   000000A6   0xD233             BCS.N    ??FTM_PWM_Init_5
     99                    {
    100                      ps = 3;
   \   000000A8   0x2303             MOVS     R3,#+3
    101                      if(FTMx==0)
   \   000000AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xF040 0x8094      BNE.W    ??FTM_PWM_Init_12
    102                      {
    103                        FTM_MOD0= mod;
   \   000000B2   0x.... 0x....      LDR.W    R5,??DataTable3_1
   \   000000B6   0x602C             STR      R4,[R5, #+0]
    104                      }
    105                      else if(FTMx==1)
    106                      {
    107                        FTM_MOD1=mod;
    108                      }
    109                      else if(FTMx==2)
    110                      {
    111                        FTM_MOD2=mod;  
    112                      }
    113                      else
    114                        return 0;
    115                      if((mod=bus_clk_hz/(freq*4)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_13:
   \   000000B8   0x008C             LSLS     R4,R1,#+2
   \   000000BA   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000BE   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000C2   0x42AC             CMP      R4,R5
   \   000000C4   0xD224             BCS.N    ??FTM_PWM_Init_5
    116                      {
    117                        ps = 2;
   \   000000C6   0x2302             MOVS     R3,#+2
    118                        if(FTMx==0)
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xF040 0x8095      BNE.W    ??FTM_PWM_Init_14
    119                        {
    120                          FTM_MOD0= mod;
   \   000000D0   0x.... 0x....      LDR.W    R5,??DataTable3_1
   \   000000D4   0x602C             STR      R4,[R5, #+0]
    121                        }
    122                        else if(FTMx==1)
    123                        {
    124                          FTM_MOD1=mod;
    125                        }
    126                        else if(FTMx==2)
    127                        {
    128                          FTM_MOD2=mod;  
    129                        }
    130                        else
    131                          return 0;
    132                        if((mod=bus_clk_hz/(freq*2)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_15:
   \   000000D6   0x004C             LSLS     R4,R1,#+1
   \   000000D8   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000DC   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000E0   0x42AC             CMP      R4,R5
   \   000000E2   0xD215             BCS.N    ??FTM_PWM_Init_5
    133                        {
    134                          ps = 1;
   \   000000E4   0x2301             MOVS     R3,#+1
    135                          if(FTMx==0)
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x2800             CMP      R0,#+0
   \   000000EA   0xF040 0x8096      BNE.W    ??FTM_PWM_Init_16
    136                          {
    137                            FTM_MOD0= mod;
   \   000000EE   0x.... 0x....      LDR.W    R5,??DataTable3_1
   \   000000F2   0x602C             STR      R4,[R5, #+0]
    138                          }
    139                          else if(FTMx==1)
    140                          {
    141                            FTM_MOD1=mod;
    142                          }
    143                          else if(FTMx==2)
    144                          {
    145                            FTM_MOD2=mod;  
    146                          }
    147                          else
    148                            return 0;
    149                          if((mod=bus_clk_hz/(freq*1)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_17:
   \   000000F4   0xFBB2 0xF4F1      UDIV     R4,R2,R1
   \   000000F8   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000FC   0x428C             CMP      R4,R1
   \   000000FE   0xD207             BCS.N    ??FTM_PWM_Init_5
    150                          {
    151                            ps = 0;
   \   00000100   0x2300             MOVS     R3,#+0
    152                            if(FTMx==0)
   \   00000102   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000104   0x2800             CMP      R0,#+0
   \   00000106   0xF040 0x8098      BNE.W    ??FTM_PWM_Init_18
    153                            {
    154                              FTM_MOD0= mod;
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   0000010E   0x600C             STR      R4,[R1, #+0]
    155                            }
    156                            else if(FTMx==1)
    157                            {
    158                              FTM_MOD1=mod;
    159                            }
    160                            else if(FTMx==2)
    161                            {
    162                              FTM_MOD2=mod;  
    163                            }
    164                            else
    165                              return 0;
    166                          }
    167                        }
    168                      }
    169                    }
    170                  }  
    171                }
    172              }
    173            }
    174            else
    175            {
    176              return 0;
    177            }
    178            
    179            if(FTMx==0)
   \                     ??FTM_PWM_Init_5:
   \   00000110   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xF040 0x80A3      BNE.W    ??FTM_PWM_Init_19
    180              {
    181                // Ê¹ÄÜFTMÊ±ÖÓÄ£¿é
    182                SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable3_2  ;; 0x4004803c
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable3_2  ;; 0x4004803c
   \   00000126   0x6008             STR      R0,[R1, #+0]
    183            
    184                // ÅäÖÃFTM¿ØÖÆ¼Ä´æÆ÷
    185                // ½ûÓÃÖÐ¶Ï, ¼Ó¼ÆÊýÄ£Ê½, Ê±ÖÓÔ´:System clock£¨Bus Clk£©, ·ÖÆµÏµÊý:8
    186                // ¼ÙÉèSysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    187                FTM0_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
   \   00000128   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000012A   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   0000012E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable3_3  ;; 0x40038000
   \   00000136   0x6008             STR      R0,[R1, #+0]
    188            
    189                // ÉèÖÃPWMÖÜÆÚ¼°Õ¼¿Õ±È
    190                // PWMÖÜÆÚ = (MOD-CNTIN+1)*FTMÊ±ÖÓÖÜÆÚ :
    191                // ÅäÖÃFTM¼ÆÊý³õÊ¼Öµ
    192                FTM0_CNT = 0;
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable3_4  ;; 0x40038004
   \   0000013C   0x2100             MOVS     R1,#+0
   \   0000013E   0x6001             STR      R1,[R0, #+0]
    193                FTM0_CNTIN = 0;
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable3_5  ;; 0x4003804c
   \   00000144   0x2100             MOVS     R1,#+0
   \   00000146   0x6001             STR      R1,[R0, #+0]
    194                
    195                // ÅäÖÃFTM¼ÆÊýMODÖµ
    196                FTM0_MOD = FTM_MOD0;
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038008
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000150   0x6809             LDR      R1,[R1, #+0]
   \   00000152   0x6001             STR      R1,[R0, #+0]
    197              }
    198            else if(FTMx==1)
    199              {
    200                // Ê¹ÄÜFTMÊ±ÖÓÄ£¿é
    201                SIM_SCGC6 |= SIM_SCGC6_FTM1_MASK;
    202            
    203                // ÅäÖÃFTM¿ØÖÆ¼Ä´æÆ÷
    204                // ½ûÓÃÖÐ¶Ï, ¼Ó¼ÆÊýÄ£Ê½, Ê±ÖÓÔ´:System clock£¨Bus Clk£©, ·ÖÆµÏµÊý:8
    205                // ¼ÙÉèSysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    206                FTM1_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    207            
    208                // ÉèÖÃPWMÖÜÆÚ¼°Õ¼¿Õ±È
    209                // PWMÖÜÆÚ = (MOD-CNTIN+1)*FTMÊ±ÖÓÖÜÆÚ :
    210                // ÅäÖÃFTM¼ÆÊý³õÊ¼Öµ
    211                FTM1_CNT = 0;
    212                FTM1_CNTIN = 0;
    213                
    214                // ÅäÖÃFTM¼ÆÊýMODÖµ
    215                FTM1_MOD = FTM_MOD1;
    216              } 
    217            else if(FTMx==2)
    218              {
    219                // Ê¹ÄÜFTMÊ±ÖÓÄ£¿é
    220                SIM_SCGC3 |= SIM_SCGC3_FTM2_MASK;
    221            
    222                // ÅäÖÃFTM¿ØÖÆ¼Ä´æÆ÷
    223                // ½ûÓÃÖÐ¶Ï, ¼Ó¼ÆÊýÄ£Ê½, Ê±ÖÓÔ´:System clock£¨Bus Clk£©, ·ÖÆµÏµÊý:8
    224                // ¼ÙÉèSysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    225                FTM2_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    226            
    227                // ÉèÖÃPWMÖÜÆÚ¼°Õ¼¿Õ±È
    228                // PWMÖÜÆÚ = (MOD-CNTIN+1)*FTMÊ±ÖÓÖÜÆÚ :
    229                // ÅäÖÃFTM¼ÆÊý³õÊ¼Öµ
    230                FTM2_CNT = 0;
    231                FTM2_CNTIN = 0;
    232                
    233                // ÅäÖÃFTM¼ÆÊýMODÖµ
    234                FTM2_MOD = FTM_MOD2;
    235              }  
    236            else
    237              return 0;
    238          
    239            return 1;
   \                     ??FTM_PWM_Init_20:
   \   00000154   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_Init_1:
   \   00000156   0xBC30             POP      {R4,R5}
   \   00000158   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_Init_3:
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0x2801             CMP      R0,#+1
   \   0000015E   0xD103             BNE.N    ??FTM_PWM_Init_21
   \   00000160   0x.... 0x....      LDR.W    R5,??DataTable3_7
   \   00000164   0x602C             STR      R4,[R5, #+0]
   \   00000166   0xE769             B.N      ??FTM_PWM_Init_4
   \                     ??FTM_PWM_Init_21:
   \   00000168   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016A   0x2802             CMP      R0,#+2
   \   0000016C   0xD103             BNE.N    ??FTM_PWM_Init_22
   \   0000016E   0x.... 0x....      LDR.W    R5,??DataTable3_8
   \   00000172   0x602C             STR      R4,[R5, #+0]
   \   00000174   0xE762             B.N      ??FTM_PWM_Init_4
   \                     ??FTM_PWM_Init_22:
   \   00000176   0x2000             MOVS     R0,#+0
   \   00000178   0xE7ED             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_6:
   \   0000017A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017C   0x2801             CMP      R0,#+1
   \   0000017E   0xD103             BNE.N    ??FTM_PWM_Init_23
   \   00000180   0x.... 0x....      LDR.W    R5,??DataTable3_7
   \   00000184   0x602C             STR      R4,[R5, #+0]
   \   00000186   0xE76A             B.N      ??FTM_PWM_Init_7
   \                     ??FTM_PWM_Init_23:
   \   00000188   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018A   0x2802             CMP      R0,#+2
   \   0000018C   0xD103             BNE.N    ??FTM_PWM_Init_24
   \   0000018E   0x.... 0x....      LDR.W    R5,??DataTable3_8
   \   00000192   0x602C             STR      R4,[R5, #+0]
   \   00000194   0xE763             B.N      ??FTM_PWM_Init_7
   \                     ??FTM_PWM_Init_24:
   \   00000196   0x2000             MOVS     R0,#+0
   \   00000198   0xE7DD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_8:
   \   0000019A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019C   0x2801             CMP      R0,#+1
   \   0000019E   0xD103             BNE.N    ??FTM_PWM_Init_25
   \   000001A0   0x.... 0x....      LDR.W    R5,??DataTable3_7
   \   000001A4   0x602C             STR      R4,[R5, #+0]
   \   000001A6   0xE769             B.N      ??FTM_PWM_Init_9
   \                     ??FTM_PWM_Init_25:
   \   000001A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001AA   0x2802             CMP      R0,#+2
   \   000001AC   0xD103             BNE.N    ??FTM_PWM_Init_26
   \   000001AE   0x.... 0x....      LDR.W    R5,??DataTable3_8
   \   000001B2   0x602C             STR      R4,[R5, #+0]
   \   000001B4   0xE762             B.N      ??FTM_PWM_Init_9
   \                     ??FTM_PWM_Init_26:
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0xE7CD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_10:
   \   000001BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BC   0x2801             CMP      R0,#+1
   \   000001BE   0xD103             BNE.N    ??FTM_PWM_Init_27
   \   000001C0   0x.... 0x....      LDR.W    R5,??DataTable3_7
   \   000001C4   0x602C             STR      R4,[R5, #+0]
   \   000001C6   0xE768             B.N      ??FTM_PWM_Init_11
   \                     ??FTM_PWM_Init_27:
   \   000001C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CA   0x2802             CMP      R0,#+2
   \   000001CC   0xD103             BNE.N    ??FTM_PWM_Init_28
   \   000001CE   0x.... 0x....      LDR.W    R5,??DataTable3_8
   \   000001D2   0x602C             STR      R4,[R5, #+0]
   \   000001D4   0xE761             B.N      ??FTM_PWM_Init_11
   \                     ??FTM_PWM_Init_28:
   \   000001D6   0x2000             MOVS     R0,#+0
   \   000001D8   0xE7BD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_12:
   \   000001DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001DC   0x2801             CMP      R0,#+1
   \   000001DE   0xD103             BNE.N    ??FTM_PWM_Init_29
   \   000001E0   0x.... 0x....      LDR.W    R5,??DataTable3_7
   \   000001E4   0x602C             STR      R4,[R5, #+0]
   \   000001E6   0xE767             B.N      ??FTM_PWM_Init_13
   \                     ??FTM_PWM_Init_29:
   \   000001E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EA   0x2802             CMP      R0,#+2
   \   000001EC   0xD103             BNE.N    ??FTM_PWM_Init_30
   \   000001EE   0x.... 0x....      LDR.W    R5,??DataTable3_8
   \   000001F2   0x602C             STR      R4,[R5, #+0]
   \   000001F4   0xE760             B.N      ??FTM_PWM_Init_13
   \                     ??FTM_PWM_Init_30:
   \   000001F6   0x2000             MOVS     R0,#+0
   \   000001F8   0xE7AD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_14:
   \   000001FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001FC   0x2801             CMP      R0,#+1
   \   000001FE   0xD103             BNE.N    ??FTM_PWM_Init_31
   \   00000200   0x.... 0x....      LDR.W    R5,??DataTable3_7
   \   00000204   0x602C             STR      R4,[R5, #+0]
   \   00000206   0xE766             B.N      ??FTM_PWM_Init_15
   \                     ??FTM_PWM_Init_31:
   \   00000208   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000020A   0x2802             CMP      R0,#+2
   \   0000020C   0xD103             BNE.N    ??FTM_PWM_Init_32
   \   0000020E   0x.... 0x....      LDR.W    R5,??DataTable3_8
   \   00000212   0x602C             STR      R4,[R5, #+0]
   \   00000214   0xE75F             B.N      ??FTM_PWM_Init_15
   \                     ??FTM_PWM_Init_32:
   \   00000216   0x2000             MOVS     R0,#+0
   \   00000218   0xE79D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_16:
   \   0000021A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000021C   0x2801             CMP      R0,#+1
   \   0000021E   0xD103             BNE.N    ??FTM_PWM_Init_33
   \   00000220   0x.... 0x....      LDR.W    R5,??DataTable3_7
   \   00000224   0x602C             STR      R4,[R5, #+0]
   \   00000226   0xE765             B.N      ??FTM_PWM_Init_17
   \                     ??FTM_PWM_Init_33:
   \   00000228   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000022A   0x2802             CMP      R0,#+2
   \   0000022C   0xD103             BNE.N    ??FTM_PWM_Init_34
   \   0000022E   0x.... 0x....      LDR.W    R5,??DataTable3_8
   \   00000232   0x602C             STR      R4,[R5, #+0]
   \   00000234   0xE75E             B.N      ??FTM_PWM_Init_17
   \                     ??FTM_PWM_Init_34:
   \   00000236   0x2000             MOVS     R0,#+0
   \   00000238   0xE78D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_18:
   \   0000023A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023C   0x2801             CMP      R0,#+1
   \   0000023E   0xD103             BNE.N    ??FTM_PWM_Init_35
   \   00000240   0x.... 0x....      LDR.W    R1,??DataTable3_7
   \   00000244   0x600C             STR      R4,[R1, #+0]
   \   00000246   0xE763             B.N      ??FTM_PWM_Init_5
   \                     ??FTM_PWM_Init_35:
   \   00000248   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000024A   0x2802             CMP      R0,#+2
   \   0000024C   0xD103             BNE.N    ??FTM_PWM_Init_36
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   00000252   0x600C             STR      R4,[R1, #+0]
   \   00000254   0xE75C             B.N      ??FTM_PWM_Init_5
   \                     ??FTM_PWM_Init_36:
   \   00000256   0x2000             MOVS     R0,#+0
   \   00000258   0xE77D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_2:
   \   0000025A   0x2000             MOVS     R0,#+0
   \   0000025C   0xE77B             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_19:
   \   0000025E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000260   0x2801             CMP      R0,#+1
   \   00000262   0xD11E             BNE.N    ??FTM_PWM_Init_37
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable3_2  ;; 0x4004803c
   \   00000268   0x6800             LDR      R0,[R0, #+0]
   \   0000026A   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable3_2  ;; 0x4004803c
   \   00000272   0x6008             STR      R0,[R1, #+0]
   \   00000274   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000276   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   0000027A   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable3_9  ;; 0x40039000
   \   00000282   0x6008             STR      R0,[R1, #+0]
   \   00000284   0x.... 0x....      LDR.W    R0,??DataTable3_10  ;; 0x40039004
   \   00000288   0x2100             MOVS     R1,#+0
   \   0000028A   0x6001             STR      R1,[R0, #+0]
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable3_11  ;; 0x4003904c
   \   00000290   0x2100             MOVS     R1,#+0
   \   00000292   0x6001             STR      R1,[R0, #+0]
   \   00000294   0x.... 0x....      LDR.W    R0,??DataTable3_12  ;; 0x40039008
   \   00000298   0x.... 0x....      LDR.W    R1,??DataTable3_7
   \   0000029C   0x6809             LDR      R1,[R1, #+0]
   \   0000029E   0x6001             STR      R1,[R0, #+0]
   \   000002A0   0xE758             B.N      ??FTM_PWM_Init_20
   \                     ??FTM_PWM_Init_37:
   \   000002A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002A4   0x2802             CMP      R0,#+2
   \   000002A6   0xD11E             BNE.N    ??FTM_PWM_Init_38
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable3_13  ;; 0x40048030
   \   000002AC   0x6800             LDR      R0,[R0, #+0]
   \   000002AE   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   000002B2   0x.... 0x....      LDR.W    R1,??DataTable3_13  ;; 0x40048030
   \   000002B6   0x6008             STR      R0,[R1, #+0]
   \   000002B8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002BA   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   000002BE   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000002C2   0x.... 0x....      LDR.W    R1,??DataTable3_14  ;; 0x400b8000
   \   000002C6   0x6008             STR      R0,[R1, #+0]
   \   000002C8   0x.... 0x....      LDR.W    R0,??DataTable3_15  ;; 0x400b8004
   \   000002CC   0x2100             MOVS     R1,#+0
   \   000002CE   0x6001             STR      R1,[R0, #+0]
   \   000002D0   0x.... 0x....      LDR.W    R0,??DataTable3_16  ;; 0x400b804c
   \   000002D4   0x2100             MOVS     R1,#+0
   \   000002D6   0x6001             STR      R1,[R0, #+0]
   \   000002D8   0x.... 0x....      LDR.W    R0,??DataTable3_17  ;; 0x400b8008
   \   000002DC   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   000002E0   0x6809             LDR      R1,[R1, #+0]
   \   000002E2   0x6001             STR      R1,[R0, #+0]
   \   000002E4   0xE736             B.N      ??FTM_PWM_Init_20
   \                     ??FTM_PWM_Init_38:
   \   000002E6   0x2000             MOVS     R0,#+0
   \   000002E8   0xE735             B.N      ??FTM_PWM_Init_1
    240          }
    241          
    242          
    243          /***************************************************************
    244          *º¯ÊýÃû£ºuint8 FTM_PWM_Open(uint8 FTMx,uint8 channel, uint32 duty)
    245          *¹¦ÄÜ£º  ´ò¿ªPWMÍ¨µÀ£¬ÉèÖÃÕ¼¿Õ±È
    246          *Èë¿Ú²ÎÊý£º(1)FTMx : 0
    247                               1
    248                               2
    249                     
    250                    (2)channel  Í¨µÀºÅ 
    251          
    252                    (3)duty     Õ¼¿Õ±È
    253          *³ö¿Ú²ÎÊý£ºÎÞ
    254          *ËµÃ÷£ºÎÞ
    255          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    256          uint8 FTM_PWM_Open(uint8 FTMx,uint8 channel, uint32 duty)
    257          {
   \                     FTM_PWM_Open:
   \   00000000   0xB418             PUSH     {R3,R4}
    258            uint32 cv;
    259            volatile uint32 mod;
    260            
    261            if(duty>10000) return 0;
   \   00000002   0xF242 0x7311      MOVW     R3,#+10001
   \   00000006   0x429A             CMP      R2,R3
   \   00000008   0xD301             BCC.N    ??FTM_PWM_Open_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE061             B.N      ??FTM_PWM_Open_1
    262            //Õ¼¿Õ±È = (CnV-CNTIN)/(MOD-CNTIN+1)
    263            if(FTMx==0)
   \                     ??FTM_PWM_Open_0:
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD160             BNE.N    ??FTM_PWM_Open_2
    264            {
    265              mod = FTM_MOD0;
   \   00000014   0x....             LDR.N    R3,??DataTable3_1
   \   00000016   0x681B             LDR      R3,[R3, #+0]
   \   00000018   0x9300             STR      R3,[SP, #+0]
    266            }
    267            else if(FTMx==1)
    268            {
    269              mod==FTM_MOD1;
    270            }
    271            else if(FTMx==2)
    272            {
    273              mod==FTM_MOD2;
    274            }
    275            else
    276              return 0;
    277            
    278            cv = (duty*(mod-0+1)+0)/10000;
   \                     ??FTM_PWM_Open_3:
   \   0000001A   0x9B00             LDR      R3,[SP, #+0]
   \   0000001C   0x1C5B             ADDS     R3,R3,#+1
   \   0000001E   0x435A             MULS     R2,R3,R2
   \   00000020   0xF242 0x7310      MOVW     R3,#+10000
   \   00000024   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    279            
    280            if(FTMx==0)
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD124             BNE.N    ??FTM_PWM_Open_4
    281            {
    282              //Ñ¡Ôñ²¢¿ªÆôÍ¨µÀ
    283              switch(channel)
   \   0000002E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   0x000B             MOVS     R3,R1
   \   00000032   0x2B00             CMP      R3,#+0
   \   00000034   0x2B02             CMP      R3,#+2
   \   00000036   0xD905             BLS.N    ??FTM_PWM_Open_5
   \   00000038   0x1EDB             SUBS     R3,R3,#+3
   \   0000003A   0xD068             BEQ.N    ??FTM_PWM_Open_6
   \   0000003C   0x1E5B             SUBS     R3,R3,#+1
   \   0000003E   0x2B03             CMP      R3,#+3
   \   00000040   0xD975             BLS.N    ??FTM_PWM_Open_7
   \   00000042   0xE081             B.N      ??FTM_PWM_Open_8
    284                {
    285                  case 0:
    286                  case 1:
    287                  case 2:
    288                    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
   \                     ??FTM_PWM_Open_5:
   \   00000044   0x....             LDR.N    R3,??DataTable3_18  ;; 0x40048038
   \   00000046   0x681B             LDR      R3,[R3, #+0]
   \   00000048   0xF44F 0x7400      MOV      R4,#+512
   \   0000004C   0x4323             ORRS     R3,R4,R3
   \   0000004E   0x....             LDR.N    R4,??DataTable3_18  ;; 0x40048038
   \   00000050   0x6023             STR      R3,[R4, #+0]
    289                    PORT_PCR_REG(PORTA_BASE_PTR, channel+3) = PORT_PCR_MUX(3);
   \   00000052   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000054   0x008B             LSLS     R3,R1,#+2
   \   00000056   0xF103 0x4380      ADD      R3,R3,#+1073741824
   \   0000005A   0xF513 0x2392      ADDS     R3,R3,#+299008
   \   0000005E   0xF44F 0x7440      MOV      R4,#+768
   \   00000062   0x60DC             STR      R4,[R3, #+12]
    290                    break;
    291                  case 3:
    292                    SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    293                    PORT_PCR_REG(PORTC_BASE_PTR, channel+1) = PORT_PCR_MUX(4);
    294                    break;
    295                  case 4:
    296                  case 5:
    297                  case 6:
    298                  case 7:
    299                    SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    300                    PORT_PCR_REG(PORTD_BASE_PTR, channel) = PORT_PCR_MUX(4);
    301                    break;
    302                  default:
    303                    return 0;
    304                }  
    305            
    306              // ÅäÖÃFTMÍ¨µÀ¿ØÖÆ¼Ä´æÆ÷ 
    307              // Í¨µÀÄ£Ê½ MSB:MSA-1X, Í¨µÀ±ßÔµÑ¡Ôñ ELSB:ELSA-10
    308              FTM_CnSC_REG(FTM0_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \                     ??FTM_PWM_Open_9:
   \   00000064   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000066   0x....             LDR.N    R3,??DataTable3_19  ;; 0x4003800c
   \   00000068   0x2428             MOVS     R4,#+40
   \   0000006A   0xF843 0x4031      STR      R4,[R3, R1, LSL #+3]
    309              // ÅäÖÃFTMÍ¨µÀÖµ
    310              FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv;
   \   0000006E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000070   0x....             LDR.N    R3,??DataTable3_19  ;; 0x4003800c
   \   00000072   0xEB13 0x03C1      ADDS     R3,R3,R1, LSL #+3
   \   00000076   0x605A             STR      R2,[R3, #+4]
    311            } 
    312            
    313            if(FTMx==1)
   \                     ??FTM_PWM_Open_4:
   \   00000078   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007A   0x2801             CMP      R0,#+1
   \   0000007C   0xD118             BNE.N    ??FTM_PWM_Open_10
    314            {
    315              //Ñ¡Ôñ²¢¿ªÆôÍ¨µÀ
    316              switch(channel)
   \   0000007E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000080   0x2900             CMP      R1,#+0
   \   00000082   0xD163             BNE.N    ??FTM_PWM_Open_11
    317                {
    318                  case 0:
    319                        SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
   \   00000084   0x....             LDR.N    R3,??DataTable3_18  ;; 0x40048038
   \   00000086   0x681B             LDR      R3,[R3, #+0]
   \   00000088   0xF453 0x6380      ORRS     R3,R3,#0x400
   \   0000008C   0x....             LDR.N    R4,??DataTable3_18  ;; 0x40048038
   \   0000008E   0x6023             STR      R3,[R4, #+0]
    320                        PORT_PCR_REG(PORTB_BASE_PTR, channel) = PORT_PCR_MUX(3);
   \   00000090   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   0x....             LDR.N    R3,??DataTable3_20  ;; 0x4004a000
   \   00000094   0xF44F 0x7440      MOV      R4,#+768
   \   00000098   0xF843 0x4021      STR      R4,[R3, R1, LSL #+2]
    321                         //SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    322                         //PORTB_PCR0= PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK;
    323                         break;
    324                  case 1:
    325                  case 2:
    326                  case 3:
    327                  case 4:
    328                  case 5:
    329                  case 6:
    330                  case 7:
    331                  default:
    332                    return 0;
    333                }  
    334            
    335              // ÅäÖÃFTMÍ¨µÀ¿ØÖÆ¼Ä´æÆ÷ 
    336              // Í¨µÀÄ£Ê½ MSB:MSA-1X, Í¨µÀ±ßÔµÑ¡Ôñ ELSB:ELSA-10
    337              FTM_CnSC_REG(FTM1_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   0000009C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009E   0x....             LDR.N    R3,??DataTable3_21  ;; 0x4003900c
   \   000000A0   0x2428             MOVS     R4,#+40
   \   000000A2   0xF843 0x4031      STR      R4,[R3, R1, LSL #+3]
    338              // ÅäÖÃFTMÍ¨µÀÖµ
    339              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
   \   000000A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A8   0x....             LDR.N    R3,??DataTable3_21  ;; 0x4003900c
   \   000000AA   0xEB13 0x03C1      ADDS     R3,R3,R1, LSL #+3
   \   000000AE   0x605A             STR      R2,[R3, #+4]
    340            } 
    341            
    342            if(FTMx==2)
   \                     ??FTM_PWM_Open_10:
   \   000000B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B2   0x2802             CMP      R0,#+2
   \   000000B4   0xD10C             BNE.N    ??FTM_PWM_Open_12
    343            {
    344              //Ñ¡Ôñ²¢¿ªÆôÍ¨µÀ
    345              switch(channel)
   \   000000B6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B8   0x2900             CMP      R1,#+0
   \   000000BA   0xD149             BNE.N    ??FTM_PWM_Open_13
    346                {
    347                  case 0:
    348                    break;
    349                  case 1:
    350                  case 2:
    351                  case 3:
    352                  case 4:
    353                  case 5:
    354                  case 6:
    355                  case 7:
    356                  default:
    357                    return 0;
    358                }  
    359            
    360              // ÅäÖÃFTMÍ¨µÀ¿ØÖÆ¼Ä´æÆ÷ 
    361              // Í¨µÀÄ£Ê½ MSB:MSA-1X, Í¨µÀ±ßÔµÑ¡Ôñ ELSB:ELSA-10
    362              FTM_CnSC_REG(FTM2_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   000000BC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000BE   0x....             LDR.N    R0,??DataTable3_22  ;; 0x400b800c
   \   000000C0   0x2328             MOVS     R3,#+40
   \   000000C2   0xF840 0x3031      STR      R3,[R0, R1, LSL #+3]
    363              // ÅäÖÃFTMÍ¨µÀÖµ
    364              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
   \   000000C6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C8   0x....             LDR.N    R0,??DataTable3_22  ;; 0x400b800c
   \   000000CA   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000000CE   0x6042             STR      R2,[R0, #+4]
    365            } 
    366            return 1;
   \                     ??FTM_PWM_Open_12:
   \   000000D0   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_Open_1:
   \   000000D2   0xBC12             POP      {R1,R4}
   \   000000D4   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_Open_2:
   \   000000D6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D8   0x2801             CMP      R0,#+1
   \   000000DA   0xD109             BNE.N    ??FTM_PWM_Open_14
   \   000000DC   0x9B00             LDR      R3,[SP, #+0]
   \   000000DE   0x....             LDR.N    R4,??DataTable3_7
   \   000000E0   0x6824             LDR      R4,[R4, #+0]
   \   000000E2   0x42A3             CMP      R3,R4
   \   000000E4   0xD101             BNE.N    ??FTM_PWM_Open_15
   \   000000E6   0x2301             MOVS     R3,#+1
   \   000000E8   0xE000             B.N      ??FTM_PWM_Open_16
   \                     ??FTM_PWM_Open_15:
   \   000000EA   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_Open_16:
   \   000000EC   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000EE   0xE794             B.N      ??FTM_PWM_Open_3
   \                     ??FTM_PWM_Open_14:
   \   000000F0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F2   0x2802             CMP      R0,#+2
   \   000000F4   0xD109             BNE.N    ??FTM_PWM_Open_17
   \   000000F6   0x9B00             LDR      R3,[SP, #+0]
   \   000000F8   0x....             LDR.N    R4,??DataTable3_8
   \   000000FA   0x6824             LDR      R4,[R4, #+0]
   \   000000FC   0x42A3             CMP      R3,R4
   \   000000FE   0xD101             BNE.N    ??FTM_PWM_Open_18
   \   00000100   0x2301             MOVS     R3,#+1
   \   00000102   0xE000             B.N      ??FTM_PWM_Open_19
   \                     ??FTM_PWM_Open_18:
   \   00000104   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_Open_19:
   \   00000106   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000108   0xE787             B.N      ??FTM_PWM_Open_3
   \                     ??FTM_PWM_Open_17:
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0xE7E1             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_6:
   \   0000010E   0x....             LDR.N    R3,??DataTable3_18  ;; 0x40048038
   \   00000110   0x681B             LDR      R3,[R3, #+0]
   \   00000112   0xF453 0x6300      ORRS     R3,R3,#0x800
   \   00000116   0x....             LDR.N    R4,??DataTable3_18  ;; 0x40048038
   \   00000118   0x6023             STR      R3,[R4, #+0]
   \   0000011A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011C   0x008B             LSLS     R3,R1,#+2
   \   0000011E   0xF103 0x4380      ADD      R3,R3,#+1073741824
   \   00000122   0xF513 0x2396      ADDS     R3,R3,#+307200
   \   00000126   0xF44F 0x6480      MOV      R4,#+1024
   \   0000012A   0x605C             STR      R4,[R3, #+4]
   \   0000012C   0xE79A             B.N      ??FTM_PWM_Open_9
   \                     ??FTM_PWM_Open_7:
   \   0000012E   0x....             LDR.N    R3,??DataTable3_18  ;; 0x40048038
   \   00000130   0x681B             LDR      R3,[R3, #+0]
   \   00000132   0xF453 0x5380      ORRS     R3,R3,#0x1000
   \   00000136   0x....             LDR.N    R4,??DataTable3_18  ;; 0x40048038
   \   00000138   0x6023             STR      R3,[R4, #+0]
   \   0000013A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013C   0x....             LDR.N    R3,??DataTable3_23  ;; 0x4004c000
   \   0000013E   0xF44F 0x6480      MOV      R4,#+1024
   \   00000142   0xF843 0x4021      STR      R4,[R3, R1, LSL #+2]
   \   00000146   0xE78D             B.N      ??FTM_PWM_Open_9
   \                     ??FTM_PWM_Open_8:
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0xE7C2             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_11:
   \   0000014C   0x2000             MOVS     R0,#+0
   \   0000014E   0xE7C0             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_13:
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0xE7BE             B.N      ??FTM_PWM_Open_1
    367          }
    368          
    369          
    370          /***************************************************************
    371          *º¯ÊýÃû£ºuint8 FTM_PWM_ChangeDuty(uint8 FTMx,uint8 channel, uint32 duty)
    372          *¹¦ÄÜ£º  ´ò¿ªPWMÍ¨µÀ£¬ÉèÖÃÕ¼¿Õ±È
    373          *Èë¿Ú²ÎÊý£º(1)FTMx : 0
    374                               1
    375                               2
    376                     
    377                    (2)channel  Í¨µÀºÅ 
    378          
    379                    (3)duty     Õ¼¿Õ±È
    380          *³ö¿Ú²ÎÊý£ºÎÞ
    381          *ËµÃ÷£ºÎÞ
    382          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    383          uint8 FTM_PWM_ChangeDuty(uint8 FTMx,uint8 channel, uint32 duty)
    384          {
   \                     FTM_PWM_ChangeDuty:
   \   00000000   0xB418             PUSH     {R3,R4}
    385            uint32 cv;
    386            volatile uint32 mod;
    387            
    388            if(duty>10000) return 0;
   \   00000002   0xF242 0x7311      MOVW     R3,#+10001
   \   00000006   0x429A             CMP      R2,R3
   \   00000008   0xD301             BCC.N    ??FTM_PWM_ChangeDuty_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE019             B.N      ??FTM_PWM_ChangeDuty_1
    389            //Õ¼¿Õ±È = (CnV-CNTIN)/(MOD-CNTIN+1)
    390            if(FTMx==0)
   \                     ??FTM_PWM_ChangeDuty_0:
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD118             BNE.N    ??FTM_PWM_ChangeDuty_2
    391            {
    392              mod =FTM_MOD0;
   \   00000014   0x....             LDR.N    R3,??DataTable3_1
   \   00000016   0x681B             LDR      R3,[R3, #+0]
   \   00000018   0x9300             STR      R3,[SP, #+0]
    393            }
    394            else if(FTMx==1)
    395            {
    396              mod==FTM_MOD1;
    397            }
    398            else if(FTMx==2)
    399            {
    400              mod==FTM_MOD2;
    401            }
    402            else
    403              return 0;
    404            
    405            cv = (duty*(mod-0+1)+0)/10000;
   \                     ??FTM_PWM_ChangeDuty_3:
   \   0000001A   0x9B00             LDR      R3,[SP, #+0]
   \   0000001C   0x1C5B             ADDS     R3,R3,#+1
   \   0000001E   0x435A             MULS     R2,R3,R2
   \   00000020   0xF242 0x7310      MOVW     R3,#+10000
   \   00000024   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    406            
    407            if(FTMx==0)
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD12F             BNE.N    ??FTM_PWM_ChangeDuty_4
    408            {
    409              switch(channel)// ÅäÖÃFTMÍ¨µÀÖµ
   \   0000002E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   0x2900             CMP      R1,#+0
   \   00000032   0xD003             BEQ.N    ??FTM_PWM_ChangeDuty_5
   \   00000034   0x2902             CMP      R1,#+2
   \   00000036   0xD025             BEQ.N    ??FTM_PWM_ChangeDuty_6
   \   00000038   0xD321             BCC.N    ??FTM_PWM_ChangeDuty_7
   \   0000003A   0xE026             B.N      ??FTM_PWM_ChangeDuty_8
    410              {  
    411                case 0:
    412                   FTM_CnV_REG(FTM0_BASE_PTR, 0) = cv;
   \                     ??FTM_PWM_ChangeDuty_5:
   \   0000003C   0x....             LDR.N    R0,??DataTable3_24  ;; 0x40038010
   \   0000003E   0x6002             STR      R2,[R0, #+0]
    413                   break;
    414                case 1:
    415                   FTM_CnV_REG(FTM0_BASE_PTR, 1) = cv;
    416                   break;
    417                case 2:
    418                   FTM_CnV_REG(FTM0_BASE_PTR, 2) = cv;
    419                   break;
    420                default:
    421                return 0;
    422              }
    423            }
    424            else if(FTMx==1)
    425            {
    426              // ÅäÖÃFTMÍ¨µÀÖµ
    427              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
    428            }
    429            else if(FTMx==2)
    430            {
    431              // ÅäÖÃFTMÍ¨µÀÖµ
    432              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
    433            }
    434            else
    435              return 0;
    436            return 1;
   \                     ??FTM_PWM_ChangeDuty_9:
   \   00000040   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_ChangeDuty_1:
   \   00000042   0xBC12             POP      {R1,R4}
   \   00000044   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_ChangeDuty_2:
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xD109             BNE.N    ??FTM_PWM_ChangeDuty_10
   \   0000004C   0x9B00             LDR      R3,[SP, #+0]
   \   0000004E   0x....             LDR.N    R4,??DataTable3_7
   \   00000050   0x6824             LDR      R4,[R4, #+0]
   \   00000052   0x42A3             CMP      R3,R4
   \   00000054   0xD101             BNE.N    ??FTM_PWM_ChangeDuty_11
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0xE000             B.N      ??FTM_PWM_ChangeDuty_12
   \                     ??FTM_PWM_ChangeDuty_11:
   \   0000005A   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_ChangeDuty_12:
   \   0000005C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000005E   0xE7DC             B.N      ??FTM_PWM_ChangeDuty_3
   \                     ??FTM_PWM_ChangeDuty_10:
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0x2802             CMP      R0,#+2
   \   00000064   0xD109             BNE.N    ??FTM_PWM_ChangeDuty_13
   \   00000066   0x9B00             LDR      R3,[SP, #+0]
   \   00000068   0x....             LDR.N    R4,??DataTable3_8
   \   0000006A   0x6824             LDR      R4,[R4, #+0]
   \   0000006C   0x42A3             CMP      R3,R4
   \   0000006E   0xD101             BNE.N    ??FTM_PWM_ChangeDuty_14
   \   00000070   0x2301             MOVS     R3,#+1
   \   00000072   0xE000             B.N      ??FTM_PWM_ChangeDuty_15
   \                     ??FTM_PWM_ChangeDuty_14:
   \   00000074   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_ChangeDuty_15:
   \   00000076   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000078   0xE7CF             B.N      ??FTM_PWM_ChangeDuty_3
   \                     ??FTM_PWM_ChangeDuty_13:
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0xE7E1             B.N      ??FTM_PWM_ChangeDuty_1
   \                     ??FTM_PWM_ChangeDuty_7:
   \   0000007E   0x....             LDR.N    R0,??DataTable3_25  ;; 0x40038018
   \   00000080   0x6002             STR      R2,[R0, #+0]
   \   00000082   0xE7DD             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_6:
   \   00000084   0x....             LDR.N    R0,??DataTable3_26  ;; 0x40038020
   \   00000086   0x6002             STR      R2,[R0, #+0]
   \   00000088   0xE7DA             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_8:
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0xE7D9             B.N      ??FTM_PWM_ChangeDuty_1
   \                     ??FTM_PWM_ChangeDuty_4:
   \   0000008E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000090   0x2801             CMP      R0,#+1
   \   00000092   0xD105             BNE.N    ??FTM_PWM_ChangeDuty_16
   \   00000094   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   0x....             LDR.N    R0,??DataTable3_21  ;; 0x4003900c
   \   00000098   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   0000009C   0x6042             STR      R2,[R0, #+4]
   \   0000009E   0xE7CF             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_16:
   \   000000A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A2   0x2802             CMP      R0,#+2
   \   000000A4   0xD105             BNE.N    ??FTM_PWM_ChangeDuty_17
   \   000000A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A8   0x....             LDR.N    R0,??DataTable3_22  ;; 0x400b800c
   \   000000AA   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000000AE   0x6042             STR      R2,[R0, #+4]
   \   000000B0   0xE7C6             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_17:
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0xE7C5             B.N      ??FTM_PWM_ChangeDuty_1
    437          }
    438          //---------------------------------
    439          /*
    440          uint8 FTM_PWM_ChangeDuty_0(uint8 FTMx,uint8 channel, uint32 duty)
    441          {
    442            //uint32 cv;
    443            volatile uint32 mod;
    444            
    445            if(duty>10000) return 0;
    446            //Õ¼¿Õ±È = (CnV-CNTIN)/(MOD-CNTIN+1)
    447            if(FTMx==0)
    448            {
    449              mod =FTM_MOD0;
    450            }
    451            else if(FTMx==1)
    452            {
    453              mod==FTM_MOD1;
    454            }
    455            else if(FTMx==2)
    456            {
    457              mod==FTM_MOD2;
    458            }
    459            else
    460              return 0;
    461            
    462            cv = (duty*(mod-0+1)+0)/10000;
    463            
    464            if(FTMx==0)
    465            {
    466              // ÅäÖÃFTMÍ¨µÀÖµ
    467              FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv;
    468            }
    469            else if(FTMx==1)
    470            {
    471              // ÅäÖÃFTMÍ¨µÀÖµ
    472              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
    473            }
    474            else if(FTMx==2)
    475            {
    476              // ÅäÖÃFTMÍ¨µÀÖµ
    477              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
    478            }
    479            else
    480              return 0;
    481            return 1;
    482          }
    483          */
    484          /***************************************************************
    485          *º¯ÊýÃû£ºvoid Motor_init(void)   
    486          *¹¦ÄÜ£º  Ö±Á÷µç»úPWMµ÷ËÙÒý½Å³õÊ¼»¯,ÓÃFTM1Ä£¿é
    487          *Èë¿Ú²ÎÊý£ºÎÞ
    488          *³ö¿Ú²ÎÊý£ºÎÞ
    489          *ËµÃ÷£ºÎÞ
    490          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    491          void Motor_init(void)    //Ö±Á÷µç»ú
    492              {      	   
   \                     Motor_init:
   \   00000000   0xB580             PUSH     {R7,LR}
    493                DIR_B;                     //ÓÒµç»úB10  Õý×ª
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210A             MOVS     R1,#+10
   \   00000008   0x....             LDR.N    R0,??DataTable3_27  ;; 0x400ff040
   \   0000000A   0x.... 0x....      BL       gpio_init
    494                DIL_B;                     //×óµç»úB9   ·´×ª
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x2109             MOVS     R1,#+9
   \   00000014   0x....             LDR.N    R0,??DataTable3_27  ;; 0x400ff040
   \   00000016   0x.... 0x....      BL       gpio_init
    495                
    496                /* Turn on all port clocks */
    497                SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
   \   0000001A   0x....             LDR.N    R0,??DataTable3_18  ;; 0x40048038
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000022   0x....             LDR.N    R1,??DataTable3_18  ;; 0x40048038
   \   00000024   0x6008             STR      R0,[R1, #+0]
    498                
    499                /*ÒÔÇ°ÎªË«µç»ú¿ªµÄÁ½¸ö¶Ë¿Ú
    500                PORTC_PCR1= PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin 
    501                PORTC_PCR2= PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin
    502                */
    503                 PORTB_PCR0= PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin PTB0
   \   00000026   0x....             LDR.N    R0,??DataTable3_20  ;; 0x4004a000
   \   00000028   0xF44F 0x7150      MOV      R1,#+832
   \   0000002C   0x6001             STR      R1,[R0, #+0]
    504                
    505                SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;         //Ê¹ÄÜFTM1Ê±ÖÓ      
   \   0000002E   0x....             LDR.N    R0,??DataTable3_2  ;; 0x4004803c
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000036   0x....             LDR.N    R1,??DataTable3_2  ;; 0x4004803c
   \   00000038   0x6008             STR      R0,[R1, #+0]
    506                
    507                //change MSnB = 1  
    508                FTM1_C0SC |= FTM_CnSC_ELSB_MASK;
   \   0000003A   0x....             LDR.N    R0,??DataTable3_21  ;; 0x4003900c
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000042   0x....             LDR.N    R1,??DataTable3_21  ;; 0x4003900c
   \   00000044   0x6008             STR      R0,[R1, #+0]
    509                FTM1_C0SC &= ~FTM_CnSC_ELSA_MASK;
   \   00000046   0x....             LDR.N    R0,??DataTable3_21  ;; 0x4003900c
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF030 0x0004      BICS     R0,R0,#0x4
   \   0000004E   0x....             LDR.N    R1,??DataTable3_21  ;; 0x4003900c
   \   00000050   0x6008             STR      R0,[R1, #+0]
    510                FTM1_C0SC |= FTM_CnSC_MSB_MASK;    
   \   00000052   0x....             LDR.N    R0,??DataTable3_21  ;; 0x4003900c
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000005A   0x....             LDR.N    R1,??DataTable3_21  ;; 0x4003900c
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    511                /*ÎªÁíÒ»¸öµç»ú
    512                FTM1_C1SC |= FTM_CnSC_ELSB_MASK;
    513                FTM1_C1SC &= ~FTM_CnSC_ELSA_MASK;
    514                FTM1_C1SC |= FTM_CnSC_MSB_MASK;   
    515                */
    516                
    517                FTM1_SC = 0x29; //not enable the interrupt mask    0010 1001
   \   0000005E   0x....             LDR.N    R0,??DataTable3_9  ;; 0x40039000
   \   00000060   0x2129             MOVS     R1,#+41
   \   00000062   0x6001             STR      R1,[R0, #+0]
    518                //FTM1_SC=0X1F;       //BIT5  0 FTM counter operates in up counting mode.
    519                                      //1 FTM counter operates in up-down counting mode.      
    520                //BIT43 FTM1_SC|=FTM1_SC_CLKS_MASK;
    521                                      //00 No clock selected (This in effect disables the FTM counter.)
    522                                      //01 System clock
    523                                      //10 Fixed frequency clock
    524                                      //11 External clock
    525                //BIT210 FTM1_SC|=FTM1_SC_PS_MASK; 
    526                                      //100M          MOD=2000;    
    527                                      //000 Divide by 1---12KHZ     
    528                                      //001 Divide by 2--- 6KHZ
    529                                      //010 Divide by 4--- 3K
    530                                      //011 Divide by 8--- 1.5K
    531                                      //100 Divide by 16---750
    532                                      //101 Divide by 32---375
    533                                      //110 Divide by 64---187.5HZ
    534                                      //111 Divide by 128--93.75hz             
    535                
    536                FTM1_MODE |= FTM_MODE_WPDIS_MASK;      
   \   00000064   0x....             LDR.N    R0,??DataTable3_28  ;; 0x40039054
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000006C   0x....             LDR.N    R1,??DataTable3_28  ;; 0x40039054
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    537                 //BIT1   Initialize the Channels Output
    538                //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
    539                FTM1_MODE &= ~1;
   \   00000070   0x....             LDR.N    R0,??DataTable3_28  ;; 0x40039054
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x0840             LSRS     R0,R0,#+1
   \   00000076   0x0040             LSLS     R0,R0,#+1
   \   00000078   0x....             LDR.N    R1,??DataTable3_28  ;; 0x40039054
   \   0000007A   0x6008             STR      R0,[R1, #+0]
    540                 //BIT0   FTM Enable
    541                 //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
    542                 //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
    543                
    544                FTM1_OUTMASK=0XFC;   //0 Channel output is not masked. It continues to operate normally.
   \   0000007C   0x....             LDR.N    R0,??DataTable3_29  ;; 0x40039060
   \   0000007E   0x21FC             MOVS     R1,#+252
   \   00000080   0x6001             STR      R1,[R0, #+0]
    545                                     //1 Channel output is masked. It is forced to its inactive state.
    546                
    547                FTM1_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
   \   00000082   0x....             LDR.N    R0,??DataTable3_30  ;; 0x40039064
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x6001             STR      R1,[R0, #+0]
    548                FTM1_OUTINIT=0;
   \   00000088   0x....             LDR.N    R0,??DataTable3_31  ;; 0x4003905c
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0x6001             STR      R1,[R0, #+0]
    549                FTM1_EXTTRIG=0;      //FTM aExternl Trigger (FTMx_EXTTRIG)
   \   0000008E   0x....             LDR.N    R0,??DataTable3_32  ;; 0x4003906c
   \   00000090   0x2100             MOVS     R1,#+0
   \   00000092   0x6001             STR      R1,[R0, #+0]
    550                FTM1_POL=0;          //Channels Polarity (FTMx_POL)
   \   00000094   0x....             LDR.N    R0,??DataTable3_33  ;; 0x40039070
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0x6001             STR      R1,[R0, #+0]
    551                                     //0 The channel polarity is active high.
    552                                     //1 The channel polarity is active low.     
    553                //Set Edge Aligned PWM
    554                FTM1_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
   \   0000009A   0x....             LDR.N    R0,??DataTable3_34  ;; 0x40039080
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x0840             LSRS     R0,R0,#+1
   \   000000A0   0x0040             LSLS     R0,R0,#+1
   \   000000A2   0x....             LDR.N    R1,??DataTable3_34  ;; 0x40039080
   \   000000A4   0x6008             STR      R0,[R1, #+0]
    555                //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
    556                //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
    557                //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
    558                
    559                FTM1_INVCTRL=0;      //·´×ª¿ØÖÆ
   \   000000A6   0x....             LDR.N    R0,??DataTable3_35  ;; 0x40039090
   \   000000A8   0x2100             MOVS     R1,#+0
   \   000000AA   0x6001             STR      R1,[R0, #+0]
    560                FTM1_SWOCTRL=0;      //Èí¼þÊä³ö¿ØÖÆF TM Software Output Control (FTMx_SWOCTRL)
   \   000000AC   0x....             LDR.N    R0,??DataTable3_36  ;; 0x40039094
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0x6001             STR      R1,[R0, #+0]
    561                FTM1_PWMLOAD=0;      //FTM PWM Load
   \   000000B2   0x....             LDR.N    R0,??DataTable3_37  ;; 0x40039098
   \   000000B4   0x2100             MOVS     R1,#+0
   \   000000B6   0x6001             STR      R1,[R0, #+0]
    562                                     //BIT9: 0 Loading updated values is disabled.
    563                                     //1 Loading updated values is enabled.
    564                FTM1_CNTIN=0;        //Counter Initial Value      
   \   000000B8   0x....             LDR.N    R0,??DataTable3_11  ;; 0x4003904c
   \   000000BA   0x2100             MOVS     R1,#+0
   \   000000BC   0x6001             STR      R1,[R0, #+0]
    565                FTM1_MOD=1250;       //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001) 
   \   000000BE   0x....             LDR.N    R0,??DataTable3_12  ;; 0x40039008
   \   000000C0   0xF240 0x41E2      MOVW     R1,#+1250
   \   000000C4   0x6001             STR      R1,[R0, #+0]
    566                                     //PMWÆµÂÊ=ÏµÍ³ÆµÂÊ/4/(2^FTM1_SC_PS)/FTM1_MOD   10000=180000000/4/2/2250   
    567                FTM1_C0V=0;          //ÉèÖÃ the pulse width(duty cycle) is determined by (CnV - CNTIN).  ¸ßµçÆ½µÄÊ±¼ä
   \   000000C6   0x....             LDR.N    R0,??DataTable3_38  ;; 0x40039010
   \   000000C8   0x2100             MOVS     R1,#+0
   \   000000CA   0x6001             STR      R1,[R0, #+0]
    568                //FTM1_C1V=0;          //ÉèÖÃ the pulse width(duty cycle) is determined by (CnV - CNTIN).  ¸ßµçÆ½µÄÊ±¼ä
    569                FTM1_CNT=0;          //Ö»ÓÐµÍ16Î»¿ÉÓÃ,¼Ä´æÆ÷µÄ³õÖµ
   \   000000CC   0x....             LDR.N    R0,??DataTable3_10  ;; 0x40039004
   \   000000CE   0x2100             MOVS     R1,#+0
   \   000000D0   0x6001             STR      R1,[R0, #+0]
    570          }
   \   000000D2   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     FTM_MOD0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x40038004         DC32     0x40038004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x4003804C         DC32     0x4003804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x40038008         DC32     0x40038008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     FTM_MOD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     FTM_MOD2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x40039004         DC32     0x40039004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x4003904C         DC32     0x4003904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x40039008         DC32     0x40039008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x400B804C         DC32     0x400b804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x400B8008         DC32     0x400b8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x4003800C         DC32     0x4003800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x4003900C         DC32     0x4003900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x400B800C         DC32     0x400b800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x4004C000         DC32     0x4004c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x40038010         DC32     0x40038010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x40038018         DC32     0x40038018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0x40038020         DC32     0x40038020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \   00000000   0x40039054         DC32     0x40039054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \   00000000   0x40039060         DC32     0x40039060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \   00000000   0x40039064         DC32     0x40039064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \   00000000   0x4003905C         DC32     0x4003905c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \   00000000   0x4003906C         DC32     0x4003906c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_33:
   \   00000000   0x40039070         DC32     0x40039070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_34:
   \   00000000   0x40039080         DC32     0x40039080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_35:
   \   00000000   0x40039090         DC32     0x40039090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_36:
   \   00000000   0x40039094         DC32     0x40039094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_37:
   \   00000000   0x40039098         DC32     0x40039098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_38:
   \   00000000   0x40039010         DC32     0x40039010

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  FTM_PWM_ChangeDuty
        8  FTM_PWM_Init
        8  FTM_PWM_Open
        8  Motor_init
             8 -> gpio_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_33
       4  ??DataTable3_34
       4  ??DataTable3_35
       4  ??DataTable3_36
       4  ??DataTable3_37
       4  ??DataTable3_38
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  FTM_MOD0
       4  FTM_MOD1
       4  FTM_MOD2
     182  FTM_PWM_ChangeDuty
     746  FTM_PWM_Init
     340  FTM_PWM_Open
     212  Motor_init

 
    12 bytes in section .bss
 1 636 bytes in section .text
 
 1 636 bytes of CODE memory
    12 bytes of DATA memory

Errors: none
Warnings: none
