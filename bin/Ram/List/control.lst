###############################################################################
#                                                                             #
#                                                       08/Aug/2014  18:18:58 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\sony\Desktop\can\src\Sources\C\Component_C\cont #
#                    rol.c                                                    #
#    Command line =  C:\Users\sony\Desktop\can\src\Sources\C\Component_C\cont #
#                    rol.c -D IAR -D TWR_K60N512 -lCN                         #
#                    C:\Users\sony\Desktop\can\bin\Ram\List\ -lB              #
#                    C:\Users\sony\Desktop\can\bin\Ram\List\ -o               #
#                    C:\Users\sony\Desktop\can\bin\Ram\Obj\ --no_cse          #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "E:\Program  #
#                    Files (x86)\IAREW6.3\arm\INC\c\DLib_Config_Normal.h" -I  #
#                    C:\Users\sony\Desktop\can\src\Sources\H\ -I              #
#                    C:\Users\sony\Desktop\can\src\Sources\H\Component_H\ -I  #
#                    C:\Users\sony\Desktop\can\src\Sources\H\Frame_H\ -Ol     #
#                    --use_c++_inline                                         #
#    List file    =  C:\Users\sony\Desktop\can\bin\Ram\List\control.lst       #
#    Object file  =  C:\Users\sony\Desktop\can\bin\Ram\Obj\control.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\sony\Desktop\can\src\Sources\C\Component_C\control.c
      1          #include "includes.h"
      2          
      3          //------------
      4          #define SPEED_CONTROL_PERIOD                100
      5          #define CAR_SPEED_CONSTANT                  0.02
      6          #define SPEED_CONTROL_P                     0.044
      7          #define SPEED_CONTROL_I                     0.00003
      8          #define SPEED_CONTROL_OUT_MAX		    MOTOR_OUT_MAX *10
      9          #define SPEED_CONTROL_OUT_MIN		    MOTOR_OUT_MIN *10
     10          #define CAR_SPEED_SET                       20
     11          #define CAR_SPEED_STEP                      5//每100毫秒增加的速度
     12          
     13          //-----------
     14          #define SI_SetVal()                         gpio_init (PORTE , 0, 1, 1)
     15          #define SI_ClrVal()                         gpio_init (PORTE , 0, 1, 0)
     16          #define CLK_SetVal()                        gpio_init (PORTE , 1, 1, 1)
     17          #define CLK_ClrVal()                        gpio_init (PORTE , 1, 1, 0)
     18          #define SI_SetVal_1()                       gpio_init (PORTA , 12, 1, 1)
     19          #define SI_ClrVal_1()                       gpio_init (PORTA , 12, 1, 0)
     20          #define CLK_SetVal_1()                      gpio_init (PORTA , 13, 1, 1)
     21          #define CLK_ClrVal_1()                      gpio_init (PORTA , 13, 1, 0)
     22          #define DIR_DEFAULT_MIN                     50
     23          #define DIRECTION_CONTROL_PERIOD            20
     24          #define DIR_CONTROL_P                       0.017
     25          #define DIR_CONTROL_D                       0.0007
     26          #define GATE                                45
     27          #define DIRECTION_CONTROL_DEADVALUE         0
     28          #define DIRECTION_CONTROL_OUT_MAX	    MOTOR_OUT_MAX
     29          #define DIRECTION_CONTROL_OUT_MIN	    MOTOR_OUT_MIN
     30          
     31          //------------
     32          #define MOTOR_OUT_DEAD_VAL                  0
     33          #define MOTOR_SPEED_POSITIVE	            (g_fMotorOut > 0)
     34          #define MOTOR_OUT_MAX                       1.0
     35          #define MOTOR_OUT_MIN                      -1.0
     36          //------------------------------------------------------------------------------

   \                                 In section .bss, align 4
     37          int16   g_nInputVoltage[5]={0};
   \                     g_nInputVoltage:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     38          int32	g_lnInputVoltageSigma[5]={0};    	
   \                     g_lnInputVoltageSigma:
   \   00000000                      DS8 20
     39          #define VOLTAGE_GRAVITY                     g_nInputVoltage[0]
     40          #define VOLTAGE_GYRO                        g_nInputVoltage[1]
     41          #define VOLTAGE_LEFT                        g_nInputVoltage[2]
     42          #define VOLTAGE_RIGHT                       g_nInputVoltage[3]		
     43          #define DIR_CONTROL_D_VALUE                 g_nInputVoltage[4]
     44          #define key_1                               (((GPIO_PDIR_REG(PTA_BASE_PTR))>>(19))&1)
     45          //------------------------------------------------------------------------------
     46          
     47          //-----------

   \                                 In section .bss, align 4
     48          float g_fCarSpeed=0;
   \                     g_fCarSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     49          float g_fCarSpeedstart=0;
   \                     g_fCarSpeedstart:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     50          int16 g_nMotorPulse=0;
   \                     g_nMotorPulse:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     51          int16 g_nRightMotorPulse=0;
   \                     g_nRightMotorPulse:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     52          float g_fSpeedControlIntegral=0;
   \                     g_fSpeedControlIntegral:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     53          float g_fSpeedControlOutOld =0;
   \                     g_fSpeedControlOutOld:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     54          float g_fSpeedControlOutNew =0;
   \                     g_fSpeedControlOutNew:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     55          float g_fSpeedControlOut =0;
   \                     g_fSpeedControlOut:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     56          uint8 g_nSpeedControlPeriod =0;
   \                     g_nSpeedControlPeriod:
   \   00000000                      DS8 1
     57          
     58          //-----------

   \                                 In section .bss, align 4
     59          float g_fDirectionControlOutOld=0;
   \                     g_fDirectionControlOutOld:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     60          float g_fDirectionControlOutNew =0;
   \                     g_fDirectionControlOutNew:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     61          float g_fDirectionControlOut=0;
   \                     g_fDirectionControlOut:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     62          int16 g_nDirectionControlPeriod=0;
   \                     g_nDirectionControlPeriod:
   \   00000000                      DS8 2
     63          
     64          

   \                                 In section .bss, align 2
     65          int16 front_l=0,front_r=127;
   \                     front_l:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     front_r:
   \   00000000   0x007F             DC16 127

   \                                 In section .bss, align 2
     66          int16 route_view;
   \                     route_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     67          int16 route_mid;
   \                     route_mid:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     68          int16 front_l_view,front_r_view;
   \                     front_l_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     69          int16 front_max=0;
   \                     front_max:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     70          int16 front_min=0;
   \                     front_min:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     71          int16 Aver_F=0;
   \                     Aver_F:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     72          int16 delta_l=0,delta_r=0;
   \                     delta_l:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     delta_r:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     73          int16 front_l_last=0,front_r_last=0;
   \                     front_l_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     74          int16 front_l_pre1=0,front_r_pre1=0,front_l_pre2=0,front_r_pre2=0,front_l_pre3=0,front_r_pre3=0,front_l_pre4=0,front_r_pre4=0;
   \                     front_l_pre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_pre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_l_pre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_pre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_l_pre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_pre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_l_pre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_pre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     75          int16 front_width=0;
   \                     front_width:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     76          int16 cl_f=0,cl_f_pre=0;
   \                     cl_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     cl_f_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     77          int16 Lfch=0,Rfch=0;
   \                     Lfch:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rfch:
   \   00000000                      DS8 2
     78          

   \                                 In section .bss, align 2
     79          int16 front_l_reference=0,front_r_reference=128;
   \                     front_l_reference:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     front_r_reference:
   \   00000000   0x0080             DC16 128

   \                                 In section .bss, align 2
     80          int16 front_OFFSET_KZ=0;
   \                     front_OFFSET_KZ:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     81          int16 front_reference;
   \                     front_reference:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     82          int16 front_OFFSET_KZ_pre=0,front_OFFSET=0,front_OFFSET_pre=0,front_OFFSET_pre1=0,front_OFFSET_pre2=0,front_OFFSET_pre3=0,front_OFFSET_pre4=0,front_OFFSET_pre5=0,front_OFFSET_pre6=0,front_OFFSET_pre7=0,front_OFFSET_pre8=0,front_OFFSET_pre9=0,front_OFFSET_pre10=0;//上一次位置偏差
   \                     front_OFFSET_KZ_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre9:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre10:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     83          int16 d_err1=0,d_err2=0,d_err3=0,d_err4=0,d_err5=0,d_err6=0,d_err7=0,d_err8=0,d_err9=0;
   \                     d_err1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err9:
   \   00000000                      DS8 2
     84          
     85          

   \                                 In section .bss, align 2
     86          int16 zong_l=0,zong_r=127;
   \                     zong_l:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     zong_r:
   \   00000000   0x007F             DC16 127
     87          //int16 route_view;
     88          //int16 route_mid;

   \                                 In section .bss, align 2
     89          int16 zong_l_view,zong_r_view;
   \                     zong_l_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_r_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     90          int16 zong_max=0;
   \                     zong_max:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     91          int16 zong_min=0;
   \                     zong_min:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     92          int16 Aver_Z=0;
   \                     Aver_Z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     93          int16 zong_l_last=0,zong_r_last=0;
   \                     zong_l_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_r_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     94          int16 zong_l_pre=0,zong_r_pre=0;
   \                     zong_l_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_r_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     95          int16 zong_width=0;
   \                     zong_width:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     96          int16 cl_z=0;
   \                     cl_z:
   \   00000000                      DS8 2
     97          

   \                                 In section .bss, align 2
     98          int16 zong_l_reference=0,zong_r_reference=128;
   \                     zong_l_reference:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     zong_r_reference:
   \   00000000   0x0080             DC16 128

   \                                 In section .bss, align 2
     99          int16 zong_OFFSET_KZ=0;
   \                     zong_OFFSET_KZ:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    100          int16 zong_reference;
   \                     zong_reference:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    101          int16 zong_OFFSET_KZ_pre=0,zong_OFFSET=0,zong_OFFSET_pre=0,zong_OFFSET_pre1=0,zong_OFFSET_pre2=0,zong_OFFSET_pre3=0,zong_OFFSET_pre4=0,zong_OFFSET_pre5=0,zong_OFFSET_pre6=0,zong_OFFSET_pre7=0,zong_OFFSET_pre8=0,zong_OFFSET_pre9=0,zong_OFFSET_pre10=0;//上一次位置偏差
   \                     zong_OFFSET_KZ_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre9:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre10:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    102          int16 z_err1=0,z_err2=0,z_err3=0,z_err4=0,z_err5=0,z_err6=0,z_err7=0,z_err8=0,z_err9=0;
   \                     z_err1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err9:
   \   00000000                      DS8 2
    103          
    104          
    105          

   \                                 In section .data, align 2
    106          int16 servo_duty=4780;//舵机占空比
   \                     servo_duty:
   \   00000000   0x12AC             DC16 4780
    107          

   \                                 In section .bss, align 2
    108          int16 D_err=0;
   \                     D_err:
   \   00000000                      DS8 2
    109          
    110          
    111          //------------

   \                                 In section .bss, align 4
    112          float g_fMotorOut=0;
   \                     g_fMotorOut:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
    113          int16 g_nMotorPulseSigma =0;
   \                     g_nMotorPulseSigma:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
    114          extern int16 OutData[4] = { 0 };//虚拟示波器输出
   \                     OutData:
   \   00000000                      DS8 8
    115          extern uint8 a,b;
    116          extern int16 speedflag;
    117          //----------------------------------------------------------------------------------------------------
    118          
    119          

   \                                 In section .bss, align 2
    120          int16   gravity,voltage_gravity;
   \                     gravity:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     voltage_gravity:
   \   00000000                      DS8 2
    121          extern  int16   hongwai_l,hongwai_r;
    122          extern  int16   HONGWAI_L,HONGWAI_R;
    123          
    124          
    125          

   \                                 In section .text, align 2, keep-with-next
    126          void GetSamplezhi()
    127          {
   \                     GetSamplezhi:
   \   00000000   0xB580             PUSH     {R7,LR}
    128              g_lnInputVoltageSigma[0]+= hw_ad_ave(0,17,12,20);//左   
   \   00000002   0x2314             MOVS     R3,#+20
   \   00000004   0x220C             MOVS     R2,#+12
   \   00000006   0x2111             MOVS     R1,#+17
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       hw_ad_ave
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000012   0x6809             LDR      R1,[R1, #+0]
   \   00000014   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    129              g_lnInputVoltageSigma[1]+= hw_ad_ave(0,18,12,20);//右
   \   0000001E   0x2314             MOVS     R3,#+20
   \   00000020   0x220C             MOVS     R2,#+12
   \   00000022   0x2112             MOVS     R1,#+18
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       hw_ad_ave
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000002E   0x6849             LDR      R1,[R1, #+4]
   \   00000030   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000038   0x6048             STR      R0,[R1, #+4]
    130              //g_lnInputVoltageSigma[2]+= hw_ad_ave(0,12,12,20);
    131          }
   \   0000003A   0xBD01             POP      {R0,PC}          ;; return
    132          

   \                                 In section .text, align 2, keep-with-next
    133          void GetOFFSET()
    134          {
    135              HONGWAI_L=g_lnInputVoltageSigma[0]/200;
   \                     GetOFFSET:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x21C8             MOVS     R1,#+200
   \   00000008   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000010   0x8008             STRH     R0,[R1, #+0]
    136              HONGWAI_R=g_lnInputVoltageSigma[1]/200;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000016   0x6840             LDR      R0,[R0, #+4]
   \   00000018   0x21C8             MOVS     R1,#+200
   \   0000001A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000022   0x8008             STRH     R0,[R1, #+0]
    137              //gyro_direction= g_lnInputVoltageSigma[2]/200;  
    138          }
   \   00000024   0x4770             BX       LR               ;; return
    139          

   \                                 In section .text, align 2, keep-with-next
    140          void get_ad()
    141          {
   \                     get_ad:
   \   00000000   0xB580             PUSH     {R7,LR}
    142             hongwai_l = hw_ad_ave(0,17,12,20);              
   \   00000002   0x2314             MOVS     R3,#+20
   \   00000004   0x220C             MOVS     R2,#+12
   \   00000006   0x2111             MOVS     R1,#+17
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       hw_ad_ave
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   00000012   0x8008             STRH     R0,[R1, #+0]
    143             hongwai_r = hw_ad_ave(0,18,12,20);                   
   \   00000014   0x2314             MOVS     R3,#+20
   \   00000016   0x220C             MOVS     R2,#+12
   \   00000018   0x2112             MOVS     R1,#+18
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       hw_ad_ave
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable11_4
   \   00000024   0x8008             STRH     R0,[R1, #+0]
    144             //DIR_CONTROL_D_VALUE = hw_ad_ave(0,12,12,20);            //---------得转向陀螺仪电压信号(PTB2)
    145          }
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    146          
    147          
    148          
    149          
    150          
    151          
    152          
    153          //-------------------------------------方向控制-------------------------------

   \                                 In section .text, align 2, keep-with-next
    154          void CCD_init(void)
    155          {
   \                     CCD_init:
   \   00000000   0xB580             PUSH     {R7,LR}
    156            gpio_init (PORTE , 0, 1, 1);
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000000C   0x.... 0x....      BL       gpio_init
    157            gpio_init (PORTE , 1, 1, 1);
   \   00000010   0x2301             MOVS     R3,#+1
   \   00000012   0x2201             MOVS     R2,#+1
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       gpio_init
    158            gpio_init (PORTA , 12, 1, 1);
   \   0000001E   0x2301             MOVS     R3,#+1
   \   00000020   0x2201             MOVS     R2,#+1
   \   00000022   0x210C             MOVS     R1,#+12
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000028   0x.... 0x....      BL       gpio_init
    159            gpio_init (PORTA , 13, 1, 1);
   \   0000002C   0x2301             MOVS     R3,#+1
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0x210D             MOVS     R1,#+13
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000036   0x.... 0x....      BL       gpio_init
    160            hw_adc_init(1);
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x.... 0x....      BL       hw_adc_init
    161          }
   \   00000040   0xBD01             POP      {R0,PC}          ;; return
    162          /*
    163          void button_init()
    164          {
    165             SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;    //打开PORTD端口的时钟
    166             PORTA_PCR19=(0|PORT_PCR_MUX(1));
    167             gpio_init (PORTA,19, 0,0);
    168          }
    169          */

   \                                 In section .text, align 2, keep-with-next
    170          void ADC0_stop(void)
    171          
    172          {
   \                     ADC0_stop:
   \   00000000   0xB580             PUSH     {R7,LR}
    173              hw_adc_convertstop(0,8);
   \   00000002   0x2108             MOVS     R1,#+8
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       hw_adc_convertstop
    174              hw_adc_convertstop(0,9);
   \   0000000A   0x2109             MOVS     R1,#+9
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       hw_adc_convertstop
    175              hw_adc_convertstop(0,12);
   \   00000012   0x210C             MOVS     R1,#+12
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       hw_adc_convertstop
    176          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    177          

   \                                 In section .text, align 2, keep-with-next
    178          void ADC0_start(void)
    179          {
   \                     ADC0_start:
   \   00000000   0xB580             PUSH     {R7,LR}
    180              hw_adc_convertstart(0,8,12);
   \   00000002   0x220C             MOVS     R2,#+12
   \   00000004   0x2108             MOVS     R1,#+8
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       hw_adc_convertstart
    181              hw_adc_convertstart(0,9,12);
   \   0000000C   0x220C             MOVS     R2,#+12
   \   0000000E   0x2109             MOVS     R1,#+9
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       hw_adc_convertstart
    182              hw_adc_convertstart(0,12,12);
   \   00000016   0x220C             MOVS     R2,#+12
   \   00000018   0x210C             MOVS     R1,#+12
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       hw_adc_convertstart
    183          }
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    184          
    185          

   \                                 In section .text, align 2, keep-with-next
    186          void StartIntegrationFront(void)
    187          {
   \                     StartIntegrationFront:
   \   00000000   0xB510             PUSH     {R4,LR}
    188              unsigned char i;
    189          
    190              SI_SetVal();            /* SI  = 1 */
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000000C   0x.... 0x....      BL       gpio_init
    191              SamplingDelay();
   \   00000010   0x.... 0x....      BL       SamplingDelay
    192              CLK_SetVal();           /* CLK = 1 */
   \   00000014   0x2301             MOVS     R3,#+1
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000001E   0x.... 0x....      BL       gpio_init
    193              SamplingDelay();
   \   00000022   0x.... 0x....      BL       SamplingDelay
    194              SI_ClrVal();            /* SI  = 0 */
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000030   0x.... 0x....      BL       gpio_init
    195              SamplingDelay();
   \   00000034   0x.... 0x....      BL       SamplingDelay
    196              CLK_ClrVal();           /* CLK = 0 */
   \   00000038   0x2300             MOVS     R3,#+0
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0x2101             MOVS     R1,#+1
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       gpio_init
    197          
    198              for(i=0; i<127; i++)
   \   00000046   0x2400             MOVS     R4,#+0
   \   00000048   0xE016             B.N      ??StartIntegrationFront_0
    199              {
    200                  SamplingDelay();
   \                     ??StartIntegrationFront_1:
   \   0000004A   0x.... 0x....      BL       SamplingDelay
    201                  SamplingDelay();
   \   0000004E   0x.... 0x....      BL       SamplingDelay
    202                  CLK_SetVal();       /* CLK = 1 */
   \   00000052   0x2301             MOVS     R3,#+1
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0x2101             MOVS     R1,#+1
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000005C   0x.... 0x....      BL       gpio_init
    203                  SamplingDelay();
   \   00000060   0x.... 0x....      BL       SamplingDelay
    204                  SamplingDelay();
   \   00000064   0x.... 0x....      BL       SamplingDelay
    205                  CLK_ClrVal();       /* CLK = 0 */
   \   00000068   0x2300             MOVS     R3,#+0
   \   0000006A   0x2201             MOVS     R2,#+1
   \   0000006C   0x2101             MOVS     R1,#+1
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000072   0x.... 0x....      BL       gpio_init
    206              }
   \   00000076   0x1C64             ADDS     R4,R4,#+1
   \                     ??StartIntegrationFront_0:
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0x2C7F             CMP      R4,#+127
   \   0000007C   0xD3E5             BCC.N    ??StartIntegrationFront_1
    207              SamplingDelay();
   \   0000007E   0x.... 0x....      BL       SamplingDelay
    208              SamplingDelay();
   \   00000082   0x.... 0x....      BL       SamplingDelay
    209              CLK_SetVal();           /* CLK = 1 */
   \   00000086   0x2301             MOVS     R3,#+1
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x2101             MOVS     R1,#+1
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000090   0x.... 0x....      BL       gpio_init
    210              SamplingDelay();
   \   00000094   0x.... 0x....      BL       SamplingDelay
    211              SamplingDelay();
   \   00000098   0x.... 0x....      BL       SamplingDelay
    212              CLK_ClrVal();           /* CLK = 0 */
   \   0000009C   0x2300             MOVS     R3,#+0
   \   0000009E   0x2201             MOVS     R2,#+1
   \   000000A0   0x2101             MOVS     R1,#+1
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   000000A6   0x.... 0x....      BL       gpio_init
    213          }
   \   000000AA   0xBD10             POP      {R4,PC}          ;; return
    214          

   \                                 In section .text, align 2, keep-with-next
    215          void StartIntegrationZong(void)
    216          {
   \                     StartIntegrationZong:
   \   00000000   0xB510             PUSH     {R4,LR}
    217              unsigned char i;
    218          
    219              //SI_SetVal();            /* SI  = 1 */
    220              SI_SetVal_1();
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210C             MOVS     R1,#+12
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000000C   0x.... 0x....      BL       gpio_init
    221              SamplingDelay();
   \   00000010   0x.... 0x....      BL       SamplingDelay
    222              //CLK_SetVal();           /* CLK = 1 */
    223              CLK_SetVal_1();
   \   00000014   0x2301             MOVS     R3,#+1
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x210D             MOVS     R1,#+13
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000001E   0x.... 0x....      BL       gpio_init
    224              SamplingDelay();
   \   00000022   0x.... 0x....      BL       SamplingDelay
    225              //SI_ClrVal();            /* SI  = 0 */
    226              SI_ClrVal_1();
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x210C             MOVS     R1,#+12
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000030   0x.... 0x....      BL       gpio_init
    227              SamplingDelay();
   \   00000034   0x.... 0x....      BL       SamplingDelay
    228              //CLK_ClrVal();           /* CLK = 0 */
    229              CLK_ClrVal_1();
   \   00000038   0x2300             MOVS     R3,#+0
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0x210D             MOVS     R1,#+13
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000042   0x.... 0x....      BL       gpio_init
    230          
    231              for(i=0; i<127; i++)
   \   00000046   0x2400             MOVS     R4,#+0
   \   00000048   0xE016             B.N      ??StartIntegrationZong_0
    232              {
    233                  SamplingDelay();
   \                     ??StartIntegrationZong_1:
   \   0000004A   0x.... 0x....      BL       SamplingDelay
    234                  SamplingDelay();
   \   0000004E   0x.... 0x....      BL       SamplingDelay
    235                  //CLK_SetVal();       /* CLK = 1 */
    236                  CLK_SetVal_1();
   \   00000052   0x2301             MOVS     R3,#+1
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0x210D             MOVS     R1,#+13
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000005C   0x.... 0x....      BL       gpio_init
    237                  SamplingDelay();
   \   00000060   0x.... 0x....      BL       SamplingDelay
    238                  SamplingDelay();
   \   00000064   0x.... 0x....      BL       SamplingDelay
    239                  //CLK_ClrVal();       /* CLK = 0 */
    240                  CLK_ClrVal_1();
   \   00000068   0x2300             MOVS     R3,#+0
   \   0000006A   0x2201             MOVS     R2,#+1
   \   0000006C   0x210D             MOVS     R1,#+13
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000072   0x.... 0x....      BL       gpio_init
    241              }
   \   00000076   0x1C64             ADDS     R4,R4,#+1
   \                     ??StartIntegrationZong_0:
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0x2C7F             CMP      R4,#+127
   \   0000007C   0xD3E5             BCC.N    ??StartIntegrationZong_1
    242              SamplingDelay();
   \   0000007E   0x.... 0x....      BL       SamplingDelay
    243              SamplingDelay();
   \   00000082   0x.... 0x....      BL       SamplingDelay
    244              //CLK_SetVal();           /* CLK = 1 */
    245              CLK_SetVal_1();
   \   00000086   0x2301             MOVS     R3,#+1
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x210D             MOVS     R1,#+13
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000090   0x.... 0x....      BL       gpio_init
    246              SamplingDelay();
   \   00000094   0x.... 0x....      BL       SamplingDelay
    247              SamplingDelay();
   \   00000098   0x.... 0x....      BL       SamplingDelay
    248              //CLK_ClrVal();           /* CLK = 0 */
    249              CLK_ClrVal_1();
   \   0000009C   0x2300             MOVS     R3,#+0
   \   0000009E   0x2201             MOVS     R2,#+1
   \   000000A0   0x210D             MOVS     R1,#+13
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   000000A6   0x.... 0x....      BL       gpio_init
    250          }
   \   000000AA   0xBD10             POP      {R4,PC}          ;; return
    251          
    252          
    253          

   \                                 In section .text, align 2, keep-with-next
    254          void ImageCapture_F(uint8 * ImageData_F)
    255          {
   \                     ImageCapture_F:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    256              unsigned char i;
    257              extern uint8 AtemP;
    258          
    259              SI_SetVal();            
   \   00000004   0x2301             MOVS     R3,#+1
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       gpio_init
    260              SamplingDelay();
   \   00000012   0x.... 0x....      BL       SamplingDelay
    261              CLK_SetVal();          
   \   00000016   0x2301             MOVS     R3,#+1
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000020   0x.... 0x....      BL       gpio_init
    262              SamplingDelay();
   \   00000024   0x.... 0x....      BL       SamplingDelay
    263              SI_ClrVal();           
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x2201             MOVS     R2,#+1
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000032   0x.... 0x....      BL       gpio_init
    264              SamplingDelay();
   \   00000036   0x.... 0x....      BL       SamplingDelay
    265              
    266              //Delay 10us for sample the first pixel
    267              for(i = 0; i < 150; i++)//由10us改为10*8/5us
   \   0000003A   0x2500             MOVS     R5,#+0
   \   0000003C   0xE002             B.N      ??ImageCapture_F_0
    268              {
    269                SamplingDelay();  //200ns
   \                     ??ImageCapture_F_1:
   \   0000003E   0x.... 0x....      BL       SamplingDelay
    270              }
   \   00000042   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ImageCapture_F_0:
   \   00000044   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000046   0x2D96             CMP      R5,#+150
   \   00000048   0xD3F9             BCC.N    ??ImageCapture_F_1
    271              //Sampling Pixel_F 1
    272              *ImageData_F =  hw_ad_once(1, 6, 8);
   \   0000004A   0x2208             MOVS     R2,#+8
   \   0000004C   0x2106             MOVS     R1,#+6
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       hw_ad_once
   \   00000054   0x7020             STRB     R0,[R4, #+0]
    273              ImageData_F ++ ;
   \   00000056   0x1C64             ADDS     R4,R4,#+1
    274              CLK_ClrVal();          
   \   00000058   0x2300             MOVS     R3,#+0
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000062   0x.... 0x....      BL       gpio_init
    275              
    276              for(i=0; i<127; i++)
   \   00000066   0x2500             MOVS     R5,#+0
   \   00000068   0xE01D             B.N      ??ImageCapture_F_2
    277              {
    278                  SamplingDelay();
   \                     ??ImageCapture_F_3:
   \   0000006A   0x.... 0x....      BL       SamplingDelay
    279                  SamplingDelay();
   \   0000006E   0x.... 0x....      BL       SamplingDelay
    280                  CLK_SetVal();       
   \   00000072   0x2301             MOVS     R3,#+1
   \   00000074   0x2201             MOVS     R2,#+1
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000007C   0x.... 0x....      BL       gpio_init
    281                  SamplingDelay();
   \   00000080   0x.... 0x....      BL       SamplingDelay
    282                  SamplingDelay();
   \   00000084   0x.... 0x....      BL       SamplingDelay
    283          
    284                  //Sampling Pixel_F 2~128
    285                  *ImageData_F = hw_ad_once(1, 6, 8);
   \   00000088   0x2208             MOVS     R2,#+8
   \   0000008A   0x2106             MOVS     R1,#+6
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       hw_ad_once
   \   00000092   0x7020             STRB     R0,[R4, #+0]
    286                  ImageData_F ++;
   \   00000094   0x1C64             ADDS     R4,R4,#+1
    287                  CLK_ClrVal();      
   \   00000096   0x2300             MOVS     R3,#+0
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x2101             MOVS     R1,#+1
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   000000A0   0x.... 0x....      BL       gpio_init
    288              }
   \   000000A4   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ImageCapture_F_2:
   \   000000A6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A8   0x2D7F             CMP      R5,#+127
   \   000000AA   0xD3DE             BCC.N    ??ImageCapture_F_3
    289              SamplingDelay();
   \   000000AC   0x.... 0x....      BL       SamplingDelay
    290              SamplingDelay();
   \   000000B0   0x.... 0x....      BL       SamplingDelay
    291              CLK_SetVal();          
   \   000000B4   0x2301             MOVS     R3,#+1
   \   000000B6   0x2201             MOVS     R2,#+1
   \   000000B8   0x2101             MOVS     R1,#+1
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   000000BE   0x.... 0x....      BL       gpio_init
    292              SamplingDelay();
   \   000000C2   0x.... 0x....      BL       SamplingDelay
    293              SamplingDelay();
   \   000000C6   0x.... 0x....      BL       SamplingDelay
    294              CLK_ClrVal();          
   \   000000CA   0x2300             MOVS     R3,#+0
   \   000000CC   0x2201             MOVS     R2,#+1
   \   000000CE   0x2101             MOVS     R1,#+1
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   000000D4   0x.... 0x....      BL       gpio_init
    295          }
   \   000000D8   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    296          

   \                                 In section .text, align 2, keep-with-next
    297          void ImageCapture_Z(uint8 * ImageData_Z)
    298          {
   \                     ImageCapture_Z:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    299              unsigned char i;
    300              extern uint8 AtemP;
    301          
    302              SI_SetVal_1();
   \   00000004   0x2301             MOVS     R3,#+1
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x210C             MOVS     R1,#+12
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000000E   0x.... 0x....      BL       gpio_init
    303              SamplingDelay();
   \   00000012   0x.... 0x....      BL       SamplingDelay
    304              CLK_SetVal_1();
   \   00000016   0x2301             MOVS     R3,#+1
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x210D             MOVS     R1,#+13
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000020   0x.... 0x....      BL       gpio_init
    305              SamplingDelay();
   \   00000024   0x.... 0x....      BL       SamplingDelay
    306              SI_ClrVal_1();
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x2201             MOVS     R2,#+1
   \   0000002C   0x210C             MOVS     R1,#+12
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000032   0x.... 0x....      BL       gpio_init
    307              SamplingDelay();
   \   00000036   0x.... 0x....      BL       SamplingDelay
    308              //Delay 10us for sample the first pixel
    309              for(i = 0; i < 80; i++)//由10us改为10*10/5us
   \   0000003A   0x2500             MOVS     R5,#+0
   \   0000003C   0xE002             B.N      ??ImageCapture_Z_0
    310              {
    311                SamplingDelay();  //200ns
   \                     ??ImageCapture_Z_1:
   \   0000003E   0x.... 0x....      BL       SamplingDelay
    312              }
   \   00000042   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ImageCapture_Z_0:
   \   00000044   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000046   0x2D50             CMP      R5,#+80
   \   00000048   0xD3F9             BCC.N    ??ImageCapture_Z_1
    313              //Sampling Pixel_Z 1
    314              *ImageData_Z= hw_ad_once(1, 14, 8);
   \   0000004A   0x2208             MOVS     R2,#+8
   \   0000004C   0x210E             MOVS     R1,#+14
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       hw_ad_once
   \   00000054   0x7020             STRB     R0,[R4, #+0]
    315              ImageData_Z ++;
   \   00000056   0x1C64             ADDS     R4,R4,#+1
    316              CLK_ClrVal_1();
   \   00000058   0x2300             MOVS     R3,#+0
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x210D             MOVS     R1,#+13
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000062   0x.... 0x....      BL       gpio_init
    317          
    318              for(i=0; i<127; i++)
   \   00000066   0x2500             MOVS     R5,#+0
   \   00000068   0xE01D             B.N      ??ImageCapture_Z_2
    319              {
    320                  SamplingDelay();
   \                     ??ImageCapture_Z_3:
   \   0000006A   0x.... 0x....      BL       SamplingDelay
    321                  SamplingDelay();
   \   0000006E   0x.... 0x....      BL       SamplingDelay
    322                  CLK_SetVal_1();
   \   00000072   0x2301             MOVS     R3,#+1
   \   00000074   0x2201             MOVS     R2,#+1
   \   00000076   0x210D             MOVS     R1,#+13
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000007C   0x.... 0x....      BL       gpio_init
    323                  SamplingDelay();
   \   00000080   0x.... 0x....      BL       SamplingDelay
    324                  SamplingDelay();
   \   00000084   0x.... 0x....      BL       SamplingDelay
    325                  
    326                  //Sampling Pixel_F 2~128
    327                  *ImageData_Z= hw_ad_once(1, 14, 8);
   \   00000088   0x2208             MOVS     R2,#+8
   \   0000008A   0x210E             MOVS     R1,#+14
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       hw_ad_once
   \   00000092   0x7020             STRB     R0,[R4, #+0]
    328                  ImageData_Z++;
   \   00000094   0x1C64             ADDS     R4,R4,#+1
    329                  CLK_ClrVal_1();
   \   00000096   0x2300             MOVS     R3,#+0
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x210D             MOVS     R1,#+13
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   000000A0   0x.... 0x....      BL       gpio_init
    330              }
   \   000000A4   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ImageCapture_Z_2:
   \   000000A6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A8   0x2D7F             CMP      R5,#+127
   \   000000AA   0xD3DE             BCC.N    ??ImageCapture_Z_3
    331              SamplingDelay();
   \   000000AC   0x.... 0x....      BL       SamplingDelay
    332              SamplingDelay();
   \   000000B0   0x.... 0x....      BL       SamplingDelay
    333              CLK_SetVal_1();
   \   000000B4   0x2301             MOVS     R3,#+1
   \   000000B6   0x2201             MOVS     R2,#+1
   \   000000B8   0x210D             MOVS     R1,#+13
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   000000BE   0x.... 0x....      BL       gpio_init
    334              SamplingDelay();
   \   000000C2   0x.... 0x....      BL       SamplingDelay
    335              SamplingDelay();
   \   000000C6   0x.... 0x....      BL       SamplingDelay
    336              CLK_ClrVal_1();
   \   000000CA   0x2300             MOVS     R3,#+0
   \   000000CC   0x2201             MOVS     R2,#+1
   \   000000CE   0x210D             MOVS     R1,#+13
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   000000D4   0x.... 0x....      BL       gpio_init
    337          }
   \   000000D8   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    338          

   \                                 In section .data, align 2
    339          int16  TargetPixelAverageVoltage = 30;                          //设定目标平均电压值，实际电压的10倍 
   \                     TargetPixelAverageVoltage:
   \   00000000   0x001E             DC16 30

   \                                 In section .bss, align 2
    340          int16  PixelAverageVoltageError = 0;                            //设定目标平均电压值与实际值的偏差，实际电压的10倍 
   \                     PixelAverageVoltageError:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
    341          int16  TargetPixelAverageVoltageAllowError = 2;                 //设定目标平均电压值允许的偏差，实际电压的10倍 
   \                     TargetPixelAverageVoltageAllowError:
   \   00000000   0x0002             DC16 2
    342          
    343          extern uint8 Pixel_F[128];

   \                                 In section .bss, align 1
    344          uint8        PixelAverageValue_Front=0;                                       //128个像素点的平均AD值 
   \                     PixelAverageValue_Front:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    345          uint8        PixelAverageVoltage_Front=0;                                     //128个像素点的平均电压值的10倍 
   \                     PixelAverageVoltage_Front:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    346          uint8        IntegrationTime_Front=10;                                        //曝光时间，单位ms 
   \                     IntegrationTime_Front:
   \   00000000   0x0A               DC8 10

   \                                 In section .text, align 2, keep-with-next
    347          void CalculateIntegrationTimeFront(void)
    348          {
   \                     CalculateIntegrationTimeFront:
   \   00000000   0xB580             PUSH     {R7,LR}
    349              PixelAverageValue_Front = PixelAverage(128,Pixel_F);/* 计算128个像素点的平均AD值 */
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000006   0x2080             MOVS     R0,#+128
   \   00000008   0x.... 0x....      BL       PixelAverage
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_8
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    350              PixelAverageVoltage_Front = (uint8)((int)(PixelAverageValue_Front * 25 / 128));/* 计算128个像素点的平均电压值,实际值的10倍 */
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2119             MOVS     R1,#+25
   \   0000001A   0x4348             MULS     R0,R1,R0
   \   0000001C   0x2180             MOVS     R1,#+128
   \   0000001E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000026   0x7008             STRB     R0,[R1, #+0]
    351              PixelAverageVoltageError = TargetPixelAverageVoltage - PixelAverageVoltage_Front;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_10
   \   0000002C   0x8800             LDRH     R0,[R0, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000032   0x7809             LDRB     R1,[R1, #+0]
   \   00000034   0x1A40             SUBS     R0,R0,R1
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000003A   0x8008             STRH     R0,[R1, #+0]
    352              if(PixelAverageVoltageError < -TargetPixelAverageVoltageAllowError)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000040   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000048   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000004C   0x42C8             CMN      R0,R1
   \   0000004E   0xDA06             BGE.N    ??CalculateIntegrationTimeFront_0
    353                IntegrationTime_Front--;//多于目标值，曝光时间大了
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
    354              if(PixelAverageVoltageError > TargetPixelAverageVoltageAllowError)
   \                     ??CalculateIntegrationTimeFront_0:
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   00000062   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000006A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000006E   0x4288             CMP      R0,R1
   \   00000070   0xDA06             BGE.N    ??CalculateIntegrationTimeFront_1
    355                IntegrationTime_Front++;//少于目标值，曝光时间小了
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0x1C40             ADDS     R0,R0,#+1
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   0000007E   0x7008             STRB     R0,[R1, #+0]
    356              if(IntegrationTime_Front <= 1)
   \                     ??CalculateIntegrationTimeFront_1:
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x2802             CMP      R0,#+2
   \   00000088   0xD203             BCS.N    ??CalculateIntegrationTimeFront_2
    357                IntegrationTime_Front = 1;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   0000008E   0x2101             MOVS     R1,#+1
   \   00000090   0x7001             STRB     R1,[R0, #+0]
    358              if(IntegrationTime_Front >= 20)
   \                     ??CalculateIntegrationTimeFront_2:
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000096   0x7800             LDRB     R0,[R0, #+0]
   \   00000098   0x2814             CMP      R0,#+20
   \   0000009A   0xD303             BCC.N    ??CalculateIntegrationTimeFront_3
    359                IntegrationTime_Front = 20;
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   000000A0   0x2114             MOVS     R1,#+20
   \   000000A2   0x7001             STRB     R1,[R0, #+0]
    360          }
   \                     ??CalculateIntegrationTimeFront_3:
   \   000000A4   0xBD01             POP      {R0,PC}          ;; return
    361          
    362          extern uint8 Pixel_Z[128];

   \                                 In section .bss, align 1
    363          uint8        PixelAverageValue_Zong=0;
   \                     PixelAverageValue_Zong:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    364          uint8        PixelAverageVoltage_Zong=0;
   \                     PixelAverageVoltage_Zong:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    365          uint8        IntegrationTime_Zong = 2;                              // 曝光时间，单位ms
   \                     IntegrationTime_Zong:
   \   00000000   0x02               DC8 2

   \                                 In section .text, align 2, keep-with-next
    366          void CalculateIntegrationTimeZong(void)
    367          {
   \                     CalculateIntegrationTimeZong:
   \   00000000   0xB580             PUSH     {R7,LR}
    368              PixelAverageValue_Zong = PixelAverage(128,Pixel_Z);/* 计算128个像素点的平均AD值 */
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable11_14
   \   00000006   0x2080             MOVS     R0,#+128
   \   00000008   0x.... 0x....      BL       PixelAverage
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_15
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    369              PixelAverageVoltage_Zong = (uint8)((int)(PixelAverageValue_Zong * 25 / 128));/* 计算128个像素点的平均电压值,实际值的10倍 */
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_15
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2119             MOVS     R1,#+25
   \   0000001A   0x4348             MULS     R0,R1,R0
   \   0000001C   0x2180             MOVS     R1,#+128
   \   0000001E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable11_16
   \   00000026   0x7008             STRB     R0,[R1, #+0]
    370              PixelAverageVoltageError = TargetPixelAverageVoltage - PixelAverageVoltage_Zong;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_10
   \   0000002C   0x8800             LDRH     R0,[R0, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable11_16
   \   00000032   0x7809             LDRB     R1,[R1, #+0]
   \   00000034   0x1A40             SUBS     R0,R0,R1
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000003A   0x8008             STRH     R0,[R1, #+0]
    371              if(PixelAverageVoltageError < -TargetPixelAverageVoltageAllowError)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000040   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000048   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000004C   0x42C8             CMN      R0,R1
   \   0000004E   0xDA06             BGE.N    ??CalculateIntegrationTimeZong_0
    372                IntegrationTime_Zong--;
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable11_17
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
    373              if(PixelAverageVoltageError > TargetPixelAverageVoltageAllowError)
   \                     ??CalculateIntegrationTimeZong_0:
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   00000062   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000006A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000006E   0x4288             CMP      R0,R1
   \   00000070   0xDA06             BGE.N    ??CalculateIntegrationTimeZong_1
    374                IntegrationTime_Zong++;
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0x1C40             ADDS     R0,R0,#+1
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable11_17
   \   0000007E   0x7008             STRB     R0,[R1, #+0]
    375              if(IntegrationTime_Zong <= 1)
   \                     ??CalculateIntegrationTimeZong_1:
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x2802             CMP      R0,#+2
   \   00000088   0xD203             BCS.N    ??CalculateIntegrationTimeZong_2
    376                IntegrationTime_Zong = 1;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   0000008E   0x2101             MOVS     R1,#+1
   \   00000090   0x7001             STRB     R1,[R0, #+0]
    377              if(IntegrationTime_Zong >= 3)
   \                     ??CalculateIntegrationTimeZong_2:
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000096   0x7800             LDRB     R0,[R0, #+0]
   \   00000098   0x2803             CMP      R0,#+3
   \   0000009A   0xD303             BCC.N    ??CalculateIntegrationTimeZong_3
    378                IntegrationTime_Zong = 3;
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   000000A0   0x2103             MOVS     R1,#+3
   \   000000A2   0x7001             STRB     R1,[R0, #+0]
    379          }
   \                     ??CalculateIntegrationTimeZong_3:
   \   000000A4   0xBD01             POP      {R0,PC}          ;; return
    380          

   \                                 In section .text, align 2, keep-with-next
    381          uint8 PixelAverage(uint8 len, uint8 *data)
    382          {
   \                     PixelAverage:
   \   00000000   0xB410             PUSH     {R4}
    383            uint8 i;
    384            uint16 sum = 0;
   \   00000002   0x2300             MOVS     R3,#+0
    385            for(i = 0; i<len; i++)
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0xE004             B.N      ??PixelAverage_0
    386            {
    387               sum = sum + *data++;
   \                     ??PixelAverage_1:
   \   00000008   0x780C             LDRB     R4,[R1, #+0]
   \   0000000A   0xFA53 0xF384      UXTAB    R3,R3,R4
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
    388            }
   \   00000010   0x1C52             ADDS     R2,R2,#+1
   \                     ??PixelAverage_0:
   \   00000012   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x4282             CMP      R2,R0
   \   00000018   0xD3F6             BCC.N    ??PixelAverage_1
    389            return ((uint8)(sum/len));
   \   0000001A   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0xFB93 0xF0F0      SDIV     R0,R3,R0
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0xBC10             POP      {R4}
   \   00000026   0x4770             BX       LR               ;; return
    390          }
    391          

   \                                 In section .text, align 2, keep-with-next
    392          int Abs(int a)
    393          {
    394            int i;
    395            i=a;
    396            if(i<0) i=-a;
   \                     Abs:
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD501             BPL.N    ??Abs_0
   \   00000004   0x4240             RSBS     R0,R0,#+0
   \   00000006   0xE7FF             B.N      ??Abs_1
    397            else i=a;
    398            return i;
   \                     ??Abs_0:
   \                     ??Abs_1:
   \   00000008   0x4770             BX       LR               ;; return
    399          }
    400          
    401          //CCD二值化
    402          extern  uint8  IT_ref;

   \                                 In section .bss, align 2
    403          int16  bodong=0;
   \                     bodong:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    404          int16 high_aver_f=0,low_aver_f=0;
   \                     high_aver_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     low_aver_f:
   \   00000000                      DS8 2

   \                                 In section .text, align 2, keep-with-next
    405          void binaryzation_F(unsigned char *point)
    406          {
   \                     binaryzation_F:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    407            uint8 i,j,num_high_f=0,num_low_f=0,max_label=0,min_label=0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0x2600             MOVS     R6,#+0
   \   00000008   0x2000             MOVS     R0,#+0
    408            uint8 tb_fg=0;
   \   0000000A   0x2100             MOVS     R1,#+0
    409            
    410            front_max=Pixel_F[7];
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000010   0x79D2             LDRB     R2,[R2, #+7]
   \   00000012   0x.... 0x....      LDR.W    R3,??DataTable11_18
   \   00000016   0x801A             STRH     R2,[R3, #+0]
    411            front_min=Pixel_F[7];
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   0000001C   0x79D2             LDRB     R2,[R2, #+7]
   \   0000001E   0x.... 0x....      LDR.W    R3,??DataTable11_19
   \   00000022   0x801A             STRH     R2,[R3, #+0]
    412          
    413            for(i=7;i<=120;i++)
   \   00000024   0x2707             MOVS     R7,#+7
   \   00000026   0xE013             B.N      ??binaryzation_F_0
    414            {
    415              if(front_max<Pixel_F[i])
    416              {
    417                max_label=i;
    418                front_max=Pixel_F[i];
    419              }
    420              else if(front_min>Pixel_F[i])
   \                     ??binaryzation_F_1:
   \   00000028   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000002E   0x5C38             LDRB     R0,[R7, R0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable11_19
   \   00000034   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000038   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xDA07             BGE.N    ??binaryzation_F_2
    421              {
    422                min_label=i;
   \   0000003E   0x0038             MOVS     R0,R7
    423                front_min=Pixel_F[i];
   \   00000040   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000046   0x5C79             LDRB     R1,[R7, R1]
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable11_19
   \   0000004C   0x8011             STRH     R1,[R2, #+0]
    424              }
   \                     ??binaryzation_F_2:
   \   0000004E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_0:
   \   00000050   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000052   0x2F79             CMP      R7,#+121
   \   00000054   0xD213             BCS.N    ??binaryzation_F_3
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000005A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000005E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000064   0x5C79             LDRB     R1,[R7, R1]
   \   00000066   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000068   0x4288             CMP      R0,R1
   \   0000006A   0xDADD             BGE.N    ??binaryzation_F_1
   \   0000006C   0x003E             MOVS     R6,R7
   \   0000006E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000074   0x5C38             LDRB     R0,[R7, R0]
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable11_18
   \   0000007A   0x8008             STRH     R0,[R1, #+0]
   \   0000007C   0xE7E7             B.N      ??binaryzation_F_2
    425            }
    426            if((front_max-Pixel_F[max_label-2]>10)&&(front_max-Pixel_F[max_label+2]>10)&&(Abs(Pixel_F[max_label-2]-Pixel_F[max_label+2])<10))
   \                     ??binaryzation_F_3:
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   00000082   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000086   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000008C   0x1871             ADDS     R1,R6,R1
   \   0000008E   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000092   0x1A40             SUBS     R0,R0,R1
   \   00000094   0x280B             CMP      R0,#+11
   \   00000096   0xDB36             BLT.N    ??binaryzation_F_4
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000009C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000A6   0x1871             ADDS     R1,R6,R1
   \   000000A8   0x7889             LDRB     R1,[R1, #+2]
   \   000000AA   0x1A40             SUBS     R0,R0,R1
   \   000000AC   0x280B             CMP      R0,#+11
   \   000000AE   0xDB2A             BLT.N    ??binaryzation_F_4
   \   000000B0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000B6   0x1830             ADDS     R0,R6,R0
   \   000000B8   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   000000BC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000C2   0x1871             ADDS     R1,R6,R1
   \   000000C4   0x7889             LDRB     R1,[R1, #+2]
   \   000000C6   0x1A40             SUBS     R0,R0,R1
   \   000000C8   0x.... 0x....      BL       Abs
   \   000000CC   0x280A             CMP      R0,#+10
   \   000000CE   0xDA1A             BGE.N    ??binaryzation_F_4
    427            {
    428              Pixel_F[max_label]=(Pixel_F[max_label-2]+Pixel_F[max_label+2])/2;
   \   000000D0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000D6   0x1830             ADDS     R0,R6,R0
   \   000000D8   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   000000DC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000E2   0x1871             ADDS     R1,R6,R1
   \   000000E4   0x7889             LDRB     R1,[R1, #+2]
   \   000000E6   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   000000EA   0x2102             MOVS     R1,#+2
   \   000000EC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000F0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000F6   0x5470             STRB     R0,[R6, R1]
    429              front_max=Pixel_F[max_label];
   \   000000F8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000FE   0x5C30             LDRB     R0,[R6, R0]
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable11_18
   \   00000104   0x8008             STRH     R0,[R1, #+0]
    430            }
    431            Aver_F=(front_max+front_min)/2;
   \                     ??binaryzation_F_4:
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000010A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable11_19
   \   00000112   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000116   0x1808             ADDS     R0,R1,R0
   \   00000118   0x2102             MOVS     R1,#+2
   \   0000011A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   00000122   0x8008             STRH     R0,[R1, #+0]
    432            /*
    433            //确定是否存在跳变沿
    434            tb_fg=0;
    435            for(i=7;i<120;i++)
    436            {
    437              if(Abs(Pixel_F[i]-Pixel_F[i+1])>(front_max-front_min)/5)
    438              {
    439                tb_fg=1;
    440                break;
    441              }
    442            }
    443            */
    444            for(i=7;i<=120;i++)
   \   00000124   0x2707             MOVS     R7,#+7
   \   00000126   0xE00C             B.N      ??binaryzation_F_5
    445            {
    446              if(Pixel_F[i]>=Aver_F) 
    447              {
    448                high_aver_f+=Pixel_F[i];
    449                num_high_f++;
    450              }
    451              else 
    452              {
    453                low_aver_f+=Pixel_F[i];
   \                     ??binaryzation_F_6:
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   0000012C   0x8800             LDRH     R0,[R0, #+0]
   \   0000012E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000134   0x5C79             LDRB     R1,[R7, R1]
   \   00000136   0x1840             ADDS     R0,R0,R1
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable11_21
   \   0000013C   0x8008             STRH     R0,[R1, #+0]
    454                num_low_f++;
   \   0000013E   0x1C6D             ADDS     R5,R5,#+1
    455              }
   \                     ??binaryzation_F_7:
   \   00000140   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_5:
   \   00000142   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000144   0x2F79             CMP      R7,#+121
   \   00000146   0xD217             BCS.N    ??binaryzation_F_8
   \   00000148   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000014E   0x5C38             LDRB     R0,[R7, R0]
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   00000154   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000158   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000015A   0x4288             CMP      R0,R1
   \   0000015C   0xDBE4             BLT.N    ??binaryzation_F_6
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable11_22
   \   00000162   0x8800             LDRH     R0,[R0, #+0]
   \   00000164   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000016A   0x5C79             LDRB     R1,[R7, R1]
   \   0000016C   0x1840             ADDS     R0,R0,R1
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable11_22
   \   00000172   0x8008             STRH     R0,[R1, #+0]
   \   00000174   0x1C64             ADDS     R4,R4,#+1
   \   00000176   0xE7E3             B.N      ??binaryzation_F_7
    456            }
    457            high_aver_f=high_aver_f/num_high_f;
   \                     ??binaryzation_F_8:
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable11_22
   \   0000017C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000180   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000182   0xFB90 0xF0F4      SDIV     R0,R0,R4
   \   00000186   0x.... 0x....      LDR.W    R1,??DataTable11_22
   \   0000018A   0x8008             STRH     R0,[R1, #+0]
    458            low_aver_f=low_aver_f/num_low_f;
   \   0000018C   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   00000190   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000194   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000196   0xFB90 0xF0F5      SDIV     R0,R0,R5
   \   0000019A   0x.... 0x....      LDR.W    R1,??DataTable11_21
   \   0000019E   0x8008             STRH     R0,[R1, #+0]
    459            Aver_F=(high_aver_f+low_aver_f)/2;
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable11_22
   \   000001A4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001A8   0x.... 0x....      LDR.W    R1,??DataTable11_21
   \   000001AC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001B0   0x1808             ADDS     R0,R1,R0
   \   000001B2   0x2102             MOVS     R1,#+2
   \   000001B4   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001B8   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   000001BC   0x8008             STRH     R0,[R1, #+0]
    460            //LCD_P8x16_number(10,4,high_aver_f);
    461            //LCD_P8x16_number(70,4,low_aver_f);
    462          
    463            //tb_fg=0;
    464            for(i=7;i<120;i++)
   \   000001BE   0x2707             MOVS     R7,#+7
   \   000001C0   0xE012             B.N      ??binaryzation_F_9
    465            {
    466              bodong+=Abs(Pixel_F[i]-Aver_F);
   \                     ??binaryzation_F_10:
   \   000001C2   0x.... 0x....      LDR.W    R0,??DataTable11_23
   \   000001C6   0x8804             LDRH     R4,[R0, #+0]
   \   000001C8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000001CE   0x5C38             LDRB     R0,[R7, R0]
   \   000001D0   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   000001D4   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001D8   0x1A40             SUBS     R0,R0,R1
   \   000001DA   0x.... 0x....      BL       Abs
   \   000001DE   0x1900             ADDS     R0,R0,R4
   \   000001E0   0x.... 0x....      LDR.W    R1,??DataTable11_23
   \   000001E4   0x8008             STRH     R0,[R1, #+0]
    467            }
   \   000001E6   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_9:
   \   000001E8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001EA   0x2F78             CMP      R7,#+120
   \   000001EC   0xD3E9             BCC.N    ??binaryzation_F_10
    468            bodong=bodong/114;
   \   000001EE   0x.... 0x....      LDR.W    R0,??DataTable11_23
   \   000001F2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001F6   0x2172             MOVS     R1,#+114
   \   000001F8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001FC   0x.... 0x....      LDR.W    R1,??DataTable11_23
   \   00000200   0x8008             STRH     R0,[R1, #+0]
    469            //赛道
    470            if(bodong>15)
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable11_23
   \   00000206   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000020A   0x2810             CMP      R0,#+16
   \   0000020C   0xDB4D             BLT.N    ??binaryzation_F_11
    471            {
    472              //执行二值化
    473              for(i=7;i<=120;i++)
   \   0000020E   0x2707             MOVS     R7,#+7
   \   00000210   0xE005             B.N      ??binaryzation_F_12
    474              {
    475                if(Pixel_F[i]>=Aver_F) Pixel_F[i]=1;
    476                else Pixel_F[i]=0;
   \                     ??binaryzation_F_13:
   \   00000212   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000218   0x2100             MOVS     R1,#+0
   \   0000021A   0x5439             STRB     R1,[R7, R0]
   \                     ??binaryzation_F_14:
   \   0000021C   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_12:
   \   0000021E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000220   0x2F79             CMP      R7,#+121
   \   00000222   0xD210             BCS.N    ??binaryzation_F_15
   \   00000224   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000022A   0x5C38             LDRB     R0,[R7, R0]
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   00000230   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000234   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000236   0x4288             CMP      R0,R1
   \   00000238   0xDBEB             BLT.N    ??binaryzation_F_13
   \   0000023A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000240   0x2101             MOVS     R1,#+1
   \   00000242   0x5439             STRB     R1,[R7, R0]
   \   00000244   0xE7EA             B.N      ??binaryzation_F_14
    477              }
    478              
    479              if(Pixel_F[7]==1)
   \                     ??binaryzation_F_15:
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000024A   0x79C0             LDRB     R0,[R0, #+7]
   \   0000024C   0x2801             CMP      R0,#+1
   \   0000024E   0xD109             BNE.N    ??binaryzation_F_16
    480                for(i=0;i<=7;i++) Pixel_F[i]=1;
   \   00000250   0x2700             MOVS     R7,#+0
   \                     ??binaryzation_F_17:
   \   00000252   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000254   0x2F08             CMP      R7,#+8
   \   00000256   0xD20F             BCS.N    ??binaryzation_F_18
   \   00000258   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000025A   0x....             LDR.N    R0,??DataTable11_7
   \   0000025C   0x2101             MOVS     R1,#+1
   \   0000025E   0x5439             STRB     R1,[R7, R0]
   \   00000260   0x1C7F             ADDS     R7,R7,#+1
   \   00000262   0xE7F6             B.N      ??binaryzation_F_17
    481              else
    482                for(i=0;i<=7;i++) Pixel_F[i]=0;
   \                     ??binaryzation_F_16:
   \   00000264   0x2700             MOVS     R7,#+0
   \   00000266   0xE004             B.N      ??binaryzation_F_19
   \                     ??binaryzation_F_20:
   \   00000268   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000026A   0x....             LDR.N    R0,??DataTable11_7
   \   0000026C   0x2100             MOVS     R1,#+0
   \   0000026E   0x5439             STRB     R1,[R7, R0]
   \   00000270   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_19:
   \   00000272   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000274   0x2F08             CMP      R7,#+8
   \   00000276   0xD3F7             BCC.N    ??binaryzation_F_20
    483              
    484              if(Pixel_F[120]==1)
   \                     ??binaryzation_F_18:
   \   00000278   0x....             LDR.N    R0,??DataTable11_7
   \   0000027A   0xF890 0x0078      LDRB     R0,[R0, #+120]
   \   0000027E   0x2801             CMP      R0,#+1
   \   00000280   0xD109             BNE.N    ??binaryzation_F_21
    485                for(i=120;i<=127;i++) Pixel_F[i]=1;
   \   00000282   0x2778             MOVS     R7,#+120
   \                     ??binaryzation_F_22:
   \   00000284   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000286   0x2F80             CMP      R7,#+128
   \   00000288   0xD22E             BCS.N    ??binaryzation_F_23
   \   0000028A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000028C   0x....             LDR.N    R0,??DataTable11_7
   \   0000028E   0x2101             MOVS     R1,#+1
   \   00000290   0x5439             STRB     R1,[R7, R0]
   \   00000292   0x1C7F             ADDS     R7,R7,#+1
   \   00000294   0xE7F6             B.N      ??binaryzation_F_22
    486              else
    487                for(i=120;i<=127;i++) Pixel_F[i]=0;
   \                     ??binaryzation_F_21:
   \   00000296   0x2778             MOVS     R7,#+120
   \                     ??binaryzation_F_24:
   \   00000298   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000029A   0x2F80             CMP      R7,#+128
   \   0000029C   0xD224             BCS.N    ??binaryzation_F_23
   \   0000029E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002A0   0x....             LDR.N    R0,??DataTable11_7
   \   000002A2   0x2100             MOVS     R1,#+0
   \   000002A4   0x5439             STRB     R1,[R7, R0]
   \   000002A6   0x1C7F             ADDS     R7,R7,#+1
   \   000002A8   0xE7F6             B.N      ??binaryzation_F_24
    488              
    489            }
    490            //盲区
    491            else if(bodong<=15)
   \                     ??binaryzation_F_11:
   \   000002AA   0x....             LDR.N    R0,??DataTable11_23
   \   000002AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002B0   0x2810             CMP      R0,#+16
   \   000002B2   0xDA19             BGE.N    ??binaryzation_F_23
    492            {
    493               if(IntegrationTime_Front>IT_ref)
   \   000002B4   0x....             LDR.N    R0,??DataTable11_24
   \   000002B6   0x7800             LDRB     R0,[R0, #+0]
   \   000002B8   0x....             LDR.N    R1,??DataTable11_13
   \   000002BA   0x7809             LDRB     R1,[R1, #+0]
   \   000002BC   0x4288             CMP      R0,R1
   \   000002BE   0xD209             BCS.N    ??binaryzation_F_25
    494                 for(i=0;i<=127;i++) Pixel_F[i]=0;
   \   000002C0   0x2700             MOVS     R7,#+0
   \                     ??binaryzation_F_26:
   \   000002C2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002C4   0x2F80             CMP      R7,#+128
   \   000002C6   0xD20F             BCS.N    ??binaryzation_F_23
   \   000002C8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002CA   0x....             LDR.N    R0,??DataTable11_7
   \   000002CC   0x2100             MOVS     R1,#+0
   \   000002CE   0x5439             STRB     R1,[R7, R0]
   \   000002D0   0x1C7F             ADDS     R7,R7,#+1
   \   000002D2   0xE7F6             B.N      ??binaryzation_F_26
    495               else
    496                 for(i=0;i<=127;i++) Pixel_F[i]=1;
   \                     ??binaryzation_F_25:
   \   000002D4   0x2700             MOVS     R7,#+0
   \   000002D6   0xE004             B.N      ??binaryzation_F_27
   \                     ??binaryzation_F_28:
   \   000002D8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002DA   0x....             LDR.N    R0,??DataTable11_7
   \   000002DC   0x2101             MOVS     R1,#+1
   \   000002DE   0x5439             STRB     R1,[R7, R0]
   \   000002E0   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_27:
   \   000002E2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002E4   0x2F80             CMP      R7,#+128
   \   000002E6   0xD3F7             BCC.N    ??binaryzation_F_28
    497            }
    498            /*
    499            if(tb_fg==1)
    500            {
    501              
    502            }
    503            */
    504            //滤波
    505            for(j=3;j<125;j++)
   \                     ??binaryzation_F_23:
   \   000002E8   0x2003             MOVS     R0,#+3
   \   000002EA   0xE02C             B.N      ??binaryzation_F_29
    506            {
    507              if( Pixel_F[j]==0)
   \                     ??binaryzation_F_30:
   \   000002EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002EE   0x....             LDR.N    R1,??DataTable11_7
   \   000002F0   0x5C41             LDRB     R1,[R0, R1]
   \   000002F2   0x2900             CMP      R1,#+0
   \   000002F4   0xD110             BNE.N    ??binaryzation_F_31
    508              {
    509                if((Pixel_F[j-1]==1)&&(Pixel_F[j+1]==1))
   \   000002F6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002F8   0x....             LDR.N    R1,??DataTable11_7
   \   000002FA   0x1841             ADDS     R1,R0,R1
   \   000002FC   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000300   0x2901             CMP      R1,#+1
   \   00000302   0xD109             BNE.N    ??binaryzation_F_31
   \   00000304   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000306   0x....             LDR.N    R1,??DataTable11_7
   \   00000308   0x1841             ADDS     R1,R0,R1
   \   0000030A   0x7849             LDRB     R1,[R1, #+1]
   \   0000030C   0x2901             CMP      R1,#+1
   \   0000030E   0xD103             BNE.N    ??binaryzation_F_31
    510                  Pixel_F[j]=1;
   \   00000310   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000312   0x....             LDR.N    R1,??DataTable11_7
   \   00000314   0x2201             MOVS     R2,#+1
   \   00000316   0x5442             STRB     R2,[R0, R1]
    511              }
    512              if(Pixel_F[j]==1)
   \                     ??binaryzation_F_31:
   \   00000318   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000031A   0x....             LDR.N    R1,??DataTable11_7
   \   0000031C   0x5C41             LDRB     R1,[R0, R1]
   \   0000031E   0x2901             CMP      R1,#+1
   \   00000320   0xD110             BNE.N    ??binaryzation_F_32
    513              {
    514                if((Pixel_F[j-1]==0)&&(Pixel_F[j+1]==0))
   \   00000322   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000324   0x....             LDR.N    R1,??DataTable11_7
   \   00000326   0x1841             ADDS     R1,R0,R1
   \   00000328   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000032C   0x2900             CMP      R1,#+0
   \   0000032E   0xD109             BNE.N    ??binaryzation_F_32
   \   00000330   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000332   0x....             LDR.N    R1,??DataTable11_7
   \   00000334   0x1841             ADDS     R1,R0,R1
   \   00000336   0x7849             LDRB     R1,[R1, #+1]
   \   00000338   0x2900             CMP      R1,#+0
   \   0000033A   0xD103             BNE.N    ??binaryzation_F_32
    515                  Pixel_F[j]=0;
   \   0000033C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000033E   0x....             LDR.N    R1,??DataTable11_7
   \   00000340   0x2200             MOVS     R2,#+0
   \   00000342   0x5442             STRB     R2,[R0, R1]
    516              }
    517            }
   \                     ??binaryzation_F_32:
   \   00000344   0x1C40             ADDS     R0,R0,#+1
   \                     ??binaryzation_F_29:
   \   00000346   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000348   0x287D             CMP      R0,#+125
   \   0000034A   0xD3CF             BCC.N    ??binaryzation_F_30
    518          }
   \   0000034C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    519          

   \                                 In section .bss, align 2
    520          int16 high_aver_z=0,low_aver_z=0;
   \                     high_aver_z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     low_aver_z:
   \   00000000                      DS8 2

   \                                 In section .text, align 2, keep-with-next
    521          void binaryzation_Z(unsigned char *point)
    522          {
   \                     binaryzation_Z:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    523            uint8 i,j,num_high_z=0,num_low_z=0,max_label=0,min_label=0;
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0x2600             MOVS     R6,#+0
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0x2000             MOVS     R0,#+0
    524            zong_max=Pixel_Z[1];
   \   0000000C   0x....             LDR.N    R1,??DataTable11_14
   \   0000000E   0x7849             LDRB     R1,[R1, #+1]
   \   00000010   0x....             LDR.N    R2,??DataTable11_25
   \   00000012   0x8011             STRH     R1,[R2, #+0]
    525            zong_min=Pixel_Z[1];
   \   00000014   0x....             LDR.N    R1,??DataTable11_14
   \   00000016   0x7849             LDRB     R1,[R1, #+1]
   \   00000018   0x....             LDR.N    R2,??DataTable11_26
   \   0000001A   0x8011             STRH     R1,[R2, #+0]
    526          
    527            for(i=1;i<127;i++)
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0xE00F             B.N      ??binaryzation_Z_0
    528            {
    529              if(zong_max<Pixel_Z[i])
    530              {
    531                max_label=i;
    532                zong_max=Pixel_Z[i];
    533              }
    534              else if(zong_min>Pixel_Z[i])
   \                     ??binaryzation_Z_1:
   \   00000020   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000022   0x....             LDR.N    R0,??DataTable11_14
   \   00000024   0x5C08             LDRB     R0,[R1, R0]
   \   00000026   0x....             LDR.N    R2,??DataTable11_26
   \   00000028   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000002C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002E   0x4290             CMP      R0,R2
   \   00000030   0xDA05             BGE.N    ??binaryzation_Z_2
    535              {
    536                min_label=i;
   \   00000032   0x0008             MOVS     R0,R1
    537                zong_min=Pixel_Z[i];
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x....             LDR.N    R2,??DataTable11_14
   \   00000038   0x5C8A             LDRB     R2,[R1, R2]
   \   0000003A   0x....             LDR.N    R3,??DataTable11_26
   \   0000003C   0x801A             STRH     R2,[R3, #+0]
    538              }
   \                     ??binaryzation_Z_2:
   \   0000003E   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_Z_0:
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0x297F             CMP      R1,#+127
   \   00000044   0xD20F             BCS.N    ??binaryzation_Z_3
   \   00000046   0x....             LDR.N    R0,??DataTable11_25
   \   00000048   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000004C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004E   0x....             LDR.N    R2,??DataTable11_14
   \   00000050   0x5C8A             LDRB     R2,[R1, R2]
   \   00000052   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000054   0x4290             CMP      R0,R2
   \   00000056   0xDAE3             BGE.N    ??binaryzation_Z_1
   \   00000058   0x000F             MOVS     R7,R1
   \   0000005A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005C   0x....             LDR.N    R0,??DataTable11_14
   \   0000005E   0x5C08             LDRB     R0,[R1, R0]
   \   00000060   0x....             LDR.N    R2,??DataTable11_25
   \   00000062   0x8010             STRH     R0,[R2, #+0]
   \   00000064   0xE7EB             B.N      ??binaryzation_Z_2
    539            }
    540            if((zong_max-Pixel_Z[max_label-2]>10)&&(zong_max-Pixel_Z[max_label+2]>10)&&(Abs(Pixel_Z[max_label-2]-Pixel_Z[max_label+2])<10))
   \                     ??binaryzation_Z_3:
   \   00000066   0x....             LDR.N    R0,??DataTable11_25
   \   00000068   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000006C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000006E   0x....             LDR.N    R1,??DataTable11_14
   \   00000070   0x1879             ADDS     R1,R7,R1
   \   00000072   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000076   0x1A40             SUBS     R0,R0,R1
   \   00000078   0x280B             CMP      R0,#+11
   \   0000007A   0xDB29             BLT.N    ??binaryzation_Z_4
   \   0000007C   0x....             LDR.N    R0,??DataTable11_25
   \   0000007E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000082   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000084   0x....             LDR.N    R1,??DataTable11_14
   \   00000086   0x1879             ADDS     R1,R7,R1
   \   00000088   0x7889             LDRB     R1,[R1, #+2]
   \   0000008A   0x1A40             SUBS     R0,R0,R1
   \   0000008C   0x280B             CMP      R0,#+11
   \   0000008E   0xDB1F             BLT.N    ??binaryzation_Z_4
   \   00000090   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000092   0x....             LDR.N    R0,??DataTable11_14
   \   00000094   0x1838             ADDS     R0,R7,R0
   \   00000096   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   0000009A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000009C   0x....             LDR.N    R1,??DataTable11_14
   \   0000009E   0x1879             ADDS     R1,R7,R1
   \   000000A0   0x7889             LDRB     R1,[R1, #+2]
   \   000000A2   0x1A40             SUBS     R0,R0,R1
   \   000000A4   0x.... 0x....      BL       Abs
   \   000000A8   0x280A             CMP      R0,#+10
   \   000000AA   0xDA11             BGE.N    ??binaryzation_Z_4
    541            {
    542              Pixel_Z[max_label]=Pixel_Z[max_label-2]+Pixel_Z[max_label+2];
   \   000000AC   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000AE   0x....             LDR.N    R0,??DataTable11_14
   \   000000B0   0x1838             ADDS     R0,R7,R0
   \   000000B2   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   000000B6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000B8   0x....             LDR.N    R1,??DataTable11_14
   \   000000BA   0x1879             ADDS     R1,R7,R1
   \   000000BC   0x7889             LDRB     R1,[R1, #+2]
   \   000000BE   0x1808             ADDS     R0,R1,R0
   \   000000C0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C2   0x....             LDR.N    R1,??DataTable11_14
   \   000000C4   0x5478             STRB     R0,[R7, R1]
    543              zong_max=Pixel_Z[max_label];
   \   000000C6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C8   0x....             LDR.N    R0,??DataTable11_14
   \   000000CA   0x5C38             LDRB     R0,[R7, R0]
   \   000000CC   0x....             LDR.N    R1,??DataTable11_25
   \   000000CE   0x8008             STRH     R0,[R1, #+0]
    544            }
    545            Aver_Z=(zong_max+zong_min)/2;
   \                     ??binaryzation_Z_4:
   \   000000D0   0x....             LDR.N    R0,??DataTable11_25
   \   000000D2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000D6   0x....             LDR.N    R1,??DataTable11_26
   \   000000D8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000DC   0x1808             ADDS     R0,R1,R0
   \   000000DE   0x2102             MOVS     R1,#+2
   \   000000E0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000E4   0x....             LDR.N    R1,??DataTable11_27
   \   000000E6   0x8008             STRH     R0,[R1, #+0]
    546            for(i=0;i<127;i++)
   \   000000E8   0x2100             MOVS     R1,#+0
   \   000000EA   0xE009             B.N      ??binaryzation_Z_5
    547            {
    548              if(Pixel_Z[i]>=Aver_Z) 
    549              {
    550                high_aver_z+=Pixel_Z[i];
    551                num_high_z++;
    552              }
    553              else 
    554              {
    555                low_aver_z+=Pixel_Z[i];
   \                     ??binaryzation_Z_6:
   \   000000EC   0x....             LDR.N    R0,??DataTable11_28
   \   000000EE   0x8800             LDRH     R0,[R0, #+0]
   \   000000F0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F2   0x....             LDR.N    R2,??DataTable11_14
   \   000000F4   0x5C8A             LDRB     R2,[R1, R2]
   \   000000F6   0x1880             ADDS     R0,R0,R2
   \   000000F8   0x....             LDR.N    R2,??DataTable11_28
   \   000000FA   0x8010             STRH     R0,[R2, #+0]
    556                num_low_z++;
   \   000000FC   0x1C76             ADDS     R6,R6,#+1
    557              }
   \                     ??binaryzation_Z_7:
   \   000000FE   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_Z_5:
   \   00000100   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000102   0x297F             CMP      R1,#+127
   \   00000104   0xD212             BCS.N    ??binaryzation_Z_8
   \   00000106   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000108   0x....             LDR.N    R0,??DataTable11_14
   \   0000010A   0x5C08             LDRB     R0,[R1, R0]
   \   0000010C   0x....             LDR.N    R2,??DataTable11_27
   \   0000010E   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000112   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000114   0x4290             CMP      R0,R2
   \   00000116   0xDBE9             BLT.N    ??binaryzation_Z_6
   \   00000118   0x....             LDR.N    R0,??DataTable11_29
   \   0000011A   0x8800             LDRH     R0,[R0, #+0]
   \   0000011C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011E   0x....             LDR.N    R2,??DataTable11_14
   \   00000120   0x5C8A             LDRB     R2,[R1, R2]
   \   00000122   0x1880             ADDS     R0,R0,R2
   \   00000124   0x....             LDR.N    R2,??DataTable11_29
   \   00000126   0x8010             STRH     R0,[R2, #+0]
   \   00000128   0x1C6D             ADDS     R5,R5,#+1
   \   0000012A   0xE7E8             B.N      ??binaryzation_Z_7
    558            }
    559            high_aver_z=high_aver_z/num_high_z;
   \                     ??binaryzation_Z_8:
   \   0000012C   0x....             LDR.N    R0,??DataTable11_29
   \   0000012E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000132   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000134   0xFB90 0xF0F5      SDIV     R0,R0,R5
   \   00000138   0x....             LDR.N    R1,??DataTable11_29
   \   0000013A   0x8008             STRH     R0,[R1, #+0]
    560            low_aver_z=low_aver_z/num_low_z;
   \   0000013C   0x....             LDR.N    R0,??DataTable11_28
   \   0000013E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000142   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000144   0xFB90 0xF0F6      SDIV     R0,R0,R6
   \   00000148   0x....             LDR.N    R1,??DataTable11_28
   \   0000014A   0x8008             STRH     R0,[R1, #+0]
    561            Aver_Z=(high_aver_z+low_aver_z)/2;
   \   0000014C   0x....             LDR.N    R0,??DataTable11_29
   \   0000014E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000152   0x....             LDR.N    R1,??DataTable11_28
   \   00000154   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000158   0x1808             ADDS     R0,R1,R0
   \   0000015A   0x2102             MOVS     R1,#+2
   \   0000015C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000160   0x....             LDR.N    R1,??DataTable11_27
   \   00000162   0x8008             STRH     R0,[R1, #+0]
    562            //LCD_P8x16_number(10,4,high_aver_z);
    563            //LCD_P8x16_number(70,4,low_aver_z);
    564          
    565            for(i=0;i<128;i++)
   \   00000164   0x2100             MOVS     R1,#+0
   \   00000166   0xE003             B.N      ??binaryzation_Z_9
    566            {
    567              if(*point>=Aver_Z)//PixelAverageValue_Front*0.6
    568                *point=1;
    569              else
    570                *point=0;
   \                     ??binaryzation_Z_10:
   \   00000168   0x2000             MOVS     R0,#+0
   \   0000016A   0x7020             STRB     R0,[R4, #+0]
    571              point++;
   \                     ??binaryzation_Z_11:
   \   0000016C   0x1C64             ADDS     R4,R4,#+1
   \   0000016E   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_Z_9:
   \   00000170   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000172   0x2980             CMP      R1,#+128
   \   00000174   0xD209             BCS.N    ??binaryzation_Z_12
   \   00000176   0x7820             LDRB     R0,[R4, #+0]
   \   00000178   0x....             LDR.N    R2,??DataTable11_27
   \   0000017A   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000017E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000180   0x4290             CMP      R0,R2
   \   00000182   0xDBF1             BLT.N    ??binaryzation_Z_10
   \   00000184   0x2001             MOVS     R0,#+1
   \   00000186   0x7020             STRB     R0,[R4, #+0]
   \   00000188   0xE7F0             B.N      ??binaryzation_Z_11
    572            }
    573            //滤波
    574            for(j=3;j<125;j++)
   \                     ??binaryzation_Z_12:
   \   0000018A   0x2003             MOVS     R0,#+3
   \   0000018C   0xE02C             B.N      ??binaryzation_Z_13
    575            {
    576              if( Pixel_Z[j]==0)
   \                     ??binaryzation_Z_14:
   \   0000018E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000190   0x....             LDR.N    R1,??DataTable11_14
   \   00000192   0x5C41             LDRB     R1,[R0, R1]
   \   00000194   0x2900             CMP      R1,#+0
   \   00000196   0xD110             BNE.N    ??binaryzation_Z_15
    577              {
    578                if((Pixel_Z[j-1]==1)&&(Pixel_Z[j+1]==1))
   \   00000198   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019A   0x....             LDR.N    R1,??DataTable11_14
   \   0000019C   0x1841             ADDS     R1,R0,R1
   \   0000019E   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000001A2   0x2901             CMP      R1,#+1
   \   000001A4   0xD109             BNE.N    ??binaryzation_Z_15
   \   000001A6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001A8   0x....             LDR.N    R1,??DataTable11_14
   \   000001AA   0x1841             ADDS     R1,R0,R1
   \   000001AC   0x7849             LDRB     R1,[R1, #+1]
   \   000001AE   0x2901             CMP      R1,#+1
   \   000001B0   0xD103             BNE.N    ??binaryzation_Z_15
    579                  Pixel_Z[j]=1;
   \   000001B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B4   0x....             LDR.N    R1,??DataTable11_14
   \   000001B6   0x2201             MOVS     R2,#+1
   \   000001B8   0x5442             STRB     R2,[R0, R1]
    580              }
    581              if(Pixel_Z[j]==1)
   \                     ??binaryzation_Z_15:
   \   000001BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BC   0x....             LDR.N    R1,??DataTable11_14
   \   000001BE   0x5C41             LDRB     R1,[R0, R1]
   \   000001C0   0x2901             CMP      R1,#+1
   \   000001C2   0xD110             BNE.N    ??binaryzation_Z_16
    582              {
    583                if((Pixel_Z[j-1]==0)&&(Pixel_Z[j+1]==0))
   \   000001C4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001C6   0x....             LDR.N    R1,??DataTable11_14
   \   000001C8   0x1841             ADDS     R1,R0,R1
   \   000001CA   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000001CE   0x2900             CMP      R1,#+0
   \   000001D0   0xD109             BNE.N    ??binaryzation_Z_16
   \   000001D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001D4   0x....             LDR.N    R1,??DataTable11_14
   \   000001D6   0x1841             ADDS     R1,R0,R1
   \   000001D8   0x7849             LDRB     R1,[R1, #+1]
   \   000001DA   0x2900             CMP      R1,#+0
   \   000001DC   0xD103             BNE.N    ??binaryzation_Z_16
    584                  Pixel_Z[j]=0;
   \   000001DE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001E0   0x....             LDR.N    R1,??DataTable11_14
   \   000001E2   0x2200             MOVS     R2,#+0
   \   000001E4   0x5442             STRB     R2,[R0, R1]
    585              }
    586            }
   \                     ??binaryzation_Z_16:
   \   000001E6   0x1C40             ADDS     R0,R0,#+1
   \                     ??binaryzation_Z_13:
   \   000001E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EA   0x287D             CMP      R0,#+125
   \   000001EC   0xD3CF             BCC.N    ??binaryzation_Z_14
    587            
    588            //for(j=0;j<128;j++) Pixel_Z[j]=Pixel_Z[j]*100;
    589          }
   \   000001EE   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    590          
    591          //-----------------------------------------------------------------------------------------------------------------------

   \                                 In section .bss, align 2
    592          int16   rensha_count=0;
   \                     rensha_count:
   \   00000000                      DS8 2
    593          extern float k_out;

   \                                 In section .bss, align 2
    594          int16  lost_all_count=0;
   \                     lost_all_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    595          uint8  lost_all_flag=0,lost_left_flag=0,lost_right_flag=0;
   \                     lost_all_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     lost_left_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     lost_right_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    596          uint8  Rdiaotou_flag=0;
   \                     Rdiaotou_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    597          int16  Rdiaotou_count=0,Rqing_count=0;
   \                     Rdiaotou_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rqing_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    598          uint8  Ldiaotou_flag=0;
   \                     Ldiaotou_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    599          int16  Ldiaotou_count=0,Lqing_count=0;
   \                     Ldiaotou_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lqing_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    600          uint8  banma_flag=0;
   \                     banma_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    601          uint8  LHOLDdiao_flag=0,RHOLDdiao_flag=0;
   \                     LHOLDdiao_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     RHOLDdiao_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    602          uint8  Lendiao=0,Rendiao=0;
   \                     Lendiao:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Rendiao:
   \   00000000                      DS8 1
    603          

   \                                 In section .bss, align 1
    604          uint8  rzguo_flag=0;
   \                     rzguo_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    605          uint8  rzguo_count=0;
   \                     rzguo_count:
   \   00000000                      DS8 1
    606          

   \                                 In section .bss, align 2
    607          int16   ZZ_count=0;
   \                     ZZ_count:
   \   00000000                      DS8 2
    608          

   \                                 In section .bss, align 4
    609          int16 route_f[100]={0};
   \                     route_f:
   \   00000000                      DS8 200

   \                                 In section .bss, align 4
    610          int16 chafang_f[100]={0};
   \                     chafang_f:
   \   00000000                      DS8 200

   \                                 In section .bss, align 2
    611          int16 route_ave_f=0;
   \                     route_ave_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    612          int16 fangcha_f=0,fangcha_qian_f=0,fangcha_hou_f=0;
   \                     fangcha_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     fangcha_qian_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     fangcha_hou_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    613          int16 Rpre1=0,Rpre2=0,Rpre3=0,Rpre4=0,Lpre1=0,Lpre2=0,Lpre3=0,Lpre4=0;
   \                     Rpre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rpre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rpre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rpre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lpre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lpre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lpre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lpre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    614          int16 R_aver=0,L_aver=0;
   \                     R_aver:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     L_aver:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    615          int16 L_fch=0,R_fch=0;
   \                     L_fch:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     R_fch:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    616          int16 qpx_count=0;
   \                     qpx_count:
   \   00000000                      DS8 2

   \                                 In section .data, align 1
    617          uint8 rzop=1;
   \                     rzop:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 2
    618          int16 front_l_fg_last=0,front_r_fg_last=0;
   \                     front_l_fg_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_fg_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    619          int16 front_l_flag=0,front_r_flag=0;
   \                     front_l_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    620          int16 real_l=0,real_r=0;
   \                     real_l:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     real_r:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    621          uint8 mq=0,mq_last=0;
   \                     mq:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     mq_last:
   \   00000000                      DS8 1
    622          

   \                                 In section .bss, align 2
    623          int16 LR_count=0;
   \                     LR_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    624          int16 Lr_count=0;
   \                     Lr_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    625          int16 lR_count=0;
   \                     lR_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    626          int16 lr_count=0;
   \                     lr_count:
   \   00000000                      DS8 2
    627          

   \                                 In section .data, align 2
    628          int16 jiao_L=20,jiao_R=23;
   \                     jiao_L:
   \   00000000   0x0014             DC16 20

   \                                 In section .data, align 2
   \                     jiao_R:
   \   00000000   0x0017             DC16 23
    629          
    630          

   \                                 In section .text, align 2, keep-with-next
    631          void get_front()
    632          {
   \                     get_front:
   \   00000000   0xB510             PUSH     {R4,LR}
    633              int16 i,j;
    634              uint8 hold_flag=0;
   \   00000002   0x2000             MOVS     R0,#+0
    635              
    636              if(qpx_count++>50) qpx_count=51;
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable12
   \   00000008   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000000C   0x1C4A             ADDS     R2,R1,#+1
   \   0000000E   0x.... 0x....      LDR.W    R3,??DataTable12
   \   00000012   0x801A             STRH     R2,[R3, #+0]
   \   00000014   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000016   0x2933             CMP      R1,#+51
   \   00000018   0xDB03             BLT.N    ??get_front_0
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable12
   \   0000001E   0x2133             MOVS     R1,#+51
   \   00000020   0x8001             STRH     R1,[R0, #+0]
    637              
    638              hold_flag=0;
   \                     ??get_front_0:
   \   00000022   0x2000             MOVS     R0,#+0
    639              
    640              mq=0;
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x700A             STRB     R2,[R1, #+0]
    641              
    642              if(LHOLDdiao_flag==0)
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   00000030   0x7809             LDRB     R1,[R1, #+0]
   \   00000032   0x2900             CMP      R1,#+0
   \   00000034   0xD103             BNE.N    ??get_front_1
    643              {
    644                Ldiaotou_flag=0;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x7001             STRB     R1,[R0, #+0]
    645              }
    646              if(RHOLDdiao_flag==0)
   \                     ??get_front_1:
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD103             BNE.N    ??get_front_2
    647              {
    648                Rdiaotou_flag=0;
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x7001             STRB     R1,[R0, #+0]
    649              }
    650          
    651              for(i=121;i>=6;i--)
   \                     ??get_front_2:
   \   00000050   0x2079             MOVS     R0,#+121
   \   00000052   0xE004             B.N      ??get_front_3
    652              {
    653                if((Pixel_F[i]==1)&&(Pixel_F[i-1]==0)&&(Pixel_F[i-2]==0)&&(Pixel_F[i-3]==0))
    654                {
    655                  front_l = i-2;
    656                  front_l_flag = 1;
    657                  break;
    658                }
    659                front_l_flag = 0;
   \                     ??get_front_4:
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x800A             STRH     R2,[R1, #+0]
   \   0000005C   0x1E40             SUBS     R0,R0,#+1
   \                     ??get_front_3:
   \   0000005E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000060   0x2806             CMP      R0,#+6
   \   00000062   0xDB25             BLT.N    ??get_front_5
   \   00000064   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   0000006A   0x5C41             LDRB     R1,[R0, R1]
   \   0000006C   0x2901             CMP      R1,#+1
   \   0000006E   0xD1F1             BNE.N    ??get_front_4
   \   00000070   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   00000076   0x1841             ADDS     R1,R0,R1
   \   00000078   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000007C   0x2900             CMP      R1,#+0
   \   0000007E   0xD1E9             BNE.N    ??get_front_4
   \   00000080   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   00000086   0x1841             ADDS     R1,R0,R1
   \   00000088   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   0000008C   0x2900             CMP      R1,#+0
   \   0000008E   0xD1E1             BNE.N    ??get_front_4
   \   00000090   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   00000096   0x1841             ADDS     R1,R0,R1
   \   00000098   0xF811 0x1C03      LDRB     R1,[R1, #-3]
   \   0000009C   0x2900             CMP      R1,#+0
   \   0000009E   0xD1D9             BNE.N    ??get_front_4
   \   000000A0   0x1E80             SUBS     R0,R0,#+2
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   000000A6   0x8008             STRH     R0,[R1, #+0]
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000000AC   0x2101             MOVS     R1,#+1
   \   000000AE   0x8001             STRH     R1,[R0, #+0]
    660              }
    661              for(j=6;j<=121;j++)
   \                     ??get_front_5:
   \   000000B0   0x2006             MOVS     R0,#+6
   \   000000B2   0xE004             B.N      ??get_front_6
    662              {
    663                 if((Pixel_F[j]==1)&&(Pixel_F[j+1]==0)&&(Pixel_F[j+2]==0)&&(Pixel_F[j+3]==0))
    664                {
    665                  front_r = j+2;
    666                  front_r_flag = 1;
    667                  break;
    668                }
    669                front_r_flag = 0;
   \                     ??get_front_7:
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable12_9
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x800A             STRH     R2,[R1, #+0]
   \   000000BC   0x1C40             ADDS     R0,R0,#+1
   \                     ??get_front_6:
   \   000000BE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000C0   0x287A             CMP      R0,#+122
   \   000000C2   0xDA22             BGE.N    ??get_front_8
   \   000000C4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   000000CA   0x5C41             LDRB     R1,[R0, R1]
   \   000000CC   0x2901             CMP      R1,#+1
   \   000000CE   0xD1F1             BNE.N    ??get_front_7
   \   000000D0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   000000D6   0x1841             ADDS     R1,R0,R1
   \   000000D8   0x7849             LDRB     R1,[R1, #+1]
   \   000000DA   0x2900             CMP      R1,#+0
   \   000000DC   0xD1EA             BNE.N    ??get_front_7
   \   000000DE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E0   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   000000E4   0x1841             ADDS     R1,R0,R1
   \   000000E6   0x7889             LDRB     R1,[R1, #+2]
   \   000000E8   0x2900             CMP      R1,#+0
   \   000000EA   0xD1E3             BNE.N    ??get_front_7
   \   000000EC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   000000F2   0x1841             ADDS     R1,R0,R1
   \   000000F4   0x78C9             LDRB     R1,[R1, #+3]
   \   000000F6   0x2900             CMP      R1,#+0
   \   000000F8   0xD1DC             BNE.N    ??get_front_7
   \   000000FA   0x1C80             ADDS     R0,R0,#+2
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000100   0x8008             STRH     R0,[R1, #+0]
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   00000106   0x2101             MOVS     R1,#+1
   \   00000108   0x8001             STRH     R1,[R0, #+0]
    670              }
    671              
    672              //A.采到左右数据
    673              if((front_l_flag == 1)&&(front_r_flag == 1))
   \                     ??get_front_8:
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000010E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000112   0x2801             CMP      R0,#+1
   \   00000114   0xF040 0x8107      BNE.W    ??get_front_9
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   0000011C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000120   0x2801             CMP      R0,#+1
   \   00000122   0xF040 0x8100      BNE.W    ??get_front_9
    674              {  
    675                LR_count++;
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   0000012A   0x8800             LDRH     R0,[R0, #+0]
   \   0000012C   0x1C40             ADDS     R0,R0,#+1
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   00000132   0x8008             STRH     R0,[R1, #+0]
    676                Lr_count=0;
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   00000138   0x2100             MOVS     R1,#+0
   \   0000013A   0x8001             STRH     R1,[R0, #+0]
    677                lR_count=0;
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000140   0x2100             MOVS     R1,#+0
   \   00000142   0x8001             STRH     R1,[R0, #+0]
    678                lr_count=0;
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000148   0x2100             MOVS     R1,#+0
   \   0000014A   0x8001             STRH     R1,[R0, #+0]
    679                
    680                lost_all_flag = 0;
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable12_14
   \   00000150   0x2100             MOVS     R1,#+0
   \   00000152   0x7001             STRB     R1,[R0, #+0]
    681                //a.1.左值大于右值,有且只有一条有用边     
    682                if(front_l>front_r)            
   \   00000154   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000158   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000015C   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000160   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000164   0x4288             CMP      R0,R1
   \   00000166   0xF280 0x80A1      BGE.W    ??get_front_10
    683                { 
    684                  //-m4-//---------------------------------------
    685                  if(qpx_count>50)//防止启动时主CCD才到起跑线出错
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable12
   \   0000016E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000172   0x2833             CMP      R0,#+51
   \   00000174   0xF2C0 0x808D      BLT.W    ??get_front_11
    686                  {
    687                    if(mq_last==1)
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   0000017C   0x7800             LDRB     R0,[R0, #+0]
   \   0000017E   0x2801             CMP      R0,#+1
   \   00000180   0xD13E             BNE.N    ??get_front_12
    688                    {
    689                      mq=mq_last;
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000186   0x.... 0x....      LDR.W    R1,??DataTable12_15
   \   0000018A   0x7809             LDRB     R1,[R1, #+0]
   \   0000018C   0x7001             STRB     R1,[R0, #+0]
    690                      
    691                      if((front_l_fg_last==1)&&(front_r_fg_last==0))  front_r=front_l+front_width;
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   00000192   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000196   0x2801             CMP      R0,#+1
   \   00000198   0xD10F             BNE.N    ??get_front_13
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   0000019E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001A2   0x2800             CMP      R0,#+0
   \   000001A4   0xD109             BNE.N    ??get_front_13
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000001AA   0x8800             LDRH     R0,[R0, #+0]
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000001B0   0x8809             LDRH     R1,[R1, #+0]
   \   000001B2   0x1808             ADDS     R0,R1,R0
   \   000001B4   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   000001B8   0x8008             STRH     R0,[R1, #+0]
    692                      if((front_l_fg_last==0)&&(front_r_fg_last==1))  front_l=front_r-front_width;
   \                     ??get_front_13:
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable12_16
   \   000001BE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001C2   0x2800             CMP      R0,#+0
   \   000001C4   0xD10F             BNE.N    ??get_front_14
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000001CA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001CE   0x2801             CMP      R0,#+1
   \   000001D0   0xD109             BNE.N    ??get_front_14
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000001D6   0x8800             LDRH     R0,[R0, #+0]
   \   000001D8   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000001DC   0x8809             LDRH     R1,[R1, #+0]
   \   000001DE   0x1A40             SUBS     R0,R0,R1
   \   000001E0   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   000001E4   0x8008             STRH     R0,[R1, #+0]
    693                      
    694                      front_l_flag=front_l_fg_last;
   \                     ??get_front_14:
   \   000001E6   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   000001EE   0x8809             LDRH     R1,[R1, #+0]
   \   000001F0   0x8001             STRH     R1,[R0, #+0]
    695                      front_r_flag=front_r_fg_last;
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   000001FA   0x8809             LDRH     R1,[R1, #+0]
   \   000001FC   0x8001             STRH     R1,[R0, #+0]
   \   000001FE   0xE1F7             B.N      ??get_front_15
    696                    }
    697                    else
    698                    {
    699                      if(Abs((front_l+front_l+front_width)/2-cl_f_pre)>Abs((front_r+front_r-front_width)/2-cl_f_pre)) 
   \                     ??get_front_12:
   \   00000200   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000204   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   0000020C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000210   0x1808             ADDS     R0,R1,R0
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000216   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000021A   0x1A40             SUBS     R0,R0,R1
   \   0000021C   0x2102             MOVS     R1,#+2
   \   0000021E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000222   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   00000226   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000022A   0x1A40             SUBS     R0,R0,R1
   \   0000022C   0x.... 0x....      BL       Abs
   \   00000230   0x0004             MOVS     R4,R0
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000236   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000023A   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   0000023E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000242   0x1808             ADDS     R0,R1,R0
   \   00000244   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000248   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000024C   0x1840             ADDS     R0,R0,R1
   \   0000024E   0x2102             MOVS     R1,#+2
   \   00000250   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000254   0x.... 0x....      LDR.W    R1,??DataTable12_19
   \   00000258   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000025C   0x1A40             SUBS     R0,R0,R1
   \   0000025E   0x.... 0x....      BL       Abs
   \   00000262   0x4284             CMP      R4,R0
   \   00000264   0xDA0A             BGE.N    ??get_front_16
    700                        front_l=front_r-front_width;
   \   00000266   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000026A   0x8800             LDRH     R0,[R0, #+0]
   \   0000026C   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000270   0x8809             LDRH     R1,[R1, #+0]
   \   00000272   0x1A40             SUBS     R0,R0,R1
   \   00000274   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000278   0x8008             STRH     R0,[R1, #+0]
   \   0000027A   0xE1B9             B.N      ??get_front_15
    701                      else 
    702                        front_r=front_l+front_width;
   \                     ??get_front_16:
   \   0000027C   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000280   0x8800             LDRH     R0,[R0, #+0]
   \   00000282   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000286   0x8809             LDRH     R1,[R1, #+0]
   \   00000288   0x1808             ADDS     R0,R1,R0
   \   0000028A   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   0000028E   0x8008             STRH     R0,[R1, #+0]
   \   00000290   0xE1AE             B.N      ??get_front_15
    703                    }
    704                  }
    705                  else
    706                  { 
    707                     front_l=front_l_last;
   \                     ??get_front_11:
   \   00000292   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000296   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000029A   0x8809             LDRH     R1,[R1, #+0]
   \   0000029C   0x8001             STRH     R1,[R0, #+0]
    708                     front_r=front_r_last;
   \   0000029E   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000002A2   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000002A6   0x8809             LDRH     R1,[R1, #+0]
   \   000002A8   0x8001             STRH     R1,[R0, #+0]
   \   000002AA   0xE1A1             B.N      ??get_front_15
    709                  }
    710                }
    711                //a.2.右值大于左值,正常
    712                else
    713                {
    714                  if(front_r-front_l<front_width-10) 
   \                     ??get_front_10:
   \   000002AC   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000002B0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002B4   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   000002B8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002BC   0x1A40             SUBS     R0,R0,R1
   \   000002BE   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000002C2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002C6   0x390A             SUBS     R1,R1,#+10
   \   000002C8   0x4288             CMP      R0,R1
   \   000002CA   0xDA2B             BGE.N    ??get_front_17
    715                  {
    716                    if((front_l+front_r)/2<63) front_l=front_r-(front_r_last-front_l_last);
   \   000002CC   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000002D0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002D4   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   000002D8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002DC   0x1808             ADDS     R0,R1,R0
   \   000002DE   0x2102             MOVS     R1,#+2
   \   000002E0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002E4   0x283F             CMP      R0,#+63
   \   000002E6   0xDA0E             BGE.N    ??get_front_18
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000002EC   0x8800             LDRH     R0,[R0, #+0]
   \   000002EE   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000002F2   0x8809             LDRH     R1,[R1, #+0]
   \   000002F4   0x1A40             SUBS     R0,R0,R1
   \   000002F6   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000002FA   0x8809             LDRH     R1,[R1, #+0]
   \   000002FC   0x1808             ADDS     R0,R1,R0
   \   000002FE   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000302   0x8008             STRH     R0,[R1, #+0]
   \   00000304   0xE174             B.N      ??get_front_15
    717                    else front_r = front_l+(front_r_last-front_l_last);
   \                     ??get_front_18:
   \   00000306   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   0000030A   0x8800             LDRH     R0,[R0, #+0]
   \   0000030C   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000310   0x8809             LDRH     R1,[R1, #+0]
   \   00000312   0x1808             ADDS     R0,R1,R0
   \   00000314   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000318   0x8809             LDRH     R1,[R1, #+0]
   \   0000031A   0x1A40             SUBS     R0,R0,R1
   \   0000031C   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000320   0x8008             STRH     R0,[R1, #+0]
   \   00000322   0xE165             B.N      ??get_front_15
    718                  }
    719                  else if(front_r-front_l>=front_width-10)
   \                     ??get_front_17:
   \   00000324   0xE164             B.N      ??get_front_15
    720                  {
    721                  }
    722                }  
    723              }
    724              //B.右数据丢失
    725              else if((front_l_flag == 1)&&(front_r_flag == 0))
   \                     ??get_front_9:
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000032A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000032E   0x2801             CMP      R0,#+1
   \   00000330   0xF040 0x8081      BNE.W    ??get_front_19
   \   00000334   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   00000338   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000033C   0x2800             CMP      R0,#+0
   \   0000033E   0xD17A             BNE.N    ??get_front_19
    726              {
    727                LR_count=0;
   \   00000340   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   00000344   0x2100             MOVS     R1,#+0
   \   00000346   0x8001             STRH     R1,[R0, #+0]
    728                Lr_count++;
   \   00000348   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   0000034C   0x8800             LDRH     R0,[R0, #+0]
   \   0000034E   0x1C40             ADDS     R0,R0,#+1
   \   00000350   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   00000354   0x8008             STRH     R0,[R1, #+0]
    729                lR_count=0;
   \   00000356   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000035A   0x2100             MOVS     R1,#+0
   \   0000035C   0x8001             STRH     R1,[R0, #+0]
    730                lr_count=0;
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000362   0x2100             MOVS     R1,#+0
   \   00000364   0x8001             STRH     R1,[R0, #+0]
    731                
    732                //全丢
    733                if(front_l>front_r_last)
   \   00000366   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   0000036A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000036E   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000372   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000376   0x4288             CMP      R0,R1
   \   00000378   0xDA0C             BGE.N    ??get_front_20
    734                {
    735                  front_l=front_l_last;
   \   0000037A   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   0000037E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000382   0x8809             LDRH     R1,[R1, #+0]
   \   00000384   0x8001             STRH     R1,[R0, #+0]
    736                  front_r=front_r_last;
   \   00000386   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000038A   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   0000038E   0x8809             LDRH     R1,[R1, #+0]
   \   00000390   0x8001             STRH     R1,[R0, #+0]
   \   00000392   0xE12D             B.N      ??get_front_15
    737                }
    738                //-m2-//以赛宽判断--------------
    739                else if(front_l<=front_r_last)
   \                     ??get_front_20:
   \   00000394   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   00000398   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000039C   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   000003A0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000003A4   0x4288             CMP      R0,R1
   \   000003A6   0xF2C0 0x8123      BLT.W    ??get_front_15
    740                { 
    741                  //在“十字弯”处大偏差
    742                  if(front_l<127-front_width-15)//-10(29,69,98)
   \   000003AA   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000003AE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003B2   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000003B6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000003BA   0xF1D1 0x0170      RSBS     R1,R1,#+112
   \   000003BE   0x4288             CMP      R0,R1
   \   000003C0   0xDA2A             BGE.N    ??get_front_21
    743                  {
    744                      Rdiaotou_flag=1;
   \   000003C2   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000003C6   0x2101             MOVS     R1,#+1
   \   000003C8   0x7001             STRB     R1,[R0, #+0]
    745                    
    746                      Lpre4=Lpre3;
   \   000003CA   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   000003CE   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   000003D2   0x8809             LDRH     R1,[R1, #+0]
   \   000003D4   0x8001             STRH     R1,[R0, #+0]
    747                      Lpre3=Lpre2;
   \   000003D6   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   000003DA   0x.... 0x....      LDR.W    R1,??DataTable13_5
   \   000003DE   0x8809             LDRH     R1,[R1, #+0]
   \   000003E0   0x8001             STRH     R1,[R0, #+0]
    748                      Lpre2=Lpre1;
   \   000003E2   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   000003E6   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   000003EA   0x8809             LDRH     R1,[R1, #+0]
   \   000003EC   0x8001             STRH     R1,[R0, #+0]
    749                      Lpre1=front_l;
   \   000003EE   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   000003F2   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   000003F6   0x8809             LDRH     R1,[R1, #+0]
   \   000003F8   0x8001             STRH     R1,[R0, #+0]
    750                      //A.实际上front_width不是此时实际的赛道宽度
    751                      //B.此处用了历史值，在过人字弯后会受影响
    752                      //-m1-//
    753                      front_r =front_l+(front_r_last-front_l_last); 
   \   000003FA   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000003FE   0x8800             LDRH     R0,[R0, #+0]
   \   00000400   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000404   0x8809             LDRH     R1,[R1, #+0]
   \   00000406   0x1808             ADDS     R0,R1,R0
   \   00000408   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000040C   0x8809             LDRH     R1,[R1, #+0]
   \   0000040E   0x1A40             SUBS     R0,R0,R1
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000414   0x8008             STRH     R0,[R1, #+0]
   \   00000416   0xE0EB             B.N      ??get_front_15
    754                      
    755                      //front_l=front_l-((front_r_last-front_l_last)-front_width)/2;
    756                      //front_r=front_r-((front_r_last-front_l_last)-front_width)/2;
    757                      //-m2-//
    758                      //front_l=front_l_last;
    759                      //front_r=front_r_last;
    760                  } 
    761                  else 
    762                  {   //-m1-//
    763                      front_r =front_l+(front_r_last-front_l_last);
   \                     ??get_front_21:
   \   00000418   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   0000041C   0x8800             LDRH     R0,[R0, #+0]
   \   0000041E   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000422   0x8809             LDRH     R1,[R1, #+0]
   \   00000424   0x1808             ADDS     R0,R1,R0
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000042A   0x8809             LDRH     R1,[R1, #+0]
   \   0000042C   0x1A40             SUBS     R0,R0,R1
   \   0000042E   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000432   0x8008             STRH     R0,[R1, #+0]
   \   00000434   0xE0DC             B.N      ??get_front_15
    764                      
    765                      //front_l=front_l-((front_r_last-front_l_last)-front_width)/2;
    766                      //front_r=front_r-((front_r_last-front_l_last)-front_width)/2;
    767                  }
    768                }
    769              }
    770              //C.左数据丢
    771              else if((front_l_flag == 0)&&(front_r_flag == 1))
   \                     ??get_front_19:
   \   00000436   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000043A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000043E   0x2800             CMP      R0,#+0
   \   00000440   0xF040 0x8080      BNE.W    ??get_front_22
   \   00000444   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   00000448   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000044C   0x2801             CMP      R0,#+1
   \   0000044E   0xD179             BNE.N    ??get_front_22
    772              { 
    773                LR_count=0;
   \   00000450   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   00000454   0x2100             MOVS     R1,#+0
   \   00000456   0x8001             STRH     R1,[R0, #+0]
    774                Lr_count=0;
   \   00000458   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   0000045C   0x2100             MOVS     R1,#+0
   \   0000045E   0x8001             STRH     R1,[R0, #+0]
    775                lR_count++;
   \   00000460   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000464   0x8800             LDRH     R0,[R0, #+0]
   \   00000466   0x1C40             ADDS     R0,R0,#+1
   \   00000468   0x.... 0x....      LDR.W    R1,??DataTable13
   \   0000046C   0x8008             STRH     R0,[R1, #+0]
    776                lr_count=0;
   \   0000046E   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000472   0x2100             MOVS     R1,#+0
   \   00000474   0x8001             STRH     R1,[R0, #+0]
    777                
    778                if(front_r<front_l_last)
   \   00000476   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000047A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000047E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000482   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000486   0x4288             CMP      R0,R1
   \   00000488   0xDA0C             BGE.N    ??get_front_23
    779                {
    780                  front_l=front_l_last;
   \   0000048A   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   0000048E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000492   0x8809             LDRH     R1,[R1, #+0]
   \   00000494   0x8001             STRH     R1,[R0, #+0]
    781                  front_r=front_r_last;
   \   00000496   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000049A   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   0000049E   0x8809             LDRH     R1,[R1, #+0]
   \   000004A0   0x8001             STRH     R1,[R0, #+0]
   \   000004A2   0xE0A5             B.N      ??get_front_15
    782                }
    783                //2.以赛宽判断
    784                else if(front_r>=front_l_last)
   \                     ??get_front_23:
   \   000004A4   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000004A8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004AC   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000004B0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000004B4   0x4288             CMP      R0,R1
   \   000004B6   0xF2C0 0x809B      BLT.W    ??get_front_15
    785                {  //在“十字弯”处大偏差
    786                   if(front_r>front_width+15)//路径，每次入弯的效果，经验大+10(29,69,98)
   \   000004BA   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   000004BE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004C2   0x300F             ADDS     R0,R0,#+15
   \   000004C4   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   000004C8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000004CC   0x4288             CMP      R0,R1
   \   000004CE   0xDA2A             BGE.N    ??get_front_24
    787                   {
    788                     Ldiaotou_flag=1;
   \   000004D0   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000004D4   0x2101             MOVS     R1,#+1
   \   000004D6   0x7001             STRB     R1,[R0, #+0]
    789                     
    790                     Rpre4=Rpre3;
   \   000004D8   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   000004DC   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   000004E0   0x8809             LDRH     R1,[R1, #+0]
   \   000004E2   0x8001             STRH     R1,[R0, #+0]
    791                     Rpre3=Rpre2;
   \   000004E4   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   000004E8   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   000004EC   0x8809             LDRH     R1,[R1, #+0]
   \   000004EE   0x8001             STRH     R1,[R0, #+0]
    792                     Rpre2=Rpre1;
   \   000004F0   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000004F4   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   000004F8   0x8809             LDRH     R1,[R1, #+0]
   \   000004FA   0x8001             STRH     R1,[R0, #+0]
    793                     Rpre1=front_r;
   \   000004FC   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   00000500   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000504   0x8809             LDRH     R1,[R1, #+0]
   \   00000506   0x8001             STRH     R1,[R0, #+0]
    794                     //-m1-//
    795                     front_l=front_r-(front_r_last-front_l_last);//!!!!-3
   \   00000508   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000050C   0x8800             LDRH     R0,[R0, #+0]
   \   0000050E   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000512   0x8809             LDRH     R1,[R1, #+0]
   \   00000514   0x1A40             SUBS     R0,R0,R1
   \   00000516   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000051A   0x8809             LDRH     R1,[R1, #+0]
   \   0000051C   0x1808             ADDS     R0,R1,R0
   \   0000051E   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000522   0x8008             STRH     R0,[R1, #+0]
   \   00000524   0xE064             B.N      ??get_front_15
    796                     
    797                     //front_l=front_l+((front_r_last-front_l_last)-front_width)/2;
    798                     //front_r=front_r+((front_r_last-front_l_last)-front_width)/2;
    799                     //-m2-//
    800                     //front_l=front_l_last;
    801                     //front_r=front_r_last;
    802                     
    803                   } 
    804                   else
    805                   { //-m1-//
    806                     front_l=front_r-(front_r_last-front_l_last);
   \                     ??get_front_24:
   \   00000526   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000052A   0x8800             LDRH     R0,[R0, #+0]
   \   0000052C   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000530   0x8809             LDRH     R1,[R1, #+0]
   \   00000532   0x1A40             SUBS     R0,R0,R1
   \   00000534   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000538   0x8809             LDRH     R1,[R1, #+0]
   \   0000053A   0x1808             ADDS     R0,R1,R0
   \   0000053C   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000540   0x8008             STRH     R0,[R1, #+0]
   \   00000542   0xE055             B.N      ??get_front_15
    807                     
    808                     //front_l=front_l+((front_r_last-front_l_last)-front_width)/2;
    809                     //front_r=front_r+((front_r_last-front_l_last)-front_width)/2;
    810                   }
    811                }
    812              }
    813              //D.两边数据都丢失
    814              else if((front_l_flag == 0)&&(front_r_flag == 0))
   \                     ??get_front_22:
   \   00000544   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   00000548   0x8800             LDRH     R0,[R0, #+0]
   \   0000054A   0x.... 0x....      LDR.W    R1,??DataTable12_9
   \   0000054E   0x8809             LDRH     R1,[R1, #+0]
   \   00000550   0x4308             ORRS     R0,R1,R0
   \   00000552   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000554   0x2800             CMP      R0,#+0
   \   00000556   0xD14B             BNE.N    ??get_front_15
    815              { 
    816                //全白，只有十字弯
    817                if(IntegrationTime_Front<IT_ref)
   \   00000558   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   0000055C   0x7800             LDRB     R0,[R0, #+0]
   \   0000055E   0x.... 0x....      LDR.W    R1,??DataTable13_12
   \   00000562   0x7809             LDRB     R1,[R1, #+0]
   \   00000564   0x4288             CMP      R0,R1
   \   00000566   0xD21C             BCS.N    ??get_front_25
    818                {
    819                  //-m3-//-------------------
    820                  mq=1;
   \   00000568   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   0000056C   0x2101             MOVS     R1,#+1
   \   0000056E   0x7001             STRB     R1,[R0, #+0]
    821                  
    822                  //front_l=front_l_last;
    823                  //front_r=front_r_last;
    824                  
    825                  front_l=front_l_reference;
   \   00000570   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000574   0x.... 0x....      LDR.W    R1,??DataTable14
   \   00000578   0x8809             LDRH     R1,[R1, #+0]
   \   0000057A   0x8001             STRH     R1,[R0, #+0]
    826                  front_r=front_r_reference;
   \   0000057C   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000580   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   00000584   0x8809             LDRH     R1,[R1, #+0]
   \   00000586   0x8001             STRH     R1,[R0, #+0]
    827                  
    828                  front_l_flag=front_l_fg_last;
   \   00000588   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000058C   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   00000590   0x8809             LDRH     R1,[R1, #+0]
   \   00000592   0x8001             STRH     R1,[R0, #+0]
    829                  front_r_flag=front_r_fg_last;
   \   00000594   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   00000598   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   0000059C   0x8809             LDRH     R1,[R1, #+0]
   \   0000059E   0x8001             STRH     R1,[R0, #+0]
   \   000005A0   0xE013             B.N      ??get_front_26
    830                  /*
    831                  if((front_l_fg_last==0)&&(front_r_fg_last==0))
    832                  {
    833                    front_l=front_l_last;
    834                    front_r=front_r_last;
    835                  }
    836                  else if((front_l_fg_last==0)&&(front_r_fg_last==1))
    837                  {
    838                    if(lR_count>20)//？？？
    839                    {
    840                      front_l=front_l_last-jiao_L;//2*lR_count;
    841                      front_r=front_r_last-jiao_L;//2*lR_count;
    842                    }
    843                  }
    844                  else if((front_l_fg_last==1)&&(front_r_fg_last==0))
    845                  {
    846                    if(Lr_count>20)
    847                    {
    848                      front_l=front_l_last+jiao_R;//2*Lr_count;
    849                      front_r=front_r_last+jiao_R;//2*Lr_count;
    850                    }
    851                  }
    852                  else if((front_l_fg_last==1)&&(front_r_fg_last==1))
    853                  {
    854                    front_l=front_l_last;
    855                    front_r=front_r_last;
    856                  }*/
    857                }
    858                //全黑，曲率大的弯处
    859                else if(IntegrationTime_Front>IT_ref)
   \                     ??get_front_25:
   \   000005A2   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   000005A6   0x7800             LDRB     R0,[R0, #+0]
   \   000005A8   0x.... 0x....      LDR.W    R1,??DataTable13_11
   \   000005AC   0x7809             LDRB     R1,[R1, #+0]
   \   000005AE   0x4288             CMP      R0,R1
   \   000005B0   0xD20B             BCS.N    ??get_front_26
    860                {
    861                  front_l=front_l_last;
   \   000005B2   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000005B6   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000005BA   0x8809             LDRH     R1,[R1, #+0]
   \   000005BC   0x8001             STRH     R1,[R0, #+0]
    862                  front_r=front_r_last;
   \   000005BE   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000005C2   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000005C6   0x8809             LDRH     R1,[R1, #+0]
   \   000005C8   0x8001             STRH     R1,[R0, #+0]
    863                  /*
    864                  if((front_l_last+front_r_last)/2>front_reference)
    865                  {
    866                    front_l=front_l_last;
    867                    front_r=front_r_last;
    868                  }
    869                  else if((front_l_last+front_r_last)/2<=front_reference)
    870                  {
    871                    front_l=front_l_last;
    872                    front_r=front_r_last;
    873                  }*/
    874                }
    875                
    876                LR_count=0;
   \                     ??get_front_26:
   \   000005CA   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   000005CE   0x2100             MOVS     R1,#+0
   \   000005D0   0x8001             STRH     R1,[R0, #+0]
    877                Lr_count=0;
   \   000005D2   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000005D6   0x2100             MOVS     R1,#+0
   \   000005D8   0x8001             STRH     R1,[R0, #+0]
    878                lR_count=0;
   \   000005DA   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000005DE   0x2100             MOVS     R1,#+0
   \   000005E0   0x8001             STRH     R1,[R0, #+0]
    879                lr_count++;
   \   000005E2   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   000005E6   0x8800             LDRH     R0,[R0, #+0]
   \   000005E8   0x1C40             ADDS     R0,R0,#+1
   \   000005EA   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   000005EE   0x8008             STRH     R0,[R1, #+0]
    880              }
    881              
    882              mq_last=mq;
   \                     ??get_front_15:
   \   000005F0   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   000005F4   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   000005F8   0x7809             LDRB     R1,[R1, #+0]
   \   000005FA   0x7001             STRB     R1,[R0, #+0]
    883              
    884              L_aver=(Lpre1+Lpre2+Lpre3)/3;
   \   000005FC   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000600   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000604   0x.... 0x....      LDR.W    R1,??DataTable13_5
   \   00000608   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000060C   0x1808             ADDS     R0,R1,R0
   \   0000060E   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   00000612   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000616   0x1840             ADDS     R0,R0,R1
   \   00000618   0x2103             MOVS     R1,#+3
   \   0000061A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000061E   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000622   0x8008             STRH     R0,[R1, #+0]
    885              L_fch=((Lpre1-L_aver)*(Lpre1-L_aver)+(Lpre2-L_aver)*(Lpre2-L_aver)+(Lpre3-L_aver)*(Lpre3-L_aver))/3;
   \   00000624   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000628   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000062C   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000630   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000634   0x1A40             SUBS     R0,R0,R1
   \   00000636   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   0000063A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000063E   0x.... 0x....      LDR.W    R2,??DataTable14_2
   \   00000642   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000646   0x1A89             SUBS     R1,R1,R2
   \   00000648   0x.... 0x....      LDR.W    R2,??DataTable13_5
   \   0000064C   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000650   0x.... 0x....      LDR.W    R3,??DataTable14_2
   \   00000654   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000658   0x1AD2             SUBS     R2,R2,R3
   \   0000065A   0x.... 0x....      LDR.W    R3,??DataTable13_5
   \   0000065E   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000662   0x.... 0x....      LDR.W    R4,??DataTable14_2
   \   00000666   0xF9B4 0x4000      LDRSH    R4,[R4, #+0]
   \   0000066A   0x1B1B             SUBS     R3,R3,R4
   \   0000066C   0x435A             MULS     R2,R3,R2
   \   0000066E   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000672   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   00000676   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000067A   0x.... 0x....      LDR.W    R2,??DataTable14_2
   \   0000067E   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000682   0x1A89             SUBS     R1,R1,R2
   \   00000684   0x.... 0x....      LDR.W    R2,??DataTable13_4
   \   00000688   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000068C   0x.... 0x....      LDR.W    R3,??DataTable14_2
   \   00000690   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000694   0x1AD2             SUBS     R2,R2,R3
   \   00000696   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000069A   0x2103             MOVS     R1,#+3
   \   0000069C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000006A0   0x.... 0x....      LDR.W    R1,??DataTable14_3
   \   000006A4   0x8008             STRH     R0,[R1, #+0]
    886          
    887              R_aver=(Rpre1+Rpre2+Rpre3)/3;
   \   000006A6   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000006AA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000006AE   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   000006B2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000006B6   0x1808             ADDS     R0,R1,R0
   \   000006B8   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   000006BC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000006C0   0x1840             ADDS     R0,R0,R1
   \   000006C2   0x2103             MOVS     R1,#+3
   \   000006C4   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000006C8   0x.... 0x....      LDR.W    R1,??DataTable14_4
   \   000006CC   0x8008             STRH     R0,[R1, #+0]
    888              R_fch=((Rpre1-R_aver)*(Rpre1-R_aver)+(Rpre2-R_aver)*(Rpre2-R_aver)+(Rpre3-R_aver)*(Rpre3-R_aver))/3;
   \   000006CE   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000006D2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000006D6   0x.... 0x....      LDR.W    R1,??DataTable14_4
   \   000006DA   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000006DE   0x1A40             SUBS     R0,R0,R1
   \   000006E0   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   000006E4   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000006E8   0x.... 0x....      LDR.W    R2,??DataTable14_4
   \   000006EC   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000006F0   0x1A89             SUBS     R1,R1,R2
   \   000006F2   0x.... 0x....      LDR.W    R2,??DataTable13_9
   \   000006F6   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000006FA   0x.... 0x....      LDR.W    R3,??DataTable14_4
   \   000006FE   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000702   0x1AD2             SUBS     R2,R2,R3
   \   00000704   0x.... 0x....      LDR.W    R3,??DataTable13_9
   \   00000708   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   0000070C   0x.... 0x....      LDR.W    R4,??DataTable14_4
   \   00000710   0xF9B4 0x4000      LDRSH    R4,[R4, #+0]
   \   00000714   0x1B1B             SUBS     R3,R3,R4
   \   00000716   0x435A             MULS     R2,R3,R2
   \   00000718   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000071C   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   00000720   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000724   0x.... 0x....      LDR.W    R2,??DataTable14_4
   \   00000728   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000072C   0x1A89             SUBS     R1,R1,R2
   \   0000072E   0x.... 0x....      LDR.W    R2,??DataTable13_8
   \   00000732   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000736   0x.... 0x....      LDR.W    R3,??DataTable14_4
   \   0000073A   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   0000073E   0x1AD2             SUBS     R2,R2,R3
   \   00000740   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000744   0x2103             MOVS     R1,#+3
   \   00000746   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000074A   0x.... 0x....      LDR.W    R1,??DataTable14_5
   \   0000074E   0x8008             STRH     R0,[R1, #+0]
    889              
    890              //简单的变化率
    891              delta_l=(front_l-front_l_last)+(front_l_last-front_l_pre1)+(front_l_pre1-front_l_pre2); 
   \   00000750   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   00000754   0x8800             LDRH     R0,[R0, #+0]
   \   00000756   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   0000075A   0x8809             LDRH     R1,[R1, #+0]
   \   0000075C   0x1A40             SUBS     R0,R0,R1
   \   0000075E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000762   0x8809             LDRH     R1,[R1, #+0]
   \   00000764   0x1808             ADDS     R0,R1,R0
   \   00000766   0x.... 0x....      LDR.W    R1,??DataTable14_6
   \   0000076A   0x8809             LDRH     R1,[R1, #+0]
   \   0000076C   0x1A40             SUBS     R0,R0,R1
   \   0000076E   0x.... 0x....      LDR.W    R1,??DataTable14_6
   \   00000772   0x8809             LDRH     R1,[R1, #+0]
   \   00000774   0x1808             ADDS     R0,R1,R0
   \   00000776   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   0000077A   0x8809             LDRH     R1,[R1, #+0]
   \   0000077C   0x1A40             SUBS     R0,R0,R1
   \   0000077E   0x.... 0x....      LDR.W    R1,??DataTable14_8
   \   00000782   0x8008             STRH     R0,[R1, #+0]
    892              delta_r=(front_r-front_r_last)+(front_r_last-front_r_pre1)+(front_r_pre1-front_r_pre2);
   \   00000784   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000788   0x8800             LDRH     R0,[R0, #+0]
   \   0000078A   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   0000078E   0x8809             LDRH     R1,[R1, #+0]
   \   00000790   0x1A40             SUBS     R0,R0,R1
   \   00000792   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000796   0x8809             LDRH     R1,[R1, #+0]
   \   00000798   0x1808             ADDS     R0,R1,R0
   \   0000079A   0x.... 0x....      LDR.W    R1,??DataTable14_9
   \   0000079E   0x8809             LDRH     R1,[R1, #+0]
   \   000007A0   0x1A40             SUBS     R0,R0,R1
   \   000007A2   0x.... 0x....      LDR.W    R1,??DataTable14_9
   \   000007A6   0x8809             LDRH     R1,[R1, #+0]
   \   000007A8   0x1808             ADDS     R0,R1,R0
   \   000007AA   0x.... 0x....      LDR.W    R1,??DataTable14_10
   \   000007AE   0x8809             LDRH     R1,[R1, #+0]
   \   000007B0   0x1A40             SUBS     R0,R0,R1
   \   000007B2   0x.... 0x....      LDR.W    R1,??DataTable14_11
   \   000007B6   0x8008             STRH     R0,[R1, #+0]
    893              
    894              Lfch=((front_l-front_l_reference)*(front_l-front_l_reference)+(front_l_last-front_l_reference)*(front_l_last-front_l_reference)+(front_l_pre1-front_l_reference)*(front_l_pre1-front_l_reference))/3;
   \   000007B8   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000007BC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000007C0   0x.... 0x....      LDR.W    R1,??DataTable14
   \   000007C4   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000007C8   0x1A40             SUBS     R0,R0,R1
   \   000007CA   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   000007CE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000007D2   0x.... 0x....      LDR.W    R2,??DataTable14
   \   000007D6   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000007DA   0x1A89             SUBS     R1,R1,R2
   \   000007DC   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   000007E0   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000007E4   0x.... 0x....      LDR.W    R3,??DataTable14
   \   000007E8   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   000007EC   0x1AD2             SUBS     R2,R2,R3
   \   000007EE   0x.... 0x....      LDR.W    R3,??DataTable13_1
   \   000007F2   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   000007F6   0x.... 0x....      LDR.W    R4,??DataTable14
   \   000007FA   0xF9B4 0x4000      LDRSH    R4,[R4, #+0]
   \   000007FE   0x1B1B             SUBS     R3,R3,R4
   \   00000800   0x435A             MULS     R2,R3,R2
   \   00000802   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000806   0x.... 0x....      LDR.W    R1,??DataTable14_6
   \   0000080A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000080E   0x.... 0x....      LDR.W    R2,??DataTable14
   \   00000812   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000816   0x1A89             SUBS     R1,R1,R2
   \   00000818   0x.... 0x....      LDR.W    R2,??DataTable14_6
   \   0000081C   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000820   0x.... 0x....      LDR.W    R3,??DataTable14
   \   00000824   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000828   0x1AD2             SUBS     R2,R2,R3
   \   0000082A   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000082E   0x2103             MOVS     R1,#+3
   \   00000830   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000834   0x.... 0x....      LDR.W    R1,??DataTable14_12
   \   00000838   0x8008             STRH     R0,[R1, #+0]
    895              Rfch=((front_r-front_r_reference)*(front_r-front_r_reference)+(front_r_last-front_r_reference)*(front_r_last-front_r_reference)+(front_r_pre1-front_r_reference)*(front_r_pre1-front_r_reference))/3;
   \   0000083A   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000083E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000842   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   00000846   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000084A   0x1A40             SUBS     R0,R0,R1
   \   0000084C   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000850   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000854   0x.... 0x....      LDR.W    R2,??DataTable14_1
   \   00000858   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000085C   0x1A89             SUBS     R1,R1,R2
   \   0000085E   0x.... 0x....      LDR.W    R2,??DataTable13_2
   \   00000862   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000866   0x.... 0x....      LDR.W    R3,??DataTable14_1
   \   0000086A   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   0000086E   0x1AD2             SUBS     R2,R2,R3
   \   00000870   0x.... 0x....      LDR.W    R3,??DataTable13_2
   \   00000874   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000878   0x.... 0x....      LDR.W    R4,??DataTable14_1
   \   0000087C   0xF9B4 0x4000      LDRSH    R4,[R4, #+0]
   \   00000880   0x1B1B             SUBS     R3,R3,R4
   \   00000882   0x435A             MULS     R2,R3,R2
   \   00000884   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000888   0x.... 0x....      LDR.W    R1,??DataTable14_9
   \   0000088C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000890   0x.... 0x....      LDR.W    R2,??DataTable14_1
   \   00000894   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000898   0x1A89             SUBS     R1,R1,R2
   \   0000089A   0x.... 0x....      LDR.W    R2,??DataTable14_9
   \   0000089E   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000008A2   0x.... 0x....      LDR.W    R3,??DataTable14_1
   \   000008A6   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   000008AA   0x1AD2             SUBS     R2,R2,R3
   \   000008AC   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000008B0   0x2103             MOVS     R1,#+3
   \   000008B2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000008B6   0x.... 0x....      LDR.W    R1,??DataTable14_13
   \   000008BA   0x8008             STRH     R0,[R1, #+0]
    896              
    897              if(rzop==1)
   \   000008BC   0x.... 0x....      LDR.W    R0,??DataTable14_14
   \   000008C0   0x7800             LDRB     R0,[R0, #+0]
   \   000008C2   0x2801             CMP      R0,#+1
   \   000008C4   0xF040 0x80EC      BNE.W    ??get_front_27
    898              {
    899              //-m2-//以赛道宽及其他判断赛道宽
    900              //右调头-----------------------舵机的中值
    901              if(Rdiaotou_flag==1)
   \   000008C8   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000008CC   0x7800             LDRB     R0,[R0, #+0]
   \   000008CE   0x2801             CMP      R0,#+1
   \   000008D0   0xD167             BNE.N    ??get_front_28
    902              {
    903                Rdiaotou_count++;
   \   000008D2   0x.... 0x....      LDR.W    R0,??DataTable14_15
   \   000008D6   0x8800             LDRH     R0,[R0, #+0]
   \   000008D8   0x1C40             ADDS     R0,R0,#+1
   \   000008DA   0x.... 0x....      LDR.W    R1,??DataTable14_15
   \   000008DE   0x8008             STRH     R0,[R1, #+0]
    904                if(Rdiaotou_count<=3)//2 
   \   000008E0   0x.... 0x....      LDR.W    R0,??DataTable14_15
   \   000008E4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000008E8   0x2804             CMP      R0,#+4
   \   000008EA   0xDB5A             BLT.N    ??get_front_28
    905                {}
    906                else if(Rdiaotou_count>3&&Rdiaotou_count<60)//30
   \   000008EC   0x.... 0x....      LDR.W    R0,??DataTable14_15
   \   000008F0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000008F4   0x1F00             SUBS     R0,R0,#+4
   \   000008F6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000008F8   0x2838             CMP      R0,#+56
   \   000008FA   0xD23A             BCS.N    ??get_front_29
    907                {                                        
    908                  if((front_r_last-front_l_last)<=(front_width+5))//与直道入十字有冲突
   \   000008FC   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   00000900   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000904   0x1D40             ADDS     R0,R0,#+5
   \   00000906   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   0000090A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000090E   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   00000912   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000916   0x1A89             SUBS     R1,R1,R2
   \   00000918   0x4288             CMP      R0,R1
   \   0000091A   0xDB03             BLT.N    ??get_front_30
    909                    Rendiao=1;
   \   0000091C   0x.... 0x....      LDR.W    R0,??DataTable14_16
   \   00000920   0x2101             MOVS     R1,#+1
   \   00000922   0x7001             STRB     R1,[R0, #+0]
    910                  
    911                  if(Rendiao==1)
   \                     ??get_front_30:
   \   00000924   0x.... 0x....      LDR.W    R0,??DataTable14_16
   \   00000928   0x7800             LDRB     R0,[R0, #+0]
   \   0000092A   0x2801             CMP      R0,#+1
   \   0000092C   0xD139             BNE.N    ??get_front_28
    912                  {
    913                    RHOLDdiao_flag=1;
   \   0000092E   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000932   0x2101             MOVS     R1,#+1
   \   00000934   0x7001             STRB     R1,[R0, #+0]
    914                    if(Rdiaotou_count<25)
   \   00000936   0x.... 0x....      LDR.W    R0,??DataTable14_15
   \   0000093A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000093E   0x2819             CMP      R0,#+25
   \   00000940   0xDA2F             BGE.N    ??get_front_28
    915                    {
    916                      front_l=130-front_width/2;
   \   00000942   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   00000946   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000094A   0x2102             MOVS     R1,#+2
   \   0000094C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000950   0xF1D0 0x0082      RSBS     R0,R0,#+130
   \   00000954   0x.... 0x....      LDR.W    R1,??DataTable12_8
   \   00000958   0x8008             STRH     R0,[R1, #+0]
    917                      front_r=130+front_width/2;
   \   0000095A   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   0000095E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000962   0x2102             MOVS     R1,#+2
   \   00000964   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000968   0x3082             ADDS     R0,R0,#+130
   \   0000096A   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   0000096E   0x8008             STRH     R0,[R1, #+0]
   \   00000970   0xE017             B.N      ??get_front_28
    918                    }
    919                  } 
    920                }
    921                else 
    922                {
    923                  Rdiaotou_count=0;
   \                     ??get_front_29:
   \   00000972   0x.... 0x....      LDR.W    R0,??DataTable14_15
   \   00000976   0x2100             MOVS     R1,#+0
   \   00000978   0x8001             STRH     R1,[R0, #+0]
    924                  Rdiaotou_flag=0;
   \   0000097A   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   0000097E   0x2100             MOVS     R1,#+0
   \   00000980   0x7001             STRB     R1,[R0, #+0]
    925                  Rendiao=0;
   \   00000982   0x.... 0x....      LDR.W    R0,??DataTable14_16
   \   00000986   0x2100             MOVS     R1,#+0
   \   00000988   0x7001             STRB     R1,[R0, #+0]
    926                  RHOLDdiao_flag=0;
   \   0000098A   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000098E   0x2100             MOVS     R1,#+0
   \   00000990   0x7001             STRB     R1,[R0, #+0]
    927                  rensha_count=0; 
   \   00000992   0x.... 0x....      LDR.W    R0,??DataTable14_17
   \   00000996   0x2100             MOVS     R1,#+0
   \   00000998   0x8001             STRH     R1,[R0, #+0]
    928                  //---
    929                  rzguo_flag=1;
   \   0000099A   0x.... 0x....      LDR.W    R0,??DataTable14_18
   \   0000099E   0x2101             MOVS     R1,#+1
   \   000009A0   0x7001             STRB     R1,[R0, #+0]
    930                }
    931              }
    932              
    933              if(Rdiaotou_flag==0&&RHOLDdiao_flag==0)
   \                     ??get_front_28:
   \   000009A2   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000009A6   0x7800             LDRB     R0,[R0, #+0]
   \   000009A8   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000009AC   0x7809             LDRB     R1,[R1, #+0]
   \   000009AE   0x4308             ORRS     R0,R1,R0
   \   000009B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000009B2   0x2800             CMP      R0,#+0
   \   000009B4   0xD103             BNE.N    ??get_front_31
    934              {
    935                  Rdiaotou_count=0;
   \   000009B6   0x.... 0x....      LDR.W    R0,??DataTable14_15
   \   000009BA   0x2100             MOVS     R1,#+0
   \   000009BC   0x8001             STRH     R1,[R0, #+0]
    936              }
    937          
    938              //左调头
    939              if(Ldiaotou_flag==1)
   \                     ??get_front_31:
   \   000009BE   0x....             LDR.N    R0,??DataTable12_3
   \   000009C0   0x7800             LDRB     R0,[R0, #+0]
   \   000009C2   0x2801             CMP      R0,#+1
   \   000009C4   0xD160             BNE.N    ??get_front_32
    940              {
    941                Ldiaotou_count++;
   \   000009C6   0x.... 0x....      LDR.W    R0,??DataTable14_19
   \   000009CA   0x8800             LDRH     R0,[R0, #+0]
   \   000009CC   0x1C40             ADDS     R0,R0,#+1
   \   000009CE   0x.... 0x....      LDR.W    R1,??DataTable14_19
   \   000009D2   0x8008             STRH     R0,[R1, #+0]
    942                if(Ldiaotou_count<=3) 
   \   000009D4   0x.... 0x....      LDR.W    R0,??DataTable14_19
   \   000009D8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000009DC   0x2804             CMP      R0,#+4
   \   000009DE   0xDB53             BLT.N    ??get_front_32
    943                {}
    944                else if(Ldiaotou_count>3&&Ldiaotou_count<60)//30
   \   000009E0   0x.... 0x....      LDR.W    R0,??DataTable14_19
   \   000009E4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000009E8   0x1F00             SUBS     R0,R0,#+4
   \   000009EA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000009EC   0x2838             CMP      R0,#+56
   \   000009EE   0xD235             BCS.N    ??get_front_33
    945                {                                         
    946                  if((front_r_last-front_l_last)<=(front_width+5))//与直道入十字有冲突
   \   000009F0   0x....             LDR.N    R0,??DataTable12_18
   \   000009F2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000009F6   0x1D40             ADDS     R0,R0,#+5
   \   000009F8   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   000009FC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000A00   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   00000A04   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000A08   0x1A89             SUBS     R1,R1,R2
   \   00000A0A   0x4288             CMP      R0,R1
   \   00000A0C   0xDB03             BLT.N    ??get_front_34
    947                    Lendiao=1;
   \   00000A0E   0x.... 0x....      LDR.W    R0,??DataTable14_20
   \   00000A12   0x2101             MOVS     R1,#+1
   \   00000A14   0x7001             STRB     R1,[R0, #+0]
    948                  
    949                  if(Lendiao==1)
   \                     ??get_front_34:
   \   00000A16   0x.... 0x....      LDR.W    R0,??DataTable14_20
   \   00000A1A   0x7800             LDRB     R0,[R0, #+0]
   \   00000A1C   0x2801             CMP      R0,#+1
   \   00000A1E   0xD133             BNE.N    ??get_front_32
    950                  {
    951                    LHOLDdiao_flag=1;
   \   00000A20   0x....             LDR.N    R0,??DataTable12_2
   \   00000A22   0x2101             MOVS     R1,#+1
   \   00000A24   0x7001             STRB     R1,[R0, #+0]
    952                    if(Ldiaotou_count<25)
   \   00000A26   0x.... 0x....      LDR.W    R0,??DataTable14_19
   \   00000A2A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000A2E   0x2819             CMP      R0,#+25
   \   00000A30   0xDA2A             BGE.N    ??get_front_32
    953                    {
    954                      front_l=-3-front_width/2;
   \   00000A32   0xF07F 0x0002      MVNS     R0,#+2
   \   00000A36   0x....             LDR.N    R1,??DataTable12_18
   \   00000A38   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000A3C   0x2202             MOVS     R2,#+2
   \   00000A3E   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000A42   0x1A40             SUBS     R0,R0,R1
   \   00000A44   0x....             LDR.N    R1,??DataTable12_8
   \   00000A46   0x8008             STRH     R0,[R1, #+0]
    955                      front_r=-3+front_width/2;
   \   00000A48   0x....             LDR.N    R0,??DataTable12_18
   \   00000A4A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000A4E   0x2102             MOVS     R1,#+2
   \   00000A50   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000A54   0x1EC0             SUBS     R0,R0,#+3
   \   00000A56   0x....             LDR.N    R1,??DataTable12_10
   \   00000A58   0x8008             STRH     R0,[R1, #+0]
   \   00000A5A   0xE015             B.N      ??get_front_32
    956                    } 
    957                  }
    958                }
    959                else 
    960                {
    961                  Ldiaotou_count=0;
   \                     ??get_front_33:
   \   00000A5C   0x.... 0x....      LDR.W    R0,??DataTable14_19
   \   00000A60   0x2100             MOVS     R1,#+0
   \   00000A62   0x8001             STRH     R1,[R0, #+0]
    962                  Ldiaotou_flag=0;
   \   00000A64   0x....             LDR.N    R0,??DataTable12_3
   \   00000A66   0x2100             MOVS     R1,#+0
   \   00000A68   0x7001             STRB     R1,[R0, #+0]
    963                  Lendiao=0;
   \   00000A6A   0x.... 0x....      LDR.W    R0,??DataTable14_20
   \   00000A6E   0x2100             MOVS     R1,#+0
   \   00000A70   0x7001             STRB     R1,[R0, #+0]
    964                  LHOLDdiao_flag=0;
   \   00000A72   0x....             LDR.N    R0,??DataTable12_2
   \   00000A74   0x2100             MOVS     R1,#+0
   \   00000A76   0x7001             STRB     R1,[R0, #+0]
    965                  rensha_count=0;
   \   00000A78   0x.... 0x....      LDR.W    R0,??DataTable14_17
   \   00000A7C   0x2100             MOVS     R1,#+0
   \   00000A7E   0x8001             STRH     R1,[R0, #+0]
    966                  //---
    967                  rzguo_flag=1;
   \   00000A80   0x.... 0x....      LDR.W    R0,??DataTable14_18
   \   00000A84   0x2101             MOVS     R1,#+1
   \   00000A86   0x7001             STRB     R1,[R0, #+0]
    968                }
    969              }
    970              
    971              if(Ldiaotou_flag==0&&LHOLDdiao_flag==0)
   \                     ??get_front_32:
   \   00000A88   0x....             LDR.N    R0,??DataTable12_3
   \   00000A8A   0x7800             LDRB     R0,[R0, #+0]
   \   00000A8C   0x....             LDR.N    R1,??DataTable12_2
   \   00000A8E   0x7809             LDRB     R1,[R1, #+0]
   \   00000A90   0x4308             ORRS     R0,R1,R0
   \   00000A92   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000A94   0x2800             CMP      R0,#+0
   \   00000A96   0xD103             BNE.N    ??get_front_27
    972              {
    973                  Ldiaotou_count=0;//是由于未能及时清零吗？
   \   00000A98   0x.... 0x....      LDR.W    R0,??DataTable14_19
   \   00000A9C   0x2100             MOVS     R1,#+0
   \   00000A9E   0x8001             STRH     R1,[R0, #+0]
    974              }
    975            }
    976            
    977            //出十字------------------------------------
    978            if((front_l+front_r)/2-front_reference>0)
   \                     ??get_front_27:
   \   00000AA0   0x....             LDR.N    R0,??DataTable12_8
   \   00000AA2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000AA6   0x....             LDR.N    R1,??DataTable12_10
   \   00000AA8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000AAC   0x1808             ADDS     R0,R1,R0
   \   00000AAE   0x2102             MOVS     R1,#+2
   \   00000AB0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000AB4   0x.... 0x....      LDR.W    R1,??DataTable15
   \   00000AB8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000ABC   0x1A40             SUBS     R0,R0,R1
   \   00000ABE   0x2801             CMP      R0,#+1
   \   00000AC0   0xDB14             BLT.N    ??get_front_35
    979            {
    980              if((front_l_flag == 0)&&(front_r_flag == 1))////lR_count>3
   \   00000AC2   0x....             LDR.N    R0,??DataTable12_6
   \   00000AC4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000AC8   0x2800             CMP      R0,#+0
   \   00000ACA   0xD123             BNE.N    ??get_front_36
   \   00000ACC   0x....             LDR.N    R0,??DataTable12_9
   \   00000ACE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000AD2   0x2801             CMP      R0,#+1
   \   00000AD4   0xD11E             BNE.N    ??get_front_36
    981              {
    982                front_l=front_l_last;//-((front_l+front_r)/2-front_reference);//未测试
   \   00000AD6   0x....             LDR.N    R0,??DataTable12_8
   \   00000AD8   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000ADC   0x8809             LDRH     R1,[R1, #+0]
   \   00000ADE   0x8001             STRH     R1,[R0, #+0]
    983                front_r=front_r_last;//-((front_l+front_r)/2-front_reference);
   \   00000AE0   0x....             LDR.N    R0,??DataTable12_10
   \   00000AE2   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000AE6   0x8809             LDRH     R1,[R1, #+0]
   \   00000AE8   0x8001             STRH     R1,[R0, #+0]
   \   00000AEA   0xE013             B.N      ??get_front_36
    984              }
    985            }
    986            else //if((front_l+front_r)/2-front_reference<0)
    987            {
    988              if((front_l_flag == 1)&&(front_r_flag == 0))////Lr_count>3
   \                     ??get_front_35:
   \   00000AEC   0x....             LDR.N    R0,??DataTable12_6
   \   00000AEE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000AF2   0x2801             CMP      R0,#+1
   \   00000AF4   0xD10E             BNE.N    ??get_front_36
   \   00000AF6   0x....             LDR.N    R0,??DataTable12_9
   \   00000AF8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000AFC   0x2800             CMP      R0,#+0
   \   00000AFE   0xD109             BNE.N    ??get_front_36
    989              {
    990                front_l=front_l_last;//-((front_l+front_r)/2-front_reference);
   \   00000B00   0x....             LDR.N    R0,??DataTable12_8
   \   00000B02   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000B06   0x8809             LDRH     R1,[R1, #+0]
   \   00000B08   0x8001             STRH     R1,[R0, #+0]
    991                front_r=front_r_last;//-((front_l+front_r)/2-front_reference);
   \   00000B0A   0x....             LDR.N    R0,??DataTable12_10
   \   00000B0C   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000B10   0x8809             LDRH     R1,[R1, #+0]
   \   00000B12   0x8001             STRH     R1,[R0, #+0]
    992              }
    993            }
    994            //---------------------------------------
    995            
    996            //!!!程序bug,在十字弯斜冲出赛道
    997            if(front_l>front_r)
   \                     ??get_front_36:
   \   00000B14   0x....             LDR.N    R0,??DataTable12_10
   \   00000B16   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000B1A   0x....             LDR.N    R1,??DataTable12_8
   \   00000B1C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000B20   0x4288             CMP      R0,R1
   \   00000B22   0xDA09             BGE.N    ??get_front_37
    998            {
    999                front_l=front_l_last;
   \   00000B24   0x....             LDR.N    R0,??DataTable12_8
   \   00000B26   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000B2A   0x8809             LDRH     R1,[R1, #+0]
   \   00000B2C   0x8001             STRH     R1,[R0, #+0]
   1000                front_r=front_r_last;
   \   00000B2E   0x....             LDR.N    R0,??DataTable12_10
   \   00000B30   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000B34   0x8809             LDRH     R1,[R1, #+0]
   \   00000B36   0x8001             STRH     R1,[R0, #+0]
   1001            }
   1002            
   1003            
   1004            
   1005              cl_f = (front_l+front_r)/2;
   \                     ??get_front_37:
   \   00000B38   0x....             LDR.N    R0,??DataTable12_8
   \   00000B3A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000B3E   0x....             LDR.N    R1,??DataTable12_10
   \   00000B40   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000B44   0x1808             ADDS     R0,R1,R0
   \   00000B46   0x2102             MOVS     R1,#+2
   \   00000B48   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000B4C   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   00000B50   0x8008             STRH     R0,[R1, #+0]
   1006              front_OFFSET = cl_f - front_reference;
   \   00000B52   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000B56   0x8800             LDRH     R0,[R0, #+0]
   \   00000B58   0x.... 0x....      LDR.W    R1,??DataTable15
   \   00000B5C   0x8809             LDRH     R1,[R1, #+0]
   \   00000B5E   0x1A40             SUBS     R0,R0,R1
   \   00000B60   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   00000B64   0x8008             STRH     R0,[R1, #+0]
   1007              
   1008              cl_f_pre = cl_f;
   \   00000B66   0x....             LDR.N    R0,??DataTable12_19
   \   00000B68   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   00000B6C   0x8809             LDRH     R1,[R1, #+0]
   \   00000B6E   0x8001             STRH     R1,[R0, #+0]
   1009              
   1010              front_l_fg_last=front_l_flag;
   \   00000B70   0x....             LDR.N    R0,??DataTable12_16
   \   00000B72   0x....             LDR.N    R1,??DataTable12_6
   \   00000B74   0x8809             LDRH     R1,[R1, #+0]
   \   00000B76   0x8001             STRH     R1,[R0, #+0]
   1011              front_r_fg_last=front_r_flag;
   \   00000B78   0x....             LDR.N    R0,??DataTable12_17
   \   00000B7A   0x....             LDR.N    R1,??DataTable12_9
   \   00000B7C   0x8809             LDRH     R1,[R1, #+0]
   \   00000B7E   0x8001             STRH     R1,[R0, #+0]
   1012              
   1013              front_l_pre4=front_l_pre3;
   \   00000B80   0x.... 0x....      LDR.W    R0,??DataTable15_3
   \   00000B84   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \   00000B88   0x8809             LDRH     R1,[R1, #+0]
   \   00000B8A   0x8001             STRH     R1,[R0, #+0]
   1014              front_r_pre4=front_r_pre3;
   \   00000B8C   0x.... 0x....      LDR.W    R0,??DataTable15_5
   \   00000B90   0x.... 0x....      LDR.W    R1,??DataTable15_6
   \   00000B94   0x8809             LDRH     R1,[R1, #+0]
   \   00000B96   0x8001             STRH     R1,[R0, #+0]
   1015              front_l_pre3=front_l_pre2;
   \   00000B98   0x.... 0x....      LDR.W    R0,??DataTable15_4
   \   00000B9C   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   00000BA0   0x8809             LDRH     R1,[R1, #+0]
   \   00000BA2   0x8001             STRH     R1,[R0, #+0]
   1016              front_r_pre3=front_r_pre2;
   \   00000BA4   0x.... 0x....      LDR.W    R0,??DataTable15_6
   \   00000BA8   0x.... 0x....      LDR.W    R1,??DataTable14_10
   \   00000BAC   0x8809             LDRH     R1,[R1, #+0]
   \   00000BAE   0x8001             STRH     R1,[R0, #+0]
   1017              front_l_pre2=front_l_pre1;
   \   00000BB0   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   00000BB4   0x.... 0x....      LDR.W    R1,??DataTable14_6
   \   00000BB8   0x8809             LDRH     R1,[R1, #+0]
   \   00000BBA   0x8001             STRH     R1,[R0, #+0]
   1018              front_r_pre2=front_r_pre1;
   \   00000BBC   0x.... 0x....      LDR.W    R0,??DataTable14_10
   \   00000BC0   0x.... 0x....      LDR.W    R1,??DataTable14_9
   \   00000BC4   0x8809             LDRH     R1,[R1, #+0]
   \   00000BC6   0x8001             STRH     R1,[R0, #+0]
   1019              front_l_pre1=front_l_last;
   \   00000BC8   0x.... 0x....      LDR.W    R0,??DataTable14_6
   \   00000BCC   0x....             LDR.N    R1,??DataTable13_1
   \   00000BCE   0x8809             LDRH     R1,[R1, #+0]
   \   00000BD0   0x8001             STRH     R1,[R0, #+0]
   1020              front_r_pre1=front_r_last;
   \   00000BD2   0x.... 0x....      LDR.W    R0,??DataTable14_9
   \   00000BD6   0x....             LDR.N    R1,??DataTable13_2
   \   00000BD8   0x8809             LDRH     R1,[R1, #+0]
   \   00000BDA   0x8001             STRH     R1,[R0, #+0]
   1021              front_l_last=front_l;
   \   00000BDC   0x....             LDR.N    R0,??DataTable13_1
   \   00000BDE   0x....             LDR.N    R1,??DataTable12_8
   \   00000BE0   0x8809             LDRH     R1,[R1, #+0]
   \   00000BE2   0x8001             STRH     R1,[R0, #+0]
   1022              front_r_last=front_r;
   \   00000BE4   0x....             LDR.N    R0,??DataTable13_2
   \   00000BE6   0x....             LDR.N    R1,??DataTable12_10
   \   00000BE8   0x8809             LDRH     R1,[R1, #+0]
   \   00000BEA   0x8001             STRH     R1,[R0, #+0]
   1023              
   1024              front_OFFSET_pre10 = front_OFFSET_pre9;
   \   00000BEC   0x.... 0x....      LDR.W    R0,??DataTable18
   \   00000BF0   0x.... 0x....      LDR.W    R1,??DataTable18_1
   \   00000BF4   0x8809             LDRH     R1,[R1, #+0]
   \   00000BF6   0x8001             STRH     R1,[R0, #+0]
   1025              front_OFFSET_pre9 = front_OFFSET_pre8;
   \   00000BF8   0x.... 0x....      LDR.W    R0,??DataTable18_1
   \   00000BFC   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000C00   0x8809             LDRH     R1,[R1, #+0]
   \   00000C02   0x8001             STRH     R1,[R0, #+0]
   1026              front_OFFSET_pre8 = front_OFFSET_pre7;
   \   00000C04   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000C08   0x.... 0x....      LDR.W    R1,??DataTable18_3
   \   00000C0C   0x8809             LDRH     R1,[R1, #+0]
   \   00000C0E   0x8001             STRH     R1,[R0, #+0]
   1027              front_OFFSET_pre7 = front_OFFSET_pre6;
   \   00000C10   0x.... 0x....      LDR.W    R0,??DataTable18_3
   \   00000C14   0x.... 0x....      LDR.W    R1,??DataTable18_4
   \   00000C18   0x8809             LDRH     R1,[R1, #+0]
   \   00000C1A   0x8001             STRH     R1,[R0, #+0]
   1028              front_OFFSET_pre6 = front_OFFSET_pre5;
   \   00000C1C   0x.... 0x....      LDR.W    R0,??DataTable18_4
   \   00000C20   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000C24   0x8809             LDRH     R1,[R1, #+0]
   \   00000C26   0x8001             STRH     R1,[R0, #+0]
   1029              front_OFFSET_pre5 = front_OFFSET_pre4;
   \   00000C28   0x.... 0x....      LDR.W    R0,??DataTable18_5
   \   00000C2C   0x.... 0x....      LDR.W    R1,??DataTable18_6
   \   00000C30   0x8809             LDRH     R1,[R1, #+0]
   \   00000C32   0x8001             STRH     R1,[R0, #+0]
   1030              front_OFFSET_pre4 = front_OFFSET_pre3;
   \   00000C34   0x.... 0x....      LDR.W    R0,??DataTable18_6
   \   00000C38   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000C3C   0x8809             LDRH     R1,[R1, #+0]
   \   00000C3E   0x8001             STRH     R1,[R0, #+0]
   1031              front_OFFSET_pre3 = front_OFFSET_pre2;
   \   00000C40   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000C44   0x.... 0x....      LDR.W    R1,??DataTable18_8
   \   00000C48   0x8809             LDRH     R1,[R1, #+0]
   \   00000C4A   0x8001             STRH     R1,[R0, #+0]
   1032              front_OFFSET_pre2 = front_OFFSET_pre1;
   \   00000C4C   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   00000C50   0x.... 0x....      LDR.W    R1,??DataTable18_9
   \   00000C54   0x8809             LDRH     R1,[R1, #+0]
   \   00000C56   0x8001             STRH     R1,[R0, #+0]
   1033              front_OFFSET_pre1 = front_OFFSET;
   \   00000C58   0x.... 0x....      LDR.W    R0,??DataTable18_9
   \   00000C5C   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   00000C60   0x8809             LDRH     R1,[R1, #+0]
   \   00000C62   0x8001             STRH     R1,[R0, #+0]
   1034              
   1035              //d_err1 = front_OFFSET - front_OFFSET_pre1;恒为0
   1036              d_err1 = front_OFFSET_pre1 - front_OFFSET_pre2;
   \   00000C64   0x.... 0x....      LDR.W    R0,??DataTable18_9
   \   00000C68   0x8800             LDRH     R0,[R0, #+0]
   \   00000C6A   0x.... 0x....      LDR.W    R1,??DataTable18_8
   \   00000C6E   0x8809             LDRH     R1,[R1, #+0]
   \   00000C70   0x1A40             SUBS     R0,R0,R1
   \   00000C72   0x.... 0x....      LDR.W    R1,??DataTable18_10
   \   00000C76   0x8008             STRH     R0,[R1, #+0]
   1037              d_err2 = front_OFFSET_pre2 - front_OFFSET_pre3;
   \   00000C78   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   00000C7C   0x8800             LDRH     R0,[R0, #+0]
   \   00000C7E   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   00000C82   0x8809             LDRH     R1,[R1, #+0]
   \   00000C84   0x1A40             SUBS     R0,R0,R1
   \   00000C86   0x.... 0x....      LDR.W    R1,??DataTable18_11
   \   00000C8A   0x8008             STRH     R0,[R1, #+0]
   1038              d_err3 = front_OFFSET_pre3 - front_OFFSET_pre4;
   \   00000C8C   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   00000C90   0x8800             LDRH     R0,[R0, #+0]
   \   00000C92   0x.... 0x....      LDR.W    R1,??DataTable18_6
   \   00000C96   0x8809             LDRH     R1,[R1, #+0]
   \   00000C98   0x1A40             SUBS     R0,R0,R1
   \   00000C9A   0x.... 0x....      LDR.W    R1,??DataTable19
   \   00000C9E   0x8008             STRH     R0,[R1, #+0]
   1039              d_err4 = front_OFFSET_pre4 - front_OFFSET_pre5;
   \   00000CA0   0x.... 0x....      LDR.W    R0,??DataTable18_6
   \   00000CA4   0x8800             LDRH     R0,[R0, #+0]
   \   00000CA6   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000CAA   0x8809             LDRH     R1,[R1, #+0]
   \   00000CAC   0x1A40             SUBS     R0,R0,R1
   \   00000CAE   0x.... 0x....      LDR.W    R1,??DataTable19_1
   \   00000CB2   0x8008             STRH     R0,[R1, #+0]
   1040              d_err5 = front_OFFSET_pre5 - front_OFFSET_pre6;
   \   00000CB4   0x.... 0x....      LDR.W    R0,??DataTable18_5
   \   00000CB8   0x8800             LDRH     R0,[R0, #+0]
   \   00000CBA   0x.... 0x....      LDR.W    R1,??DataTable18_4
   \   00000CBE   0x8809             LDRH     R1,[R1, #+0]
   \   00000CC0   0x1A40             SUBS     R0,R0,R1
   \   00000CC2   0x.... 0x....      LDR.W    R1,??DataTable19_2
   \   00000CC6   0x8008             STRH     R0,[R1, #+0]
   1041              d_err6 = front_OFFSET_pre6 - front_OFFSET_pre7;
   \   00000CC8   0x.... 0x....      LDR.W    R0,??DataTable18_4
   \   00000CCC   0x8800             LDRH     R0,[R0, #+0]
   \   00000CCE   0x.... 0x....      LDR.W    R1,??DataTable18_3
   \   00000CD2   0x8809             LDRH     R1,[R1, #+0]
   \   00000CD4   0x1A40             SUBS     R0,R0,R1
   \   00000CD6   0x.... 0x....      LDR.W    R1,??DataTable19_3
   \   00000CDA   0x8008             STRH     R0,[R1, #+0]
   1042              d_err7 = front_OFFSET_pre7 - front_OFFSET_pre8;
   \   00000CDC   0x.... 0x....      LDR.W    R0,??DataTable18_3
   \   00000CE0   0x8800             LDRH     R0,[R0, #+0]
   \   00000CE2   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000CE6   0x8809             LDRH     R1,[R1, #+0]
   \   00000CE8   0x1A40             SUBS     R0,R0,R1
   \   00000CEA   0x.... 0x....      LDR.W    R1,??DataTable19_4
   \   00000CEE   0x8008             STRH     R0,[R1, #+0]
   1043              d_err8 = front_OFFSET_pre8 - front_OFFSET_pre9;
   \   00000CF0   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000CF4   0x8800             LDRH     R0,[R0, #+0]
   \   00000CF6   0x.... 0x....      LDR.W    R1,??DataTable18_1
   \   00000CFA   0x8809             LDRH     R1,[R1, #+0]
   \   00000CFC   0x1A40             SUBS     R0,R0,R1
   \   00000CFE   0x.... 0x....      LDR.W    R1,??DataTable19_5
   \   00000D02   0x8008             STRH     R0,[R1, #+0]
   1044              d_err9 = front_OFFSET_pre9 - front_OFFSET_pre10;   
   \   00000D04   0x.... 0x....      LDR.W    R0,??DataTable18_1
   \   00000D08   0x8800             LDRH     R0,[R0, #+0]
   \   00000D0A   0x.... 0x....      LDR.W    R1,??DataTable18
   \   00000D0E   0x8809             LDRH     R1,[R1, #+0]
   \   00000D10   0x1A40             SUBS     R0,R0,R1
   \   00000D12   0x.... 0x....      LDR.W    R1,??DataTable19_6
   \   00000D16   0x8008             STRH     R0,[R1, #+0]
   1045          }
   \   00000D18   0xBD10             POP      {R4,PC}          ;; return
   1046          

   \                                 In section .text, align 2, keep-with-next
   1047          void route_type_F()
   1048          {
   \                     route_type_F:
   \   00000000   0xB430             PUSH     {R4,R5}
   1049            char i;
   1050            char fch_first=3;//赛道过渡
   \   00000002   0x2003             MOVS     R0,#+3
   1051            char label_count=6;
   \   00000004   0x2106             MOVS     R1,#+6
   1052            char fch_av_count=0;
   \   00000006   0x2200             MOVS     R2,#+0
   1053            
   1054            fangcha_f=0;
   \   00000008   0x.... 0x....      LDR.W    R3,??DataTable19_7
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0x801C             STRH     R4,[R3, #+0]
   1055            fangcha_qian_f=0;
   \   00000010   0x.... 0x....      LDR.W    R3,??DataTable19_8
   \   00000014   0x2400             MOVS     R4,#+0
   \   00000016   0x801C             STRH     R4,[R3, #+0]
   1056            fangcha_hou_f=0;
   \   00000018   0x.... 0x....      LDR.W    R3,??DataTable21
   \   0000001C   0x2400             MOVS     R4,#+0
   \   0000001E   0x801C             STRH     R4,[R3, #+0]
   1057            
   1058            fch_av_count = label_count - fch_first+1;
   \   00000020   0x1A0B             SUBS     R3,R1,R0
   \   00000022   0x1C5B             ADDS     R3,R3,#+1
   \   00000024   0x001A             MOVS     R2,R3
   1059            //刷新
   1060            route_f[0]=front_OFFSET;
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable19_9
   \   0000002A   0x.... 0x....      LDR.W    R4,??DataTable15_2
   \   0000002E   0x8824             LDRH     R4,[R4, #+0]
   \   00000030   0x801C             STRH     R4,[R3, #+0]
   1061            for(i=100;i>0;i--)
   \   00000032   0x2364             MOVS     R3,#+100
   \   00000034   0xE00C             B.N      ??route_type_F_0
   1062            {
   1063              route_f[i] = route_f[i-1];
   \                     ??route_type_F_1:
   \   00000036   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000038   0x.... 0x....      LDR.W    R4,??DataTable19_9
   \   0000003C   0xEB14 0x0443      ADDS     R4,R4,R3, LSL #+1
   \   00000040   0xF834 0x4C02      LDRH     R4,[R4, #-2]
   \   00000044   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000046   0x.... 0x....      LDR.W    R5,??DataTable19_9
   \   0000004A   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1064            }
   \   0000004E   0x1E5B             SUBS     R3,R3,#+1
   \                     ??route_type_F_0:
   \   00000050   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000052   0x2B01             CMP      R3,#+1
   \   00000054   0xD2EF             BCS.N    ??route_type_F_1
   1065            //前3
   1066            for(i=0;i<3;i++)
   \   00000056   0x2300             MOVS     R3,#+0
   \   00000058   0xE00C             B.N      ??route_type_F_2
   1067            {
   1068              route_ave_f += route_f[i]; 
   \                     ??route_type_F_3:
   \   0000005A   0x.... 0x....      LDR.W    R4,??DataTable19_10
   \   0000005E   0x8824             LDRH     R4,[R4, #+0]
   \   00000060   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000062   0x.... 0x....      LDR.W    R5,??DataTable19_9
   \   00000066   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000006A   0x192C             ADDS     R4,R5,R4
   \   0000006C   0x.... 0x....      LDR.W    R5,??DataTable19_10
   \   00000070   0x802C             STRH     R4,[R5, #+0]
   1069            }
   \   00000072   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_2:
   \   00000074   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000076   0x2B03             CMP      R3,#+3
   \   00000078   0xD3EF             BCC.N    ??route_type_F_3
   1070            route_ave_f = route_ave_f/3;
   \   0000007A   0x.... 0x....      LDR.W    R3,??DataTable19_10
   \   0000007E   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000082   0x2403             MOVS     R4,#+3
   \   00000084   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   00000088   0x.... 0x....      LDR.W    R4,??DataTable19_10
   \   0000008C   0x8023             STRH     R3,[R4, #+0]
   1071            
   1072            for(i=0;i<3;i++)
   \   0000008E   0x2300             MOVS     R3,#+0
   \   00000090   0xE010             B.N      ??route_type_F_4
   1073            {
   1074              chafang_f[i] = route_f[i]*route_f[i];//changshi
   \                     ??route_type_F_5:
   \   00000092   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000094   0x.... 0x....      LDR.W    R4,??DataTable19_9
   \   00000098   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   0000009C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000009E   0x.... 0x....      LDR.W    R5,??DataTable19_9
   \   000000A2   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   000000A6   0x436C             MULS     R4,R5,R4
   \   000000A8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000AA   0x.... 0x....      LDR.W    R5,??DataTable19_11
   \   000000AE   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1075            }
   \   000000B2   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_4:
   \   000000B4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000B6   0x2B03             CMP      R3,#+3
   \   000000B8   0xD3EB             BCC.N    ??route_type_F_5
   1076            for(i=0;i<3;i++)
   \   000000BA   0x2300             MOVS     R3,#+0
   \   000000BC   0xE00C             B.N      ??route_type_F_6
   1077            {
   1078              fangcha_f += chafang_f[i]; 
   \                     ??route_type_F_7:
   \   000000BE   0x.... 0x....      LDR.W    R4,??DataTable19_7
   \   000000C2   0x8824             LDRH     R4,[R4, #+0]
   \   000000C4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000C6   0x.... 0x....      LDR.W    R5,??DataTable19_11
   \   000000CA   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   000000CE   0x192C             ADDS     R4,R5,R4
   \   000000D0   0x.... 0x....      LDR.W    R5,??DataTable19_7
   \   000000D4   0x802C             STRH     R4,[R5, #+0]
   1079            }
   \   000000D6   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_6:
   \   000000D8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000DA   0x2B03             CMP      R3,#+3
   \   000000DC   0xD3EF             BCC.N    ??route_type_F_7
   1080            fangcha_qian_f = fangcha_f/3;
   \   000000DE   0x.... 0x....      LDR.W    R3,??DataTable19_7
   \   000000E2   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   000000E6   0x2403             MOVS     R4,#+3
   \   000000E8   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   000000EC   0x.... 0x....      LDR.W    R4,??DataTable19_8
   \   000000F0   0x8023             STRH     R3,[R4, #+0]
   1081            
   1082            
   1083            //清0
   1084            route_ave_f=0;
   \   000000F2   0x.... 0x....      LDR.W    R3,??DataTable19_10
   \   000000F6   0x2400             MOVS     R4,#+0
   \   000000F8   0x801C             STRH     R4,[R3, #+0]
   1085            for(i=0;i<5;i++)
   \   000000FA   0x2300             MOVS     R3,#+0
   \   000000FC   0xE006             B.N      ??route_type_F_8
   1086            {
   1087              chafang_f[i] = 0;
   \                     ??route_type_F_9:
   \   000000FE   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000100   0x.... 0x....      LDR.W    R4,??DataTable19_11
   \   00000104   0x2500             MOVS     R5,#+0
   \   00000106   0xF824 0x5013      STRH     R5,[R4, R3, LSL #+1]
   1088            }
   \   0000010A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_8:
   \   0000010C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000010E   0x2B05             CMP      R3,#+5
   \   00000110   0xD3F5             BCC.N    ??route_type_F_9
   1089            fangcha_f=0;
   \   00000112   0x.... 0x....      LDR.W    R3,??DataTable19_7
   \   00000116   0x2400             MOVS     R4,#+0
   \   00000118   0x801C             STRH     R4,[R3, #+0]
   1090            
   1091            //后续
   1092            for(i=fch_first;i<label_count;i++)
   \   0000011A   0x0003             MOVS     R3,R0
   \   0000011C   0xE00C             B.N      ??route_type_F_10
   1093            {
   1094              route_ave_f += route_f[i]; 
   \                     ??route_type_F_11:
   \   0000011E   0x.... 0x....      LDR.W    R4,??DataTable19_10
   \   00000122   0x8824             LDRH     R4,[R4, #+0]
   \   00000124   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000126   0x.... 0x....      LDR.W    R5,??DataTable19_9
   \   0000012A   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000012E   0x192C             ADDS     R4,R5,R4
   \   00000130   0x.... 0x....      LDR.W    R5,??DataTable19_10
   \   00000134   0x802C             STRH     R4,[R5, #+0]
   1095            }
   \   00000136   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_10:
   \   00000138   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000013A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013C   0x428B             CMP      R3,R1
   \   0000013E   0xD3EE             BCC.N    ??route_type_F_11
   1096            route_ave_f = route_ave_f/label_count;
   \   00000140   0x.... 0x....      LDR.W    R3,??DataTable19_10
   \   00000144   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000148   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014A   0xFB93 0xF3F1      SDIV     R3,R3,R1
   \   0000014E   0x.... 0x....      LDR.W    R4,??DataTable19_10
   \   00000152   0x8023             STRH     R3,[R4, #+0]
   1097            
   1098            for(i=fch_first;i<label_count;i++)
   \   00000154   0x0003             MOVS     R3,R0
   \   00000156   0xE010             B.N      ??route_type_F_12
   1099            {
   1100              chafang_f[i] = route_f[i]*route_f[i];
   \                     ??route_type_F_13:
   \   00000158   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000015A   0x.... 0x....      LDR.W    R4,??DataTable19_9
   \   0000015E   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   00000162   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000164   0x.... 0x....      LDR.W    R5,??DataTable19_9
   \   00000168   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000016C   0x436C             MULS     R4,R5,R4
   \   0000016E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000170   0x.... 0x....      LDR.W    R5,??DataTable19_11
   \   00000174   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1101            }
   \   00000178   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_12:
   \   0000017A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000017C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000017E   0x428B             CMP      R3,R1
   \   00000180   0xD3EA             BCC.N    ??route_type_F_13
   1102            for(i=fch_first;i<label_count;i++)
   \   00000182   0x0003             MOVS     R3,R0
   \   00000184   0xE00C             B.N      ??route_type_F_14
   1103            {
   1104              fangcha_f += chafang_f[i]; 
   \                     ??route_type_F_15:
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable19_7
   \   0000018A   0x8800             LDRH     R0,[R0, #+0]
   \   0000018C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000018E   0x.... 0x....      LDR.W    R4,??DataTable19_11
   \   00000192   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   00000196   0x1820             ADDS     R0,R4,R0
   \   00000198   0x.... 0x....      LDR.W    R4,??DataTable19_7
   \   0000019C   0x8020             STRH     R0,[R4, #+0]
   1105            }
   \   0000019E   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_14:
   \   000001A0   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001A2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A4   0x428B             CMP      R3,R1
   \   000001A6   0xD3EE             BCC.N    ??route_type_F_15
   1106            fangcha_hou_f = fangcha_f/fch_av_count;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable19_7
   \   000001AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001B0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001B2   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \   000001B6   0x.... 0x....      LDR.W    R1,??DataTable21
   \   000001BA   0x8008             STRH     R0,[R1, #+0]
   1107          }
   \   000001BC   0xBC30             POP      {R4,R5}
   \   000001BE   0x4770             BX       LR               ;; return
   1108          //----------------------------------

   \                                 In section .bss, align 2
   1109          int16  stop_flag=0;
   \                     stop_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1110          int16  stop_count=0;
   \                     stop_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1111          int16  black_l=0,black_r=0,zheng=0;
   \                     black_l:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     black_r:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zheng:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1112          int16  delay_count=0;
   \                     delay_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1113          int16  zhong=0;
   \                     zhong:
   \   00000000                      DS8 2
   1114          extern uint8  qpx_en;

   \                                 In section .text, align 2, keep-with-next
   1115          void get_fu()
   1116          {
   \                     get_fu:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
   1117            int16 i,j,ii=0,jj=0;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   1118            int16 jiang_l[10]={0},jiang_r[10]={0};
   \   00000008   0xA805             ADD      R0,SP,#+20
   \   0000000A   0x2114             MOVS     R1,#+20
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
   \   00000010   0xA800             ADD      R0,SP,#+0
   \   00000012   0x2114             MOVS     R1,#+20
   \   00000014   0x.... 0x....      BL       __aeabi_memclr4
   1119            
   1120            for(i=126;i>=2;i--)
   \   00000018   0x207E             MOVS     R0,#+126
   \   0000001A   0xE022             B.N      ??get_fu_0
   1121            {
   1122              if(Pixel_Z[i+1]==1&&Pixel_Z[i]==1&&Pixel_Z[i-1]==0&&Pixel_Z[i-2]==0)
   \                     ??get_fu_1:
   \   0000001C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable19_12
   \   00000022   0x1841             ADDS     R1,R0,R1
   \   00000024   0x7849             LDRB     R1,[R1, #+1]
   \   00000026   0x2901             CMP      R1,#+1
   \   00000028   0xD11A             BNE.N    ??get_fu_2
   \   0000002A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable19_12
   \   00000030   0x5C41             LDRB     R1,[R0, R1]
   \   00000032   0x2901             CMP      R1,#+1
   \   00000034   0xD114             BNE.N    ??get_fu_2
   \   00000036   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable19_12
   \   0000003C   0x1841             ADDS     R1,R0,R1
   \   0000003E   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000042   0x2900             CMP      R1,#+0
   \   00000044   0xD10C             BNE.N    ??get_fu_2
   \   00000046   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable19_12
   \   0000004C   0x1841             ADDS     R1,R0,R1
   \   0000004E   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000052   0x2900             CMP      R1,#+0
   \   00000054   0xD104             BNE.N    ??get_fu_2
   1123              {
   1124                jiang_l[ii++]=i;
   \   00000056   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000058   0xA905             ADD      R1,SP,#+20
   \   0000005A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000005E   0x1C64             ADDS     R4,R4,#+1
   1125              }
   1126            }
   \                     ??get_fu_2:
   \   00000060   0x1E40             SUBS     R0,R0,#+1
   \                     ??get_fu_0:
   \   00000062   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000064   0x2802             CMP      R0,#+2
   \   00000066   0xDAD9             BGE.N    ??get_fu_1
   1127            for(j=1;j<=125;j++)
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0xE021             B.N      ??get_fu_3
   1128            {
   1129              if(Pixel_Z[j-1]==1&&Pixel_Z[j]==1&&Pixel_Z[j+1]==0&&Pixel_Z[j+2]==0)
   \                     ??get_fu_4:
   \   0000006C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable19_12
   \   00000072   0x1841             ADDS     R1,R0,R1
   \   00000074   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000078   0x2901             CMP      R1,#+1
   \   0000007A   0xD118             BNE.N    ??get_fu_5
   \   0000007C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable19_12
   \   00000082   0x5C41             LDRB     R1,[R0, R1]
   \   00000084   0x2901             CMP      R1,#+1
   \   00000086   0xD112             BNE.N    ??get_fu_5
   \   00000088   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable19_12
   \   0000008E   0x1841             ADDS     R1,R0,R1
   \   00000090   0x7849             LDRB     R1,[R1, #+1]
   \   00000092   0x2900             CMP      R1,#+0
   \   00000094   0xD10B             BNE.N    ??get_fu_5
   \   00000096   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable19_12
   \   0000009C   0x1841             ADDS     R1,R0,R1
   \   0000009E   0x7889             LDRB     R1,[R1, #+2]
   \   000000A0   0x2900             CMP      R1,#+0
   \   000000A2   0xD104             BNE.N    ??get_fu_5
   1130              {
   1131                jiang_r[jj++]=j;
   \   000000A4   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000000A6   0xA900             ADD      R1,SP,#+0
   \   000000A8   0xF821 0x0015      STRH     R0,[R1, R5, LSL #+1]
   \   000000AC   0x1C6D             ADDS     R5,R5,#+1
   1132              }
   1133            }
   \                     ??get_fu_5:
   \   000000AE   0x1C40             ADDS     R0,R0,#+1
   \                     ??get_fu_3:
   \   000000B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000B2   0x287E             CMP      R0,#+126
   \   000000B4   0xDBDA             BLT.N    ??get_fu_4
   1134            
   1135            if(ii==3&&jj==3)
   \   000000B6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000B8   0x2C03             CMP      R4,#+3
   \   000000BA   0xD157             BNE.N    ??get_fu_6
   \   000000BC   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000000BE   0x2D03             CMP      R5,#+3
   \   000000C0   0xD154             BNE.N    ??get_fu_6
   1136            {
   1137              black_l=jiang_l[1]-jiang_r[0];
   \   000000C2   0xF8BD 0x0016      LDRH     R0,[SP, #+22]
   \   000000C6   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   000000CA   0x1A40             SUBS     R0,R0,R1
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable22
   \   000000D0   0x8008             STRH     R0,[R1, #+0]
   1138              black_r=jiang_l[0]-jiang_r[1];
   \   000000D2   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   000000D6   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000000DA   0x1A40             SUBS     R0,R0,R1
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable22_1
   \   000000E0   0x8008             STRH     R0,[R1, #+0]
   1139              
   1140              zhong=jiang_r[1]-jiang_l[1];
   \   000000E2   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000000E6   0xF8BD 0x1016      LDRH     R1,[SP, #+22]
   \   000000EA   0x1A40             SUBS     R0,R0,R1
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable22_2
   \   000000F0   0x8008             STRH     R0,[R1, #+0]
   1141              
   1142              zheng=(jiang_l[2]+jiang_r[2])/2;
   \   000000F2   0xF9BD 0x0018      LDRSH    R0,[SP, #+24]
   \   000000F6   0xF9BD 0x1004      LDRSH    R1,[SP, #+4]
   \   000000FA   0xFA01 0xF080      SXTAH    R0,R1,R0
   \   000000FE   0x2102             MOVS     R1,#+2
   \   00000100   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable22_3
   \   00000108   0x8008             STRH     R0,[R1, #+0]
   1143              
   1144              if(Abs(zong_reference-zheng)<10&&(zhong>=zong_width*9/40-5&&zhong<=zong_width*9/40+5))
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable22_4
   \   0000010E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable22_3
   \   00000116   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000011A   0x1A40             SUBS     R0,R0,R1
   \   0000011C   0x.... 0x....      BL       Abs
   \   00000120   0x280A             CMP      R0,#+10
   \   00000122   0xDA23             BGE.N    ??get_fu_6
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable22_5
   \   00000128   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000012C   0x2109             MOVS     R1,#+9
   \   0000012E   0x4348             MULS     R0,R1,R0
   \   00000130   0x2128             MOVS     R1,#+40
   \   00000132   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000136   0x1F40             SUBS     R0,R0,#+5
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable22_2
   \   0000013C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000140   0x4281             CMP      R1,R0
   \   00000142   0xDB13             BLT.N    ??get_fu_6
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable22_5
   \   00000148   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000014C   0x2109             MOVS     R1,#+9
   \   0000014E   0x4348             MULS     R0,R1,R0
   \   00000150   0x2128             MOVS     R1,#+40
   \   00000152   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000156   0x1D40             ADDS     R0,R0,#+5
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable22_2
   \   0000015C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000160   0x4288             CMP      R0,R1
   \   00000162   0xDB03             BLT.N    ??get_fu_6
   1145                stop_flag=1;
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   00000168   0x2101             MOVS     R1,#+1
   \   0000016A   0x8001             STRH     R1,[R0, #+0]
   1146            }
   1147           
   1148            if(stop_flag==1) 
   \                     ??get_fu_6:
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   00000170   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000174   0x2801             CMP      R0,#+1
   \   00000176   0xD119             BNE.N    ??get_fu_7
   1149            {
   1150              if(delay_count++>15)
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable22_7
   \   0000017C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000180   0x1C41             ADDS     R1,R0,#+1
   \   00000182   0x.... 0x....      LDR.W    R2,??DataTable22_7
   \   00000186   0x8011             STRH     R1,[R2, #+0]
   \   00000188   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000018A   0x2810             CMP      R0,#+16
   \   0000018C   0xDB0E             BLT.N    ??get_fu_7
   1151              {
   1152                delay_count=0;
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable22_7
   \   00000192   0x2100             MOVS     R1,#+0
   \   00000194   0x8001             STRH     R1,[R0, #+0]
   1153                stop_flag=0;
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   0000019A   0x2100             MOVS     R1,#+0
   \   0000019C   0x8001             STRH     R1,[R0, #+0]
   1154                ++stop_count;
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable23
   \   000001A2   0x8800             LDRH     R0,[R0, #+0]
   \   000001A4   0x1C40             ADDS     R0,R0,#+1
   \   000001A6   0x.... 0x....      LDR.W    R1,??DataTable23
   \   000001AA   0x8008             STRH     R0,[R1, #+0]
   1155              }
   1156            } 
   1157          }
   \                     ??get_fu_7:
   \   000001AC   0xB00B             ADD      SP,SP,#+44
   \   000001AE   0xBD30             POP      {R4,R5,PC}       ;; return
   1158          
   1159          //--------------------------------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
   1160          void get_zong()
   1161          {
   \                     get_zong:
   \   00000000   0xB410             PUSH     {R4}
   1162              int16 i,j;
   1163              int16 zong_l_flag,zong_r_flag;
   1164              uint8 hold_flag=0;
   \   00000002   0x2300             MOVS     R3,#+0
   1165              
   1166              hold_flag=0;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x000B             MOVS     R3,R1
   1167              
   1168              for(i=126;i>=4;i--)
   \   00000008   0x217E             MOVS     R1,#+126
   \   0000000A   0xE001             B.N      ??get_zong_0
   1169              {
   1170                if((Pixel_Z[i]==1)&&(Pixel_Z[i-1]==0)&&(Pixel_Z[i-2]==0)&&(Pixel_Z[i-3]==0))
   1171                {
   1172                  zong_l = i-2;
   1173                  zong_l_flag = 1;
   1174                  break;
   1175                }
   1176                zong_l_flag = 0;
   \                     ??get_zong_1:
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x1E49             SUBS     R1,R1,#+1
   \                     ??get_zong_0:
   \   00000010   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000012   0x2904             CMP      R1,#+4
   \   00000014   0xDB22             BLT.N    ??get_zong_2
   \   00000016   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable19_12
   \   0000001C   0x5C8A             LDRB     R2,[R1, R2]
   \   0000001E   0x2A01             CMP      R2,#+1
   \   00000020   0xD1F4             BNE.N    ??get_zong_1
   \   00000022   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable19_12
   \   00000028   0x188A             ADDS     R2,R1,R2
   \   0000002A   0xF812 0x2C01      LDRB     R2,[R2, #-1]
   \   0000002E   0x2A00             CMP      R2,#+0
   \   00000030   0xD1EC             BNE.N    ??get_zong_1
   \   00000032   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable19_12
   \   00000038   0x188A             ADDS     R2,R1,R2
   \   0000003A   0xF812 0x2C02      LDRB     R2,[R2, #-2]
   \   0000003E   0x2A00             CMP      R2,#+0
   \   00000040   0xD1E4             BNE.N    ??get_zong_1
   \   00000042   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000044   0x.... 0x....      LDR.W    R2,??DataTable19_12
   \   00000048   0x188A             ADDS     R2,R1,R2
   \   0000004A   0xF812 0x2C03      LDRB     R2,[R2, #-3]
   \   0000004E   0x2A00             CMP      R2,#+0
   \   00000050   0xD1DC             BNE.N    ??get_zong_1
   \   00000052   0x1E8A             SUBS     R2,R1,#+2
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable22_8
   \   00000058   0x801A             STRH     R2,[R3, #+0]
   \   0000005A   0x2201             MOVS     R2,#+1
   1177              }
   1178              for(j=1;j<123;j++)
   \                     ??get_zong_2:
   \   0000005C   0x2301             MOVS     R3,#+1
   \   0000005E   0xE001             B.N      ??get_zong_3
   1179              {
   1180                 if((Pixel_Z[j]==1)&&(Pixel_Z[j+1]==0)&&(Pixel_Z[j+2]==0)&&(Pixel_Z[j+3]==0))
   1181                {
   1182                  zong_r = j+2;
   1183                  zong_r_flag = 1;
   1184                  break;
   1185                }
   1186                zong_r_flag = 0;
   \                     ??get_zong_4:
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x1C5B             ADDS     R3,R3,#+1
   \                     ??get_zong_3:
   \   00000064   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000066   0x2B7B             CMP      R3,#+123
   \   00000068   0xDA1F             BGE.N    ??get_zong_5
   \   0000006A   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable19_12
   \   00000070   0x5C18             LDRB     R0,[R3, R0]
   \   00000072   0x2801             CMP      R0,#+1
   \   00000074   0xD1F4             BNE.N    ??get_zong_4
   \   00000076   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable19_12
   \   0000007C   0x1818             ADDS     R0,R3,R0
   \   0000007E   0x7840             LDRB     R0,[R0, #+1]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD1ED             BNE.N    ??get_zong_4
   \   00000084   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable19_12
   \   0000008A   0x1818             ADDS     R0,R3,R0
   \   0000008C   0x7880             LDRB     R0,[R0, #+2]
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xD1E6             BNE.N    ??get_zong_4
   \   00000092   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable19_12
   \   00000098   0x1818             ADDS     R0,R3,R0
   \   0000009A   0x78C0             LDRB     R0,[R0, #+3]
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD1DF             BNE.N    ??get_zong_4
   \   000000A0   0x1C98             ADDS     R0,R3,#+2
   \   000000A2   0x.... 0x....      LDR.W    R4,??DataTable23_1
   \   000000A6   0x8020             STRH     R0,[R4, #+0]
   \   000000A8   0x2001             MOVS     R0,#+1
   1187              }
   1188              //A.采到左右数据
   1189              if((zong_l_flag == 1)&&(zong_r_flag == 1))
   \                     ??get_zong_5:
   \   000000AA   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000AC   0x2A01             CMP      R2,#+1
   \   000000AE   0xD15A             BNE.N    ??get_zong_6
   \   000000B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000B2   0x2801             CMP      R0,#+1
   \   000000B4   0xD157             BNE.N    ??get_zong_6
   1190              {  
   1191                //a.当看到的全部是背景时,由于背景灰度值不均匀,二值化后依然能误采到黑白跳变 
   1192                if((high_aver_f-low_aver_f)>45)
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable23_2
   \   000000BA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000BE   0x.... 0x....      LDR.W    R2,??DataTable23_3
   \   000000C2   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000000C6   0x1A80             SUBS     R0,R0,R2
   \   000000C8   0x282E             CMP      R0,#+46
   \   000000CA   0xDB3F             BLT.N    ??get_zong_7
   1193                {
   1194                  //a.1.左值大于右值,两边数据都丢失     
   1195                  if(zong_l>zong_r)            
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   000000D0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000D4   0x.... 0x....      LDR.W    R2,??DataTable22_8
   \   000000D8   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000000DC   0x4290             CMP      R0,R2
   \   000000DE   0xF280 0x80E7      BGE.W    ??get_zong_8
   1196                  {  
   1197                    //向右拐弯时看到左边赛道,右边沿发生较大位移,右值假象,左值真实
   1198                    if(zong_r_last-zong_r>30)
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable23_4
   \   000000E6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000EA   0x.... 0x....      LDR.W    R2,??DataTable23_1
   \   000000EE   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000000F2   0x1A80             SUBS     R0,R0,R2
   \   000000F4   0x281F             CMP      R0,#+31
   \   000000F6   0xDB0E             BLT.N    ??get_zong_9
   1199                    {
   1200                      zong_l=i-2;
   \   000000F8   0x1E88             SUBS     R0,R1,#+2
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable22_8
   \   000000FE   0x8008             STRH     R0,[R1, #+0]
   1201                      zong_r=zong_l+zong_width;
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   00000104   0x8800             LDRH     R0,[R0, #+0]
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   0000010A   0x8809             LDRH     R1,[R1, #+0]
   \   0000010C   0x1808             ADDS     R0,R1,R0
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable23_1
   \   00000112   0x8008             STRH     R0,[R1, #+0]
   \   00000114   0xE0CC             B.N      ??get_zong_8
   1202                    }
   1203                    //向左拐弯时看到右边赛道,左边沿发生较大位移,左值假象,右值真实
   1204                    else if(zong_l-zong_l_last>30)
   \                     ??get_zong_9:
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   0000011A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   00000122   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000126   0x1A40             SUBS     R0,R0,R1
   \   00000128   0x281F             CMP      R0,#+31
   \   0000012A   0xF2C0 0x80C1      BLT.W    ??get_zong_8
   1205                    {
   1206                      zong_r=j+2;
   \   0000012E   0x1C98             ADDS     R0,R3,#+2
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable23_1
   \   00000134   0x8008             STRH     R0,[R1, #+0]
   1207                      zong_l=zong_r-zong_width;
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   0000013A   0x8800             LDRH     R0,[R0, #+0]
   \   0000013C   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   00000140   0x8809             LDRH     R1,[R1, #+0]
   \   00000142   0x1A40             SUBS     R0,R0,R1
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable22_8
   \   00000148   0x8008             STRH     R0,[R1, #+0]
   \   0000014A   0xE0B1             B.N      ??get_zong_8
   1208                    }         
   1209                  }       
   1210                  //a.2.右值大于左值,正常
   1211                  else
   1212                  {}
   1213                }
   1214                //b.
   1215                else
   1216                {
   1217                  zong_l=zong_l_last;
   \                     ??get_zong_7:
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   00000154   0x8809             LDRH     R1,[R1, #+0]
   \   00000156   0x8001             STRH     R1,[R0, #+0]
   1218                  zong_r=zong_r_last;
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   0000015C   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   00000160   0x8809             LDRH     R1,[R1, #+0]
   \   00000162   0x8001             STRH     R1,[R0, #+0]
   \   00000164   0xE0A4             B.N      ??get_zong_8
   1219                  //hold_flag=1;
   1220                }   
   1221              }
   1222              //B.右数据丢失
   1223              else if((zong_l_flag == 1)&&(zong_r_flag == 0))
   \                     ??get_zong_6:
   \   00000166   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000168   0x2A01             CMP      R2,#+1
   \   0000016A   0xD13C             BNE.N    ??get_zong_10
   \   0000016C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000016E   0x2800             CMP      R0,#+0
   \   00000170   0xD139             BNE.N    ??get_zong_10
   1224              {
   1225                if((high_aver_f-low_aver_f)>45)
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable23_2
   \   00000176   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000017A   0x.... 0x....      LDR.W    R1,??DataTable23_3
   \   0000017E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000182   0x1A40             SUBS     R0,R0,R1
   \   00000184   0x282E             CMP      R0,#+46
   \   00000186   0xDB21             BLT.N    ??get_zong_11
   1226                {
   1227                  if(zong_l>zong_r_last)
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable23_4
   \   0000018C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000190   0x.... 0x....      LDR.W    R1,??DataTable22_8
   \   00000194   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000198   0x4288             CMP      R0,R1
   \   0000019A   0xDA0C             BGE.N    ??get_zong_12
   1228                  {
   1229                    zong_l=zong_l_last;
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   000001A4   0x8809             LDRH     R1,[R1, #+0]
   \   000001A6   0x8001             STRH     R1,[R0, #+0]
   1230                    zong_r=zong_r_last;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   000001B0   0x8809             LDRH     R1,[R1, #+0]
   \   000001B2   0x8001             STRH     R1,[R0, #+0]
   \   000001B4   0xE07C             B.N      ??get_zong_8
   1231                    //hold_flag=1;
   1232                  }
   1233                  else 
   1234                  {
   1235                    zong_r =zong_l+zong_width; 
   \                     ??get_zong_12:
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   000001BA   0x8800             LDRH     R0,[R0, #+0]
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   000001C0   0x8809             LDRH     R1,[R1, #+0]
   \   000001C2   0x1808             ADDS     R0,R1,R0
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable23_1
   \   000001C8   0x8008             STRH     R0,[R1, #+0]
   \   000001CA   0xE071             B.N      ??get_zong_8
   1236                  }
   1237                  /*
   1238                  else
   1239                  {
   1240                    //在“十字弯”处大偏差
   1241                    if(front_l<127-front_width)
   1242                    {
   1243                      front_l=front_l_last+1;
   1244                      front_r=front_r_last+1;
   1245                    } 
   1246                    else 
   1247                    {
   1248                      front_r =front_l+front_width; 
   1249                    }
   1250                  }
   1251                  */
   1252                } 
   1253                else
   1254                {
   1255                  zong_l=zong_l_last;
   \                     ??get_zong_11:
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   000001D0   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   000001D4   0x8809             LDRH     R1,[R1, #+0]
   \   000001D6   0x8001             STRH     R1,[R0, #+0]
   1256                  zong_r=zong_r_last;
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   000001E0   0x8809             LDRH     R1,[R1, #+0]
   \   000001E2   0x8001             STRH     R1,[R0, #+0]
   \   000001E4   0xE064             B.N      ??get_zong_8
   1257                  //hold_flag=1;
   1258                }
   1259              }
   1260              //C.左数据丢
   1261              else if((zong_l_flag == 0)&&(zong_r_flag == 1))
   \                     ??get_zong_10:
   \   000001E6   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000001E8   0x2A00             CMP      R2,#+0
   \   000001EA   0xD13C             BNE.N    ??get_zong_13
   \   000001EC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001EE   0x2801             CMP      R0,#+1
   \   000001F0   0xD139             BNE.N    ??get_zong_13
   1262              {
   1263                if((high_aver_f-low_aver_f)>45)
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable23_2
   \   000001F6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable23_3
   \   000001FE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000202   0x1A40             SUBS     R0,R0,R1
   \   00000204   0x282E             CMP      R0,#+46
   \   00000206   0xDB21             BLT.N    ??get_zong_14
   1264                {
   1265                  if(zong_r<zong_l_last)
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   0000020C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000210   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   00000214   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000218   0x4288             CMP      R0,R1
   \   0000021A   0xDA0C             BGE.N    ??get_zong_15
   1266                  {
   1267                    zong_l=zong_l_last;
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   00000220   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   00000224   0x8809             LDRH     R1,[R1, #+0]
   \   00000226   0x8001             STRH     R1,[R0, #+0]
   1268                    zong_r=zong_r_last;
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   00000230   0x8809             LDRH     R1,[R1, #+0]
   \   00000232   0x8001             STRH     R1,[R0, #+0]
   \   00000234   0xE03C             B.N      ??get_zong_8
   1269                    //hold_flag=1;
   1270                  }
   1271                  else
   1272                  {
   1273                     zong_l=front_r-zong_width;
   \                     ??get_zong_15:
   \   00000236   0x.... 0x....      LDR.W    R0,??DataTable23_6
   \   0000023A   0x8800             LDRH     R0,[R0, #+0]
   \   0000023C   0x.... 0x....      LDR.W    R1,??DataTable22_5
   \   00000240   0x8809             LDRH     R1,[R1, #+0]
   \   00000242   0x1A40             SUBS     R0,R0,R1
   \   00000244   0x.... 0x....      LDR.W    R1,??DataTable22_8
   \   00000248   0x8008             STRH     R0,[R1, #+0]
   \   0000024A   0xE031             B.N      ??get_zong_8
   1274                  }
   1275                  /*
   1276                  else
   1277                  {  //在“十字弯”处大偏差
   1278                     if(front_r>front_width)//路径，每次入弯的效果
   1279                     {
   1280                       front_l=front_l_last-1;
   1281                       front_r=front_r_last-1;
   1282                     } 
   1283                     else
   1284                     {
   1285                       front_l=front_r-front_width;
   1286                     }
   1287                  }
   1288                  */
   1289                }
   1290                else
   1291                {
   1292                  zong_l=zong_l_last;
   \                     ??get_zong_14:
   \   0000024C   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   00000254   0x8809             LDRH     R1,[R1, #+0]
   \   00000256   0x8001             STRH     R1,[R0, #+0]
   1293                  zong_r=zong_r_last;
   \   00000258   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   0000025C   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   00000260   0x8809             LDRH     R1,[R1, #+0]
   \   00000262   0x8001             STRH     R1,[R0, #+0]
   \   00000264   0xE024             B.N      ??get_zong_8
   1294                  //hold_flag=1;
   1295                }
   1296              }
   1297              //D.两边数据都丢失
   1298              else if((zong_l_flag == 0)&&(zong_r_flag == 0))
   \                     ??get_zong_13:
   \   00000266   0x4310             ORRS     R0,R0,R2
   \   00000268   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000026A   0x2800             CMP      R0,#+0
   \   0000026C   0xD120             BNE.N    ??get_zong_8
   1299              {
   1300                if(zong_l_last>63||zong_r_last<64)
   \   0000026E   0x.... 0x....      LDR.W    R0,??DataTable23_5
   \   00000272   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000276   0x2840             CMP      R0,#+64
   \   00000278   0xDA05             BGE.N    ??get_zong_16
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable23_4
   \   0000027E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000282   0x2840             CMP      R0,#+64
   \   00000284   0xDA0C             BGE.N    ??get_zong_17
   1301                {
   1302                  zong_l=zong_l_last;
   \                     ??get_zong_16:
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   0000028A   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   0000028E   0x8809             LDRH     R1,[R1, #+0]
   \   00000290   0x8001             STRH     R1,[R0, #+0]
   1303                  zong_r=zong_r_last;
   \   00000292   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   00000296   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   0000029A   0x8809             LDRH     R1,[R1, #+0]
   \   0000029C   0x8001             STRH     R1,[R0, #+0]
   \   0000029E   0xE007             B.N      ??get_zong_8
   1304                  //hold_flag=1;
   1305                }
   1306                else
   1307                {
   1308                  zong_l=0;
   \                     ??get_zong_17:
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   000002A4   0x2100             MOVS     R1,#+0
   \   000002A6   0x8001             STRH     R1,[R0, #+0]
   1309                  zong_r=127;
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   000002AC   0x217F             MOVS     R1,#+127
   \   000002AE   0x8001             STRH     R1,[R0, #+0]
   1310                }
   1311              }
   1312              cl_z = (zong_l+zong_r)/2;
   \                     ??get_zong_8:
   \   000002B0   0x.... 0x....      LDR.W    R0,??DataTable22_8
   \   000002B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002B8   0x.... 0x....      LDR.W    R1,??DataTable23_1
   \   000002BC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002C0   0x1808             ADDS     R0,R1,R0
   \   000002C2   0x2102             MOVS     R1,#+2
   \   000002C4   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002C8   0x.... 0x....      LDR.W    R1,??DataTable23_7
   \   000002CC   0x8008             STRH     R0,[R1, #+0]
   1313              zong_OFFSET = cl_z-zong_reference;
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable23_7
   \   000002D2   0x8800             LDRH     R0,[R0, #+0]
   \   000002D4   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   000002D8   0x8809             LDRH     R1,[R1, #+0]
   \   000002DA   0x1A40             SUBS     R0,R0,R1
   \   000002DC   0x.... 0x....      LDR.W    R1,??DataTable23_8
   \   000002E0   0x8008             STRH     R0,[R1, #+0]
   1314              
   1315              //if(hold_flag==1) zong_OFFSET=zong_OFFSET*k_out;
   1316                
   1317              
   1318              zong_l_last=zong_l;
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable23_5
   \   000002E6   0x.... 0x....      LDR.W    R1,??DataTable22_8
   \   000002EA   0x8809             LDRH     R1,[R1, #+0]
   \   000002EC   0x8001             STRH     R1,[R0, #+0]
   1319              zong_r_last=zong_r;
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable23_4
   \   000002F2   0x.... 0x....      LDR.W    R1,??DataTable23_1
   \   000002F6   0x8809             LDRH     R1,[R1, #+0]
   \   000002F8   0x8001             STRH     R1,[R0, #+0]
   1320              zong_l_pre=zong_l_last;
   \   000002FA   0x.... 0x....      LDR.W    R0,??DataTable23_9
   \   000002FE   0x.... 0x....      LDR.W    R1,??DataTable23_5
   \   00000302   0x8809             LDRH     R1,[R1, #+0]
   \   00000304   0x8001             STRH     R1,[R0, #+0]
   1321              zong_r_pre=zong_r_last;
   \   00000306   0x.... 0x....      LDR.W    R0,??DataTable23_10
   \   0000030A   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   0000030E   0x8809             LDRH     R1,[R1, #+0]
   \   00000310   0x8001             STRH     R1,[R0, #+0]
   1322              
   1323              zong_OFFSET_pre10 = zong_OFFSET_pre9;
   \   00000312   0x.... 0x....      LDR.W    R0,??DataTable23_11
   \   00000316   0x.... 0x....      LDR.W    R1,??DataTable23_12
   \   0000031A   0x8809             LDRH     R1,[R1, #+0]
   \   0000031C   0x8001             STRH     R1,[R0, #+0]
   1324              zong_OFFSET_pre9 = zong_OFFSET_pre8;
   \   0000031E   0x.... 0x....      LDR.W    R0,??DataTable23_12
   \   00000322   0x.... 0x....      LDR.W    R1,??DataTable23_13
   \   00000326   0x8809             LDRH     R1,[R1, #+0]
   \   00000328   0x8001             STRH     R1,[R0, #+0]
   1325              zong_OFFSET_pre8 = zong_OFFSET_pre7;
   \   0000032A   0x.... 0x....      LDR.W    R0,??DataTable23_13
   \   0000032E   0x.... 0x....      LDR.W    R1,??DataTable23_14
   \   00000332   0x8809             LDRH     R1,[R1, #+0]
   \   00000334   0x8001             STRH     R1,[R0, #+0]
   1326              zong_OFFSET_pre7 = zong_OFFSET_pre6;
   \   00000336   0x.... 0x....      LDR.W    R0,??DataTable23_14
   \   0000033A   0x.... 0x....      LDR.W    R1,??DataTable23_15
   \   0000033E   0x8809             LDRH     R1,[R1, #+0]
   \   00000340   0x8001             STRH     R1,[R0, #+0]
   1327              zong_OFFSET_pre6 = zong_OFFSET_pre5;
   \   00000342   0x.... 0x....      LDR.W    R0,??DataTable23_15
   \   00000346   0x.... 0x....      LDR.W    R1,??DataTable23_16
   \   0000034A   0x8809             LDRH     R1,[R1, #+0]
   \   0000034C   0x8001             STRH     R1,[R0, #+0]
   1328              zong_OFFSET_pre5 = zong_OFFSET_pre4;
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable23_16
   \   00000352   0x.... 0x....      LDR.W    R1,??DataTable23_17
   \   00000356   0x8809             LDRH     R1,[R1, #+0]
   \   00000358   0x8001             STRH     R1,[R0, #+0]
   1329              zong_OFFSET_pre4 = zong_OFFSET_pre3;
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable23_17
   \   0000035E   0x.... 0x....      LDR.W    R1,??DataTable23_18
   \   00000362   0x8809             LDRH     R1,[R1, #+0]
   \   00000364   0x8001             STRH     R1,[R0, #+0]
   1330              zong_OFFSET_pre3 = zong_OFFSET_pre2;
   \   00000366   0x.... 0x....      LDR.W    R0,??DataTable23_18
   \   0000036A   0x.... 0x....      LDR.W    R1,??DataTable23_19
   \   0000036E   0x8809             LDRH     R1,[R1, #+0]
   \   00000370   0x8001             STRH     R1,[R0, #+0]
   1331              zong_OFFSET_pre2 = zong_OFFSET_pre1;
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable23_19
   \   00000376   0x.... 0x....      LDR.W    R1,??DataTable23_20
   \   0000037A   0x8809             LDRH     R1,[R1, #+0]
   \   0000037C   0x8001             STRH     R1,[R0, #+0]
   1332              zong_OFFSET_pre1 = zong_OFFSET;
   \   0000037E   0x.... 0x....      LDR.W    R0,??DataTable23_20
   \   00000382   0x.... 0x....      LDR.W    R1,??DataTable23_8
   \   00000386   0x8809             LDRH     R1,[R1, #+0]
   \   00000388   0x8001             STRH     R1,[R0, #+0]
   1333              
   1334              //d_err1 = front_OFFSET - front_OFFSET_pre1;恒为0
   1335              z_err1 = zong_OFFSET_pre1 - zong_OFFSET_pre2;
   \   0000038A   0x.... 0x....      LDR.W    R0,??DataTable23_20
   \   0000038E   0x8800             LDRH     R0,[R0, #+0]
   \   00000390   0x.... 0x....      LDR.W    R1,??DataTable23_19
   \   00000394   0x8809             LDRH     R1,[R1, #+0]
   \   00000396   0x1A40             SUBS     R0,R0,R1
   \   00000398   0x.... 0x....      LDR.W    R1,??DataTable23_21
   \   0000039C   0x8008             STRH     R0,[R1, #+0]
   1336              z_err2 = zong_OFFSET_pre2 - zong_OFFSET_pre3;
   \   0000039E   0x.... 0x....      LDR.W    R0,??DataTable23_19
   \   000003A2   0x8800             LDRH     R0,[R0, #+0]
   \   000003A4   0x.... 0x....      LDR.W    R1,??DataTable23_18
   \   000003A8   0x8809             LDRH     R1,[R1, #+0]
   \   000003AA   0x1A40             SUBS     R0,R0,R1
   \   000003AC   0x.... 0x....      LDR.W    R1,??DataTable23_22
   \   000003B0   0x8008             STRH     R0,[R1, #+0]
   1337              z_err3 = zong_OFFSET_pre3 - zong_OFFSET_pre4;
   \   000003B2   0x.... 0x....      LDR.W    R0,??DataTable23_18
   \   000003B6   0x8800             LDRH     R0,[R0, #+0]
   \   000003B8   0x.... 0x....      LDR.W    R1,??DataTable23_17
   \   000003BC   0x8809             LDRH     R1,[R1, #+0]
   \   000003BE   0x1A40             SUBS     R0,R0,R1
   \   000003C0   0x.... 0x....      LDR.W    R1,??DataTable23_23
   \   000003C4   0x8008             STRH     R0,[R1, #+0]
   1338              z_err4 = zong_OFFSET_pre4 - zong_OFFSET_pre5;
   \   000003C6   0x.... 0x....      LDR.W    R0,??DataTable23_17
   \   000003CA   0x8800             LDRH     R0,[R0, #+0]
   \   000003CC   0x.... 0x....      LDR.W    R1,??DataTable23_16
   \   000003D0   0x8809             LDRH     R1,[R1, #+0]
   \   000003D2   0x1A40             SUBS     R0,R0,R1
   \   000003D4   0x.... 0x....      LDR.W    R1,??DataTable23_24
   \   000003D8   0x8008             STRH     R0,[R1, #+0]
   1339              z_err5 = zong_OFFSET_pre5 - zong_OFFSET_pre6;
   \   000003DA   0x.... 0x....      LDR.W    R0,??DataTable23_16
   \   000003DE   0x8800             LDRH     R0,[R0, #+0]
   \   000003E0   0x.... 0x....      LDR.W    R1,??DataTable23_15
   \   000003E4   0x8809             LDRH     R1,[R1, #+0]
   \   000003E6   0x1A40             SUBS     R0,R0,R1
   \   000003E8   0x.... 0x....      LDR.W    R1,??DataTable23_25
   \   000003EC   0x8008             STRH     R0,[R1, #+0]
   1340              z_err6 = zong_OFFSET_pre6 - zong_OFFSET_pre7;
   \   000003EE   0x.... 0x....      LDR.W    R0,??DataTable23_15
   \   000003F2   0x8800             LDRH     R0,[R0, #+0]
   \   000003F4   0x.... 0x....      LDR.W    R1,??DataTable23_14
   \   000003F8   0x8809             LDRH     R1,[R1, #+0]
   \   000003FA   0x1A40             SUBS     R0,R0,R1
   \   000003FC   0x.... 0x....      LDR.W    R1,??DataTable23_26
   \   00000400   0x8008             STRH     R0,[R1, #+0]
   1341              z_err7 = zong_OFFSET_pre7 - zong_OFFSET_pre8;
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable23_14
   \   00000406   0x8800             LDRH     R0,[R0, #+0]
   \   00000408   0x.... 0x....      LDR.W    R1,??DataTable23_13
   \   0000040C   0x8809             LDRH     R1,[R1, #+0]
   \   0000040E   0x1A40             SUBS     R0,R0,R1
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable23_27
   \   00000414   0x8008             STRH     R0,[R1, #+0]
   1342              z_err8 = zong_OFFSET_pre8 - zong_OFFSET_pre9;
   \   00000416   0x.... 0x....      LDR.W    R0,??DataTable23_13
   \   0000041A   0x8800             LDRH     R0,[R0, #+0]
   \   0000041C   0x.... 0x....      LDR.W    R1,??DataTable23_12
   \   00000420   0x8809             LDRH     R1,[R1, #+0]
   \   00000422   0x1A40             SUBS     R0,R0,R1
   \   00000424   0x.... 0x....      LDR.W    R1,??DataTable23_28
   \   00000428   0x8008             STRH     R0,[R1, #+0]
   1343              z_err9 = zong_OFFSET_pre9 - zong_OFFSET_pre10;  
   \   0000042A   0x.... 0x....      LDR.W    R0,??DataTable23_12
   \   0000042E   0x8800             LDRH     R0,[R0, #+0]
   \   00000430   0x.... 0x....      LDR.W    R1,??DataTable23_11
   \   00000434   0x8809             LDRH     R1,[R1, #+0]
   \   00000436   0x1A40             SUBS     R0,R0,R1
   \   00000438   0x.... 0x....      LDR.W    R1,??DataTable25
   \   0000043C   0x8008             STRH     R0,[R1, #+0]
   1344          }
   \   0000043E   0xBC10             POP      {R4}
   \   00000440   0x4770             BX       LR               ;; return
   1345          

   \                                 In section .bss, align 4
   1346          int16 route_z[100]={0};
   \                     route_z:
   \   00000000                      DS8 200

   \                                 In section .bss, align 4
   1347          int16 chafang_z[100]={0};
   \                     chafang_z:
   \   00000000                      DS8 200

   \                                 In section .bss, align 2
   1348          int16 route_ave_z=0;
   \                     route_ave_z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1349          int16 fangcha_z=0,fangcha_qian_z=0,fangcha_hou_z=0;
   \                     fangcha_z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     fangcha_qian_z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     fangcha_hou_z:
   \   00000000                      DS8 2
   1350          

   \                                 In section .text, align 2, keep-with-next
   1351          void route_type_Z()
   1352          {
   \                     route_type_Z:
   \   00000000   0xB430             PUSH     {R4,R5}
   1353            char i;
   1354            char fch_first=3;//赛道过渡
   \   00000002   0x2003             MOVS     R0,#+3
   1355            char label_count=6;
   \   00000004   0x2106             MOVS     R1,#+6
   1356            char fch_av_count=0;
   \   00000006   0x2200             MOVS     R2,#+0
   1357            
   1358            fangcha_z=0;
   \   00000008   0x.... 0x....      LDR.W    R3,??DataTable23_29
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0x801C             STRH     R4,[R3, #+0]
   1359            fangcha_qian_z=0;
   \   00000010   0x.... 0x....      LDR.W    R3,??DataTable23_30
   \   00000014   0x2400             MOVS     R4,#+0
   \   00000016   0x801C             STRH     R4,[R3, #+0]
   1360            fangcha_hou_z=0;
   \   00000018   0x.... 0x....      LDR.W    R3,??DataTable25_1
   \   0000001C   0x2400             MOVS     R4,#+0
   \   0000001E   0x801C             STRH     R4,[R3, #+0]
   1361            
   1362            fch_av_count = label_count - fch_first+1;
   \   00000020   0x1A0B             SUBS     R3,R1,R0
   \   00000022   0x1C5B             ADDS     R3,R3,#+1
   \   00000024   0x001A             MOVS     R2,R3
   1363            //刷新
   1364            route_z[0]=zong_OFFSET;
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable23_31
   \   0000002A   0x.... 0x....      LDR.W    R4,??DataTable23_8
   \   0000002E   0x8824             LDRH     R4,[R4, #+0]
   \   00000030   0x801C             STRH     R4,[R3, #+0]
   1365            for(i=100;i>0;i--)
   \   00000032   0x2364             MOVS     R3,#+100
   \   00000034   0xE00C             B.N      ??route_type_Z_0
   1366            {
   1367              route_z[i] = route_z[i-1];
   \                     ??route_type_Z_1:
   \   00000036   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000038   0x.... 0x....      LDR.W    R4,??DataTable23_31
   \   0000003C   0xEB14 0x0443      ADDS     R4,R4,R3, LSL #+1
   \   00000040   0xF834 0x4C02      LDRH     R4,[R4, #-2]
   \   00000044   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000046   0x.... 0x....      LDR.W    R5,??DataTable23_31
   \   0000004A   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1368            }
   \   0000004E   0x1E5B             SUBS     R3,R3,#+1
   \                     ??route_type_Z_0:
   \   00000050   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000052   0x2B01             CMP      R3,#+1
   \   00000054   0xD2EF             BCS.N    ??route_type_Z_1
   1369            //前3
   1370            for(i=0;i<3;i++)
   \   00000056   0x2300             MOVS     R3,#+0
   \   00000058   0xE00C             B.N      ??route_type_Z_2
   1371            {
   1372              route_ave_z += route_z[i]; 
   \                     ??route_type_Z_3:
   \   0000005A   0x.... 0x....      LDR.W    R4,??DataTable24
   \   0000005E   0x8824             LDRH     R4,[R4, #+0]
   \   00000060   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000062   0x.... 0x....      LDR.W    R5,??DataTable23_31
   \   00000066   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000006A   0x192C             ADDS     R4,R5,R4
   \   0000006C   0x.... 0x....      LDR.W    R5,??DataTable24
   \   00000070   0x802C             STRH     R4,[R5, #+0]
   1373            }
   \   00000072   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_2:
   \   00000074   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000076   0x2B03             CMP      R3,#+3
   \   00000078   0xD3EF             BCC.N    ??route_type_Z_3
   1374            route_ave_z = route_ave_z/3;
   \   0000007A   0x.... 0x....      LDR.W    R3,??DataTable24
   \   0000007E   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000082   0x2403             MOVS     R4,#+3
   \   00000084   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   00000088   0x.... 0x....      LDR.W    R4,??DataTable24
   \   0000008C   0x8023             STRH     R3,[R4, #+0]
   1375            
   1376            for(i=0;i<3;i++)
   \   0000008E   0x2300             MOVS     R3,#+0
   \   00000090   0xE010             B.N      ??route_type_Z_4
   1377            {
   1378              chafang_z[i] = route_z[i]*route_z[i];
   \                     ??route_type_Z_5:
   \   00000092   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000094   0x.... 0x....      LDR.W    R4,??DataTable23_31
   \   00000098   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   0000009C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000009E   0x.... 0x....      LDR.W    R5,??DataTable23_31
   \   000000A2   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   000000A6   0x436C             MULS     R4,R5,R4
   \   000000A8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000AA   0x.... 0x....      LDR.W    R5,??DataTable24_1
   \   000000AE   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1379            }
   \   000000B2   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_4:
   \   000000B4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000B6   0x2B03             CMP      R3,#+3
   \   000000B8   0xD3EB             BCC.N    ??route_type_Z_5
   1380            for(i=0;i<3;i++)
   \   000000BA   0x2300             MOVS     R3,#+0
   \   000000BC   0xE00C             B.N      ??route_type_Z_6
   1381            {
   1382              fangcha_z += chafang_z[i]; 
   \                     ??route_type_Z_7:
   \   000000BE   0x.... 0x....      LDR.W    R4,??DataTable23_29
   \   000000C2   0x8824             LDRH     R4,[R4, #+0]
   \   000000C4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000C6   0x.... 0x....      LDR.W    R5,??DataTable24_1
   \   000000CA   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   000000CE   0x192C             ADDS     R4,R5,R4
   \   000000D0   0x.... 0x....      LDR.W    R5,??DataTable23_29
   \   000000D4   0x802C             STRH     R4,[R5, #+0]
   1383            }
   \   000000D6   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_6:
   \   000000D8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000DA   0x2B03             CMP      R3,#+3
   \   000000DC   0xD3EF             BCC.N    ??route_type_Z_7
   1384            fangcha_qian_z = fangcha_z/3;
   \   000000DE   0x.... 0x....      LDR.W    R3,??DataTable23_29
   \   000000E2   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   000000E6   0x2403             MOVS     R4,#+3
   \   000000E8   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   000000EC   0x.... 0x....      LDR.W    R4,??DataTable23_30
   \   000000F0   0x8023             STRH     R3,[R4, #+0]
   1385            
   1386            
   1387            //清0
   1388            route_ave_z=0;
   \   000000F2   0x.... 0x....      LDR.W    R3,??DataTable24
   \   000000F6   0x2400             MOVS     R4,#+0
   \   000000F8   0x801C             STRH     R4,[R3, #+0]
   1389            for(i=0;i<5;i++)
   \   000000FA   0x2300             MOVS     R3,#+0
   \   000000FC   0xE006             B.N      ??route_type_Z_8
   1390            {
   1391              chafang_z[i] = 0;
   \                     ??route_type_Z_9:
   \   000000FE   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000100   0x.... 0x....      LDR.W    R4,??DataTable24_1
   \   00000104   0x2500             MOVS     R5,#+0
   \   00000106   0xF824 0x5013      STRH     R5,[R4, R3, LSL #+1]
   1392            }
   \   0000010A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_8:
   \   0000010C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000010E   0x2B05             CMP      R3,#+5
   \   00000110   0xD3F5             BCC.N    ??route_type_Z_9
   1393            fangcha_z=0;
   \   00000112   0x.... 0x....      LDR.W    R3,??DataTable23_29
   \   00000116   0x2400             MOVS     R4,#+0
   \   00000118   0x801C             STRH     R4,[R3, #+0]
   1394            
   1395            //后续
   1396            for(i=fch_first;i<label_count;i++)
   \   0000011A   0x0003             MOVS     R3,R0
   \   0000011C   0xE00C             B.N      ??route_type_Z_10
   1397            {
   1398              route_ave_z += route_z[i]; 
   \                     ??route_type_Z_11:
   \   0000011E   0x.... 0x....      LDR.W    R4,??DataTable24
   \   00000122   0x8824             LDRH     R4,[R4, #+0]
   \   00000124   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000126   0x.... 0x....      LDR.W    R5,??DataTable23_31
   \   0000012A   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000012E   0x192C             ADDS     R4,R5,R4
   \   00000130   0x.... 0x....      LDR.W    R5,??DataTable24
   \   00000134   0x802C             STRH     R4,[R5, #+0]
   1399            }
   \   00000136   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_10:
   \   00000138   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000013A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013C   0x428B             CMP      R3,R1
   \   0000013E   0xD3EE             BCC.N    ??route_type_Z_11
   1400            route_ave_z = route_ave_z/label_count;
   \   00000140   0x.... 0x....      LDR.W    R3,??DataTable24
   \   00000144   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000148   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014A   0xFB93 0xF3F1      SDIV     R3,R3,R1
   \   0000014E   0x.... 0x....      LDR.W    R4,??DataTable24
   \   00000152   0x8023             STRH     R3,[R4, #+0]
   1401            
   1402            for(i=fch_first;i<label_count;i++)
   \   00000154   0x0003             MOVS     R3,R0
   \   00000156   0xE010             B.N      ??route_type_Z_12
   1403            {
   1404              chafang_z[i] = route_z[i]*route_z[i];
   \                     ??route_type_Z_13:
   \   00000158   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000015A   0x.... 0x....      LDR.W    R4,??DataTable23_31
   \   0000015E   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   00000162   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000164   0x.... 0x....      LDR.W    R5,??DataTable23_31
   \   00000168   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000016C   0x436C             MULS     R4,R5,R4
   \   0000016E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000170   0x.... 0x....      LDR.W    R5,??DataTable24_1
   \   00000174   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1405            }
   \   00000178   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_12:
   \   0000017A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000017C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000017E   0x428B             CMP      R3,R1
   \   00000180   0xD3EA             BCC.N    ??route_type_Z_13
   1406            for(i=fch_first;i<label_count;i++)
   \   00000182   0x0003             MOVS     R3,R0
   \   00000184   0xE00C             B.N      ??route_type_Z_14
   1407            {
   1408              fangcha_z += chafang_z[i]; 
   \                     ??route_type_Z_15:
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable23_29
   \   0000018A   0x8800             LDRH     R0,[R0, #+0]
   \   0000018C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000018E   0x.... 0x....      LDR.W    R4,??DataTable24_1
   \   00000192   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   00000196   0x1820             ADDS     R0,R4,R0
   \   00000198   0x.... 0x....      LDR.W    R4,??DataTable23_29
   \   0000019C   0x8020             STRH     R0,[R4, #+0]
   1409            }
   \   0000019E   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_14:
   \   000001A0   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001A2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A4   0x428B             CMP      R3,R1
   \   000001A6   0xD3EE             BCC.N    ??route_type_Z_15
   1410            fangcha_hou_z = fangcha_z/fch_av_count;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable23_29
   \   000001AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001B0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001B2   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \   000001B6   0x.... 0x....      LDR.W    R1,??DataTable25_1
   \   000001BA   0x8008             STRH     R0,[R1, #+0]
   1411          }
   \   000001BC   0xBC30             POP      {R4,R5}
   \   000001BE   0x4770             BX       LR               ;; return
   1412          
   1413          
   1414          //---------------------------OLED显示--------------------------------//

   \                                 In section .text, align 2, keep-with-next
   1415          void LCD_show()
   1416          {   
   \                     LCD_show:
   \   00000000   0xB580             PUSH     {R7,LR}
   1417              //LCD_P8x16_number(10,0,front_reference);
   1418              LCD_P8x16_number(10,2,front_l);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   00000006   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000000A   0x2102             MOVS     R1,#+2
   \   0000000C   0x200A             MOVS     R0,#+10
   \   0000000E   0x.... 0x....      BL       LCD_P8x16_number
   1419              LCD_P8x16_number(70,2,front_r);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable23_6
   \   00000016   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000001A   0x2102             MOVS     R1,#+2
   \   0000001C   0x2046             MOVS     R0,#+70
   \   0000001E   0x.... 0x....      BL       LCD_P8x16_number
   1420          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
   1421          //----------------------------给CCDView发送图像------------------------//

   \                                 In section .text, align 2, keep-with-next
   1422          void SendImageData(uint8 * ImageData)
   1423          {
   \                     SendImageData:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1424              unsigned char i;
   1425              unsigned char crc = 0;
   \   00000004   0x2600             MOVS     R6,#+0
   1426              /* Send Data */
   1427              uart_send1(UART3,'*');
   \   00000006   0x212A             MOVS     R1,#+42
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable28  ;; 0x4006d000
   \   0000000C   0x.... 0x....      BL       uart_send1
   1428              uart_send1(UART3,'L');
   \   00000010   0x214C             MOVS     R1,#+76
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable28  ;; 0x4006d000
   \   00000016   0x.... 0x....      BL       uart_send1
   1429              uart_send1(UART3,'D');
   \   0000001A   0x2144             MOVS     R1,#+68
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable28  ;; 0x4006d000
   \   00000020   0x.... 0x....      BL       uart_send1
   1430          
   1431              SendHex(0);
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       SendHex
   1432              SendHex(0);
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       SendHex
   1433              SendHex(0);
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       SendHex
   1434              SendHex(0);
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       SendHex
   1435          
   1436              for(i=0; i<128; i++)
   \   0000003C   0x2500             MOVS     R5,#+0
   \   0000003E   0xE004             B.N      ??SendImageData_0
   1437              {
   1438                  SendHex(*ImageData ++);
   \                     ??SendImageData_1:
   \   00000040   0x7820             LDRB     R0,[R4, #+0]
   \   00000042   0x.... 0x....      BL       SendHex
   \   00000046   0x1C64             ADDS     R4,R4,#+1
   1439              }
   \   00000048   0x1C6D             ADDS     R5,R5,#+1
   \                     ??SendImageData_0:
   \   0000004A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004C   0x2D80             CMP      R5,#+128
   \   0000004E   0xD3F7             BCC.N    ??SendImageData_1
   1440              SendHex(crc);
   \   00000050   0x0030             MOVS     R0,R6
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x.... 0x....      BL       SendHex
   1441              uart_send1(UART3,'#');
   \   00000058   0x2123             MOVS     R1,#+35
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable28  ;; 0x4006d000
   \   0000005E   0x.... 0x....      BL       uart_send1
   1442          }
   \   00000062   0xBD70             POP      {R4-R6,PC}       ;; return
   1443          

   \                                 In section .text, align 2, keep-with-next
   1444          void SendHex(unsigned char hex)
   1445          {
   \                     SendHex:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1446            unsigned char temp;
   1447            temp = hex >> 4;
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x0920             LSRS     R0,R4,#+4
   1448            if(temp < 10)
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x280A             CMP      R0,#+10
   \   0000000C   0xD207             BCS.N    ??SendHex_0
   1449            {
   1450             uart_send1(UART3,temp + '0');
   \   0000000E   0xF110 0x0130      ADDS     R1,R0,#+48
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable28  ;; 0x4006d000
   \   00000018   0x.... 0x....      BL       uart_send1
   \   0000001C   0xE006             B.N      ??SendHex_1
   1451            }
   1452            else
   1453            {
   1454             uart_send1(UART3,temp - 10 + 'A');
   \                     ??SendHex_0:
   \   0000001E   0xF110 0x0137      ADDS     R1,R0,#+55
   \   00000022   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable28  ;; 0x4006d000
   \   00000028   0x.... 0x....      BL       uart_send1
   1455            }
   1456            temp = hex & 0x0F;
   \                     ??SendHex_1:
   \   0000002C   0xF014 0x000F      ANDS     R0,R4,#0xF
   1457            if(temp < 10)
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x280A             CMP      R0,#+10
   \   00000034   0xD207             BCS.N    ??SendHex_2
   1458            {
   1459             uart_send1(UART3,temp + '0');
   \   00000036   0xF110 0x0130      ADDS     R1,R0,#+48
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable28  ;; 0x4006d000
   \   00000040   0x.... 0x....      BL       uart_send1
   \   00000044   0xE006             B.N      ??SendHex_3
   1460            }
   1461            else
   1462            {
   1463             uart_send1(UART3,temp - 10 + 'A');
   \                     ??SendHex_2:
   \   00000046   0xF110 0x0137      ADDS     R1,R0,#+55
   \   0000004A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable28  ;; 0x4006d000
   \   00000050   0x.... 0x....      BL       uart_send1
   1464            }
   1465          }
   \                     ??SendHex_3:
   \   00000054   0xBD10             POP      {R4,PC}          ;; return
   1466          

   \                                 In section .text, align 4, keep-with-next
   1467          void SamplingDelay(void)//CCD延时程序 200ns
   1468          {
   \                     SamplingDelay:
   \   00000000   0xB081             SUB      SP,SP,#+4
   1469             volatile uint8 i;
   1470             for(i=0;i<1;i++)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000008   0xE006             B.N      ??SamplingDelay_0
   1471             {
   1472              asm("nop");
   \                     ??SamplingDelay_1:
   \   0000000A   0xBF00             nop              
   1473              asm("nop");
   \   0000000C   0xBF00             nop              
   1474             }
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x1C40             ADDS     R0,R0,#+1
   \   00000014   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \                     ??SamplingDelay_0:
   \   00000018   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD3F4             BCC.N    ??SamplingDelay_1
   1475          }
   \   00000020   0xB001             ADD      SP,SP,#+4
   \   00000022   0x4770             BX       LR               ;; return
   1476          //---------------------------------------舵机控制------------------------------------------//
   1477                         

   \                                 In section .bss, align 4
   1478                   int32      pulse_count=0,pulse_count_pre=0;
   \                     pulse_count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     pulse_count_pre:
   \   00000000                      DS8 4
   1479          extern   int16      fch_dp1,fch_dp2,fch_dp3;
   1480          #define  bolang     (fangcha_qian_f>100&&fangcha_qian_f<250)
   1481          extern   float      Kp,Kp_hold;
   1482          extern   float      Kd,Kd_hold;
   1483          extern   float      Ki,Ki_hold;
   1484          extern   float      Kp_ZW,Kp_WW,Kp_WZ,Kp_ZZ,Kp_BL;
   1485          extern   float      Kd_ZW,Kd_WW,Kd_WZ,Kd_ZZ,Kd_BL;

   \                                 In section .data, align 4
   1486                   float      k=0.02,t=0.0,chu=6.0;
   \                     k:
   \   00000000   0x3CA3D70A         DC32 3CA3D70AH

   \                                 In section .bss, align 4
   \                     t:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     chu:
   \   00000000   0x40C00000         DC32 40C00000H

   \                                 In section .bss, align 8
   1487                   double     delta_p=0.0;
   \                     delta_p:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
   1488                   double     I_sumerr=0.0;
   \                     I_sumerr:
   \   00000000                      DS8 8

   \                                 In section .data, align 2
   1489                   int16      ZHONG=4530;//2-4455;//1-4530;       
   \                     ZHONG:
   \   00000000   0x11B2             DC16 4530

   \                                 In section .data, align 2
   1490                   int16      xianfu=1300;
   \                     xianfu:
   \   00000000   0x0514             DC16 1300
   1491                   

   \                                 In section .text, align 2, keep-with-next
   1492          void SetServoVoltage()
   1493          {       
   \                     SetServoVoltage:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   1494                g_fDirectionControlOutOld = g_fDirectionControlOutNew;  
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable25_2
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable31
   \   0000000A   0x6809             LDR      R1,[R1, #+0]
   \   0000000C   0x6001             STR      R1,[R0, #+0]
   1495                
   1496                front_OFFSET_KZ = front_OFFSET;//P项！！！不能贸然地加偏差
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable25_3
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable25_4
   \   00000016   0x8809             LDRH     R1,[R1, #+0]
   \   00000018   0x8001             STRH     R1,[R0, #+0]
   1497                /*
   1498                if(front_OFFSET_KZ>100)
   1499                  front_OFFSET_KZ=100;
   1500                if(front_OFFSET_KZ<-100)
   1501                  front_OFFSET_KZ=-100;*/     
   1502                t=k*front_OFFSET_KZ; 
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable25_3
   \   0000001E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000022   0x.... 0x....      BL       __aeabi_i2f
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable25_5
   \   0000002A   0x6809             LDR      R1,[R1, #+0]
   \   0000002C   0x.... 0x....      BL       __aeabi_fmul
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable25_6
   \   00000034   0x6008             STR      R0,[R1, #+0]
   1503                delta_p=t-1/6*t*t*t+3*t*t*t*t*t;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable25_6
   \   0000003A   0x6801             LDR      R1,[R0, #+0]
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x.... 0x....      BL       __aeabi_fmul
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable25_6
   \   00000046   0x6809             LDR      R1,[R1, #+0]
   \   00000048   0x.... 0x....      BL       __aeabi_fmul
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable25_6
   \   00000050   0x6809             LDR      R1,[R1, #+0]
   \   00000052   0x.... 0x....      BL       __aeabi_fmul
   \   00000056   0x0001             MOVS     R1,R0
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable25_6
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x.... 0x....      BL       __aeabi_fsub
   \   00000062   0x0004             MOVS     R4,R0
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable25_6
   \   00000068   0x6801             LDR      R1,[R0, #+0]
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable25_7  ;; 0x40400000
   \   0000006E   0x.... 0x....      BL       __aeabi_fmul
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable25_6
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0x.... 0x....      BL       __aeabi_fmul
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable25_6
   \   00000080   0x6809             LDR      R1,[R1, #+0]
   \   00000082   0x.... 0x....      BL       __aeabi_fmul
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable25_6
   \   0000008A   0x6809             LDR      R1,[R1, #+0]
   \   0000008C   0x.... 0x....      BL       __aeabi_fmul
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable25_6
   \   00000094   0x6809             LDR      R1,[R1, #+0]
   \   00000096   0x.... 0x....      BL       __aeabi_fmul
   \   0000009A   0x0021             MOVS     R1,R4
   \   0000009C   0x.... 0x....      BL       __aeabi_fadd
   \   000000A0   0x.... 0x....      BL       __aeabi_f2d
   \   000000A4   0x.... 0x....      LDR.W    R2,??DataTable25_8
   \   000000A8   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
   1504                delta_p=delta_p/chu;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable25_9
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x.... 0x....      BL       __aeabi_f2d
   \   000000B6   0x0002             MOVS     R2,R0
   \   000000B8   0x000B             MOVS     R3,R1
   \   000000BA   0x.... 0x....      LDR.W    R4,??DataTable25_8
   \   000000BE   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   000000C2   0x.... 0x....      BL       __aeabi_ddiv
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable25_8
   \   000000CA   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
   1505                
   1506                if(delta_p>20)
   \   000000CE   0x.... 0x....      LDR.W    R2,??DataTable25_8
   \   000000D2   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000000D6   0x2201             MOVS     R2,#+1
   \   000000D8   0x.... 0x....      LDR.W    R3,??DataTable26  ;; 0x40340000
   \   000000DC   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000000E0   0xD806             BHI.N    ??SetServoVoltage_0
   1507                  delta_p=20;
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable25_8
   \   000000E6   0x2200             MOVS     R2,#+0
   \   000000E8   0x.... 0x....      LDR.W    R3,??DataTable26  ;; 0x40340000
   \   000000EC   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
   1508                if(delta_p<-20)
   \                     ??SetServoVoltage_0:
   \   000000F0   0x.... 0x....      LDR.W    R2,??DataTable25_8
   \   000000F4   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000000F8   0x2200             MOVS     R2,#+0
   \   000000FA   0x.... 0x....      LDR.W    R3,??DataTable26_1  ;; 0xc0340000
   \   000000FE   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000102   0xD206             BCS.N    ??SetServoVoltage_1
   1509                  delta_p=-20;
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable25_8
   \   00000108   0x2200             MOVS     R2,#+0
   \   0000010A   0x.... 0x....      LDR.W    R3,??DataTable26_1  ;; 0xc0340000
   \   0000010E   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
   1510                
   1511                if(delta_p<0) delta_p=-delta_p;
   \                     ??SetServoVoltage_1:
   \   00000112   0x.... 0x....      LDR.W    R2,??DataTable25_8
   \   00000116   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000011A   0x2200             MOVS     R2,#+0
   \   0000011C   0x2300             MOVS     R3,#+0
   \   0000011E   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000122   0xD209             BCS.N    ??SetServoVoltage_2
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable25_8
   \   00000128   0x.... 0x....      LDR.W    R1,??DataTable25_8
   \   0000012C   0xE9D1 0x2300      LDRD     R2,R3,[R1, #+0]
   \   00000130   0xF093 0x4300      EORS     R3,R3,#0x80000000
   \   00000134   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
   1512                
   1513                //Kp=Kp_hold+delta_p;
   1514                
   1515                //if((front_OFFSET_KZ_pre<0&&front_OFFSET_KZ>0)||(front_OFFSET_KZ_pre>0&&front_OFFSET_KZ<0))
   1516                  //I_sumerr=-front_OFFSET_KZ_pre;//I项 
   1517                
   1518                
   1519                D_err=front_OFFSET_KZ-front_OFFSET_KZ_pre;//D项
   \                     ??SetServoVoltage_2:
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable25_3
   \   0000013C   0x8800             LDRH     R0,[R0, #+0]
   \   0000013E   0x.... 0x....      LDR.W    R1,??DataTable28_1
   \   00000142   0x8809             LDRH     R1,[R1, #+0]
   \   00000144   0x1A40             SUBS     R0,R0,R1
   \   00000146   0x.... 0x....      LDR.W    R1,??DataTable27
   \   0000014A   0x8008             STRH     R0,[R1, #+0]
   1520                
   1521                if(ZZ_count>10)
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000150   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000154   0x280B             CMP      R0,#+11
   \   00000156   0xDB15             BLT.N    ??SetServoVoltage_3
   1522                  Kp=Kp_hold+(pulse_count/400)*Ki;
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0xF44F 0x71C8      MOV      R1,#+400
   \   00000162   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000166   0x.... 0x....      BL       __aeabi_i2f
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable28_2
   \   0000016E   0x6809             LDR      R1,[R1, #+0]
   \   00000170   0x.... 0x....      BL       __aeabi_fmul
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable28_3
   \   00000178   0x6809             LDR      R1,[R1, #+0]
   \   0000017A   0x.... 0x....      BL       __aeabi_fadd
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable28_4
   \   00000182   0x6008             STR      R0,[R1, #+0]
   1523                
   1524                servo_duty=(int16)(ZHONG+Kp*front_OFFSET_KZ+Ki*I_sumerr+Kd*D_err);
   \                     ??SetServoVoltage_3:
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable28_5
   \   00000188   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000018C   0x.... 0x....      BL       __aeabi_i2f
   \   00000190   0x0004             MOVS     R4,R0
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable25_3
   \   00000196   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000019A   0x.... 0x....      BL       __aeabi_i2f
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable28_4
   \   000001A2   0x6809             LDR      R1,[R1, #+0]
   \   000001A4   0x.... 0x....      BL       __aeabi_fmul
   \   000001A8   0x0021             MOVS     R1,R4
   \   000001AA   0x.... 0x....      BL       __aeabi_fadd
   \   000001AE   0x.... 0x....      BL       __aeabi_f2d
   \   000001B2   0x0004             MOVS     R4,R0
   \   000001B4   0x000D             MOVS     R5,R1
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable28_2
   \   000001BA   0x6800             LDR      R0,[R0, #+0]
   \   000001BC   0x.... 0x....      BL       __aeabi_f2d
   \   000001C0   0x.... 0x....      LDR.W    R6,??DataTable28_6
   \   000001C4   0xE9D6 0x2300      LDRD     R2,R3,[R6, #+0]
   \   000001C8   0x.... 0x....      BL       __aeabi_dmul
   \   000001CC   0x0022             MOVS     R2,R4
   \   000001CE   0x002B             MOVS     R3,R5
   \   000001D0   0x.... 0x....      BL       __aeabi_dadd
   \   000001D4   0x0004             MOVS     R4,R0
   \   000001D6   0x000D             MOVS     R5,R1
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable27
   \   000001DC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001E0   0x.... 0x....      BL       __aeabi_i2f
   \   000001E4   0x.... 0x....      LDR.W    R1,??DataTable28_7
   \   000001E8   0x6809             LDR      R1,[R1, #+0]
   \   000001EA   0x.... 0x....      BL       __aeabi_fmul
   \   000001EE   0x.... 0x....      BL       __aeabi_f2d
   \   000001F2   0x0022             MOVS     R2,R4
   \   000001F4   0x002B             MOVS     R3,R5
   \   000001F6   0x.... 0x....      BL       __aeabi_dadd
   \   000001FA   0x.... 0x....      BL       __aeabi_d2iz
   \   000001FE   0x.... 0x....      LDR.W    R1,??DataTable29
   \   00000202   0x8008             STRH     R0,[R1, #+0]
   1525              
   1526                front_OFFSET_KZ_pre=front_OFFSET_KZ;
   \   00000204   0x.... 0x....      LDR.W    R0,??DataTable28_1
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable25_3
   \   0000020C   0x8809             LDRH     R1,[R1, #+0]
   \   0000020E   0x8001             STRH     R1,[R0, #+0]
   1527                
   1528                //舵机限幅保护
   1529                if(servo_duty>ZHONG+xianfu)//
   \   00000210   0x.... 0x....      LDR.W    R0,??DataTable28_5
   \   00000214   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000218   0x.... 0x....      LDR.W    R1,??DataTable30
   \   0000021C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000220   0x1808             ADDS     R0,R1,R0
   \   00000222   0x.... 0x....      LDR.W    R1,??DataTable29
   \   00000226   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000022A   0x4288             CMP      R0,R1
   \   0000022C   0xDA09             BGE.N    ??SetServoVoltage_4
   1530                  servo_duty=ZHONG+xianfu;
   \   0000022E   0x.... 0x....      LDR.W    R0,??DataTable28_5
   \   00000232   0x8800             LDRH     R0,[R0, #+0]
   \   00000234   0x.... 0x....      LDR.W    R1,??DataTable30
   \   00000238   0x8809             LDRH     R1,[R1, #+0]
   \   0000023A   0x1808             ADDS     R0,R1,R0
   \   0000023C   0x.... 0x....      LDR.W    R1,??DataTable29
   \   00000240   0x8008             STRH     R0,[R1, #+0]
   1531              
   1532                if(servo_duty<ZHONG-xianfu)//
   \                     ??SetServoVoltage_4:
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable29
   \   00000246   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000024A   0x.... 0x....      LDR.W    R1,??DataTable28_5
   \   0000024E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000252   0x.... 0x....      LDR.W    R2,??DataTable30
   \   00000256   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000025A   0x1A89             SUBS     R1,R1,R2
   \   0000025C   0x4288             CMP      R0,R1
   \   0000025E   0xDA09             BGE.N    ??SetServoVoltage_5
   1533                  servo_duty=ZHONG-xianfu;
   \   00000260   0x.... 0x....      LDR.W    R0,??DataTable28_5
   \   00000264   0x8800             LDRH     R0,[R0, #+0]
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable30
   \   0000026A   0x8809             LDRH     R1,[R1, #+0]
   \   0000026C   0x1A40             SUBS     R0,R0,R1
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable29
   \   00000272   0x8008             STRH     R0,[R1, #+0]
   1534               
   1535                /*if((Lendiao==1)||(Rendiao==1))
   1536                {
   1537                  //舵机限幅保护
   1538                  if(servo_duty>5862)//5648
   1539                    servo_duty=5862;
   1540                
   1541                  if(servo_duty<3242)//3048
   1542                    servo_duty=3242;
   1543                }
   1544                else
   1545                {
   1546                  //舵机限幅保护
   1547                  if(servo_duty>5700)//5752
   1548                    servo_duty=5700;
   1549                
   1550                  if(servo_duty<3404)//3332
   1551                    servo_duty=3404;
   1552                }*/
   1553             //舵机调节
   1554             FTM_PWM_ChangeDuty(0,2,servo_duty);//servo_duty变小，舵机右转，前轮左偏
   \                     ??SetServoVoltage_5:
   \   00000274   0x.... 0x....      LDR.W    R0,??DataTable29
   \   00000278   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000027C   0x2102             MOVS     R1,#+2
   \   0000027E   0x2000             MOVS     R0,#+0
   \   00000280   0x.... 0x....      BL       FTM_PWM_ChangeDuty
   1555             //****************************************//
   1556             //延时要慎用，否则会出现各种不能理解的错误//
   1557             //****************************************//
   1558             g_fDirectionControlOutNew = servo_duty;
   \   00000284   0x.... 0x....      LDR.W    R0,??DataTable29
   \   00000288   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000028C   0x.... 0x....      BL       __aeabi_i2f
   \   00000290   0x.... 0x....      LDR.W    R1,??DataTable31
   \   00000294   0x6008             STR      R0,[R1, #+0]
   1559          }
   \   00000296   0xBD70             POP      {R4-R6,PC}       ;; return
   1560          

   \                                 In section .text, align 2, keep-with-next
   1561          void DirectionControlOutput(void)
   1562          {
   \                     DirectionControlOutput:
   \   00000000   0xB510             PUSH     {R4,LR}
   1563          	float fValue;
   1564          	fValue = g_fDirectionControlOutNew - g_fDirectionControlOutOld;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable31
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable25_2
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fsub
   \   00000012   0x0004             MOVS     R4,R0
   1565          	servo_duty = (int16)(fValue * (g_nDirectionControlPeriod + 1) / DIRECTION_CONTROL_PERIOD + g_fDirectionControlOutOld);
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000018   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000001C   0x1C40             ADDS     R0,R0,#+1
   \   0000001E   0x.... 0x....      BL       __aeabi_i2f
   \   00000022   0x0021             MOVS     R1,R4
   \   00000024   0x.... 0x....      BL       __aeabi_fmul
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable32_1  ;; 0x41a00000
   \   0000002C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable25_2
   \   00000034   0x6809             LDR      R1,[R1, #+0]
   \   00000036   0x.... 0x....      BL       __aeabi_fadd
   \   0000003A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable29
   \   00000042   0x8008             STRH     R0,[R1, #+0]
   1566          
   1567          }
   \   00000044   0xBD10             POP      {R4,PC}          ;; return
   1568          
   1569          //-----------------------速度控制-------------------------------------------------------//

   \                                 In section .text, align 2, keep-with-next
   1570          void GetMotorPulse()
   1571          {
   1572            uint32 nPulse;
   1573            nPulse=FTM2_CNT;                     //脉冲计数的加减,目前看，正转为正，反转为负
   \                     GetMotorPulse:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable33  ;; 0x400b8004
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   1574            g_nMotorPulse = (int32)nPulse;       //注意编码器的安装
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable32_2
   \   0000000A   0x8008             STRH     R0,[R1, #+0]
   1575            //if(!MOTOR_SPEED_POSITIVE)	g_nMotorPulse = -g_nMotorPulse;
   1576            g_nMotorPulseSigma +=g_nMotorPulse;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable32_3
   \   00000010   0x8800             LDRH     R0,[R0, #+0]
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable32_2
   \   00000016   0x8809             LDRH     R1,[R1, #+0]
   \   00000018   0x1808             ADDS     R0,R1,R0
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable32_3
   \   0000001E   0x8008             STRH     R0,[R1, #+0]
   1577            FTM2_CNT=0;
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable33  ;; 0x400b8004
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x6001             STR      R1,[R0, #+0]
   1578          }
   \   00000028   0x4770             BX       LR               ;; return
   1579          //================================================================
   1580          //函数名：  void Speed_PID()
   1581          //功能：    输入脉冲捕捉
   1582          //入口参数：无
   1583          //出口参数：无
   1584          //说明：    无
   1585          //================================================================
   1586                  

   \                                 In section .bss, align 1
   1587                  uint8    DR;
   \                     DR:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1588                  uint8    qd_count=0;
   \                     qd_count:
   \   00000000                      DS8 1
   1589          extern  int16    speed;

   \                                 In section .bss, align 2
   1590                  int16    speed_pwm=0;
   \                     speed_pwm:
   \   00000000                      DS8 2
   1591                 
   1592          extern  int16    shache_time;

   \                                 In section .bss, align 2
   1593                  int16    bl_shache_time=0;
   \                     bl_shache_time:
   \   00000000                      DS8 2
   1594          extern  int16    speed;
   1595          extern  int16    speed_H;
   1596          extern  int16    speed_L;
   1597          extern  int16    speed_B;
   1598          
   1599          extern  int16    speed_jian;
   1600          extern  int16    PULSE_MAX; 
   1601          
   1602          extern  float    k_B;
   1603                  

   \                                 In section .bss, align 1
   1604                  uint8    yichang_count=0;
   \                     yichang_count:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1605                  uint8    yichang_flag=0;
   \                     yichang_flag:
   \   00000000                      DS8 1

   \                                 In section .data, align 2
   1606                  int16    SHA_PULSE=50;
   \                     SHA_PULSE:
   \   00000000   0x0032             DC16 50

   \                                 In section .bss, align 1
   1607                  uint8    SHACHE_TIME_1=0;//5;
   \                     SHACHE_TIME_1:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1608                  uint8    SHACHE_TIME_2=0;//5;
   \                     SHACHE_TIME_2:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
   1609                  uint8    SHACHE_TIME_3=6;//6;
   \                     SHACHE_TIME_3:
   \   00000000   0x06               DC8 6

   \                                 In section .data, align 1
   1610                  uint8    SHACHE_TIME_4=7;
   \                     SHACHE_TIME_4:
   \   00000000   0x07               DC8 7

   \                                 In section .data, align 1
   1611                  uint8    SHACHE_TIME_5=15;
   \                     SHACHE_TIME_5:
   \   00000000   0x0F               DC8 15

   \                                 In section .data, align 1
   1612                  uint8    BL_SHACHE_TIME=15;
   \                     BL_SHACHE_TIME:
   \   00000000   0x0F               DC8 15

   \                                 In section .bss, align 1
   1613                  uint8    guosha_flag=0;
   \                     guosha_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1614                  uint8    PD_ZW_keeptime=0;
   \                     PD_ZW_keeptime:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1615                  uint8    shache_fg=0;
   \                     shache_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1616                  uint8    bl_flag=0;
   \                     bl_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1617                  uint8    ZZ_flag=0;
   \                     ZZ_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1618                  uint8    WW_flag=0;
   \                     WW_flag:
   \   00000000                      DS8 1
   1619                  
   1620          extern  int16    Motor_Lock;
   1621          extern  int16    Servo_Lock;
   1622                                   

   \                                 In section .bss, align 2
   1623                  int16    bl_count=0;
   \                     bl_count:
   \   00000000                      DS8 2

   \                                 In section .data, align 1
   1624                  uint8    PD_ZW_flag=1; 
   \                     PD_ZW_flag:
   \   00000000   0x01               DC8 1
   1625          #define PULSE    (pulse_count*5/13+48)
   1626          #define zhuan1   ((d_err1>0&&d_err2>0&&d_err3>0)||(d_err1<0&&d_err2<0&&d_err3<0))//三个最大front_OFFSET_pre1
   1627          #define zhuan2   ((front_OFFSET>0&&front_OFFSET_pre1>0&&front_OFFSET_pre2>0)||(front_OFFSET<0&&front_OFFSET_pre1<0&&front_OFFSET_pre2<0))//三个最大
   1628          

   \                                 In section .data, align 1
   1629                  uint8    jisha=1;
   \                     jisha:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 4
   1630                  float    sp=10.0,sd=10.0;
   \                     `sp`:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .data, align 4
   \                     sd:
   \   00000000   0x41200000         DC32 41200000H
   1631                  

   \                                 In section .data, align 2
   1632                  int16    RSH=15;
   \                     RSH:
   \   00000000   0x000F             DC16 15
   1633          
   1634          //----------------------------------刹车2---------------------------------------

   \                                 In section .text, align 2, keep-with-next
   1635          void shache2()//条件得封闭
   1636          { 
   1637            //Z>>W
   1638            if(fangcha_qian_f>=fch_dp2)
   \                     shache2:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable32_4
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable32_5
   \   0000000C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000010   0x4288             CMP      R0,R1
   \   00000012   0xDB3A             BLT.N    ??shache2_0
   1639            {
   1640              WW_flag = 1;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable32_6
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x7001             STRB     R1,[R0, #+0]
   1641              if(ZZ_count>10)
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000020   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000024   0x280B             CMP      R0,#+11
   \   00000026   0xDB25             BLT.N    ??shache2_1
   1642              {
   1643                if(pulse_count>SHA_PULSE)
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable32_7
   \   0000002C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   00000034   0x6809             LDR      R1,[R1, #+0]
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xDA58             BGE.N    ??shache2_2
   1644                  if(shache_fg==1) speed=-speed_B;
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable32_8
   \   0000003E   0x7800             LDRB     R0,[R0, #+0]
   \   00000040   0x2801             CMP      R0,#+1
   \   00000042   0xD108             BNE.N    ??shache2_3
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable32_9
   \   00000048   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000004C   0x4240             RSBS     R0,R0,#+0
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   00000052   0x8008             STRH     R0,[R1, #+0]
   \   00000054   0xE04A             B.N      ??shache2_2
   1645                else
   1646                {
   1647                  shache_fg=0;
   \                     ??shache2_3:
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable32_8
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x7001             STRB     R1,[R0, #+0]
   1648                  ZZ_count=0;
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x8001             STRH     R1,[R0, #+0]
   1649                  speed=speed_L;
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   0000006E   0x8809             LDRH     R1,[R1, #+0]
   \   00000070   0x8001             STRH     R1,[R0, #+0]
   \   00000072   0xE03B             B.N      ??shache2_2
   1650                }
   1651              }
   1652              else 
   1653              {
   1654                ZZ_count=0;
   \                     ??shache2_1:
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x8001             STRH     R1,[R0, #+0]
   1655                speed=speed_L;
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   00000084   0x8809             LDRH     R1,[R1, #+0]
   \   00000086   0x8001             STRH     R1,[R0, #+0]
   \   00000088   0xE030             B.N      ??shache2_2
   1656              }
   1657            }
   1658            //Z>>Z
   1659            else if(fangcha_qian_f<fch_dp2)
   \                     ??shache2_0:
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable32_4
   \   0000008E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable32_5
   \   00000096   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000009A   0x4288             CMP      R0,R1
   \   0000009C   0xDA26             BGE.N    ??shache2_2
   1660            {
   1661              if(WW_flag==1)
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable32_6
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0x2801             CMP      R0,#+1
   \   000000A6   0xD107             BNE.N    ??shache2_4
   1662              {
   1663                WW_flag = 0;
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable32_6
   \   000000AC   0x2100             MOVS     R1,#+0
   \   000000AE   0x7001             STRB     R1,[R0, #+0]
   1664                ZZ_count = 0;
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   000000B4   0x2100             MOVS     R1,#+0
   \   000000B6   0x8001             STRH     R1,[R0, #+0]
   1665              }
   1666              ZZ_count++;
   \                     ??shache2_4:
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   000000BC   0x8800             LDRH     R0,[R0, #+0]
   \   000000BE   0x1C40             ADDS     R0,R0,#+1
   \   000000C0   0x.... 0x....      LDR.W    R1,??DataTable27_1
   \   000000C4   0x8008             STRH     R0,[R1, #+0]
   1667              if(ZZ_count>3) //减少误判情况下的误加速 
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   000000CA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000CE   0x2804             CMP      R0,#+4
   \   000000D0   0xDB06             BLT.N    ??shache2_5
   1668              {
   1669                speed = speed_H;
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable33_3
   \   000000DA   0x8809             LDRH     R1,[R1, #+0]
   \   000000DC   0x8001             STRH     R1,[R0, #+0]
   \   000000DE   0xE005             B.N      ??shache2_2
   1670              }   
   1671              else speed = speed_L;
   \                     ??shache2_5:
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   000000E8   0x8809             LDRH     R1,[R1, #+0]
   \   000000EA   0x8001             STRH     R1,[R0, #+0]
   1672            }
   1673            /*
   1674            //过度 或 波浪
   1675            else
   1676            {
   1677              WW_flag = 1;
   1678              speed = speed_L;
   1679            }*/
   1680            //人字弯------------------------------------------------------------------
   1681            if(LHOLDdiao_flag==1||RHOLDdiao_flag==1)
   \                     ??shache2_2:
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable33_4
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x2801             CMP      R0,#+1
   \   000000F4   0xD004             BEQ.N    ??shache2_6
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable33_5
   \   000000FA   0x7800             LDRB     R0,[R0, #+0]
   \   000000FC   0x2801             CMP      R0,#+1
   \   000000FE   0xD138             BNE.N    ??shache2_7
   1682            {
   1683              rensha_count++;
   \                     ??shache2_6:
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \   00000104   0x8800             LDRH     R0,[R0, #+0]
   \   00000106   0x1C40             ADDS     R0,R0,#+1
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable33_6
   \   0000010C   0x8008             STRH     R0,[R1, #+0]
   1684              if(rensha_count<RSH)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \   00000112   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000116   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \   0000011A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000011E   0x4288             CMP      R0,R1
   \   00000120   0xDA05             BGE.N    ??shache2_8
   1685              {
   1686                speed = -400;
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable33_8  ;; 0xfffffe70
   \   0000012A   0x8001             STRH     R1,[R0, #+0]
   \   0000012C   0xE021             B.N      ??shache2_7
   1687              }
   1688              else if(rensha_count>=RSH&&rensha_count<RSH+7)
   \                     ??shache2_8:
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \   00000132   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \   0000013A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000013E   0x4288             CMP      R0,R1
   \   00000140   0xDB12             BLT.N    ??shache2_9
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \   00000146   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \   0000014E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000152   0x1DC9             ADDS     R1,R1,#+7
   \   00000154   0x4288             CMP      R0,R1
   \   00000156   0xDA07             BGE.N    ??shache2_9
   1689              {
   1690                speed = speed+100;
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000015C   0x8800             LDRH     R0,[R0, #+0]
   \   0000015E   0x3064             ADDS     R0,R0,#+100
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   00000164   0x8008             STRH     R0,[R1, #+0]
   \   00000166   0xE004             B.N      ??shache2_7
   1691              }
   1692              else
   1693              {
   1694                speed = 400;
   \                     ??shache2_9:
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000016C   0xF44F 0x71C8      MOV      R1,#+400
   \   00000170   0x8001             STRH     R1,[R0, #+0]
   1695              }
   1696            }
   1697          }
   \                     ??shache2_7:
   \   00000172   0x4770             BX       LR               ;; return
   1698          
   1699          //----------------------------------刹车3---------------------------------------

   \                                 In section .text, align 2, keep-with-next
   1700          void shache3()//条件得封闭
   1701          { 
   1702            //Z>>W
   1703            if(fangcha_qian_f>fch_dp1)
   \                     shache3:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable33_9
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable32_4
   \   0000000C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000010   0x4288             CMP      R0,R1
   \   00000012   0xF280 0x816A      BGE.W    ??shache3_0
   1704            {
   1705              WW_flag = 1;
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable32_6
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
   1706              
   1707              if(ZZ_count>=5&&ZZ_count<8)//12  改为5,令人激动的波浪弯入大弯刹车
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000022   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000026   0x1F40             SUBS     R0,R0,#+5
   \   00000028   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000002A   0x2803             CMP      R0,#+3
   \   0000002C   0xD234             BCS.N    ??shache3_1
   1708              { 
   1709                //刹车阶段 
   1710                if(shache_time<SHACHE_TIME_1)
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   00000032   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable33_11
   \   0000003A   0x7809             LDRB     R1,[R1, #+0]
   \   0000003C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000003E   0x4288             CMP      R0,R1
   \   00000040   0xDA1F             BGE.N    ??shache3_2
   1711                { 
   1712                  //Kp=Kp_ZW;
   1713                  //Kd=Kd_ZW;
   1714                  shache_time++;
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   00000046   0x8800             LDRH     R0,[R0, #+0]
   \   00000048   0x1C40             ADDS     R0,R0,#+1
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable33_10
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
   1715                  speed = -speed_B*(pulse_count/400)*(ZZ_count/10);
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable32_9
   \   00000054   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000058   0x4240             RSBS     R0,R0,#+0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   0000005E   0x6809             LDR      R1,[R1, #+0]
   \   00000060   0xF44F 0x72C8      MOV      R2,#+400
   \   00000064   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000068   0x4348             MULS     R0,R1,R0
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable27_1
   \   0000006E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000072   0x220A             MOVS     R2,#+10
   \   00000074   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000078   0x4348             MULS     R0,R1,R0
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   0000007E   0x8008             STRH     R0,[R1, #+0]
   \   00000080   0xE173             B.N      ??shache3_3
   1716                  //if(pulse_count>SHA_PULSE) speed = -speed_B*(pulse_count/400)*(ZZ_count/10);
   1717                  //else speed = speed_L;
   1718                }
   1719                //W>>W
   1720                else 
   1721                {
   1722                  ZZ_count = 0;
   \                     ??shache3_2:
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x8001             STRH     R1,[R0, #+0]
   1723                  speed = speed_L;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   00000092   0x8809             LDRH     R1,[R1, #+0]
   \   00000094   0x8001             STRH     R1,[R0, #+0]
   \   00000096   0xE168             B.N      ??shache3_3
   1724                }
   1725              }
   1726              else if(ZZ_count>=8&&ZZ_count<18)
   \                     ??shache3_1:
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   0000009C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A0   0x3808             SUBS     R0,R0,#+8
   \   000000A2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A4   0x280A             CMP      R0,#+10
   \   000000A6   0xD234             BCS.N    ??shache3_4
   1727              {
   1728                //刹车阶段 
   1729                if(shache_time<SHACHE_TIME_2)
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   000000AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable33_12
   \   000000B4   0x7809             LDRB     R1,[R1, #+0]
   \   000000B6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000000B8   0x4288             CMP      R0,R1
   \   000000BA   0xDA1F             BGE.N    ??shache3_5
   1730                { 
   1731                  //Kp=Kp_ZW;
   1732                  //Kd=Kd_ZW;
   1733                  shache_time++;
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   000000C0   0x8800             LDRH     R0,[R0, #+0]
   \   000000C2   0x1C40             ADDS     R0,R0,#+1
   \   000000C4   0x.... 0x....      LDR.W    R1,??DataTable33_10
   \   000000C8   0x8008             STRH     R0,[R1, #+0]
   1734                  speed = -speed_B*(pulse_count/400)*(ZZ_count/10);
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable32_9
   \   000000CE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000D2   0x4240             RSBS     R0,R0,#+0
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   000000D8   0x6809             LDR      R1,[R1, #+0]
   \   000000DA   0xF44F 0x72C8      MOV      R2,#+400
   \   000000DE   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000000E2   0x4348             MULS     R0,R1,R0
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable27_1
   \   000000E8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000EC   0x220A             MOVS     R2,#+10
   \   000000EE   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000000F2   0x4348             MULS     R0,R1,R0
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   000000F8   0x8008             STRH     R0,[R1, #+0]
   \   000000FA   0xE136             B.N      ??shache3_3
   1735                  //if(pulse_count>SHA_PULSE) speed = -speed_B*(pulse_count/400)*(ZZ_count/10);
   1736                  //else speed = speed_L;
   1737                }
   1738                //W>>W
   1739                else 
   1740                {
   1741                  ZZ_count = 0;//刚刹完，清零
   \                     ??shache3_5:
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000100   0x2100             MOVS     R1,#+0
   \   00000102   0x8001             STRH     R1,[R0, #+0]
   1742                  speed = speed_L;
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   0000010C   0x8809             LDRH     R1,[R1, #+0]
   \   0000010E   0x8001             STRH     R1,[R0, #+0]
   \   00000110   0xE12B             B.N      ??shache3_3
   1743                }
   1744              }
   1745              else if(ZZ_count>=18&&ZZ_count<28)
   \                     ??shache3_4:
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000116   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000011A   0x3812             SUBS     R0,R0,#+18
   \   0000011C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000011E   0x280A             CMP      R0,#+10
   \   00000120   0xD244             BCS.N    ??shache3_6
   1746              {
   1747                //刹车阶段 
   1748                if(shache_time<SHACHE_TIME_3)
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   00000126   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable33_13
   \   0000012E   0x7809             LDRB     R1,[R1, #+0]
   \   00000130   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000132   0x4288             CMP      R0,R1
   \   00000134   0xDA2F             BGE.N    ??shache3_7
   1749                { 
   1750                  shache_time++;
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   0000013A   0x8800             LDRH     R0,[R0, #+0]
   \   0000013C   0x1C40             ADDS     R0,R0,#+1
   \   0000013E   0x.... 0x....      LDR.W    R1,??DataTable33_10
   \   00000142   0x8008             STRH     R0,[R1, #+0]
   1751                  if(pulse_count>SHA_PULSE) speed = -speed_B*(pulse_count/400)*(ZZ_count/10);
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable32_7
   \   00000148   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   00000150   0x6809             LDR      R1,[R1, #+0]
   \   00000152   0x4288             CMP      R0,R1
   \   00000154   0xDA18             BGE.N    ??shache3_8
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable32_9
   \   0000015A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000015E   0x4240             RSBS     R0,R0,#+0
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   00000164   0x6809             LDR      R1,[R1, #+0]
   \   00000166   0xF44F 0x72C8      MOV      R2,#+400
   \   0000016A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000016E   0x4348             MULS     R0,R1,R0
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable27_1
   \   00000174   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000178   0x220A             MOVS     R2,#+10
   \   0000017A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000017E   0x4348             MULS     R0,R1,R0
   \   00000180   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   00000184   0x8008             STRH     R0,[R1, #+0]
   \   00000186   0xE0F0             B.N      ??shache3_3
   1752                  else speed = speed_L;
   \                     ??shache3_8:
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000018C   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   00000190   0x8809             LDRH     R1,[R1, #+0]
   \   00000192   0x8001             STRH     R1,[R0, #+0]
   \   00000194   0xE0E9             B.N      ??shache3_3
   1753                }
   1754                //W>>W
   1755                else 
   1756                {
   1757                  ZZ_count = 0;//刚刹完，清零
   \                     ??shache3_7:
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   0000019A   0x2100             MOVS     R1,#+0
   \   0000019C   0x8001             STRH     R1,[R0, #+0]
   1758                  speed = speed_L;
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000001A2   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   000001A6   0x8809             LDRH     R1,[R1, #+0]
   \   000001A8   0x8001             STRH     R1,[R0, #+0]
   \   000001AA   0xE0DE             B.N      ??shache3_3
   1759                }
   1760              }
   1761              else if(ZZ_count>=28&&ZZ_count<48)
   \                     ??shache3_6:
   \   000001AC   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   000001B0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001B4   0x381C             SUBS     R0,R0,#+28
   \   000001B6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001B8   0x2814             CMP      R0,#+20
   \   000001BA   0xD244             BCS.N    ??shache3_9
   1762              {
   1763                //刹车阶段 
   1764                if(shache_time<SHACHE_TIME_4)
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   000001C0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable33_14
   \   000001C8   0x7809             LDRB     R1,[R1, #+0]
   \   000001CA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001CC   0x4288             CMP      R0,R1
   \   000001CE   0xDA2F             BGE.N    ??shache3_10
   1765                { 
   1766                  shache_time++;
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   000001D4   0x8800             LDRH     R0,[R0, #+0]
   \   000001D6   0x1C40             ADDS     R0,R0,#+1
   \   000001D8   0x.... 0x....      LDR.W    R1,??DataTable33_10
   \   000001DC   0x8008             STRH     R0,[R1, #+0]
   1767                  if(pulse_count>SHA_PULSE) speed = -speed_B*(pulse_count/400)*(ZZ_count/10);
   \   000001DE   0x.... 0x....      LDR.W    R0,??DataTable32_7
   \   000001E2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001E6   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   000001EA   0x6809             LDR      R1,[R1, #+0]
   \   000001EC   0x4288             CMP      R0,R1
   \   000001EE   0xDA18             BGE.N    ??shache3_11
   \   000001F0   0x.... 0x....      LDR.W    R0,??DataTable32_9
   \   000001F4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001F8   0x4240             RSBS     R0,R0,#+0
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   000001FE   0x6809             LDR      R1,[R1, #+0]
   \   00000200   0xF44F 0x72C8      MOV      R2,#+400
   \   00000204   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000208   0x4348             MULS     R0,R1,R0
   \   0000020A   0x.... 0x....      LDR.W    R1,??DataTable27_1
   \   0000020E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000212   0x220A             MOVS     R2,#+10
   \   00000214   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000218   0x4348             MULS     R0,R1,R0
   \   0000021A   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   0000021E   0x8008             STRH     R0,[R1, #+0]
   \   00000220   0xE0A3             B.N      ??shache3_3
   1768                  else speed = speed_L;
   \                     ??shache3_11:
   \   00000222   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   0000022A   0x8809             LDRH     R1,[R1, #+0]
   \   0000022C   0x8001             STRH     R1,[R0, #+0]
   \   0000022E   0xE09C             B.N      ??shache3_3
   1769                }
   1770                //W>>W
   1771                else 
   1772                {
   1773                  ZZ_count = 0;
   \                     ??shache3_10:
   \   00000230   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000234   0x2100             MOVS     R1,#+0
   \   00000236   0x8001             STRH     R1,[R0, #+0]
   1774                  speed = speed_L;
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000023C   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   00000240   0x8809             LDRH     R1,[R1, #+0]
   \   00000242   0x8001             STRH     R1,[R0, #+0]
   \   00000244   0xE091             B.N      ??shache3_3
   1775                }
   1776              }
   1777              else if(ZZ_count>=48)
   \                     ??shache3_9:
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   0000024A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000024E   0x2830             CMP      R0,#+48
   \   00000250   0xDB44             BLT.N    ??shache3_12
   1778              {
   1779                //刹车阶段 
   1780                if(shache_time<SHACHE_TIME_5)
   \   00000252   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   00000256   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000025A   0x.... 0x....      LDR.W    R1,??DataTable33_15
   \   0000025E   0x7809             LDRB     R1,[R1, #+0]
   \   00000260   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000262   0x4288             CMP      R0,R1
   \   00000264   0xDA2F             BGE.N    ??shache3_13
   1781                { 
   1782                  shache_time++;
   \   00000266   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   0000026A   0x8800             LDRH     R0,[R0, #+0]
   \   0000026C   0x1C40             ADDS     R0,R0,#+1
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable33_10
   \   00000272   0x8008             STRH     R0,[R1, #+0]
   1783                  if(pulse_count>SHA_PULSE) speed = -speed_B*(pulse_count/400)*(ZZ_count/10);
   \   00000274   0x.... 0x....      LDR.W    R0,??DataTable32_7
   \   00000278   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000027C   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   00000280   0x6809             LDR      R1,[R1, #+0]
   \   00000282   0x4288             CMP      R0,R1
   \   00000284   0xDA18             BGE.N    ??shache3_14
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable32_9
   \   0000028A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000028E   0x4240             RSBS     R0,R0,#+0
   \   00000290   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   00000294   0x6809             LDR      R1,[R1, #+0]
   \   00000296   0xF44F 0x72C8      MOV      R2,#+400
   \   0000029A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000029E   0x4348             MULS     R0,R1,R0
   \   000002A0   0x.... 0x....      LDR.W    R1,??DataTable27_1
   \   000002A4   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002A8   0x220A             MOVS     R2,#+10
   \   000002AA   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000002AE   0x4348             MULS     R0,R1,R0
   \   000002B0   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   000002B4   0x8008             STRH     R0,[R1, #+0]
   \   000002B6   0xE058             B.N      ??shache3_3
   1784                  else speed = speed_L;
   \                     ??shache3_14:
   \   000002B8   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000002BC   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   000002C0   0x8809             LDRH     R1,[R1, #+0]
   \   000002C2   0x8001             STRH     R1,[R0, #+0]
   \   000002C4   0xE051             B.N      ??shache3_3
   1785                }
   1786                //W>>W
   1787                else 
   1788                {
   1789                  ZZ_count = 0;
   \                     ??shache3_13:
   \   000002C6   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   000002CA   0x2100             MOVS     R1,#+0
   \   000002CC   0x8001             STRH     R1,[R0, #+0]
   1790                  speed = speed_L;
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000002D2   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   000002D6   0x8809             LDRH     R1,[R1, #+0]
   \   000002D8   0x8001             STRH     R1,[R0, #+0]
   \   000002DA   0xE046             B.N      ??shache3_3
   1791                }
   1792              }
   1793              else speed = speed_L;
   \                     ??shache3_12:
   \   000002DC   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000002E0   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   000002E4   0x8809             LDRH     R1,[R1, #+0]
   \   000002E6   0x8001             STRH     R1,[R0, #+0]
   \   000002E8   0xE03F             B.N      ??shache3_3
   1794            }
   1795            //Z>>Z
   1796            else if(fangcha_qian_f<fch_dp2)
   \                     ??shache3_0:
   \   000002EA   0x.... 0x....      LDR.W    R0,??DataTable32_4
   \   000002EE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002F2   0x.... 0x....      LDR.W    R1,??DataTable32_5
   \   000002F6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002FA   0x4288             CMP      R0,R1
   \   000002FC   0xDA2B             BGE.N    ??shache3_15
   1797            {
   1798              if(WW_flag==1)
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable32_6
   \   00000302   0x7800             LDRB     R0,[R0, #+0]
   \   00000304   0x2801             CMP      R0,#+1
   \   00000306   0xD107             BNE.N    ??shache3_16
   1799              {
   1800                WW_flag = 0;
   \   00000308   0x.... 0x....      LDR.W    R0,??DataTable32_6
   \   0000030C   0x2100             MOVS     R1,#+0
   \   0000030E   0x7001             STRB     R1,[R0, #+0]
   1801                ZZ_count = 0;
   \   00000310   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000314   0x2100             MOVS     R1,#+0
   \   00000316   0x8001             STRH     R1,[R0, #+0]
   1802              }
   1803              shache_time = 0;
   \                     ??shache3_16:
   \   00000318   0x.... 0x....      LDR.W    R0,??DataTable33_10
   \   0000031C   0x2100             MOVS     R1,#+0
   \   0000031E   0x8001             STRH     R1,[R0, #+0]
   1804              ZZ_count++;
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000324   0x8800             LDRH     R0,[R0, #+0]
   \   00000326   0x1C40             ADDS     R0,R0,#+1
   \   00000328   0x.... 0x....      LDR.W    R1,??DataTable27_1
   \   0000032C   0x8008             STRH     R0,[R1, #+0]
   1805              if(ZZ_count>3) //减少误判情况下的误加速 
   \   0000032E   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000332   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000336   0x2804             CMP      R0,#+4
   \   00000338   0xDB06             BLT.N    ??shache3_17
   1806              {
   1807                speed = speed_H;
   \   0000033A   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000033E   0x.... 0x....      LDR.W    R1,??DataTable33_3
   \   00000342   0x8809             LDRH     R1,[R1, #+0]
   \   00000344   0x8001             STRH     R1,[R0, #+0]
   \   00000346   0xE010             B.N      ??shache3_3
   1808              }   
   1809              else speed = speed_L;
   \                     ??shache3_17:
   \   00000348   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000034C   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   00000350   0x8809             LDRH     R1,[R1, #+0]
   \   00000352   0x8001             STRH     R1,[R0, #+0]
   \   00000354   0xE009             B.N      ??shache3_3
   1810            }
   1811            //过度 或 波浪
   1812            else
   1813            {
   1814              WW_flag = 1;
   \                     ??shache3_15:
   \   00000356   0x.... 0x....      LDR.W    R0,??DataTable32_6
   \   0000035A   0x2101             MOVS     R1,#+1
   \   0000035C   0x7001             STRB     R1,[R0, #+0]
   1815              speed = speed_L;
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   00000362   0x.... 0x....      LDR.W    R1,??DataTable33_2
   \   00000366   0x8809             LDRH     R1,[R1, #+0]
   \   00000368   0x8001             STRH     R1,[R0, #+0]
   1816            }
   1817            
   1818            //人字弯------------------------------------------------------------------
   1819            if(LHOLDdiao_flag==1||RHOLDdiao_flag==1)
   \                     ??shache3_3:
   \   0000036A   0x.... 0x....      LDR.W    R0,??DataTable33_4
   \   0000036E   0x7800             LDRB     R0,[R0, #+0]
   \   00000370   0x2801             CMP      R0,#+1
   \   00000372   0xD004             BEQ.N    ??shache3_18
   \   00000374   0x.... 0x....      LDR.W    R0,??DataTable33_5
   \   00000378   0x7800             LDRB     R0,[R0, #+0]
   \   0000037A   0x2801             CMP      R0,#+1
   \   0000037C   0xD138             BNE.N    ??shache3_19
   1820            {
   1821              rensha_count++;
   \                     ??shache3_18:
   \   0000037E   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \   00000382   0x8800             LDRH     R0,[R0, #+0]
   \   00000384   0x1C40             ADDS     R0,R0,#+1
   \   00000386   0x.... 0x....      LDR.W    R1,??DataTable33_6
   \   0000038A   0x8008             STRH     R0,[R1, #+0]
   1822              if(rensha_count<RSH)
   \   0000038C   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \   00000390   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000394   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \   00000398   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000039C   0x4288             CMP      R0,R1
   \   0000039E   0xDA05             BGE.N    ??shache3_20
   1823              {
   1824                speed = -400;
   \   000003A0   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000003A4   0x.... 0x....      LDR.W    R1,??DataTable33_8  ;; 0xfffffe70
   \   000003A8   0x8001             STRH     R1,[R0, #+0]
   \   000003AA   0xE021             B.N      ??shache3_19
   1825              }
   1826              else if(rensha_count>=RSH&&rensha_count<RSH+7)
   \                     ??shache3_20:
   \   000003AC   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \   000003B0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003B4   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \   000003B8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000003BC   0x4288             CMP      R0,R1
   \   000003BE   0xDB12             BLT.N    ??shache3_21
   \   000003C0   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \   000003C4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003C8   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \   000003CC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000003D0   0x1DC9             ADDS     R1,R1,#+7
   \   000003D2   0x4288             CMP      R0,R1
   \   000003D4   0xDA07             BGE.N    ??shache3_21
   1827              {
   1828                speed = speed+100;
   \   000003D6   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000003DA   0x8800             LDRH     R0,[R0, #+0]
   \   000003DC   0x3064             ADDS     R0,R0,#+100
   \   000003DE   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   000003E2   0x8008             STRH     R0,[R1, #+0]
   \   000003E4   0xE004             B.N      ??shache3_19
   1829              }
   1830              else
   1831              {
   1832                speed = 400;
   \                     ??shache3_21:
   \   000003E6   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   000003EA   0xF44F 0x71C8      MOV      R1,#+400
   \   000003EE   0x8001             STRH     R1,[R0, #+0]
   1833              }
   1834            }
   1835          }        
   \                     ??shache3_19:
   \   000003F0   0x4770             BX       LR               ;; return
   1836          //----------------------------------------------------------------------------------------        
   1837                  

   \                                 In section .text, align 2, keep-with-next
   1838          void Speed_PID()//------接下来需要及时刹车-------------------
   1839          {
   \                     Speed_PID:
   \   00000000   0xB510             PUSH     {R4,LR}
   1840              pulse_count=g_nMotorPulseSigma; 
   \   00000002   0x....             LDR.N    R0,??DataTable27_2
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable32_3
   \   00000008   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000000C   0x6001             STR      R1,[R0, #+0]
   1841              g_nMotorPulseSigma=0;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable32_3
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x8001             STRH     R1,[R0, #+0]
   1842              /*没实现预期的效果的程序，就一条一条地调试*/
   1843              //刹车控制
   1844              shache3();
   \   00000016   0x.... 0x....      BL       shache3
   1845              //if(speed<0&&pulse_count<SHA_PULSE+200) speed=speed_L;
   1846              
   1847              //启动加速
   1848              //if(qd_count++<60) speed=1000;
   1849              //else qd_count=60;
   1850              //最高速度限制
   1851              if(pulse_count>PULSE_MAX) speed = speed-speed_jian;//控制效果明显
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable33_16
   \   0000001E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000022   0x....             LDR.N    R1,??DataTable27_2
   \   00000024   0x6809             LDR      R1,[R1, #+0]
   \   00000026   0x4288             CMP      R0,R1
   \   00000028   0xDA09             BGE.N    ??Speed_PID_0
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   0000002E   0x8800             LDRH     R0,[R0, #+0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable33_17
   \   00000034   0x8809             LDRH     R1,[R1, #+0]
   \   00000036   0x1A40             SUBS     R0,R0,R1
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   0000003C   0x8008             STRH     R0,[R1, #+0]
   1852              //设定PID输入值
   1853              PID_SetPoint(speed);
   \                     ??Speed_PID_0:
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable33_1
   \   00000042   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000046   0x.... 0x....      BL       PID_SetPoint
   1854              speed_pwm=(int16)(speed+IncPID_Calculate((pulse_count*5/13+48)));
   \   0000004A   0x....             LDR.N    R0,??DataTable27_2
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x2105             MOVS     R1,#+5
   \   00000050   0x4348             MULS     R0,R1,R0
   \   00000052   0x210D             MOVS     R1,#+13
   \   00000054   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000058   0x3030             ADDS     R0,R0,#+48
   \   0000005A   0x.... 0x....      BL       IncPID_Calculate
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \   00000062   0x8809             LDRH     R1,[R1, #+0]
   \   00000064   0x1840             ADDS     R0,R0,R1
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable33_18
   \   0000006A   0x8008             STRH     R0,[R1, #+0]
   1855              
   1856              //if(speed==speed_L)
   1857                //speed_pwm=600;
   1858              
   1859              //if(speed_pwm<0)
   1860                //speed_pwm=-400;
   1861              /*
   1862              if(speed>speed_L) 
   1863              {
   1864                if(pulse_count<500) speed_pwm=1200;
   1865                else speed_pwm=(int16)(speed+IncPID_Calculate((pulse_count*5/13+48)));
   1866              }
   1867              else
   1868                speed_pwm=(int16)(speed+IncPID_Calculate((pulse_count*5/13+48))); */
   1869              
   1870              //起跑线检测
   1871              if(stop_flag==1) 
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable33_19
   \   00000070   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000074   0x2801             CMP      R0,#+1
   \   00000076   0xD137             BNE.N    ??Speed_PID_1
   1872              {
   1873                if(jisha==1)  speed_pwm=-500;
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable33_20
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0x2801             CMP      R0,#+1
   \   00000080   0xD104             BNE.N    ??Speed_PID_2
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable33_18
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable33_21  ;; 0xfffffe0c
   \   0000008A   0x8001             STRH     R1,[R0, #+0]
   1874                if(pulse_count<10||jisha==2)
   \                     ??Speed_PID_2:
   \   0000008C   0x....             LDR.N    R0,??DataTable27_2
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x280A             CMP      R0,#+10
   \   00000092   0xDB04             BLT.N    ??Speed_PID_3
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable33_20
   \   00000098   0x7800             LDRB     R0,[R0, #+0]
   \   0000009A   0x2802             CMP      R0,#+2
   \   0000009C   0xD124             BNE.N    ??Speed_PID_1
   1875                {
   1876                  jisha=2;
   \                     ??Speed_PID_3:
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable33_20
   \   000000A2   0x2102             MOVS     R1,#+2
   \   000000A4   0x7001             STRB     R1,[R0, #+0]
   1877                  speed_pwm=-sp*pulse_count+sd*(pulse_count-pulse_count_pre);
   \   000000A6   0x....             LDR.N    R0,??DataTable27_2
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x.... 0x....      BL       __aeabi_i2f
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable33_22
   \   000000B2   0x6809             LDR      R1,[R1, #+0]
   \   000000B4   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000000B8   0x.... 0x....      BL       __aeabi_fmul
   \   000000BC   0x0004             MOVS     R4,R0
   \   000000BE   0x....             LDR.N    R0,??DataTable27_2
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable33_23
   \   000000C6   0x6809             LDR      R1,[R1, #+0]
   \   000000C8   0x1A40             SUBS     R0,R0,R1
   \   000000CA   0x.... 0x....      BL       __aeabi_i2f
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable33_24
   \   000000D2   0x6809             LDR      R1,[R1, #+0]
   \   000000D4   0x.... 0x....      BL       __aeabi_fmul
   \   000000D8   0x0021             MOVS     R1,R4
   \   000000DA   0x.... 0x....      BL       __aeabi_fadd
   \   000000DE   0x.... 0x....      BL       __aeabi_f2iz
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable33_18
   \   000000E6   0x8008             STRH     R0,[R1, #+0]
   1878                }
   1879              }
   1880              
   1881              
   1882              if(speed_pwm>1250)
   \                     ??Speed_PID_1:
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable33_18
   \   000000EC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000F0   0xF240 0x41E3      MOVW     R1,#+1251
   \   000000F4   0x4288             CMP      R0,R1
   \   000000F6   0xDB04             BLT.N    ??Speed_PID_4
   1883                speed_pwm=1250;
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable33_18
   \   000000FC   0xF240 0x41E2      MOVW     R1,#+1250
   \   00000100   0x8001             STRH     R1,[R0, #+0]
   1884              if(speed_pwm<-1250)
   \                     ??Speed_PID_4:
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable33_18
   \   00000106   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable33_25  ;; 0xfffffb1e
   \   0000010E   0x4288             CMP      R0,R1
   \   00000110   0xDA04             BGE.N    ??Speed_PID_5
   1885                speed_pwm=-1250;
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable33_18
   \   00000116   0x.... 0x....      LDR.W    R1,??DataTable33_25  ;; 0xfffffb1e
   \   0000011A   0x8001             STRH     R1,[R0, #+0]
   1886              
   1887              
   1888              if(speed_pwm>0) 
   \                     ??Speed_PID_5:
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable33_18
   \   00000120   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000124   0x2801             CMP      R0,#+1
   \   00000126   0xDB0E             BLT.N    ??Speed_PID_6
   1889              {
   1890                gpio_init(PORTB, 9, 1,0);//DIL_B;
   \   00000128   0x2300             MOVS     R3,#+0
   \   0000012A   0x2201             MOVS     R2,#+1
   \   0000012C   0x2109             MOVS     R1,#+9
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable33_26  ;; 0x400ff040
   \   00000132   0x.... 0x....      BL       gpio_init
   1891                FTM1_C0V=speed_pwm;
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable33_27  ;; 0x40039010
   \   0000013A   0x.... 0x....      LDR.W    R1,??DataTable33_18
   \   0000013E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000142   0x6001             STR      R1,[R0, #+0]
   \   00000144   0xE010             B.N      ??Speed_PID_7
   1892              }
   1893              else 
   1894              {
   1895                gpio_init(PORTB, 9, 1,1);//DIL_F;
   \                     ??Speed_PID_6:
   \   00000146   0x2301             MOVS     R3,#+1
   \   00000148   0x2201             MOVS     R2,#+1
   \   0000014A   0x2109             MOVS     R1,#+9
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable33_26  ;; 0x400ff040
   \   00000150   0x.... 0x....      BL       gpio_init
   1896                FTM1_C0V=1250+speed_pwm;
   \   00000154   0x.... 0x....      LDR.W    R0,??DataTable33_18
   \   00000158   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000015C   0xF240 0x41E2      MOVW     R1,#+1250
   \   00000160   0x1808             ADDS     R0,R1,R0
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable33_27  ;; 0x40039010
   \   00000166   0x6008             STR      R0,[R1, #+0]
   1897              }
   1898              
   1899              pulse_count_pre=pulse_count;
   \                     ??Speed_PID_7:
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable33_23
   \   0000016C   0x....             LDR.N    R1,??DataTable27_2
   \   0000016E   0x6809             LDR      R1,[R1, #+0]
   \   00000170   0x6001             STR      R1,[R0, #+0]
   1900          }
   \   00000172   0xBD10             POP      {R4,PC}          ;; return
   1901          //--------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
   1902          void SpeedControl(void)
   1903          {
   \                     SpeedControl:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   1904          	float fP,fI, fDelta;
   1905          
   1906          	g_fCarSpeed = g_nMotorPulseSigma;
   \   00000002   0x....             LDR.N    R0,??DataTable32_3
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x.... 0x....      BL       __aeabi_i2f
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable33_28
   \   00000010   0x6008             STR      R0,[R1, #+0]
   1907          	g_nMotorPulseSigma = 0;
   \   00000012   0x....             LDR.N    R0,??DataTable32_3
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x8001             STRH     R1,[R0, #+0]
   1908          	g_fCarSpeed *= CAR_SPEED_CONSTANT;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable33_28
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       __aeabi_f2d
   \   00000022   0x.... 0x....      LDR.W    R2,??DataTable33_29  ;; 0x47ae147b
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable33_30  ;; 0x3f947ae1
   \   0000002A   0x.... 0x....      BL       __aeabi_dmul
   \   0000002E   0x.... 0x....      BL       __aeabi_d2f
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable33_28
   \   00000036   0x6008             STR      R0,[R1, #+0]
   1909          
   1910                  if(g_fCarSpeedstart<CAR_SPEED_SET)
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable33_31
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x....             LDR.N    R1,??DataTable32_1  ;; 0x41a00000
   \   00000040   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000044   0xD209             BCS.N    ??SpeedControl_0
   1911                  {
   1912          	   g_fCarSpeedstart+=CAR_SPEED_STEP;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable33_31
   \   0000004A   0x6801             LDR      R1,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable33_32  ;; 0x40a00000
   \   00000050   0x.... 0x....      BL       __aeabi_fadd
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable33_31
   \   00000058   0x6008             STR      R0,[R1, #+0]
   1913                  }
   1914                  if(g_fCarSpeedstart>CAR_SPEED_SET)
   \                     ??SpeedControl_0:
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable33_31
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable33_33  ;; 0x41a00001
   \   00000064   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000068   0xD809             BHI.N    ??SpeedControl_1
   1915                  {
   1916          	   g_fCarSpeedstart-=CAR_SPEED_STEP;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable33_31
   \   0000006E   0x6801             LDR      R1,[R0, #+0]
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable33_34  ;; 0xc0a00000
   \   00000074   0x.... 0x....      BL       __aeabi_fadd
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable33_31
   \   0000007C   0x6008             STR      R0,[R1, #+0]
   1917                  }
   1918          
   1919                  if(speedflag<30) //speedflag的递加应该设在中断中
   \                     ??SpeedControl_1:
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable33_35
   \   00000082   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000086   0x281E             CMP      R0,#+30
   \   00000088   0xDA09             BGE.N    ??SpeedControl_2
   1920                  {
   1921                    fDelta = g_fCarSpeedstart - g_fCarSpeed;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable33_31
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable33_28
   \   00000094   0x6809             LDR      R1,[R1, #+0]
   \   00000096   0x.... 0x....      BL       __aeabi_fsub
   \   0000009A   0x0005             MOVS     R5,R0
   \   0000009C   0xE006             B.N      ??SpeedControl_3
   1922                  }
   1923                  else	
   1924                  {
   1925                    fDelta = CAR_SPEED_SET - g_fCarSpeed;
   \                     ??SpeedControl_2:
   \   0000009E   0x....             LDR.N    R0,??DataTable32_1  ;; 0x41a00000
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable33_28
   \   000000A4   0x6809             LDR      R1,[R1, #+0]
   \   000000A6   0x.... 0x....      BL       __aeabi_fsub
   \   000000AA   0x0005             MOVS     R5,R0
   1926                  }
   1927          
   1928                  fDelta = g_fCarSpeedstart - g_fCarSpeed;
   \                     ??SpeedControl_3:
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable33_31
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable33_28
   \   000000B6   0x6809             LDR      R1,[R1, #+0]
   \   000000B8   0x.... 0x....      BL       __aeabi_fsub
   \   000000BC   0x0005             MOVS     R5,R0
   1929          	fP = fDelta * SPEED_CONTROL_P;
   \   000000BE   0x0028             MOVS     R0,R5
   \   000000C0   0x.... 0x....      BL       __aeabi_f2d
   \   000000C4   0x.... 0x....      LDR.W    R2,??DataTable33_36  ;; 0x20c49ba
   \   000000C8   0x.... 0x....      LDR.W    R3,??DataTable33_37  ;; 0x3fa6872b
   \   000000CC   0x.... 0x....      BL       __aeabi_dmul
   \   000000D0   0x.... 0x....      BL       __aeabi_d2f
   \   000000D4   0x0004             MOVS     R4,R0
   1930          	fI = fDelta * SPEED_CONTROL_I;
   \   000000D6   0x0028             MOVS     R0,R5
   \   000000D8   0x.... 0x....      BL       __aeabi_f2d
   \   000000DC   0x.... 0x....      LDR.W    R2,??DataTable33_38  ;; 0x4d551d69
   \   000000E0   0x.... 0x....      LDR.W    R3,??DataTable33_39  ;; 0x3eff7510
   \   000000E4   0x.... 0x....      BL       __aeabi_dmul
   \   000000E8   0x.... 0x....      BL       __aeabi_d2f
   1931          	g_fSpeedControlIntegral += fI;		
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable33_40
   \   000000F0   0x6809             LDR      R1,[R1, #+0]
   \   000000F2   0x.... 0x....      BL       __aeabi_fadd
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable33_40
   \   000000FA   0x6008             STR      R0,[R1, #+0]
   1932          	if(g_fSpeedControlIntegral > SPEED_CONTROL_OUT_MAX)	
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable33_40
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable33_41  ;; 0x41200001
   \   00000106   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000010A   0xD804             BHI.N    ??SpeedControl_4
   1933          		g_fSpeedControlIntegral = SPEED_CONTROL_OUT_MAX;
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable33_40
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable33_42  ;; 0x41200000
   \   00000114   0x6001             STR      R1,[R0, #+0]
   1934          	if(g_fSpeedControlIntegral < SPEED_CONTROL_OUT_MIN)  	
   \                     ??SpeedControl_4:
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable33_40
   \   0000011A   0x6800             LDR      R0,[R0, #+0]
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable33_43  ;; 0xc1200000
   \   00000120   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000124   0xD204             BCS.N    ??SpeedControl_5
   1935          		g_fSpeedControlIntegral = SPEED_CONTROL_OUT_MIN;
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable33_40
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable33_43  ;; 0xc1200000
   \   0000012E   0x6001             STR      R1,[R0, #+0]
   1936          	
   1937          	g_fSpeedControlOutOld = g_fSpeedControlOutNew;
   \                     ??SpeedControl_5:
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable33_44
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable33_45
   \   00000138   0x6809             LDR      R1,[R1, #+0]
   \   0000013A   0x6001             STR      R1,[R0, #+0]
   1938          
   1939          	g_fSpeedControlOutNew = fP + g_fSpeedControlIntegral;
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable33_40
   \   00000140   0x6800             LDR      R0,[R0, #+0]
   \   00000142   0x0021             MOVS     R1,R4
   \   00000144   0x.... 0x....      BL       __aeabi_fadd
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable33_45
   \   0000014C   0x6008             STR      R0,[R1, #+0]
   1940          }
   \   0000014E   0xBD30             POP      {R4,R5,PC}       ;; return
   1941          

   \                                 In section .text, align 2, keep-with-next
   1942          void SpeedControlOutput(void)
   1943          {
   \                     SpeedControlOutput:
   \   00000000   0xB510             PUSH     {R4,LR}
   1944          	float fValue3;
   1945          	fValue3 = g_fSpeedControlOutNew - g_fSpeedControlOutOld;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable33_45
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable33_44
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fsub
   \   00000012   0x0004             MOVS     R4,R0
   1946          	g_fSpeedControlOut = fValue3 * (g_nSpeedControlPeriod + 1) / SPEED_CONTROL_PERIOD + g_fSpeedControlOutOld;	
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable33_46
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x.... 0x....      BL       __aeabi_i2f
   \   00000020   0x0021             MOVS     R1,R4
   \   00000022   0x.... 0x....      BL       __aeabi_fmul
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable33_47  ;; 0x42c80000
   \   0000002A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable33_44
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x.... 0x....      BL       __aeabi_fadd
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable33_48
   \   0000003C   0x6008             STR      R0,[R1, #+0]
   1947          }
   \   0000003E   0xBD10             POP      {R4,PC}          ;; return
   1948          

   \                                 In section .text, align 2, keep-with-next
   1949          void MotorSpeedOut(void)
   1950          {
   \                     MotorSpeedOut:
   \   00000000   0xB580             PUSH     {R7,LR}
   1951          	float fMotorValue;
   1952          	
   1953          	fMotorValue = g_fSpeedControlOut;
   \   00000002   0x....             LDR.N    R0,??DataTable33_48
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   1954                  /*
   1955          	if(fMotorValue > 0) fMotorValue += MOTOR_OUT_DEAD_VAL;
   1956          	else if(fMotorValue < 0) fMotorValue -= MOTOR_OUT_DEAD_VAL;
   1957          	*/	
   1958          	if(fMotorValue > MOTOR_OUT_MAX)	fMotorValue = MOTOR_OUT_MAX;
   \   00000006   0x....             LDR.N    R1,??DataTable33_49  ;; 0x3f800001
   \   00000008   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000000C   0xD801             BHI.N    ??MotorSpeedOut_0
   \   0000000E   0xF05F 0x507E      MOVS     R0,#+1065353216
   1959          	if(fMotorValue < MOTOR_OUT_MIN)	fMotorValue = MOTOR_OUT_MIN;
   \                     ??MotorSpeedOut_0:
   \   00000012   0x....             LDR.N    R1,??DataTable33_50  ;; 0xbf800000
   \   00000014   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000018   0xD200             BCS.N    ??MotorSpeedOut_1
   \   0000001A   0x....             LDR.N    R0,??DataTable33_50  ;; 0xbf800000
   1960          			
   1961          	SetMotorVoltage(fMotorValue);
   \                     ??MotorSpeedOut_1:
   \   0000001C   0x.... 0x....      BL       SetMotorVoltage
   1962          }
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
   1963          

   \                                 In section .text, align 2, keep-with-next
   1964          void SetMotorVoltage(float fMotorVoltage)
   1965          {
   \                     SetMotorVoltage:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1966                                                          // Voltage : > 0 : Move forward
   1967                                                          // Voltage : < 0 : Move backward
   1968          	int16 nPeriod;
   1969          	int16 nOut;
   1970          	
   1971          	nPeriod =1250;
   \   00000004   0xF240 0x45E2      MOVW     R5,#+1250
   1972                  //--------------------------------------------------------------------------
   1973          	if(fMotorVoltage > 1.0) 			fMotorVoltage = 1.0;
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x....             LDR.N    R1,??DataTable33_49  ;; 0x3f800001
   \   0000000C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000010   0xD802             BHI.N    ??SetMotorVoltage_0
   \   00000012   0xF05F 0x547E      MOVS     R4,#+1065353216
   \   00000016   0xE005             B.N      ??SetMotorVoltage_1
   1974          	else if(fMotorVoltage < -1.0) 	fMotorVoltage = -1.0;
   \                     ??SetMotorVoltage_0:
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x....             LDR.N    R1,??DataTable33_50  ;; 0xbf800000
   \   0000001C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000020   0xD200             BCS.N    ??SetMotorVoltage_1
   \   00000022   0x....             LDR.N    R4,??DataTable33_50  ;; 0xbf800000
   1975          	
   1976          
   1977                  //--------------------------------------------------------------------------	                                            	
   1978          	if(fMotorVoltage > 0)                                           //左轮 前
   \                     ??SetMotorVoltage_1:
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000002C   0xD212             BCS.N    ??SetMotorVoltage_2
   1979          	{
   1980                    gpio_init(PORTB, 9, 1,0);//DIL_B ;
   \   0000002E   0x2300             MOVS     R3,#+0
   \   00000030   0x2201             MOVS     R2,#+1
   \   00000032   0x2109             MOVS     R1,#+9
   \   00000034   0x....             LDR.N    R0,??DataTable33_26  ;; 0x400ff040
   \   00000036   0x.... 0x....      BL       gpio_init
   1981                    nOut = (int16)(fMotorVoltage * nPeriod);
   \   0000003A   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000003C   0x0028             MOVS     R0,R5
   \   0000003E   0x.... 0x....      BL       __aeabi_i2f
   \   00000042   0x0021             MOVS     R1,R4
   \   00000044   0x.... 0x....      BL       __aeabi_fmul
   \   00000048   0x.... 0x....      BL       __aeabi_f2iz
   1982                    FTM1_C0V=nOut;
   \   0000004C   0x....             LDR.N    R1,??DataTable33_27  ;; 0x40039010
   \   0000004E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000050   0x6008             STR      R0,[R1, #+0]
   \   00000052   0xE015             B.N      ??SetMotorVoltage_3
   1983          	}
   1984          	else                                                           //左轮 后
   1985          	{
   1986          	  gpio_init(PORTB, 9, 1,1);// DIL_F ;
   \                     ??SetMotorVoltage_2:
   \   00000054   0x2301             MOVS     R3,#+1
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x2109             MOVS     R1,#+9
   \   0000005A   0x....             LDR.N    R0,??DataTable33_26  ;; 0x400ff040
   \   0000005C   0x.... 0x....      BL       gpio_init
   1987          	  fMotorVoltage = -fMotorVoltage;
   \   00000060   0xF094 0x4400      EORS     R4,R4,#0x80000000
   1988                    nOut = (int16)(fMotorVoltage * nPeriod);
   \   00000064   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000066   0x0028             MOVS     R0,R5
   \   00000068   0x.... 0x....      BL       __aeabi_i2f
   \   0000006C   0x0021             MOVS     R1,R4
   \   0000006E   0x.... 0x....      BL       __aeabi_fmul
   \   00000072   0x.... 0x....      BL       __aeabi_f2iz
   1989          	  FTM1_C0V=nPeriod-nOut;
   \   00000076   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000078   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000007A   0x1A28             SUBS     R0,R5,R0
   \   0000007C   0x....             LDR.N    R1,??DataTable33_27  ;; 0x40039010
   \   0000007E   0x6008             STR      R0,[R1, #+0]
   1990            	}
   1991          }
   \                     ??SetMotorVoltage_3:
   \   00000080   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1992          

   \                                 In section .text, align 2, keep-with-next
   1993          void Clear()
   1994          {
   1995              g_lnInputVoltageSigma[0]=0;
   \                     Clear:
   \   00000000   0x....             LDR.N    R0,??DataTable33_51
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x6001             STR      R1,[R0, #+0]
   1996              g_lnInputVoltageSigma[1]=0;
   \   00000006   0x....             LDR.N    R0,??DataTable33_51
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x6041             STR      R1,[R0, #+4]
   1997              g_lnInputVoltageSigma[2]=0;
   \   0000000C   0x....             LDR.N    R0,??DataTable33_51
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x6081             STR      R1,[R0, #+8]
   1998          }
   \   00000012   0x4770             BX       LR               ;; return
   1999          
   2000          
   2001          
   2002          /****************************虚拟示波器模块******************************/

   \                                 In section .text, align 2, keep-with-next
   2003          void virtual_scope_show(void)
   2004          {
   2005                OutData[0]=0;
   \                     virtual_scope_show:
   \   00000000   0x....             LDR.N    R0,??DataTable33_52
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x8001             STRH     R1,[R0, #+0]
   2006                OutData[1]=0;
   \   00000006   0x....             LDR.N    R0,??DataTable33_52
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x8041             STRH     R1,[R0, #+2]
   2007                OutData[2]=0;
   \   0000000C   0x....             LDR.N    R0,??DataTable33_52
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x8081             STRH     R1,[R0, #+4]
   2008                OutData[3]=0;
   \   00000012   0x....             LDR.N    R0,??DataTable33_52
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x80C1             STRH     R1,[R0, #+6]
   2009          }
   \   00000018   0x4770             BX       LR               ;; return
   2010          
   2011          

   \                                 In section .text, align 2, keep-with-next
   2012          void serial_Txd()//传输的一帧数据，包括如下的内容
   2013          {
   \                     serial_Txd:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   2014                  uint8 temp[10]={0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2300             MOVS     R3,#+0
   \   0000000C   0xC00E             STM      R0!,{R1-R3}
   \   0000000E   0x380C             SUBS     R0,R0,#+12
   2015                  uint8 i,j;
   2016                  //帧头数据
   2017                  uart_send1 (UART3, 0xa5);
   \   00000010   0x21A5             MOVS     R1,#+165
   \   00000012   0x....             LDR.N    R0,??DataTable33_53  ;; 0x4006d000
   \   00000014   0x.... 0x....      BL       uart_send1
   2018                  uart_send1 (UART3, 0x5a);
   \   00000018   0x215A             MOVS     R1,#+90
   \   0000001A   0x....             LDR.N    R0,??DataTable33_53  ;; 0x4006d000
   \   0000001C   0x.... 0x....      BL       uart_send1
   2019          	
   2020                 //第一条曲线的数据
   2021                  for(i=0;i<3;i++)
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0xE019             B.N      ??serial_Txd_0
   2022                  {
   2023                     temp[i*2]=(int)OutData[i]/10;
   \                     ??serial_Txd_1:
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x....             LDR.N    R1,??DataTable33_52
   \   00000028   0xF931 0x1010      LDRSH    R1,[R1, R0, LSL #+1]
   \   0000002C   0x220A             MOVS     R2,#+10
   \   0000002E   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0xAA00             ADD      R2,SP,#+0
   \   00000036   0xF802 0x1010      STRB     R1,[R2, R0, LSL #+1]
   2024                     temp[i*2+1]=(int)OutData[i]%10;
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x....             LDR.N    R1,??DataTable33_52
   \   0000003E   0xF931 0x1010      LDRSH    R1,[R1, R0, LSL #+1]
   \   00000042   0x220A             MOVS     R2,#+10
   \   00000044   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \   00000048   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0xAA00             ADD      R2,SP,#+0
   \   00000050   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   00000054   0x7051             STRB     R1,[R2, #+1]
   2025                  }
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \                     ??serial_Txd_0:
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x2803             CMP      R0,#+3
   \   0000005C   0xD3E2             BCC.N    ??serial_Txd_1
   2026                 for(j=0;j<6;j++)
   \   0000005E   0x2400             MOVS     R4,#+0
   \   00000060   0xE006             B.N      ??serial_Txd_2
   2027                 {
   2028                    uart_send1 (UART3, temp[j]);
   \                     ??serial_Txd_3:
   \   00000062   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000064   0xA800             ADD      R0,SP,#+0
   \   00000066   0x5C21             LDRB     R1,[R4, R0]
   \   00000068   0x....             LDR.N    R0,??DataTable33_53  ;; 0x4006d000
   \   0000006A   0x.... 0x....      BL       uart_send1
   2029                 }
   \   0000006E   0x1C64             ADDS     R4,R4,#+1
   \                     ??serial_Txd_2:
   \   00000070   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000072   0x2C06             CMP      R4,#+6
   \   00000074   0xD3F5             BCC.N    ??serial_Txd_3
   2030                  delay_ms(10);
   \   00000076   0x200A             MOVS     R0,#+10
   \   00000078   0x.... 0x....      BL       delay_ms
   2031          }
   \   0000007C   0xBD1F             POP      {R0-R4,PC}       ;; return
   2032          
   2033          

   \                                 In section .text, align 2, keep-with-next
   2034          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
   2035          {
   \                     CRC_CHECK:
   \   00000000   0xB430             PUSH     {R4,R5}
   2036              unsigned short CRC_Temp;
   2037              unsigned char i,j;
   2038              CRC_Temp = 0xffff;
   \   00000002   0xF64F 0x72FF      MOVW     R2,#+65535
   2039          
   2040              for (i=0;i<CRC_CNT; i++)
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0xE000             B.N      ??CRC_CHECK_0
   \                     ??CRC_CHECK_1:
   \   0000000A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??CRC_CHECK_0:
   \   0000000C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x428B             CMP      R3,R1
   \   00000012   0xD213             BCS.N    ??CRC_CHECK_2
   2041              {
   2042                  CRC_Temp ^= Buf[i];
   \   00000014   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000016   0x5C1C             LDRB     R4,[R3, R0]
   \   00000018   0x4062             EORS     R2,R4,R2
   2043                  for (j=0;j<8;j++)
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0xE002             B.N      ??CRC_CHECK_3
   2044                  {
   2045                      if (CRC_Temp & 0x01)
   2046                          CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;
   2047                      else
   2048                          CRC_Temp = CRC_Temp >> 1;
   \                     ??CRC_CHECK_4:
   \   0000001E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000020   0x0852             LSRS     R2,R2,#+1
   \                     ??CRC_CHECK_5:
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??CRC_CHECK_3:
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2C08             CMP      R4,#+8
   \   00000028   0xD2EF             BCS.N    ??CRC_CHECK_1
   \   0000002A   0x07D5             LSLS     R5,R2,#+31
   \   0000002C   0xD5F7             BPL.N    ??CRC_CHECK_4
   \   0000002E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000030   0x0852             LSRS     R2,R2,#+1
   \   00000032   0xF482 0x4220      EOR      R2,R2,#0xA000
   \   00000036   0xF092 0x0201      EORS     R2,R2,#0x1
   \   0000003A   0xE7F2             B.N      ??CRC_CHECK_5
   2049                  }
   2050              }
   2051              return(CRC_Temp);
   \                     ??CRC_CHECK_2:
   \   0000003C   0x0010             MOVS     R0,R2
   \   0000003E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000040   0xBC30             POP      {R4,R5}
   \   00000042   0x4770             BX       LR               ;; return
   2052          }
   2053          
   2054          

   \                                 In section .text, align 2, keep-with-next
   2055          void OutPut_Data(void)
   2056          {
   \                     OutPut_Data:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
   2057            int temp[4] = {0};
   \   00000004   0xA807             ADD      R0,SP,#+28
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   2058            unsigned int temp1[4] = {0};
   \   0000000C   0xA803             ADD      R0,SP,#+12
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
   2059            unsigned char databuf[10] = {0};
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0xC00E             STM      R0!,{R1-R3}
   \   0000001E   0x380C             SUBS     R0,R0,#+12
   2060            unsigned char i;
   2061            unsigned short CRC16 = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   2062            for(i=0;i<4;i++)
   \   00000022   0x2400             MOVS     R4,#+0
   \   00000024   0xE010             B.N      ??OutPut_Data_0
   2063            {
   2064              temp[i]  = (int16)OutData[i];
   \                     ??OutPut_Data_1:
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0xA807             ADD      R0,SP,#+28
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0x....             LDR.N    R1,??DataTable33_52
   \   0000002E   0xF931 0x1014      LDRSH    R1,[R1, R4, LSL #+1]
   \   00000032   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   2065              temp1[i] = (uint16)temp[i];
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0xA803             ADD      R0,SP,#+12
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0xA907             ADD      R1,SP,#+28
   \   0000003E   0xF831 0x1024      LDRH     R1,[R1, R4, LSL #+2]
   \   00000042   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   2066            }
   \   00000046   0x1C64             ADDS     R4,R4,#+1
   \                     ??OutPut_Data_0:
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2C04             CMP      R4,#+4
   \   0000004C   0xD3EB             BCC.N    ??OutPut_Data_1
   2067          
   2068            for(i=0;i<4;i++)
   \   0000004E   0x2400             MOVS     R4,#+0
   \   00000050   0xE018             B.N      ??OutPut_Data_2
   2069            {
   2070              databuf[i*2]   = (int8)(temp1[i]%256);
   \                     ??OutPut_Data_3:
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0xA803             ADD      R0,SP,#+12
   \   00000056   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000005A   0xF44F 0x7180      MOV      R1,#+256
   \   0000005E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000062   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0xA800             ADD      R0,SP,#+0
   \   0000006A   0xF800 0x2014      STRB     R2,[R0, R4, LSL #+1]
   2071              databuf[i*2+1] = (int8)(temp1[i]/256);
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0xA803             ADD      R0,SP,#+12
   \   00000072   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000076   0x0A00             LSRS     R0,R0,#+8
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0xA900             ADD      R1,SP,#+0
   \   0000007C   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   00000080   0x7048             STRB     R0,[R1, #+1]
   2072            }
   \   00000082   0x1C64             ADDS     R4,R4,#+1
   \                     ??OutPut_Data_2:
   \   00000084   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000086   0x2C04             CMP      R4,#+4
   \   00000088   0xD3E3             BCC.N    ??OutPut_Data_3
   2073          
   2074            CRC16 = CRC_CHECK(databuf,8);
   \   0000008A   0x2108             MOVS     R1,#+8
   \   0000008C   0xA800             ADD      R0,SP,#+0
   \   0000008E   0x.... 0x....      BL       CRC_CHECK
   2075            databuf[8] = CRC16%256;
   \   00000092   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000094   0xF44F 0x7180      MOV      R1,#+256
   \   00000098   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000009C   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000A0   0xF88D 0x2008      STRB     R2,[SP, #+8]
   2076            databuf[9] = CRC16/256;
   \   000000A4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A6   0xF44F 0x7180      MOV      R1,#+256
   \   000000AA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000AE   0xF88D 0x0009      STRB     R0,[SP, #+9]
   2077          
   2078            for(i=0;i<10;i++)
   \   000000B2   0x2400             MOVS     R4,#+0
   \   000000B4   0xE006             B.N      ??OutPut_Data_4
   2079            uart_send1 (UART3,databuf[i]);
   \                     ??OutPut_Data_5:
   \   000000B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B8   0xA800             ADD      R0,SP,#+0
   \   000000BA   0x5C21             LDRB     R1,[R4, R0]
   \   000000BC   0x....             LDR.N    R0,??DataTable33_53  ;; 0x4006d000
   \   000000BE   0x.... 0x....      BL       uart_send1
   \   000000C2   0x1C64             ADDS     R4,R4,#+1
   \                     ??OutPut_Data_4:
   \   000000C4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C6   0x2C0A             CMP      R4,#+10
   \   000000C8   0xD3F5             BCC.N    ??OutPut_Data_5
   2080          }
   \   000000CA   0xB00C             ADD      SP,SP,#+48
   \   000000CC   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     g_lnInputVoltageSigma

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     HONGWAI_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     HONGWAI_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     hongwai_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x........         DC32     hongwai_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     Pixel_F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     PixelAverageValue_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     PixelAverageVoltage_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     TargetPixelAverageVoltage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     PixelAverageVoltageError

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x........         DC32     TargetPixelAverageVoltageAllowError

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x........         DC32     IntegrationTime_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x........         DC32     Pixel_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x........         DC32     PixelAverageValue_Zong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x........         DC32     PixelAverageVoltage_Zong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \   00000000   0x........         DC32     IntegrationTime_Zong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \   00000000   0x........         DC32     front_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \   00000000   0x........         DC32     front_min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \   00000000   0x........         DC32     Aver_F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_21:
   \   00000000   0x........         DC32     low_aver_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_22:
   \   00000000   0x........         DC32     high_aver_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_23:
   \   00000000   0x........         DC32     bodong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_24:
   \   00000000   0x........         DC32     IT_ref

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_25:
   \   00000000   0x........         DC32     zong_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_26:
   \   00000000   0x........         DC32     zong_min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_27:
   \   00000000   0x........         DC32     Aver_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_28:
   \   00000000   0x........         DC32     low_aver_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_29:
   \   00000000   0x........         DC32     high_aver_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     qpx_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     mq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     LHOLDdiao_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     Ldiaotou_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     RHOLDdiao_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     Rdiaotou_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     front_l_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     Pixel_F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     front_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     front_r_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     front_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     LR_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     Lr_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     lr_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     lost_all_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     mq_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     front_l_fg_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x........         DC32     front_r_fg_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     front_width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x........         DC32     cl_f_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     lR_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     front_l_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     front_r_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     Lpre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x........         DC32     Lpre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     Lpre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     Lpre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     Rpre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     Rpre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     Rpre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     Rpre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     IntegrationTime_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     IT_ref

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     front_l_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     front_r_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x........         DC32     L_aver

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0x........         DC32     L_fch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x........         DC32     R_aver

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \   00000000   0x........         DC32     R_fch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \   00000000   0x........         DC32     front_l_pre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \   00000000   0x........         DC32     front_l_pre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \   00000000   0x........         DC32     delta_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_9:
   \   00000000   0x........         DC32     front_r_pre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_10:
   \   00000000   0x........         DC32     front_r_pre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_11:
   \   00000000   0x........         DC32     delta_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_12:
   \   00000000   0x........         DC32     Lfch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_13:
   \   00000000   0x........         DC32     Rfch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_14:
   \   00000000   0x........         DC32     rzop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_15:
   \   00000000   0x........         DC32     Rdiaotou_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_16:
   \   00000000   0x........         DC32     Rendiao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_17:
   \   00000000   0x........         DC32     rensha_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_18:
   \   00000000   0x........         DC32     rzguo_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_19:
   \   00000000   0x........         DC32     Ldiaotou_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_20:
   \   00000000   0x........         DC32     Lendiao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     front_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0x........         DC32     cl_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \   00000000   0x........         DC32     front_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_3:
   \   00000000   0x........         DC32     front_l_pre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_4:
   \   00000000   0x........         DC32     front_l_pre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_5:
   \   00000000   0x........         DC32     front_r_pre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_6:
   \   00000000   0x........         DC32     front_r_pre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x........         DC32     front_OFFSET_pre10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x........         DC32     front_OFFSET_pre9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   0x........         DC32     front_OFFSET_pre8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \   00000000   0x........         DC32     front_OFFSET_pre7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \   00000000   0x........         DC32     front_OFFSET_pre6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \   00000000   0x........         DC32     front_OFFSET_pre5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \   00000000   0x........         DC32     front_OFFSET_pre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \   00000000   0x........         DC32     front_OFFSET_pre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \   00000000   0x........         DC32     front_OFFSET_pre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_9:
   \   00000000   0x........         DC32     front_OFFSET_pre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_10:
   \   00000000   0x........         DC32     d_err1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_11:
   \   00000000   0x........         DC32     d_err2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x........         DC32     d_err3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_1:
   \   00000000   0x........         DC32     d_err4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_2:
   \   00000000   0x........         DC32     d_err5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_3:
   \   00000000   0x........         DC32     d_err6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_4:
   \   00000000   0x........         DC32     d_err7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_5:
   \   00000000   0x........         DC32     d_err8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_6:
   \   00000000   0x........         DC32     d_err9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_7:
   \   00000000   0x........         DC32     fangcha_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_8:
   \   00000000   0x........         DC32     fangcha_qian_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_9:
   \   00000000   0x........         DC32     route_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_10:
   \   00000000   0x........         DC32     route_ave_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_11:
   \   00000000   0x........         DC32     chafang_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_12:
   \   00000000   0x........         DC32     Pixel_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x........         DC32     fangcha_hou_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   0x........         DC32     black_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \   00000000   0x........         DC32     black_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \   00000000   0x........         DC32     zhong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_3:
   \   00000000   0x........         DC32     zheng

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_4:
   \   00000000   0x........         DC32     zong_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_5:
   \   00000000   0x........         DC32     zong_width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_6:
   \   00000000   0x........         DC32     stop_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_7:
   \   00000000   0x........         DC32     delay_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_8:
   \   00000000   0x........         DC32     zong_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x........         DC32     stop_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \   00000000   0x........         DC32     zong_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_2:
   \   00000000   0x........         DC32     high_aver_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_3:
   \   00000000   0x........         DC32     low_aver_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_4:
   \   00000000   0x........         DC32     zong_r_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_5:
   \   00000000   0x........         DC32     zong_l_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_6:
   \   00000000   0x........         DC32     front_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_7:
   \   00000000   0x........         DC32     cl_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_8:
   \   00000000   0x........         DC32     zong_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_9:
   \   00000000   0x........         DC32     zong_l_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_10:
   \   00000000   0x........         DC32     zong_r_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_11:
   \   00000000   0x........         DC32     zong_OFFSET_pre10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_12:
   \   00000000   0x........         DC32     zong_OFFSET_pre9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_13:
   \   00000000   0x........         DC32     zong_OFFSET_pre8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_14:
   \   00000000   0x........         DC32     zong_OFFSET_pre7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_15:
   \   00000000   0x........         DC32     zong_OFFSET_pre6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_16:
   \   00000000   0x........         DC32     zong_OFFSET_pre5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_17:
   \   00000000   0x........         DC32     zong_OFFSET_pre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_18:
   \   00000000   0x........         DC32     zong_OFFSET_pre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_19:
   \   00000000   0x........         DC32     zong_OFFSET_pre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_20:
   \   00000000   0x........         DC32     zong_OFFSET_pre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_21:
   \   00000000   0x........         DC32     z_err1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_22:
   \   00000000   0x........         DC32     z_err2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_23:
   \   00000000   0x........         DC32     z_err3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_24:
   \   00000000   0x........         DC32     z_err4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_25:
   \   00000000   0x........         DC32     z_err5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_26:
   \   00000000   0x........         DC32     z_err6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_27:
   \   00000000   0x........         DC32     z_err7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_28:
   \   00000000   0x........         DC32     z_err8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_29:
   \   00000000   0x........         DC32     fangcha_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_30:
   \   00000000   0x........         DC32     fangcha_qian_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_31:
   \   00000000   0x........         DC32     route_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x........         DC32     route_ave_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \   00000000   0x........         DC32     chafang_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_2:
   \   00000000   0x........         DC32     front_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x........         DC32     z_err9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_1:
   \   00000000   0x........         DC32     fangcha_hou_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_2:
   \   00000000   0x........         DC32     g_fDirectionControlOutOld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_3:
   \   00000000   0x........         DC32     front_OFFSET_KZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_4:
   \   00000000   0x........         DC32     front_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_5:
   \   00000000   0x........         DC32     k

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_6:
   \   00000000   0x........         DC32     t

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_7:
   \   00000000   0x40400000         DC32     0x40400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_8:
   \   00000000   0x........         DC32     delta_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_9:
   \   00000000   0x........         DC32     chu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   0x40340000         DC32     0x40340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \   00000000   0xC0340000         DC32     0xc0340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x........         DC32     D_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \   00000000   0x........         DC32     ZZ_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \   00000000   0x........         DC32     pulse_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_1:
   \   00000000   0x........         DC32     front_OFFSET_KZ_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_2:
   \   00000000   0x........         DC32     Ki

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_3:
   \   00000000   0x........         DC32     Kp_hold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_4:
   \   00000000   0x........         DC32     Kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_5:
   \   00000000   0x........         DC32     ZHONG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_6:
   \   00000000   0x........         DC32     I_sumerr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_7:
   \   00000000   0x........         DC32     Kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x........         DC32     servo_duty

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x........         DC32     xianfu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   0x........         DC32     g_fDirectionControlOutNew

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   0x........         DC32     g_nDirectionControlPeriod

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_1:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_2:
   \   00000000   0x........         DC32     g_nMotorPulse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_3:
   \   00000000   0x........         DC32     g_nMotorPulseSigma

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_4:
   \   00000000   0x........         DC32     fangcha_qian_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_5:
   \   00000000   0x........         DC32     fch_dp2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_6:
   \   00000000   0x........         DC32     WW_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_7:
   \   00000000   0x........         DC32     SHA_PULSE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_8:
   \   00000000   0x........         DC32     shache_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_9:
   \   00000000   0x........         DC32     speed_B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_1:
   \   00000000   0x........         DC32     speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_2:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_3:
   \   00000000   0x........         DC32     speed_H

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_4:
   \   00000000   0x........         DC32     LHOLDdiao_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_5:
   \   00000000   0x........         DC32     RHOLDdiao_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_6:
   \   00000000   0x........         DC32     rensha_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_7:
   \   00000000   0x........         DC32     RSH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_8:
   \   00000000   0xFFFFFE70         DC32     0xfffffe70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_9:
   \   00000000   0x........         DC32     fch_dp1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_10:
   \   00000000   0x........         DC32     shache_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_11:
   \   00000000   0x........         DC32     SHACHE_TIME_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_12:
   \   00000000   0x........         DC32     SHACHE_TIME_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_13:
   \   00000000   0x........         DC32     SHACHE_TIME_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_14:
   \   00000000   0x........         DC32     SHACHE_TIME_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_15:
   \   00000000   0x........         DC32     SHACHE_TIME_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_16:
   \   00000000   0x........         DC32     PULSE_MAX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_17:
   \   00000000   0x........         DC32     speed_jian

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_18:
   \   00000000   0x........         DC32     speed_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_19:
   \   00000000   0x........         DC32     stop_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_20:
   \   00000000   0x........         DC32     jisha

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_21:
   \   00000000   0xFFFFFE0C         DC32     0xfffffe0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_22:
   \   00000000   0x........         DC32     `sp`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_23:
   \   00000000   0x........         DC32     pulse_count_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_24:
   \   00000000   0x........         DC32     sd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_25:
   \   00000000   0xFFFFFB1E         DC32     0xfffffb1e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_26:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_27:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_28:
   \   00000000   0x........         DC32     g_fCarSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_29:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_30:
   \   00000000   0x3F947AE1         DC32     0x3f947ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_31:
   \   00000000   0x........         DC32     g_fCarSpeedstart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_32:
   \   00000000   0x40A00000         DC32     0x40a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_33:
   \   00000000   0x41A00001         DC32     0x41a00001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_34:
   \   00000000   0xC0A00000         DC32     0xc0a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_35:
   \   00000000   0x........         DC32     speedflag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_36:
   \   00000000   0x020C49BA         DC32     0x20c49ba

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_37:
   \   00000000   0x3FA6872B         DC32     0x3fa6872b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_38:
   \   00000000   0x4D551D69         DC32     0x4d551d69

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_39:
   \   00000000   0x3EFF7510         DC32     0x3eff7510

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_40:
   \   00000000   0x........         DC32     g_fSpeedControlIntegral

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_41:
   \   00000000   0x41200001         DC32     0x41200001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_42:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_43:
   \   00000000   0xC1200000         DC32     0xc1200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_44:
   \   00000000   0x........         DC32     g_fSpeedControlOutOld

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_45:
   \   00000000   0x........         DC32     g_fSpeedControlOutNew

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_46:
   \   00000000   0x........         DC32     g_nSpeedControlPeriod

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_47:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_48:
   \   00000000   0x........         DC32     g_fSpeedControlOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_49:
   \   00000000   0x3F800001         DC32     0x3f800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_50:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_51:
   \   00000000   0x........         DC32     g_lnInputVoltageSigma

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_52:
   \   00000000   0x........         DC32     OutData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_53:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   2081          
   2082          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  ADC0_start
              8 -> hw_adc_convertstart
        8  ADC0_stop
              8 -> hw_adc_convertstop
        0  Abs
        8  CCD_init
              8 -> gpio_init
              8 -> hw_adc_init
        8  CRC_CHECK
        8  CalculateIntegrationTimeFront
              8 -> PixelAverage
        8  CalculateIntegrationTimeZong
              8 -> PixelAverage
        0  Clear
        8  DirectionControlOutput
              8 -> __aeabi_f2iz
              8 -> __aeabi_fadd
              8 -> __aeabi_fdiv
              8 -> __aeabi_fmul
              8 -> __aeabi_fsub
              8 -> __aeabi_i2f
        0  GetMotorPulse
        0  GetOFFSET
        8  GetSamplezhi
              8 -> hw_ad_ave
       16  ImageCapture_F
             16 -> SamplingDelay
             16 -> gpio_init
             16 -> hw_ad_once
       16  ImageCapture_Z
             16 -> SamplingDelay
             16 -> gpio_init
             16 -> hw_ad_once
        8  LCD_show
              8 -> LCD_P8x16_number
        8  MotorSpeedOut
              8 -> SetMotorVoltage
              8 -> __aeabi_cfcmple
              8 -> __aeabi_cfrcmple
       56  OutPut_Data
             56 -> CRC_CHECK
             56 -> __aeabi_memclr4
             56 -> uart_send1
        4  PixelAverage
        4  SamplingDelay
        8  SendHex
              8 -> uart_send1
       16  SendImageData
             16 -> SendHex
             16 -> uart_send1
       16  SetMotorVoltage
             16 -> __aeabi_cfcmple
             16 -> __aeabi_cfrcmple
             16 -> __aeabi_f2iz
             16 -> __aeabi_fmul
             16 -> __aeabi_i2f
             16 -> gpio_init
       16  SetServoVoltage
             16 -> FTM_PWM_ChangeDuty
             16 -> __aeabi_cdcmple
             16 -> __aeabi_cdrcmple
             16 -> __aeabi_d2iz
             16 -> __aeabi_dadd
             16 -> __aeabi_ddiv
             16 -> __aeabi_dmul
             16 -> __aeabi_f2d
             16 -> __aeabi_fadd
             16 -> __aeabi_fmul
             16 -> __aeabi_fsub
             16 -> __aeabi_i2f
       12  SpeedControl
             12 -> __aeabi_cfcmple
             12 -> __aeabi_cfrcmple
             12 -> __aeabi_d2f
             12 -> __aeabi_dmul
             12 -> __aeabi_f2d
             12 -> __aeabi_fadd
             12 -> __aeabi_fsub
             12 -> __aeabi_i2f
        8  SpeedControlOutput
              8 -> __aeabi_fadd
              8 -> __aeabi_fdiv
              8 -> __aeabi_fmul
              8 -> __aeabi_fsub
              8 -> __aeabi_i2f
        8  Speed_PID
              8 -> IncPID_Calculate
              8 -> PID_SetPoint
              8 -> __aeabi_f2iz
              8 -> __aeabi_fadd
              8 -> __aeabi_fmul
              8 -> __aeabi_i2f
              8 -> gpio_init
              8 -> shache3
        8  StartIntegrationFront
              8 -> SamplingDelay
              8 -> gpio_init
        8  StartIntegrationZong
              8 -> SamplingDelay
              8 -> gpio_init
       24  binaryzation_F
             24 -> Abs
       24  binaryzation_Z
             24 -> Abs
        8  get_ad
              8 -> hw_ad_ave
        8  get_front
              8 -> Abs
       56  get_fu
             56 -> Abs
             56 -> __aeabi_memclr4
        4  get_zong
        8  route_type_F
        8  route_type_Z
       24  serial_Txd
             24 -> delay_ms
             24 -> uart_send1
        0  shache2
        0  shache3
        0  virtual_scope_show


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant {0}>
      20  ?<Constant {0}>_1
      12  ?<Constant {0}>_2
      16  ?<Constant {0}>_3
      16  ?<Constant {0}>_4
      12  ?<Constant {0}>_5
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_21
       4  ??DataTable11_22
       4  ??DataTable11_23
       4  ??DataTable11_24
       4  ??DataTable11_25
       4  ??DataTable11_26
       4  ??DataTable11_27
       4  ??DataTable11_28
       4  ??DataTable11_29
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_2
       4  ??DataTable13_3
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_10
       4  ??DataTable14_11
       4  ??DataTable14_12
       4  ??DataTable14_13
       4  ??DataTable14_14
       4  ??DataTable14_15
       4  ??DataTable14_16
       4  ??DataTable14_17
       4  ??DataTable14_18
       4  ??DataTable14_19
       4  ??DataTable14_2
       4  ??DataTable14_20
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_2
       4  ??DataTable15_3
       4  ??DataTable15_4
       4  ??DataTable15_5
       4  ??DataTable15_6
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_10
       4  ??DataTable18_11
       4  ??DataTable18_2
       4  ??DataTable18_3
       4  ??DataTable18_4
       4  ??DataTable18_5
       4  ??DataTable18_6
       4  ??DataTable18_7
       4  ??DataTable18_8
       4  ??DataTable18_9
       4  ??DataTable19
       4  ??DataTable19_1
       4  ??DataTable19_10
       4  ??DataTable19_11
       4  ??DataTable19_12
       4  ??DataTable19_2
       4  ??DataTable19_3
       4  ??DataTable19_4
       4  ??DataTable19_5
       4  ??DataTable19_6
       4  ??DataTable19_7
       4  ??DataTable19_8
       4  ??DataTable19_9
       4  ??DataTable21
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_2
       4  ??DataTable22_3
       4  ??DataTable22_4
       4  ??DataTable22_5
       4  ??DataTable22_6
       4  ??DataTable22_7
       4  ??DataTable22_8
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable23_10
       4  ??DataTable23_11
       4  ??DataTable23_12
       4  ??DataTable23_13
       4  ??DataTable23_14
       4  ??DataTable23_15
       4  ??DataTable23_16
       4  ??DataTable23_17
       4  ??DataTable23_18
       4  ??DataTable23_19
       4  ??DataTable23_2
       4  ??DataTable23_20
       4  ??DataTable23_21
       4  ??DataTable23_22
       4  ??DataTable23_23
       4  ??DataTable23_24
       4  ??DataTable23_25
       4  ??DataTable23_26
       4  ??DataTable23_27
       4  ??DataTable23_28
       4  ??DataTable23_29
       4  ??DataTable23_3
       4  ??DataTable23_30
       4  ??DataTable23_31
       4  ??DataTable23_4
       4  ??DataTable23_5
       4  ??DataTable23_6
       4  ??DataTable23_7
       4  ??DataTable23_8
       4  ??DataTable23_9
       4  ??DataTable24
       4  ??DataTable24_1
       4  ??DataTable24_2
       4  ??DataTable25
       4  ??DataTable25_1
       4  ??DataTable25_2
       4  ??DataTable25_3
       4  ??DataTable25_4
       4  ??DataTable25_5
       4  ??DataTable25_6
       4  ??DataTable25_7
       4  ??DataTable25_8
       4  ??DataTable25_9
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_2
       4  ??DataTable28
       4  ??DataTable28_1
       4  ??DataTable28_2
       4  ??DataTable28_3
       4  ??DataTable28_4
       4  ??DataTable28_5
       4  ??DataTable28_6
       4  ??DataTable28_7
       4  ??DataTable29
       4  ??DataTable30
       4  ??DataTable31
       4  ??DataTable32
       4  ??DataTable32_1
       4  ??DataTable32_2
       4  ??DataTable32_3
       4  ??DataTable32_4
       4  ??DataTable32_5
       4  ??DataTable32_6
       4  ??DataTable32_7
       4  ??DataTable32_8
       4  ??DataTable32_9
       4  ??DataTable33
       4  ??DataTable33_1
       4  ??DataTable33_10
       4  ??DataTable33_11
       4  ??DataTable33_12
       4  ??DataTable33_13
       4  ??DataTable33_14
       4  ??DataTable33_15
       4  ??DataTable33_16
       4  ??DataTable33_17
       4  ??DataTable33_18
       4  ??DataTable33_19
       4  ??DataTable33_2
       4  ??DataTable33_20
       4  ??DataTable33_21
       4  ??DataTable33_22
       4  ??DataTable33_23
       4  ??DataTable33_24
       4  ??DataTable33_25
       4  ??DataTable33_26
       4  ??DataTable33_27
       4  ??DataTable33_28
       4  ??DataTable33_29
       4  ??DataTable33_3
       4  ??DataTable33_30
       4  ??DataTable33_31
       4  ??DataTable33_32
       4  ??DataTable33_33
       4  ??DataTable33_34
       4  ??DataTable33_35
       4  ??DataTable33_36
       4  ??DataTable33_37
       4  ??DataTable33_38
       4  ??DataTable33_39
       4  ??DataTable33_4
       4  ??DataTable33_40
       4  ??DataTable33_41
       4  ??DataTable33_42
       4  ??DataTable33_43
       4  ??DataTable33_44
       4  ??DataTable33_45
       4  ??DataTable33_46
       4  ??DataTable33_47
       4  ??DataTable33_48
       4  ??DataTable33_49
       4  ??DataTable33_5
       4  ??DataTable33_50
       4  ??DataTable33_51
       4  ??DataTable33_52
       4  ??DataTable33_53
       4  ??DataTable33_6
       4  ??DataTable33_7
       4  ??DataTable33_8
       4  ??DataTable33_9
      34  ADC0_start
      28  ADC0_stop
      10  Abs
       2  Aver_F
       2  Aver_Z
       1  BL_SHACHE_TIME
      66  CCD_init
      68  CRC_CHECK
     166  CalculateIntegrationTimeFront
     166  CalculateIntegrationTimeZong
      20  Clear
       1  DR
       2  D_err
      70  DirectionControlOutput
      42  GetMotorPulse
      38  GetOFFSET
      60  GetSamplezhi
       8  I_sumerr
     218  ImageCapture_F
     218  ImageCapture_Z
       1  IntegrationTime_Front
       1  IntegrationTime_Zong
      36  LCD_show
       1  LHOLDdiao_flag
       2  LR_count
       2  L_aver
       2  L_fch
       2  Ldiaotou_count
       1  Ldiaotou_flag
       1  Lendiao
       2  Lfch
       2  Lpre1
       2  Lpre2
       2  Lpre3
       2  Lpre4
       2  Lqing_count
       2  Lr_count
      34  MotorSpeedOut
       8  OutData
     206  OutPut_Data
       1  PD_ZW_flag
       1  PD_ZW_keeptime
      40  PixelAverage
       1  PixelAverageValue_Front
       1  PixelAverageValue_Zong
       2  PixelAverageVoltageError
       1  PixelAverageVoltage_Front
       1  PixelAverageVoltage_Zong
       1  RHOLDdiao_flag
       2  RSH
       2  R_aver
       2  R_fch
       2  Rdiaotou_count
       1  Rdiaotou_flag
       1  Rendiao
       2  Rfch
       2  Rpre1
       2  Rpre2
       2  Rpre3
       2  Rpre4
       2  Rqing_count
       1  SHACHE_TIME_1
       1  SHACHE_TIME_2
       1  SHACHE_TIME_3
       1  SHACHE_TIME_4
       1  SHACHE_TIME_5
       2  SHA_PULSE
      36  SamplingDelay
      86  SendHex
     100  SendImageData
     130  SetMotorVoltage
     664  SetServoVoltage
     336  SpeedControl
      64  SpeedControlOutput
     372  Speed_PID
     172  StartIntegrationFront
     172  StartIntegrationZong
       2  TargetPixelAverageVoltage
       2  TargetPixelAverageVoltageAllowError
       1  WW_flag
       2  ZHONG
       2  ZZ_count
       1  ZZ_flag
       1  banma_flag
     846  binaryzation_F
     496  binaryzation_Z
       2  bl_count
       1  bl_flag
       2  bl_shache_time
       2  black_l
       2  black_r
       2  bodong
     200  chafang_f
     200  chafang_z
       4  chu
       2  cl_f
       2  cl_f_pre
       2  cl_z
       2  d_err1
       2  d_err2
       2  d_err3
       2  d_err4
       2  d_err5
       2  d_err6
       2  d_err7
       2  d_err8
       2  d_err9
       2  delay_count
       2  delta_l
       8  delta_p
       2  delta_r
       2  fangcha_f
       2  fangcha_hou_f
       2  fangcha_hou_z
       2  fangcha_qian_f
       2  fangcha_qian_z
       2  fangcha_z
       2  front_OFFSET
       2  front_OFFSET_KZ
       2  front_OFFSET_KZ_pre
       2  front_OFFSET_pre
       2  front_OFFSET_pre1
       2  front_OFFSET_pre10
       2  front_OFFSET_pre2
       2  front_OFFSET_pre3
       2  front_OFFSET_pre4
       2  front_OFFSET_pre5
       2  front_OFFSET_pre6
       2  front_OFFSET_pre7
       2  front_OFFSET_pre8
       2  front_OFFSET_pre9
       2  front_l
       2  front_l_fg_last
       2  front_l_flag
       2  front_l_last
       2  front_l_pre1
       2  front_l_pre2
       2  front_l_pre3
       2  front_l_pre4
       2  front_l_reference
       2  front_l_view
       2  front_max
       2  front_min
       2  front_r
       2  front_r_fg_last
       2  front_r_flag
       2  front_r_last
       2  front_r_pre1
       2  front_r_pre2
       2  front_r_pre3
       2  front_r_pre4
       2  front_r_reference
       2  front_r_view
       2  front_reference
       2  front_width
       4  g_fCarSpeed
       4  g_fCarSpeedstart
       4  g_fDirectionControlOut
       4  g_fDirectionControlOutNew
       4  g_fDirectionControlOutOld
       4  g_fMotorOut
       4  g_fSpeedControlIntegral
       4  g_fSpeedControlOut
       4  g_fSpeedControlOutNew
       4  g_fSpeedControlOutOld
      20  g_lnInputVoltageSigma
       2  g_nDirectionControlPeriod
      12  g_nInputVoltage
       2  g_nMotorPulse
       2  g_nMotorPulseSigma
       2  g_nRightMotorPulse
       1  g_nSpeedControlPeriod
      40  get_ad
    3354  get_front
     432  get_fu
    1090  get_zong
       2  gravity
       1  guosha_flag
       2  high_aver_f
       2  high_aver_z
       2  jiao_L
       2  jiao_R
       1  jisha
       4  k
       2  lR_count
       2  lost_all_count
       1  lost_all_flag
       1  lost_left_flag
       1  lost_right_flag
       2  low_aver_f
       2  low_aver_z
       2  lr_count
       1  mq
       1  mq_last
       4  pulse_count
       4  pulse_count_pre
       1  qd_count
       2  qpx_count
       2  real_l
       2  real_r
       2  rensha_count
       2  route_ave_f
       2  route_ave_z
     200  route_f
       2  route_mid
     448  route_type_F
     448  route_type_Z
       2  route_view
     200  route_z
       1  rzguo_count
       1  rzguo_flag
       1  rzop
       4  sd
     126  serial_Txd
       2  servo_duty
     372  shache2
    1010  shache3
       1  shache_fg
       4  sp
       2  speed_pwm
       2  stop_count
       2  stop_flag
       4  t
      26  virtual_scope_show
       2  voltage_gravity
       2  xianfu
       1  yichang_count
       1  yichang_flag
       2  z_err1
       2  z_err2
       2  z_err3
       2  z_err4
       2  z_err5
       2  z_err6
       2  z_err7
       2  z_err8
       2  z_err9
       2  zheng
       2  zhong
       2  zong_OFFSET
       2  zong_OFFSET_KZ
       2  zong_OFFSET_KZ_pre
       2  zong_OFFSET_pre
       2  zong_OFFSET_pre1
       2  zong_OFFSET_pre10
       2  zong_OFFSET_pre2
       2  zong_OFFSET_pre3
       2  zong_OFFSET_pre4
       2  zong_OFFSET_pre5
       2  zong_OFFSET_pre6
       2  zong_OFFSET_pre7
       2  zong_OFFSET_pre8
       2  zong_OFFSET_pre9
       2  zong_l
       2  zong_l_last
       2  zong_l_pre
       2  zong_l_reference
       2  zong_l_view
       2  zong_max
       2  zong_min
       2  zong_r
       2  zong_r_last
       2  zong_r_pre
       2  zong_r_reference
       2  zong_r_view
       2  zong_reference
       2  zong_width

 
  1 235 bytes in section .bss
     51 bytes in section .data
     96 bytes in section .rodata
 13 344 bytes in section .text
 
 13 344 bytes of CODE  memory
     96 bytes of CONST memory
  1 286 bytes of DATA  memory

Errors: none
Warnings: 6
