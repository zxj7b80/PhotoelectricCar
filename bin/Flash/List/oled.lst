###############################################################################
#                                                                             #
#                                                       04/Apr/2014  21:08:03 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PhotoelectricC #
#                    ar V1.2\src\Sources\C\Component_C\oled.c                 #
#    Command line =  "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.2\src\Sources\C\Component_C\oled.c" -D IAR -D     #
#                    TWR_K60N512 -lCN "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ #
#                    ÌÐò\PhotoelectricCar V1.2\bin\Flash\List\" -lB           #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.2\bin\Flash\List\" -o                             #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.2\bin\Flash\Obj\" --no_cse --no_unroll            #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files            #
#                    (x86)\IAREW6.3\arm\INC\c\DLib_Config_Normal.h" -I        #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.2\src\Sources\H\" -I                              #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.2\src\Sources\H\Component_H\" -I                  #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\Photoelectric #
#                    Car V1.2\src\Sources\H\Frame_H\" -Ol --use_c++_inline    #
#    List file    =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PhotoelectricC #
#                    ar V1.2\bin\Flash\List\oled.lst                          #
#    Object file  =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PhotoelectricC #
#                    ar V1.2\bin\Flash\Obj\oled.o                             #
#                                                                             #
#                                                                             #
###############################################################################

D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PhotoelectricCar V1.2\src\Sources\C\Component_C\oled.c
      1          
      2          //³ÌÐòÃû£º  OLED Çý¶¯³ÌÐò
      3          //Ó²¼þÆ½Ì¨£ºMK60DN512ZVLL10
      4          //¿ª·¢»·¾³£ºIAR V6.3
      5          //×îºóÐÞ¸ÄºÍ×¢½âµÄÊ±¼ä£º
      6          //                     2012.8.24
      7          
      8          
      9          /*********Òý½ÅÁ¬½Ó·½Ê½******************
     10          G    µçÔ´µØ
     11          3.3V ½Ó3.3VµçÔ´
     12          D0   PORTA_PA15  
     13          D1   PORTA_PA16
     14          RST  PORTA_PA13 
     15          DC   PORTA_PA12
     16          CS   ÒÑ½ÓµØ£¬²»ÓÃ½Ó  
     17          ****************************************/
     18          
     19          /****************************************************************************
     20          4ÏßSPIÊ¹ÓÃËµÃ÷£º
     21          VBT ¹©ÄÚ²¿DC-DCµçÑ¹£¬3.3~4.3V£¬Èç¹ûÊ¹ÓÃ5VµçÑ¹£¬Îª±£ÏÕÆð¼û´®Ò»¸ö100~500Å·µÄµç×è
     22          VCC ¹©ÄÚ²¿Âß¼­µçÑ¹ 1.8~6V   
     23          GND µØ
     24          
     25          CS  Æ¬Ñ¡¹Ü½Å
     26          DC  ÃüÁîÊý¾ÝÑ¡Ôñ¹Ü½Å
     27          RST Ä£¿é¸´Î»¹Ü½Å 
     28          D0£¨SCLK£© £¬Ê±ÖÓ½Å£¬ÓÉMCU¿ØÖÆ
     29          D1£¨MOSI£© £¬Ö÷Êä³ö´ÓÊäÈëÊý¾Ý½Å£¬ÓÉMCU¿ØÖÆ
     30            
     31          ******************************************************************************/
     32          
     33          #include<oled.h>
     34          #include<gpio.h>
     35          //#include<ov7620.h>
     36          #define ROW    255
     37          #define COLUMN 255

   \                                 In section .bss, align 4
     38          uint8 PHOTO_BUFF[ROW][COLUMN];
   \                     PHOTO_BUFF:
   \   00000000                      DS8 65028
     39          //extern uint8 PHOTO_BUFF[ROW][COLUMN];
     40          
     41          #define LCD_SCL_H  gpio_init(PORTE, 6, 1,1)
     42          #define LCD_SCL_L  gpio_init(PORTE, 6, 1,0)
     43          
     44          #define LCD_SDA_H  gpio_init(PORTE, 4, 1,1)
     45          #define LCD_SDA_L  gpio_init(PORTE, 4, 1,0)
     46          
     47          #define LCD_RST_H  gpio_init(PORTE, 2, 1,1)
     48          #define LCD_RST_L  gpio_init(PORTE, 2, 1,0)
     49          
     50          #define LCD_DC_H   gpio_init(PORTE, 0, 1,1)
     51          #define LCD_DC_L   gpio_init(PORTE, 0, 1,0) 
     52          
     53          
     54          #define XLevelL		0x00
     55          #define XLevelH		0x10
     56          #define XLevel		((XLevelH&0x0F)*16+XLevelL)
     57          #define Max_Column	128
     58          #define Max_Row		64
     59          #define	Brightness	0xCF 
     60          
     61          #define X_WIDTH 128
     62          #define Y_WIDTH 64
     63          //======================================

   \                                 In section .rodata, align 4
     64          const uint8 F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     65          {
     66              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     67              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     68              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     69              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     70              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     71              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     72              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     73              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     74              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     75              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     76              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     77              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     78              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
     79              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
     80              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
     81              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
     82              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
     83              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
     84              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
     85              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
     86              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
     87              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
     88              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
     89              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
     90              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
     91              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
     92              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
     93              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
     94              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
     95              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
     96              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
     97              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
     98              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
     99              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
    100              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
    101              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
    102              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
    103              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
    104              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
    105              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
    106              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
    107              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
    108              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
    109              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
    110              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
    111              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
    112              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    113              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    114              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    115              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    116              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    117              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    118              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    119              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    120              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    121              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    122              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    123              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    124              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    125              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    126              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    127              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    128              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    129              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    130              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    131              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    132              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    133              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    134              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    135              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    136              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    137              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    138              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    139              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    140              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    141              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    142              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    143              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    144              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    145              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    146              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    147              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    148              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    149              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    150              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    151              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    152              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    153              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    154              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    155              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    156              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    157              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    158          };
    159          
    160          //======================================================
    161          // 128X64IÒº¾§µ×²ãÇý¶¯[8X16]×ÖÌå¿â
    162          // Éè¼ÆÕß: powerint
    163          // Ãè  Êö: [8X16]Î÷ÎÄ×Ö·ûµÄ×ÖÄ£Êý¾Ý (×ÝÏòÈ¡Ä£,×Ö½Úµ¹Ðò)
    164          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    165          //======================================================

   \                                 In section .rodata, align 4
    166          const uint8 F8X16[]=
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    167          {
    168          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    169            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    170            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    171            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    172            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    173            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    174            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    175            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    176            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    177            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    178            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    179            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    180            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    181            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    182            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    183            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    184            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    185            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    186            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    187            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    188            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    189            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    190            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    191            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    192            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    193            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    194            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    195            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    196            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    197            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    198            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    199            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    200            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    201            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    202            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    203            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    204            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    205            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    206            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    207            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    208            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    209            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    210            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    211            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    212            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    213            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    214            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    215            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    216            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    217            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    218            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    219            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    220            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    221            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    222            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    223            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    224            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    225            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    226            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    227            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    228            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    229            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    230            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    231            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    232            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    233            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    234            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    235            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    236            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    237            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    238            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    239            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    240            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    241            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    242            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    243            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    244            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    245            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    246            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    247            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    248            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    249            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    250            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    251            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    252            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    253            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
    254            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    255            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    256            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    257            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    258            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    259            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    260            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    261            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    262            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    263          
    264          };
    265          

   \                                 In section .text, align 4, keep-with-next
    266          void LCD_WrDat(uint8 data)
    267          {
   \                     LCD_WrDat:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    268          	uint8 i=8;
   \   00000004   0x2508             MOVS     R5,#+8
    269          	LCD_DC_H;
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   00000010   0x.... 0x....      BL       gpio_init
    270                  LCD_SCL_L;
   \   00000014   0x2300             MOVS     R3,#+0
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x2106             MOVS     R1,#+6
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000001E   0x.... 0x....      BL       gpio_init
    271                  asm("nop");    
   \   00000022   0xBF00             nop              
   \   00000024   0xE017             B.N      ??LCD_WrDat_0
    272                  while(i--)
    273                    {
    274                      if(data&0x80){LCD_SDA_H;}
    275                      else{LCD_SDA_L;}
   \                     ??LCD_WrDat_1:
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x2104             MOVS     R1,#+4
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   00000030   0x.... 0x....      BL       gpio_init
    276                      LCD_SCL_H; 
   \                     ??LCD_WrDat_2:
   \   00000034   0x2301             MOVS     R3,#+1
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x2106             MOVS     R1,#+6
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000003E   0x.... 0x....      BL       gpio_init
    277                      asm("nop");
   \   00000042   0xBF00             nop              
    278          	    asm("nop");            
   \   00000044   0xBF00             nop              
    279                      LCD_SCL_L;;    
   \   00000046   0x2300             MOVS     R3,#+0
   \   00000048   0x2201             MOVS     R2,#+1
   \   0000004A   0x2106             MOVS     R1,#+6
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   00000050   0x.... 0x....      BL       gpio_init
    280                      data<<=1;    
   \   00000054   0x0064             LSLS     R4,R4,#+1
   \                     ??LCD_WrDat_0:
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0x1E45             SUBS     R5,R0,#+1
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD009             BEQ.N    ??LCD_WrDat_3
   \   00000060   0x0620             LSLS     R0,R4,#+24
   \   00000062   0xD5E0             BPL.N    ??LCD_WrDat_1
   \   00000064   0x2301             MOVS     R3,#+1
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0x2104             MOVS     R1,#+4
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000006E   0x.... 0x....      BL       gpio_init
   \   00000072   0xE7DF             B.N      ??LCD_WrDat_2
    281                    }
    282          }
   \                     ??LCD_WrDat_3:
   \   00000074   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
    283          void LCD_WrCmd(uint8 cmd)
    284          {
   \                     LCD_WrCmd:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    285          	uint8 i=8;
   \   00000004   0x2508             MOVS     R5,#+8
    286          	LCD_DC_L;
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   00000010   0x.... 0x....      BL       gpio_init
    287                  LCD_SCL_L;
   \   00000014   0x2300             MOVS     R3,#+0
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x2106             MOVS     R1,#+6
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000001E   0x.... 0x....      BL       gpio_init
    288            asm("nop");   
   \   00000022   0xBF00             nop              
   \   00000024   0xE017             B.N      ??LCD_WrCmd_0
    289            while(i--)
    290            {
    291              if(cmd&0x80){LCD_SDA_H;}
    292              else{LCD_SDA_L;}
   \                     ??LCD_WrCmd_1:
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x2104             MOVS     R1,#+4
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   00000030   0x.... 0x....      BL       gpio_init
    293              LCD_SCL_H;
   \                     ??LCD_WrCmd_2:
   \   00000034   0x2301             MOVS     R3,#+1
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x2106             MOVS     R1,#+6
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000003E   0x.... 0x....      BL       gpio_init
    294              asm("nop");
   \   00000042   0xBF00             nop              
    295              asm("nop");             
   \   00000044   0xBF00             nop              
    296              LCD_SCL_L;    
   \   00000046   0x2300             MOVS     R3,#+0
   \   00000048   0x2201             MOVS     R2,#+1
   \   0000004A   0x2106             MOVS     R1,#+6
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   00000050   0x.... 0x....      BL       gpio_init
    297              cmd<<=1;;   
   \   00000054   0x0064             LSLS     R4,R4,#+1
   \                     ??LCD_WrCmd_0:
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0x1E45             SUBS     R5,R0,#+1
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD009             BEQ.N    ??LCD_WrCmd_3
   \   00000060   0x0620             LSLS     R0,R4,#+24
   \   00000062   0xD5E0             BPL.N    ??LCD_WrCmd_1
   \   00000064   0x2301             MOVS     R3,#+1
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0x2104             MOVS     R1,#+4
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000006E   0x.... 0x....      BL       gpio_init
   \   00000072   0xE7DF             B.N      ??LCD_WrCmd_2
    298            } 	
    299          	
    300          }
   \                     ??LCD_WrCmd_3:
   \   00000074   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    301          void LCD_Set_Pos(uint8 x,uint8 y)
    302          { 
   \                     LCD_Set_Pos:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    303            LCD_WrCmd(0xb0+y);
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       LCD_WrCmd
    304            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x0920             LSRS     R0,R4,#+4
   \   00000012   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    305            LCD_WrCmd((x&0x0f)|0x01); 
   \   0000001C   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
    306          } 
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    307          void LCD_Fill(uint8 bmp_data)
    308          {
   \                     LCD_Fill:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    309          	uint8 y,x;
    310          	
    311          	for(y=0;y<8;y++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE008             B.N      ??LCD_Fill_0
    312          	{
    313          		LCD_WrCmd(0xb0+y);
    314          		LCD_WrCmd(0x01);
    315          		LCD_WrCmd(0x10);
    316          		for(x=0;x<X_WIDTH;x++)
    317          			LCD_WrDat(bmp_data);
   \                     ??LCD_Fill_1:
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       LCD_WrDat
   \   00000010   0x1C76             ADDS     R6,R6,#+1
   \                     ??LCD_Fill_2:
   \   00000012   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   0x2E80             CMP      R6,#+128
   \   00000016   0xD3F7             BCC.N    ??LCD_Fill_1
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_Fill_0:
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D08             CMP      R5,#+8
   \   0000001E   0xD20C             BCS.N    ??LCD_Fill_3
   \   00000020   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x.... 0x....      BL       LCD_WrCmd
   \   00000036   0x2600             MOVS     R6,#+0
   \   00000038   0xE7EB             B.N      ??LCD_Fill_2
    318          	}
    319          }
   \                     ??LCD_Fill_3:
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    320          void LCD_CLS(void)
    321          {
   \                     LCD_CLS:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    322          	uint8 y,x;	
    323          	for(y=0;y<8;y++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE007             B.N      ??LCD_CLS_0
    324          	{
    325          		LCD_WrCmd(0xb0+y);
    326          		LCD_WrCmd(0x01);
    327          		LCD_WrCmd(0x10); 
    328          		for(x=0;x<X_WIDTH;x++)
    329          			LCD_WrDat(0);
   \                     ??LCD_CLS_1:
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       LCD_WrDat
   \   0000000C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_CLS_2:
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D80             CMP      R5,#+128
   \   00000012   0xD3F8             BCC.N    ??LCD_CLS_1
   \   00000014   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_CLS_0:
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2C08             CMP      R4,#+8
   \   0000001A   0xD20C             BCS.N    ??LCD_CLS_3
   \   0000001C   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       LCD_WrCmd
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x.... 0x....      BL       LCD_WrCmd
   \   0000002C   0x2010             MOVS     R0,#+16
   \   0000002E   0x.... 0x....      BL       LCD_WrCmd
   \   00000032   0x2500             MOVS     R5,#+0
   \   00000034   0xE7EB             B.N      ??LCD_CLS_2
    330          	}
    331          }
   \                     ??LCD_CLS_3:
   \   00000036   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    332          

   \                                 In section .text, align 2, keep-with-next
    333          void CLS_single(uint8 num)
    334          {
   \                     CLS_single:
   \   00000000   0xB510             PUSH     {R4,LR}
    335            uint8 y,x;
    336            y=num;
    337            LCD_WrCmd(0xb0+y);
   \   00000002   0x3850             SUBS     R0,R0,#+80
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    338            LCD_WrCmd(0x01);
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x.... 0x....      BL       LCD_WrCmd
    339            LCD_WrCmd(0x10); 
   \   00000010   0x2010             MOVS     R0,#+16
   \   00000012   0x.... 0x....      BL       LCD_WrCmd
    340            for(x=0;x<X_WIDTH;x++)
   \   00000016   0x2400             MOVS     R4,#+0
   \   00000018   0xE003             B.N      ??CLS_single_0
    341            LCD_WrDat(0);
   \                     ??CLS_single_1:
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       LCD_WrDat
   \   00000020   0x1C64             ADDS     R4,R4,#+1
   \                     ??CLS_single_0:
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x2C80             CMP      R4,#+128
   \   00000026   0xD3F8             BCC.N    ??CLS_single_1
    342          }
   \   00000028   0xBD10             POP      {R4,PC}          ;; return
    343          

   \                                 In section .text, align 2, keep-with-next
    344          void LCD_DLY_ms(uint32 ms)
    345          {                         
   \                     LCD_DLY_ms:
   \   00000000   0xE006             B.N      ??LCD_DLY_ms_0
    346            uint32 a;
    347            while(ms)
    348            {
    349              a=1335;
   \                     ??LCD_DLY_ms_1:
   \   00000002   0xF240 0x5137      MOVW     R1,#+1335
    350              while(a--);
   \                     ??LCD_DLY_ms_2:
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x1E51             SUBS     R1,R2,#+1
   \   0000000A   0x2A00             CMP      R2,#+0
   \   0000000C   0xD1FB             BNE.N    ??LCD_DLY_ms_2
    351              ms--;
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
    352            }
   \                     ??LCD_DLY_ms_0:
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD1F6             BNE.N    ??LCD_DLY_ms_1
    353            return;
   \   00000014   0x4770             BX       LR               ;; return
    354          }
    355          

   \                                 In section .text, align 2, keep-with-next
    356          void adjust(uint8 a)
    357          {
   \                     adjust:
   \   00000000   0xB580             PUSH     {R7,LR}
    358            LCD_WrCmd(a);	//Ö¸ÁîÊý¾Ý0x0000~0x003f  
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x.... 0x....      BL       LCD_WrCmd
    359          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    360          

   \                                 In section .text, align 2, keep-with-next
    361          void SetStartColumn(uint8 d)
    362          {
   \                     SetStartColumn:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    363          	LCD_WrCmd(0x00+d%16);		// Set Lower Column Start Address for Page Addressing Mode
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0xFB94 0xF0F1      SDIV     R0,R4,R1
   \   0000000C   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       LCD_WrCmd
    364          						//   Default => 0x00
    365          	LCD_WrCmd(0x10+d/16);		// Set Higher Column Start Address for Page Addressing Mode
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2010             MOVS     R0,#+16
   \   0000001A   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   0000001E   0x3010             ADDS     R0,R0,#+16
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       LCD_WrCmd
    366          						//   Default => 0x10
    367          }
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
    368          

   \                                 In section .text, align 2, keep-with-next
    369          void SetAddressingMode(uint8 d)
    370          {
   \                     SetAddressingMode:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    371          	LCD_WrCmd(0x20);			// Set Memory Addressing Mode
   \   00000004   0x2020             MOVS     R0,#+32
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    372          	LCD_WrCmd(d);			//   Default => 0x02
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_WrCmd
    373          						//     0x00 => Horizontal Addressing Mode
    374          						//     0x01 => Vertical Addressing Mode
    375          						//     0x02 => Page Addressing Mode
    376          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    377          

   \                                 In section .text, align 2, keep-with-next
    378          void SetColumnAddress(uint8 a, uint8 b)
    379          {
   \                     SetColumnAddress:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    380          	LCD_WrCmd(0x21);			// Set Column Address
   \   00000006   0x2021             MOVS     R0,#+33
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    381          	LCD_WrCmd(a);			//   Default => 0x00 (Column Start Address)
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       LCD_WrCmd
    382          	LCD_WrCmd(b);			//   Default => 0x7F (Column End Address)
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    383          }
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    384          

   \                                 In section .text, align 2, keep-with-next
    385          void SetPageAddress(uint8 a, uint8 b)
    386          {
   \                     SetPageAddress:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    387          	LCD_WrCmd(0x22);			// Set Page Address
   \   00000006   0x2022             MOVS     R0,#+34
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    388          	LCD_WrCmd(a);			//   Default => 0x00 (Page Start Address)
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       LCD_WrCmd
    389          	LCD_WrCmd(b);			//   Default => 0x07 (Page End Address)
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    390          }
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    391          

   \                                 In section .text, align 2, keep-with-next
    392          void SetStartLine(uint8 d)
    393          {
   \                     SetStartLine:
   \   00000000   0xB580             PUSH     {R7,LR}
    394          	LCD_WrCmd(0x40|d);			// Set Display Start Line
   \   00000002   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    395          						//   Default => 0x40 (0x00)
    396          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    397          

   \                                 In section .text, align 2, keep-with-next
    398          void SetContrastControl(uint8 d)
    399          {
   \                     SetContrastControl:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    400          	LCD_WrCmd(0x81);			// Set Contrast Control
   \   00000004   0x2081             MOVS     R0,#+129
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    401          	LCD_WrCmd(d);			//   Default => 0x7F
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_WrCmd
    402          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    403          

   \                                 In section .text, align 2, keep-with-next
    404          void Set_Charge_Pump(uint8 d)
    405          {
   \                     Set_Charge_Pump:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    406          	LCD_WrCmd(0x8D);			// Set Charge Pump
   \   00000004   0x208D             MOVS     R0,#+141
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    407          	LCD_WrCmd(0x10|d);			//   Default => 0x10
   \   0000000A   0xF054 0x0010      ORRS     R0,R4,#0x10
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       LCD_WrCmd
    408          						//     0x10 (0x00) => Disable Charge Pump
    409          						//     0x14 (0x04) => Enable Charge Pump
    410          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    411          

   \                                 In section .text, align 2, keep-with-next
    412          void Set_Segment_Remap(uint8 d)
    413          {
   \                     Set_Segment_Remap:
   \   00000000   0xB580             PUSH     {R7,LR}
    414          	LCD_WrCmd(0xA0|d);			// Set Segment Re-Map
   \   00000002   0xF050 0x00A0      ORRS     R0,R0,#0xA0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    415          						//   Default => 0xA0
    416          						//     0xA0 (0x00) => Column Address 0 Mapped to SEG0
    417          						//     0xA1 (0x01) => Column Address 0 Mapped to SEG127
    418          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    419          

   \                                 In section .text, align 2, keep-with-next
    420          void Set_Entire_Display(uint8 d)
    421          {
   \                     Set_Entire_Display:
   \   00000000   0xB580             PUSH     {R7,LR}
    422          	LCD_WrCmd(0xA4|d);			// Set Entire Display On / Off
   \   00000002   0xF050 0x00A4      ORRS     R0,R0,#0xA4
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    423          						//   Default => 0xA4
    424          						//     0xA4 (0x00) => Normal Display
    425          						//     0xA5 (0x01) => Entire Display On
    426          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    427          

   \                                 In section .text, align 2, keep-with-next
    428          void Set_Inverse_Display(uint8 d)
    429          {
   \                     Set_Inverse_Display:
   \   00000000   0xB580             PUSH     {R7,LR}
    430          	LCD_WrCmd(0xA6|d);			// Set Inverse Display On/Off
   \   00000002   0xF050 0x00A6      ORRS     R0,R0,#0xA6
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    431          						//   Default => 0xA6
    432          						//     0xA6 (0x00) => Normal Display
    433          						//     0xA7 (0x01) => Inverse Display On
    434          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    435          

   \                                 In section .text, align 2, keep-with-next
    436          void Set_Multiplex_Ratio(uint8 d)
    437          {
   \                     Set_Multiplex_Ratio:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    438          	LCD_WrCmd(0xA8);			// Set Multiplex Ratio
   \   00000004   0x20A8             MOVS     R0,#+168
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    439          	LCD_WrCmd(d);			//   Default => 0x3F (1/64 Duty)
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_WrCmd
    440          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    441          

   \                                 In section .text, align 2, keep-with-next
    442          void Set_Display_On_Off(uint8 d)
    443          {
   \                     Set_Display_On_Off:
   \   00000000   0xB580             PUSH     {R7,LR}
    444          	LCD_WrCmd(0xAE|d);			// Set Display On/Off
   \   00000002   0xF050 0x00AE      ORRS     R0,R0,#0xAE
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    445          						//   Default => 0xAE
    446          						//     0xAE (0x00) => Display Off
    447          						//     0xAF (0x01) => Display On
    448          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    449          

   \                                 In section .text, align 2, keep-with-next
    450          void SetStartPage(uint8 d)
    451          {
   \                     SetStartPage:
   \   00000000   0xB580             PUSH     {R7,LR}
    452          	LCD_WrCmd(0xB0|d);			// Set Page Start Address for Page Addressing Mode
   \   00000002   0xF050 0x00B0      ORRS     R0,R0,#0xB0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    453          						//   Default => 0xB0 (0x00)
    454          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    455          

   \                                 In section .text, align 2, keep-with-next
    456          void Set_Common_Remap(uint8 d)
    457          {
   \                     Set_Common_Remap:
   \   00000000   0xB580             PUSH     {R7,LR}
    458          	LCD_WrCmd(0xC0|d);			// Set COM Output Scan Direction
   \   00000002   0xF050 0x00C0      ORRS     R0,R0,#0xC0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x.... 0x....      BL       LCD_WrCmd
    459          						//   Default => 0xC0
    460          						//     0xC0 (0x00) => Scan from COM0 to 63
    461          						//     0xC8 (0x08) => Scan from COM63 to 0
    462          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    463          

   \                                 In section .text, align 2, keep-with-next
    464          void Set_Display_Offset(uint8 d)
    465          {
   \                     Set_Display_Offset:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    466          	LCD_WrCmd(0xD3);			// Set Display Offset
   \   00000004   0x20D3             MOVS     R0,#+211
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    467          	LCD_WrCmd(d);			//   Default => 0x00
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_WrCmd
    468          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    469          

   \                                 In section .text, align 2, keep-with-next
    470          void Set_Display_Clock(uint8 d)
    471          {
   \                     Set_Display_Clock:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    472          	LCD_WrCmd(0xD5);			// Set Display Clock Divide Ratio / Oscillator Frequency
   \   00000004   0x20D5             MOVS     R0,#+213
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    473          	LCD_WrCmd(d);			//   Default => 0x80
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_WrCmd
    474          						//     D[3:0] => Display Clock Divider
    475          						//     D[7:4] => Oscillator Frequency
    476          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    477          

   \                                 In section .text, align 2, keep-with-next
    478          void Set_Precharge_Period(uint8 d)
    479          {
   \                     Set_Precharge_Period:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    480          	LCD_WrCmd(0xD9);			// Set Pre-Charge Period
   \   00000004   0x20D9             MOVS     R0,#+217
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    481          	LCD_WrCmd(d);			//   Default => 0x22 (2 Display Clocks [Phase 2] / 2 Display Clocks [Phase 1])
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_WrCmd
    482          						//     D[3:0] => Phase 1 Period in 1~15 Display Clocks
    483          						//     D[7:4] => Phase 2 Period in 1~15 Display Clocks
    484          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    485          

   \                                 In section .text, align 2, keep-with-next
    486          void Set_Common_Config(uint8 d)
    487          {
   \                     Set_Common_Config:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    488          	LCD_WrCmd(0xDA);			// Set COM Pins Hardware Configuration
   \   00000004   0x20DA             MOVS     R0,#+218
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    489          	LCD_WrCmd(0x02|d);			//   Default => 0x12 (0x10)
   \   0000000A   0xF054 0x0002      ORRS     R0,R4,#0x2
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       LCD_WrCmd
    490          						//     Alternative COM Pin Configuration
    491          						//     Disable COM Left/Right Re-Map
    492          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    493          

   \                                 In section .text, align 2, keep-with-next
    494          void Set_VCOMH(uint8 d)
    495          {
   \                     Set_VCOMH:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    496          	LCD_WrCmd(0xDB);			// Set VCOMH Deselect Level
   \   00000004   0x20DB             MOVS     R0,#+219
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    497          	LCD_WrCmd(d);			//   Default => 0x20 (0.77*VCC)
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_WrCmd
    498          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    499          

   \                                 In section .text, align 2, keep-with-next
    500          void Set_NOP(void)
    501          {
   \                     Set_NOP:
   \   00000000   0xB580             PUSH     {R7,LR}
    502          	LCD_WrCmd(0xE3);			// Command for No Operation
   \   00000002   0x20E3             MOVS     R0,#+227
   \   00000004   0x.... 0x....      BL       LCD_WrCmd
    503          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    504          

   \                                 In section .text, align 2, keep-with-next
    505          void LCD_Init(void)        
    506          {
   \                     LCD_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    507               // DDRE=0XFF;
    508            
    509          	LCD_SCL_H;
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2106             MOVS     R1,#+6
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000000C   0x.... 0x....      BL       gpio_init
    510          	//LCD_CS=1;	//Ô¤ÖÆSLKºÍSSÎª¸ßµçÆ½   	
    511          	
    512          	LCD_RST_L;
   \   00000010   0x2300             MOVS     R3,#+0
   \   00000012   0x2201             MOVS     R2,#+1
   \   00000014   0x2102             MOVS     R1,#+2
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       gpio_init
    513          	LCD_DLY_ms(150);
   \   0000001E   0x2096             MOVS     R0,#+150
   \   00000020   0x.... 0x....      BL       LCD_DLY_ms
    514          	LCD_RST_H;
   \   00000024   0x2301             MOVS     R3,#+1
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0x2102             MOVS     R1,#+2
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x400ff100
   \   0000002E   0x.... 0x....      BL       gpio_init
    515          	
    516          	//´ÓÉÏµçµ½ÏÂÃæ¿ªÊ¼³õÊ¼»¯ÒªÓÐ×ã¹»µÄÊ±¼ä£¬¼´µÈ´ýRC¸´Î»Íê±Ï
    517            Set_Display_On_Off(0x00);		  // Display Off (0x00/0x01)
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       Set_Display_On_Off
    518            Set_Display_Clock(0x80);		  // Set Clock as 100 Frames/Sec
   \   00000038   0x2080             MOVS     R0,#+128
   \   0000003A   0x.... 0x....      BL       Set_Display_Clock
    519            Set_Multiplex_Ratio(0x3F);		// 1/64 Duty (0x0F~0x3F)
   \   0000003E   0x203F             MOVS     R0,#+63
   \   00000040   0x.... 0x....      BL       Set_Multiplex_Ratio
    520            Set_Display_Offset(0x00);		  // Shift Mapping RAM Counter (0x00~0x3F)
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x.... 0x....      BL       Set_Display_Offset
    521            SetStartLine(0x00);			      // Set Mapping RAM Display Start Line (0x00~0x3F)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x.... 0x....      BL       SetStartLine
    522            Set_Charge_Pump(0x04);		    // Enable Embedded DC/DC Converter (0x00/0x04)
   \   00000050   0x2004             MOVS     R0,#+4
   \   00000052   0x.... 0x....      BL       Set_Charge_Pump
    523            SetAddressingMode(0x02);		  // Set Page Addressing Mode (0x00/0x01/0x02)
   \   00000056   0x2002             MOVS     R0,#+2
   \   00000058   0x.... 0x....      BL       SetAddressingMode
    524            Set_Segment_Remap(0x01);		  // Set SEG/Column Mapping     0x00×óÓÒ·´ÖÃ 0x01Õý³£
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      BL       Set_Segment_Remap
    525            Set_Common_Remap(0x08);			  // Set COM/Row Scan Direction 0x00ÉÏÏÂ·´ÖÃ 0x08Õý³£
   \   00000062   0x2008             MOVS     R0,#+8
   \   00000064   0x.... 0x....      BL       Set_Common_Remap
    526            Set_Common_Config(0x10);		  // Set Sequential Configuration (0x00/0x10)
   \   00000068   0x2010             MOVS     R0,#+16
   \   0000006A   0x.... 0x....      BL       Set_Common_Config
    527            SetContrastControl(Brightness);	// Set SEG Output Current
   \   0000006E   0x20CF             MOVS     R0,#+207
   \   00000070   0x.... 0x....      BL       SetContrastControl
    528            Set_Precharge_Period(0xF1);		// Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   00000074   0x20F1             MOVS     R0,#+241
   \   00000076   0x.... 0x....      BL       Set_Precharge_Period
    529            Set_VCOMH(0x40);			        // Set VCOM Deselect Level
   \   0000007A   0x2040             MOVS     R0,#+64
   \   0000007C   0x.... 0x....      BL       Set_VCOMH
    530            Set_Entire_Display(0x00);		  // Disable Entire Display On (0x00/0x01)
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       Set_Entire_Display
    531            Set_Inverse_Display(0x00);		// Disable Inverse Display On (0x00/0x01)  
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      BL       Set_Inverse_Display
    532            Set_Display_On_Off(0x01);		  // Display On (0x00/0x01)
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       Set_Display_On_Off
    533            LCD_Fill(0x00);  //³õÊ¼ÇåÆÁ
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      BL       LCD_Fill
    534          	LCD_Set_Pos(0,0); 
   \   00000098   0x2100             MOVS     R1,#+0
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x.... 0x....      BL       LCD_Set_Pos
    535          	
    536            /*
    537            LCD_WrCmd(0xae);//--turn off oled panel
    538            LCD_WrCmd(0x00);//---set low column address
    539            LCD_WrCmd(0x10);//---set high column address
    540            LCD_WrCmd(0x40);//--set start line address
    541            LCD_WrCmd(0x81);//--set contrast control register
    542            LCD_WrCmd(0xcf);
    543            LCD_WrCmd(0xa1);//--set segment re-map 95 to 0
    544            LCD_WrCmd(0xa6);//--set normal display
    545            LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
    546            LCD_WrCmd(0x3f);//--1/64 duty
    547            LCD_WrCmd(0xd3);//-set display offset
    548            LCD_WrCmd(0x00);//-not offset
    549            LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
    550            LCD_WrCmd(0x80);//--set divide ratio
    551            LCD_WrCmd(0xd9);//--set pre-charge period
    552            LCD_WrCmd(0xf1);
    553            LCD_WrCmd(0xda);//--set com pins hardware configuration
    554            LCD_WrCmd(0x12);
    555            LCD_WrCmd(0xdb);//--set vcomh
    556            LCD_WrCmd(0x40);
    557            LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
    558            LCD_WrCmd(0x14);//--set(0x10) disable
    559            LCD_WrCmd(0xaf);//--turn on oled panel
    560            */
    561          	
    562          } 
   \   000000A0   0xBD01             POP      {R0,PC}          ;; return
    563          //==============================================================
    564          //º¯ÊýÃû£º void LCD_PutPixel(byte x,byte y)
    565          //¹¦ÄÜÃèÊö£º»æÖÆÒ»¸öµã£¨x,y£©
    566          //²ÎÊý£ºÕæÊµ×ø±êÖµ(x,y),xµÄ·¶Î§0¡«127£¬yµÄ·¶Î§0¡«64
    567          //·µ»Ø£ºÎÞ
    568          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    569          void LCD_PutPixel(uint8 x,uint8 y)
    570          {
   \                     LCD_PutPixel:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    571          	uint8 data1;  //data1µ±Ç°µãµÄÊý¾Ý 
    572          	 
    573                  LCD_Set_Pos(x,y); 
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_Set_Pos
    574          	data1 = 0x01<<(y%8); 	
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2108             MOVS     R1,#+8
   \   00000018   0xFB95 0xF2F1      SDIV     R2,R5,R1
   \   0000001C   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   00000020   0xFA10 0xF602      LSLS     R6,R0,R2
    575          	LCD_WrCmd(0xb0+(y>>3));
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x08E8             LSRS     R0,R5,#+3
   \   00000028   0x3850             SUBS     R0,R0,#+80
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
    576          	LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0920             LSRS     R0,R4,#+4
   \   00000034   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       LCD_WrCmd
    577          	LCD_WrCmd((x&0x0f)|0x00);
   \   0000003E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000042   0x.... 0x....      BL       LCD_WrCmd
    578          	LCD_WrDat(data1); 	 	
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       LCD_WrDat
    579          }
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    580          //==============================================================
    581          //º¯ÊýÃû£º void LCD_Rectangle(byte x1,byte y1,
    582          //                   byte x2,byte y2,byte color,byte gif)
    583          //¹¦ÄÜÃèÊö£º»æÖÆÒ»¸öÊµÐÄ¾ØÐÎ
    584          //²ÎÊý£º×óÉÏ½Ç×ø±ê£¨x1,y1£©,ÓÒÏÂ½Ç×ø±ê£¨x2£¬y2£©
    585          //      ÆäÖÐx1¡¢x2µÄ·¶Î§0¡«127£¬y1£¬y2µÄ·¶Î§0¡«63£¬¼´ÕæÊµ×ø±êÖµ
    586          //·µ»Ø£ºÎÞ
    587          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    588          void LCD_Rectangle(uint8 x1,uint8 y1,uint8 x2,uint8 y2,uint8 gif)
    589          {
   \                     LCD_Rectangle:
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C08             LDR      R4,[SP, #+32]
    590          	uint8 n; 
    591          		
    592          	LCD_Set_Pos(x1,y1>>3);
   \   0000000E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000010   0x08F1             LSRS     R1,R6,#+3
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       LCD_Set_Pos
    593          	for(n=x1;n<=x2;n++)
   \   0000001A   0x46A9             MOV      R9,R5
   \   0000001C   0xE012             B.N      ??LCD_Rectangle_0
    594          	{
    595          		LCD_WrDat(0x01<<(y1%8)); 			
   \                     ??LCD_Rectangle_1:
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000028   0xFB02 0x6211      MLS      R2,R2,R1,R6
   \   0000002C   0x4090             LSLS     R0,R0,R2
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       LCD_WrDat
    596          		if(gif == 1) 	LCD_DLY_ms(150);
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x2C01             CMP      R4,#+1
   \   00000038   0xD102             BNE.N    ??LCD_Rectangle_2
   \   0000003A   0x2096             MOVS     R0,#+150
   \   0000003C   0x.... 0x....      BL       LCD_DLY_ms
    597          	}  
   \                     ??LCD_Rectangle_2:
   \   00000040   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_0:
   \   00000044   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0x454F             CMP      R7,R9
   \   0000004C   0xD2E7             BCS.N    ??LCD_Rectangle_1
    598          	LCD_Set_Pos(x1,y2>>3);
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEA5F 0x01D8      LSRS     R1,R8,#+3
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       LCD_Set_Pos
    599            for(n=x1;n<=x2;n++)
   \   0000005E   0x46A9             MOV      R9,R5
   \   00000060   0xE013             B.N      ??LCD_Rectangle_3
    600          	{
    601          		LCD_WrDat(0x01<<(y2%8)); 			
   \                     ??LCD_Rectangle_4:
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0x2108             MOVS     R1,#+8
   \   0000006A   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000006E   0xFB02 0x8211      MLS      R2,R2,R1,R8
   \   00000072   0x4090             LSLS     R0,R0,R2
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       LCD_WrDat
    602          		if(gif == 1) 	LCD_DLY_ms(15);
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0x2C01             CMP      R4,#+1
   \   0000007E   0xD102             BNE.N    ??LCD_Rectangle_5
   \   00000080   0x200F             MOVS     R0,#+15
   \   00000082   0x.... 0x....      BL       LCD_DLY_ms
    603          	}
   \                     ??LCD_Rectangle_5:
   \   00000086   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_3:
   \   0000008A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000008C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000090   0x454F             CMP      R7,R9
   \   00000092   0xD2E6             BCS.N    ??LCD_Rectangle_4
    604          	
    605          }  
   \   00000094   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    606          //==============================================================
    607          //º¯ÊýÃû£ºLCD_P6x8Str(byte x,byte y,byte *p)
    608          //¹¦ÄÜÃèÊö£ºÐ´ÈëÒ»×é±ê×¼ASCII×Ö·û´®
    609          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄ×Ö·û´®
    610          //·µ»Ø£ºÎÞ
    611          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    612          void LCD_P6x8Str(uint8 x,uint8 y,uint8 ch[])
    613          {
   \                     LCD_P6x8Str:
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    614            uint8 c=0,i=0,j=0;      
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE015             B.N      ??LCD_P6x8Str_0
    615            while (ch[j]!='\0')
    616            {    
    617              c =ch[j]-32;
    618              if(x>126){x=0;y++;}
    619              LCD_Set_Pos(x,y);    
    620            	for(i=0;i<6;i++)     
    621            	  LCD_WrDat(F6x8[c][i]);  
   \                     ??LCD_P6x8Str_1:
   \   00000016   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x2006             MOVS     R0,#+6
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000022   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000026   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000002A   0x.... 0x....      BL       LCD_WrDat
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P6x8Str_2:
   \   00000032   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000036   0xF1B8 0x0F06      CMP      R8,#+6
   \   0000003A   0xD3EC             BCC.N    ??LCD_P6x8Str_1
    622            	x+=6;
   \   0000003C   0x1DA4             ADDS     R4,R4,#+6
    623            	j++;
   \   0000003E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P6x8Str_0:
   \   00000042   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000046   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD013             BEQ.N    ??LCD_P6x8Str_3
   \   0000004E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000052   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000056   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C7F             CMP      R4,#+127
   \   0000005E   0xD301             BCC.N    ??LCD_P6x8Str_4
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P6x8Str_4:
   \   00000064   0x0029             MOVS     R1,R5
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x.... 0x....      BL       LCD_Set_Pos
   \   00000070   0xF05F 0x0800      MOVS     R8,#+0
   \   00000074   0xE7DD             B.N      ??LCD_P6x8Str_2
    624            }
    625          }
   \                     ??LCD_P6x8Str_3:
   \   00000076   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    626          //==============================================================
    627          //º¯ÊýÃû£ºLCD_P8x16Str(byte x,byte y,byte *p)
    628          //¹¦ÄÜÃèÊö£ºÐ´ÈëÒ»×é±ê×¼ASCII×Ö·û´®
    629          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄ×Ö·û´®
    630          //·µ»Ø£ºÎÞ
    631          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    632          void LCD_P8x16Str(uint8 x,uint8 y,uint8 ch[])
    633          {
   \                     LCD_P8x16Str:
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    634            uint8 c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE013             B.N      ??LCD_P8x16Str_0
    635                  
    636            while (ch[j]!='\0')
    637            {    
    638              c =ch[j]-32;
    639              if(x>120){x=0;y++;}
    640              LCD_Set_Pos(x,y);    
    641            	for(i=0;i<8;i++)     
    642            	  LCD_WrDat(F8X16[c*16+i]);
    643            	LCD_Set_Pos(x,y+1);    
    644            	for(i=0;i<8;i++)     
    645            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16Str_1:
   \   00000016   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000018   0x0138             LSLS     R0,R7,#+4
   \   0000001A   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000022   0x1840             ADDS     R0,R0,R1
   \   00000024   0x7A00             LDRB     R0,[R0, #+8]
   \   00000026   0x.... 0x....      BL       LCD_WrDat
   \   0000002A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_2:
   \   0000002E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000032   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000036   0xD3EE             BCC.N    ??LCD_P8x16Str_1
    646            	x+=8;
   \   00000038   0x3408             ADDS     R4,R4,#+8
    647            	j++;
   \   0000003A   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P8x16Str_0:
   \   0000003E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000042   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD02B             BEQ.N    ??LCD_P8x16Str_3
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000052   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x2C79             CMP      R4,#+121
   \   0000005A   0xD301             BCC.N    ??LCD_P8x16Str_4
   \   0000005C   0x2400             MOVS     R4,#+0
   \   0000005E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16Str_4:
   \   00000060   0x0029             MOVS     R1,R5
   \   00000062   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   0x0020             MOVS     R0,R4
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000070   0xE009             B.N      ??LCD_P8x16Str_5
   \                     ??LCD_P8x16Str_6:
   \   00000072   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000074   0x0138             LSLS     R0,R7,#+4
   \   00000076   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   0000007A   0x....             LDR.N    R1,??DataTable7_2
   \   0000007C   0x5C40             LDRB     R0,[R0, R1]
   \   0000007E   0x.... 0x....      BL       LCD_WrDat
   \   00000082   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_5:
   \   00000086   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000008A   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000008E   0xD3F0             BCC.N    ??LCD_P8x16Str_6
   \   00000090   0x1C69             ADDS     R1,R5,#+1
   \   00000092   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000094   0x0020             MOVS     R0,R4
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x.... 0x....      BL       LCD_Set_Pos
   \   0000009C   0xF05F 0x0800      MOVS     R8,#+0
   \   000000A0   0xE7C5             B.N      ??LCD_P8x16Str_2
    648            }
    649          }
   \                     ??LCD_P8x16Str_3:
   \   000000A2   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    650          //====================================================================
    651          //º¯ÊýÃû£ºvoid LCD_P8x16_number(uint8 x,uint8 y,uint32 data)
    652          //¹¦ÄÜÃèÊö£º¿ÉÒÔÖ±½ÓÏÔÊ¾Ò»¸öÊý×Ö
    653          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©,ÏÔÊ¾µÄÄÚÈÝ
    654          //·µ»Ø£ºÎÞ
    655          //====================================================================

   \                                 In section .text, align 2, keep-with-next
    656          void LCD_P8x16_number(uint8 x,uint8 y,uint32 data)
    657          {
   \                     LCD_P8x16_number:
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    658            uint8 c=0,i=0,j=0;
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    659            
    660            uint8 num[5];
    661            
    662            num[0]=data/10000;
   \   00000010   0xF242 0x7010      MOVW     R0,#+10000
   \   00000014   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   00000018   0xF88D 0x0000      STRB     R0,[SP, #+0]
    663            num[1]=data/1000%10;
   \   0000001C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000020   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   00000024   0x210A             MOVS     R1,#+10
   \   00000026   0xFBB0 0xF3F1      UDIV     R3,R0,R1
   \   0000002A   0xFB01 0x0013      MLS      R0,R1,R3,R0
   \   0000002E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    664            num[2]=data/100%10;
   \   00000032   0x2064             MOVS     R0,#+100
   \   00000034   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   00000038   0x210A             MOVS     R1,#+10
   \   0000003A   0xFBB0 0xF3F1      UDIV     R3,R0,R1
   \   0000003E   0xFB01 0x0013      MLS      R0,R1,R3,R0
   \   00000042   0xF88D 0x0002      STRB     R0,[SP, #+2]
    665            num[3]=data/10%10;
   \   00000046   0x200A             MOVS     R0,#+10
   \   00000048   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   0000004C   0x210A             MOVS     R1,#+10
   \   0000004E   0xFBB0 0xF3F1      UDIV     R3,R0,R1
   \   00000052   0xFB01 0x0013      MLS      R0,R1,R3,R0
   \   00000056   0xF88D 0x0003      STRB     R0,[SP, #+3]
    666            num[4]=data%10;
   \   0000005A   0x200A             MOVS     R0,#+10
   \   0000005C   0xFBB2 0xF1F0      UDIV     R1,R2,R0
   \   00000060   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   00000064   0xF88D 0x0004      STRB     R0,[SP, #+4]
    667            
    668           for(j=0;j<5;j++)
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x4680             MOV      R8,R0
   \   0000006C   0xE00F             B.N      ??LCD_P8x16_number_0
    669           {    
    670              c=num[j]+16;
    671              if(x>120){x=0;y++;}
    672              LCD_Set_Pos(x,y);    
    673            	for(i=0;i<8;i++)     
    674            	  LCD_WrDat(F8X16[c*16+i]);
    675            	LCD_Set_Pos(x,y+1);    
    676            	for(i=0;i<8;i++)     
    677            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16_number_1:
   \   0000006E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000070   0x0130             LSLS     R0,R6,#+4
   \   00000072   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   00000076   0x....             LDR.N    R1,??DataTable7_2
   \   00000078   0x1840             ADDS     R0,R0,R1
   \   0000007A   0x7A00             LDRB     R0,[R0, #+8]
   \   0000007C   0x.... 0x....      BL       LCD_WrDat
   \   00000080   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_number_2:
   \   00000082   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000084   0x2F08             CMP      R7,#+8
   \   00000086   0xD3F2             BCC.N    ??LCD_P8x16_number_1
    678            	x+=8;
   \   00000088   0x3408             ADDS     R4,R4,#+8
   \   0000008A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16_number_0:
   \   0000008E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000092   0xF1B8 0x0F05      CMP      R8,#+5
   \   00000096   0xD227             BCS.N    ??LCD_P8x16_number_3
   \   00000098   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000009C   0xA800             ADD      R0,SP,#+0
   \   0000009E   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   000000A2   0xF110 0x0610      ADDS     R6,R0,#+16
   \   000000A6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A8   0x2C79             CMP      R4,#+121
   \   000000AA   0xD301             BCC.N    ??LCD_P8x16_number_4
   \   000000AC   0x2400             MOVS     R4,#+0
   \   000000AE   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16_number_4:
   \   000000B0   0x0029             MOVS     R1,R5
   \   000000B2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B4   0x0020             MOVS     R0,R4
   \   000000B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B8   0x.... 0x....      BL       LCD_Set_Pos
   \   000000BC   0x2700             MOVS     R7,#+0
   \   000000BE   0xE008             B.N      ??LCD_P8x16_number_5
   \                     ??LCD_P8x16_number_6:
   \   000000C0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000C2   0x0130             LSLS     R0,R6,#+4
   \   000000C4   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   000000C8   0x....             LDR.N    R1,??DataTable7_2
   \   000000CA   0x5C40             LDRB     R0,[R0, R1]
   \   000000CC   0x.... 0x....      BL       LCD_WrDat
   \   000000D0   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_number_5:
   \   000000D2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000D4   0x2F08             CMP      R7,#+8
   \   000000D6   0xD3F3             BCC.N    ??LCD_P8x16_number_6
   \   000000D8   0x1C69             ADDS     R1,R5,#+1
   \   000000DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000DC   0x0020             MOVS     R0,R4
   \   000000DE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E0   0x.... 0x....      BL       LCD_Set_Pos
   \   000000E4   0x2700             MOVS     R7,#+0
   \   000000E6   0xE7CC             B.N      ??LCD_P8x16_number_2
    679            }
    680          } 
   \                     ??LCD_P8x16_number_3:
   \   000000E8   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    681          
    682          //====================================================================
    683          //º¯ÊýÃû£ºvoid LCD_P8x16_num3wei(uint8 x,uint8 y,uint32 data)
    684          //¹¦ÄÜÃèÊö£º¿ÉÒÔÖ±½ÓÏÔÊ¾Ò»¸öÊý×Ö
    685          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©,ÏÔÊ¾µÄÄÚÈÝ
    686          //·µ»Ø£ºÎÞ
    687          //====================================================================

   \                                 In section .text, align 2, keep-with-next
    688          void LCD_P8x16_num3wei(uint8 x,uint8 y,uint32 data)
    689          {
   \                     LCD_P8x16_num3wei:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    690            uint8 c=0,i=0,j=0;
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2700             MOVS     R7,#+0
   \   0000000E   0xF05F 0x0800      MOVS     R8,#+0
    691            
    692            uint8 num[3];
    693            num[0]=data/100;
   \   00000012   0x2064             MOVS     R0,#+100
   \   00000014   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   00000018   0xF88D 0x0000      STRB     R0,[SP, #+0]
    694            num[1]=data/10%10;
   \   0000001C   0x200A             MOVS     R0,#+10
   \   0000001E   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFBB0 0xF3F1      UDIV     R3,R0,R1
   \   00000028   0xFB01 0x0013      MLS      R0,R1,R3,R0
   \   0000002C   0xF88D 0x0001      STRB     R0,[SP, #+1]
    695            num[2]=data%10;
   \   00000030   0x200A             MOVS     R0,#+10
   \   00000032   0xFBB2 0xF1F0      UDIV     R1,R2,R0
   \   00000036   0xFB00 0x2011      MLS      R0,R0,R1,R2
   \   0000003A   0xF88D 0x0002      STRB     R0,[SP, #+2]
    696            
    697           for(j=0;j<3;j++)
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x4680             MOV      R8,R0
   \   00000042   0xE00F             B.N      ??LCD_P8x16_num3wei_0
    698           {    
    699              c=num[j]+16;
    700              if(x>120){x=0;y++;}
    701              LCD_Set_Pos(x,y);    
    702            	for(i=0;i<8;i++)     
    703            	  LCD_WrDat(F8X16[c*16+i]);
    704            	LCD_Set_Pos(x,y+1);    
    705            	for(i=0;i<8;i++)     
    706            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16_num3wei_1:
   \   00000044   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000046   0x0130             LSLS     R0,R6,#+4
   \   00000048   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   0000004C   0x....             LDR.N    R1,??DataTable7_2
   \   0000004E   0x1840             ADDS     R0,R0,R1
   \   00000050   0x7A00             LDRB     R0,[R0, #+8]
   \   00000052   0x.... 0x....      BL       LCD_WrDat
   \   00000056   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_num3wei_2:
   \   00000058   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000005A   0x2F08             CMP      R7,#+8
   \   0000005C   0xD3F2             BCC.N    ??LCD_P8x16_num3wei_1
    707            	x+=8;
   \   0000005E   0x3408             ADDS     R4,R4,#+8
   \   00000060   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16_num3wei_0:
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0xF1B8 0x0F03      CMP      R8,#+3
   \   0000006C   0xD227             BCS.N    ??LCD_P8x16_num3wei_3
   \   0000006E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000072   0xA800             ADD      R0,SP,#+0
   \   00000074   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000078   0xF110 0x0610      ADDS     R6,R0,#+16
   \   0000007C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007E   0x2C79             CMP      R4,#+121
   \   00000080   0xD301             BCC.N    ??LCD_P8x16_num3wei_4
   \   00000082   0x2400             MOVS     R4,#+0
   \   00000084   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16_num3wei_4:
   \   00000086   0x0029             MOVS     R1,R5
   \   00000088   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008A   0x0020             MOVS     R0,R4
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x.... 0x....      BL       LCD_Set_Pos
   \   00000092   0x2700             MOVS     R7,#+0
   \   00000094   0xE008             B.N      ??LCD_P8x16_num3wei_5
   \                     ??LCD_P8x16_num3wei_6:
   \   00000096   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000098   0x0130             LSLS     R0,R6,#+4
   \   0000009A   0xFA50 0xF087      UXTAB    R0,R0,R7
   \   0000009E   0x....             LDR.N    R1,??DataTable7_2
   \   000000A0   0x5C40             LDRB     R0,[R0, R1]
   \   000000A2   0x.... 0x....      BL       LCD_WrDat
   \   000000A6   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P8x16_num3wei_5:
   \   000000A8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000AA   0x2F08             CMP      R7,#+8
   \   000000AC   0xD3F3             BCC.N    ??LCD_P8x16_num3wei_6
   \   000000AE   0x1C69             ADDS     R1,R5,#+1
   \   000000B0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B2   0x0020             MOVS     R0,R4
   \   000000B4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B6   0x.... 0x....      BL       LCD_Set_Pos
   \   000000BA   0x2700             MOVS     R7,#+0
   \   000000BC   0xE7CC             B.N      ??LCD_P8x16_num3wei_2
    708            }
    709          } 
   \                     ??LCD_P8x16_num3wei_3:
   \   000000BE   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    710          
    711          
    712          
    713          //Êä³öºº×ÖºÍ×Ö·û»ìºÏ×Ö·û´®

   \                                 In section .text, align 2, keep-with-next
    714          void LCD_Print(uint8 x, uint8 y,uint8 ch[])
    715          {
   \                     LCD_Print:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    716          	uint8 ch2[3];
    717          	uint8 ii=0;        
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0xE014             B.N      ??LCD_Print_0
    718          	while(ch[ii] != '\0')
    719          	{
    720          		if(ch[ii] > 127)
    721          		{
    722          			ch2[0] = ch[ii];
   \                     ??LCD_Print_1:
   \   0000000C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000000E   0x5DB8             LDRB     R0,[R7, R6]
   \   00000010   0xF88D 0x0000      STRB     R0,[SP, #+0]
    723          	 		ch2[1] = ch[ii + 1];
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x19B8             ADDS     R0,R7,R6
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0xF88D 0x0001      STRB     R0,[SP, #+1]
    724          			ch2[2] = '\0';			//ºº×ÖÎªÁ½¸ö×Ö½Ú
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xF88D 0x0002      STRB     R0,[SP, #+2]
    725          			LCD_P14x16Str(x , y, ch2);	//ÏÔÊ¾ºº×Ö
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       LCD_P14x16Str
    726          			x += 14;
   \   00000032   0x340E             ADDS     R4,R4,#+14
    727          			ii += 2;
   \   00000034   0x1CBF             ADDS     R7,R7,#+2
    728          		}
   \                     ??LCD_Print_0:
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x5DB8             LDRB     R0,[R7, R6]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD014             BEQ.N    ??LCD_Print_2
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0x5DB8             LDRB     R0,[R7, R6]
   \   00000042   0x2880             CMP      R0,#+128
   \   00000044   0xD2E2             BCS.N    ??LCD_Print_1
    729          		else
    730          		{
    731          			ch2[0] = ch[ii];	
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0x5DB8             LDRB     R0,[R7, R6]
   \   0000004A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    732          			ch2[1] = '\0';			//×ÖÄ¸Õ¼Ò»¸ö×Ö½Ú
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xF88D 0x0001      STRB     R0,[SP, #+1]
    733          			LCD_P8x16Str(x , y , ch2);	//ÏÔÊ¾×ÖÄ¸
   \   00000054   0xAA00             ADD      R2,SP,#+0
   \   00000056   0x0029             MOVS     R1,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       LCD_P8x16Str
    734          			x += 8;
   \   00000062   0x3408             ADDS     R4,R4,#+8
    735          			ii+= 1;
   \   00000064   0x1C7F             ADDS     R7,R7,#+1
   \   00000066   0xE7E6             B.N      ??LCD_Print_0
    736          		}
    737          	}
    738          } 
   \                     ??LCD_Print_2:
   \   00000068   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    739          
    740          //==============================================================
    741          //º¯ÊýÃû£º void Draw_BMP(byte x,byte y)
    742          //¹¦ÄÜÃèÊö£ºÏÔÊ¾BMPÍ¼Æ¬128¡Á64
    743          //²ÎÊý£ºÆðÊ¼µã×ø±ê(x,y),xµÄ·¶Î§0¡«127£¬yÎªÒ³µÄ·¶Î§0¡«7
    744          //·µ»Ø£ºÎÞ
    745          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    746          void Draw_BMP(uint8 x0,uint8 y0,uint8 x1,uint8 y1,uint8 bmp[])
    747          { 	
   \                     Draw_BMP:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
   \   0000000A   0x9F08             LDR      R7,[SP, #+32]
    748            uint32 ii=0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    749            uint8 x,y;
    750            
    751            if(y1%8==0) y=y1/8;      
   \   00000010   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000012   0x2008             MOVS     R0,#+8
   \   00000014   0xFB96 0xF2F0      SDIV     R2,R6,R0
   \   00000018   0xFB02 0x6210      MLS      R2,R2,R0,R6
   \   0000001C   0x2A00             CMP      R2,#+0
   \   0000001E   0xD104             BNE.N    ??Draw_BMP_0
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2008             MOVS     R0,#+8
   \   00000024   0xFB96 0xFAF0      SDIV     R10,R6,R0
   \   00000028   0xE005             B.N      ??Draw_BMP_1
    752            else y=y1/8+1;
   \                     ??Draw_BMP_0:
   \   0000002A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002C   0x2008             MOVS     R0,#+8
   \   0000002E   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   00000032   0xF110 0x0A01      ADDS     R10,R0,#+1
    753          	for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1:
   \   00000036   0x468A             MOV      R10,R1
   \   00000038   0xE00E             B.N      ??Draw_BMP_2
    754          	{
    755          		LCD_Set_Pos(x0,y);				
    756              for(x=x0;x<x1;x++)
    757          	    {      
    758          	    	LCD_WrDat(bmp[ii++]);	    	
   \                     ??Draw_BMP_3:
   \   0000003A   0xF818 0x0007      LDRB     R0,[R8, R7]
   \   0000003E   0x.... 0x....      BL       LCD_WrDat
   \   00000042   0xF118 0x0801      ADDS     R8,R8,#+1
    759          	    }
   \   00000046   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??Draw_BMP_4:
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x45A9             CMP      R9,R5
   \   00000052   0xD3F2             BCC.N    ??Draw_BMP_3
   \   00000054   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Draw_BMP_2:
   \   00000058   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005E   0x4556             CMP      R6,R10
   \   00000060   0xD307             BCC.N    ??Draw_BMP_5
   \   00000062   0x4651             MOV      R1,R10
   \   00000064   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006E   0x46A1             MOV      R9,R4
   \   00000070   0xE7EB             B.N      ??Draw_BMP_4
    760          	}
    761          }
   \                     ??Draw_BMP_5:
   \   00000072   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    762          

   \                                 In section .text, align 2, keep-with-next
    763          void show_pic()
    764          {
   \                     show_pic:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    765            uint8 i=0,j=0,k=0,temp=0,row=0,col=0,data=0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2700             MOVS     R7,#+0
   \   0000000E   0x2000             MOVS     R0,#+0
    766            
    767            if(!(ROW%16)) //ÐÐÊý¿ÉÒÔ±»16Õû³ý
    768              row=ROW/16;
    769            else
    770              row=ROW/16+1;
   \   00000010   0x2310             MOVS     R3,#+16
   \   00000012   0x001E             MOVS     R6,R3
    771            
    772            col=COLUMN/2;
   \   00000014   0x237F             MOVS     R3,#+127
   \   00000016   0x001F             MOVS     R7,R3
    773            
    774            for(k=0;k<row;k++)
   \   00000018   0x2300             MOVS     R3,#+0
   \   0000001A   0x001D             MOVS     R5,R3
   \   0000001C   0xE000             B.N      ??show_pic_0
   \                     ??show_pic_1:
   \   0000001E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??show_pic_0:
   \   00000020   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000022   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000024   0x42B5             CMP      R5,R6
   \   00000026   0xD245             BCS.N    ??show_pic_2
    775            {
    776              LCD_Set_Pos(0,k);
   \   00000028   0x0029             MOVS     R1,R5
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       LCD_Set_Pos
    777              for(i=0;i<col;i++)
   \   00000032   0x2400             MOVS     R4,#+0
   \   00000034   0xE017             B.N      ??show_pic_3
    778              {
    779                if(k<row-1)
    780                {
    781                  data=0;
    782                  for(j=0;j<8;j++)
    783                  {
    784                    temp=PHOTO_BUFF[j*2+k*16][i*2];
    785                    data|=temp<<j;
    786                  }
    787                  LCD_WrDat(data);
    788                }
    789                else
    790                {
    791                  data=0;
    792                  for(j=0;j<ROW%16;j++)
    793                  {
    794                    temp=PHOTO_BUFF[j*2+k*16][i*2];
   \                     ??show_pic_4:
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003C   0x012A             LSLS     R2,R5,#+4
   \   0000003E   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   00000042   0x23FF             MOVS     R3,#+255
   \   00000044   0x.... 0x....      LDR.W    R12,??DataTable7_3
   \   00000048   0xFB03 0xC202      MLA      R2,R3,R2,R12
   \   0000004C   0xF812 0x2014      LDRB     R2,[R2, R4, LSL #+1]
    795                    data|=temp<<j;
   \   00000050   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000052   0x408A             LSLS     R2,R2,R1
   \   00000054   0x4310             ORRS     R0,R2,R0
    796                  }
   \   00000056   0x1C49             ADDS     R1,R1,#+1
   \                     ??show_pic_5:
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x290F             CMP      R1,#+15
   \   0000005C   0xD3EB             BCC.N    ??show_pic_4
    797                  LCD_WrDat(data);
   \   0000005E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000060   0x.... 0x....      BL       LCD_WrDat
   \                     ??show_pic_6:
   \   00000064   0x1C64             ADDS     R4,R4,#+1
   \                     ??show_pic_3:
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000006A   0x42BC             CMP      R4,R7
   \   0000006C   0xD2D7             BCS.N    ??show_pic_1
   \   0000006E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000070   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000072   0x1E70             SUBS     R0,R6,#+1
   \   00000074   0x4285             CMP      R5,R0
   \   00000076   0xDA1A             BGE.N    ??show_pic_7
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0xE010             B.N      ??show_pic_8
   \                     ??show_pic_9:
   \   0000007E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000080   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000082   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000084   0x012A             LSLS     R2,R5,#+4
   \   00000086   0xEB12 0x0241      ADDS     R2,R2,R1, LSL #+1
   \   0000008A   0x23FF             MOVS     R3,#+255
   \   0000008C   0x.... 0x....      LDR.W    R12,??DataTable7_3
   \   00000090   0xFB03 0xC202      MLA      R2,R3,R2,R12
   \   00000094   0xF812 0x2014      LDRB     R2,[R2, R4, LSL #+1]
   \   00000098   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000009A   0x408A             LSLS     R2,R2,R1
   \   0000009C   0x4310             ORRS     R0,R2,R0
   \   0000009E   0x1C49             ADDS     R1,R1,#+1
   \                     ??show_pic_8:
   \   000000A0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A2   0x2908             CMP      R1,#+8
   \   000000A4   0xD3EB             BCC.N    ??show_pic_9
   \   000000A6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A8   0x.... 0x....      BL       LCD_WrDat
   \   000000AC   0xE7DA             B.N      ??show_pic_6
   \                     ??show_pic_7:
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0xE7D1             B.N      ??show_pic_5
    798                }
    799              }
    800            }
    801            
    802            /*
    803            uint8 i=0,j=0,n=0;//ÓÃÀ´ÏÔÊ¾Í¼ÏñµÄ¼ÆÊýÆ÷
    804            uint8 single_value=0;//´æ´¢¶þÖµÍ¼ÏñÊý×é8ÐÐ1ÁÐµÄÊý¾Ý
    805            uint8 row_need=0;//Êµ¼ÊÏÔÊ¾ÐèÒªµÄÐÐÊý
    806            uint8 column_need=0;//Êµ¼ÊÐèÒªµÄÁÐÊý
    807            uint8 temp=0;
    808            
    809            if(!(ROW%16)) //ÐÐÊý¿ÉÒÔ±»16Õû³ý
    810              row_need=ROW/16;
    811            else
    812              row_need=ROW/16+1;
    813           
    814            column_need=COLUMN/2;
    815            
    816            for(j=0;j<row_need;j++) //ÐÐ´¦Àí
    817            {
    818              
    819              LCD_Set_Pos(0,j);
    820              for(i=0;i<column_need;i++) //ÁÐ´¦Àí
    821              {
    822                
    823                
    824                if((j<row_need-1)||(!(ROW%16)))//µ¹ÊýµÚ¶þÐÐÖ®Ç°£¬»òÕßÕû¸öÐÐÊý¿ÉÒÔ±»16Õû³ý£¬Ôò´¦Àí
    825                {
    826                  single_value=0;
    827                  for(n=0;n<8;n++)
    828                  {
    829                    temp=PHOTO_BUFF[j+2*n][i];
    830                    single_value=single_value||(temp<<n);
    831                  }
    832                  LCD_WrDat(single_value);
    833                }//µ¹ÊýµÚ¶þ¡£¡£¡£
    834                
    835                else //×îºóÒ»ÐÐ£¬ÇÒÎÞ·¨±»Õû³ý£¬´¦Àí·½·¨
    836                {
    837                   single_value=0;
    838                   for(n=0;n<(ROW%16);n++)
    839                   {
    840                    temp=PHOTO_BUFF[j+2*n][i];
    841                    single_value=single_value||(temp<<n);
    842                   }
    843                   LCD_WrDat(single_value);
    844                }//×îºóÒ»ÐÐ¡£¡£¡£
    845                //LCD_WrDat(single_value);
    846                
    847              }//ÁÐ´¦Àí¡£¡£¡£
    848              
    849            }//ÐÐ´¦Àí¡£¡£¡£  
    850            */
    851          }//end of show_pic...
   \                     ??show_pic_2:
   \   000000B4   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     PHOTO_BUFF

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  CLS_single
              8 -> LCD_WrCmd
              8 -> LCD_WrDat
       32  Draw_BMP
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
       16  LCD_CLS
             16 -> LCD_WrCmd
             16 -> LCD_WrDat
        0  LCD_DLY_ms
       16  LCD_Fill
             16 -> LCD_WrCmd
             16 -> LCD_WrDat
        8  LCD_Init
              8 -> LCD_DLY_ms
              8 -> LCD_Fill
              8 -> LCD_Set_Pos
              8 -> SetAddressingMode
              8 -> SetContrastControl
              8 -> SetStartLine
              8 -> Set_Charge_Pump
              8 -> Set_Common_Config
              8 -> Set_Common_Remap
              8 -> Set_Display_Clock
              8 -> Set_Display_Offset
              8 -> Set_Display_On_Off
              8 -> Set_Entire_Display
              8 -> Set_Inverse_Display
              8 -> Set_Multiplex_Ratio
              8 -> Set_Precharge_Period
              8 -> Set_Segment_Remap
              8 -> Set_VCOMH
              8 -> gpio_init
       32  LCD_P6x8Str
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
       32  LCD_P8x16Str
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
       32  LCD_P8x16_num3wei
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
       32  LCD_P8x16_number
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
       24  LCD_Print
             24 -> LCD_P14x16Str
             24 -> LCD_P8x16Str
       16  LCD_PutPixel
             16 -> LCD_Set_Pos
             16 -> LCD_WrCmd
             16 -> LCD_WrDat
       32  LCD_Rectangle
             32 -> LCD_DLY_ms
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
        8  LCD_Set_Pos
              8 -> LCD_WrCmd
       16  LCD_WrCmd
             16 -> gpio_init
       16  LCD_WrDat
             16 -> gpio_init
        8  SetAddressingMode
              8 -> LCD_WrCmd
       16  SetColumnAddress
             16 -> LCD_WrCmd
        8  SetContrastControl
              8 -> LCD_WrCmd
       16  SetPageAddress
             16 -> LCD_WrCmd
        8  SetStartColumn
              8 -> LCD_WrCmd
        8  SetStartLine
              8 -> LCD_WrCmd
        8  SetStartPage
              8 -> LCD_WrCmd
        8  Set_Charge_Pump
              8 -> LCD_WrCmd
        8  Set_Common_Config
              8 -> LCD_WrCmd
        8  Set_Common_Remap
              8 -> LCD_WrCmd
        8  Set_Display_Clock
              8 -> LCD_WrCmd
        8  Set_Display_Offset
              8 -> LCD_WrCmd
        8  Set_Display_On_Off
              8 -> LCD_WrCmd
        8  Set_Entire_Display
              8 -> LCD_WrCmd
        8  Set_Inverse_Display
              8 -> LCD_WrCmd
        8  Set_Multiplex_Ratio
              8 -> LCD_WrCmd
        8  Set_NOP
              8 -> LCD_WrCmd
        8  Set_Precharge_Period
              8 -> LCD_WrCmd
        8  Set_Segment_Remap
              8 -> LCD_WrCmd
        8  Set_VCOMH
              8 -> LCD_WrCmd
        8  adjust
              8 -> LCD_WrCmd
       24  show_pic
             24 -> LCD_Set_Pos
             24 -> LCD_WrDat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
      42  CLS_single
     118  Draw_BMP
     552  F6x8
    1520  F8X16
      56  LCD_CLS
      22  LCD_DLY_ms
      60  LCD_Fill
     162  LCD_Init
     122  LCD_P6x8Str
     166  LCD_P8x16Str
     194  LCD_P8x16_num3wei
     236  LCD_P8x16_number
     106  LCD_Print
      80  LCD_PutPixel
     152  LCD_Rectangle
      44  LCD_Set_Pos
     118  LCD_WrCmd
     118  LCD_WrDat
   65028  PHOTO_BUFF
      20  SetAddressingMode
      30  SetColumnAddress
      20  SetContrastControl
      30  SetPageAddress
      40  SetStartColumn
      14  SetStartLine
      14  SetStartPage
      22  Set_Charge_Pump
      22  Set_Common_Config
      14  Set_Common_Remap
      20  Set_Display_Clock
      20  Set_Display_Offset
      14  Set_Display_On_Off
      14  Set_Entire_Display
      14  Set_Inverse_Display
      20  Set_Multiplex_Ratio
      10  Set_NOP
      20  Set_Precharge_Period
      14  Set_Segment_Remap
      20  Set_VCOMH
      10  adjust
     182  show_pic

 
 65 028 bytes in section .bss
  2 072 bytes in section .rodata
  2 396 bytes in section .text
 
  2 396 bytes of CODE  memory
  2 072 bytes of CONST memory
 65 028 bytes of DATA  memory

Errors: none
Warnings: none
