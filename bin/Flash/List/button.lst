###############################################################################
#                                                                             #
#                                                       20/Aug/2014  04:11:53 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0        #
#                    2014.08.20 tiaoshi\src\Sources\C\Component_C\button.c    #
#    Command line =  "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0       #
#                    2014.08.20 tiaoshi\src\Sources\C\Component_C\button.c"   #
#                    -D IAR -D TWR_K60N512 -lCN "D:\FREESCALE智能车竞赛\frees #
#                    cale(九)\程序\PE V2.0 2014.08.20                         #
#                    tiaoshi\bin\Flash\List\" -lB                             #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0       #
#                    2014.08.20 tiaoshi\bin\Flash\List\" -o                   #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0       #
#                    2014.08.20 tiaoshi\bin\Flash\Obj\" --no_cse --no_unroll  #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files            #
#                    (x86)\IAREW6.3\arm\INC\c\DLib_Config_Normal.h" -I        #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0       #
#                    2014.08.20 tiaoshi\src\Sources\H\" -I                    #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0       #
#                    2014.08.20 tiaoshi\src\Sources\H\Component_H\" -I        #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0       #
#                    2014.08.20 tiaoshi\src\Sources\H\Frame_H\" -Ol           #
#                    --use_c++_inline                                         #
#    List file    =  D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0        #
#                    2014.08.20 tiaoshi\bin\Flash\List\button.lst             #
#    Object file  =  D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0        #
#                    2014.08.20 tiaoshi\bin\Flash\Obj\button.o                #
#                                                                             #
#                                                                             #
###############################################################################

D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V2.0 2014.08.20 tiaoshi\src\Sources\C\Component_C\button.c
      1          
      2          //程序名：  矩阵键盘 驱动程序
      3          //硬件平台：MK60DN512ZVLL10
      4          //开发环境：IAR V6.3
      5          //最后修改和注解的时间：
      6          //                     2012.8.26
      7          #include "includes.h"
      8          #include "button.h"
      9          #include "gpio.h"
     10          #include "LQ12864.h"
     11          
     12          
     13          #define  keyport       PORTD
     14          #define  keyport_clk   SIM_SCGC5_PORTD_MASK
     15          #define  pin_begin     0  
     16          
     17          /********************************************************
     18          *函数名：   void button_init(void)
     19          *功能：     按键，外部触发
     20          *入口参数:  无
     21          *出口参数:  无
     22          *说明：     使用的引脚：PC7、PC8、PC9
     23          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
     24          void button_init(void)
     25          {   
     26               /*
     27               SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;    //打开PORTC端口的时钟
     28               
     29               PORTC_DFER|=PORT_DFER_DFE_MASK;   //enable filter
     30               PORTC_DFCR|=PORT_DFCR_CS_MASK;    //select LDO as Filter Clock
     31               PORTC_DFWR=PORT_DFWR_FILT(10);     //10ms
     32               
     33               PORTC_PCR7=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
     34               PORTC_PCR8=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
     35               PORTC_PCR9=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
     36               */
     37            
     38               SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;    //打开PORTD端口的时钟
   \                     button_init:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable2  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable2  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     39               
     40               //PORTD_DFER|=PORT_DFER_DFE_MASK;   //enable filter
     41               //PORTD_DFCR|=PORT_DFCR_CS_MASK;    //select LDO as Filter Clock
     42               //PORTD_DFWR=PORT_DFWR_FILT(1);     //10ms
     43               
     44               PORTD_PCR0=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable2_1  ;; 0x4004c000
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0xa0103
   \   00000018   0x6001             STR      R1,[R0, #+0]
     45               PORTD_PCR1=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable2_3  ;; 0x4004c004
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0xa0103
   \   00000022   0x6001             STR      R1,[R0, #+0]
     46               PORTD_PCR2=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable2_4  ;; 0x4004c008
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0xa0103
   \   0000002C   0x6001             STR      R1,[R0, #+0]
     47               PORTD_PCR3=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable2_5  ;; 0x4004c00c
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0xa0103
   \   00000036   0x6001             STR      R1,[R0, #+0]
     48               PORTD_PCR4=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable2_6  ;; 0x4004c010
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0xa0103
   \   00000040   0x6001             STR      R1,[R0, #+0]
     49               PORTD_PCR5=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable2_7  ;; 0x4004c014
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0xa0103
   \   0000004A   0x6001             STR      R1,[R0, #+0]
     50               PORTD_PCR6=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable2_8  ;; 0x4004c018
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0xa0103
   \   00000054   0x6001             STR      R1,[R0, #+0]
     51               PORTD_PCR7=PORT_PCR_MUX(1)|PORT_PCR_IRQC(0xA)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;  //上拉  上升沿中断
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable2_9  ;; 0x4004c01c
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable2_2  ;; 0xa0103
   \   0000005E   0x6001             STR      R1,[R0, #+0]
     52          }
   \   00000060   0x4770             BX       LR               ;; return
     53          
     54          
     55          /********************************************************
     56          *函数名：   void matrix_keyboard_init()
     57          *功能：     按键，外部触发
     58          *入口参数:  无
     59          *出口参数:  无
     60          *说明：     使用的引脚：PD0~PD7
     61          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
     62          void matrix_keyboard_init()
     63          {
   \                     matrix_keyboard_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     64            SIM_SCGC5 |= keyport_clk;    //打开keyport端口的时钟
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable2  ;; 0x40048038
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable2  ;; 0x40048038
   \   00000010   0x6008             STR      R0,[R1, #+0]
     65            
     66            gpio_init (keyport,pin_begin,0,0);
   \   00000012   0x2300             MOVS     R3,#+0
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000001C   0x.... 0x....      BL       gpio_init
     67            gpio_init (keyport,(pin_begin+1),0,0);
   \   00000020   0x2300             MOVS     R3,#+0
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000002A   0x.... 0x....      BL       gpio_init
     68            gpio_init (keyport,(pin_begin+2),0,0);
   \   0000002E   0x2300             MOVS     R3,#+0
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2102             MOVS     R1,#+2
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000038   0x.... 0x....      BL       gpio_init
     69            gpio_init (keyport,(pin_begin+3),0,0);
   \   0000003C   0x2300             MOVS     R3,#+0
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x2103             MOVS     R1,#+3
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000046   0x.... 0x....      BL       gpio_init
     70            gpio_init (keyport,(pin_begin+4),0,1);
   \   0000004A   0x2301             MOVS     R3,#+1
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2104             MOVS     R1,#+4
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000054   0x.... 0x....      BL       gpio_init
     71            gpio_init (keyport,(pin_begin+5),0,1);
   \   00000058   0x2301             MOVS     R3,#+1
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x2105             MOVS     R1,#+5
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000062   0x.... 0x....      BL       gpio_init
     72            gpio_init (keyport,(pin_begin+6),0,1);
   \   00000066   0x2301             MOVS     R3,#+1
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2106             MOVS     R1,#+6
   \   0000006C   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000006E   0x.... 0x....      BL       gpio_init
     73            gpio_init (keyport,(pin_begin+7),0,0);
   \   00000072   0x2300             MOVS     R3,#+0
   \   00000074   0x2200             MOVS     R2,#+0
   \   00000076   0x2107             MOVS     R1,#+7
   \   00000078   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000007A   0x.... 0x....      BL       gpio_init
     74          }
   \   0000007E   0xBD01             POP      {R0,PC}          ;; return
     75          
     76          /***************************************************************
     77          *函数名：uint8 keyboard_scan()
     78          *功能：扫描按键的值
     79          *入口参数：无
     80          *出口参数：键值
     81          *说明：无
     82          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
     83          uint8 keyboard_scan()
     84          {
   \                     keyboard_scan:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
     85               uint8 temp=0;
   \   00000002   0x2500             MOVS     R5,#+0
     86               uint8 key_num=255;
   \   00000004   0x24FF             MOVS     R4,#+255
     87               //第四行-------------------------
     88               gpio_init (keyport,pin_begin,1,0);
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000000E   0x.... 0x....      BL       gpio_init
     89               gpio_init (keyport,(pin_begin+1),1,1);
   \   00000012   0x2301             MOVS     R3,#+1
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000001A   0x.... 0x....      BL       gpio_init
     90               gpio_init (keyport,(pin_begin+2),1,1);
   \   0000001E   0x2301             MOVS     R3,#+1
   \   00000020   0x2201             MOVS     R2,#+1
   \   00000022   0x2102             MOVS     R1,#+2
   \   00000024   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000026   0x.... 0x....      BL       gpio_init
     91               gpio_init (keyport,(pin_begin+3),1,1);
   \   0000002A   0x2301             MOVS     R3,#+1
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x2103             MOVS     R1,#+3
   \   00000030   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000032   0x.... 0x....      BL       gpio_init
     92                  
     93               temp=(gpio_read(keyport,(pin_begin+4))<<4)+(gpio_read(keyport,(pin_begin+5))<<5)+(gpio_read(keyport,(pin_begin+6))<<6)+(gpio_read(keyport,(pin_begin+7))<<7);
   \   00000036   0x2104             MOVS     R1,#+4
   \   00000038   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000003A   0x.... 0x....      BL       gpio_read
   \   0000003E   0x0006             MOVS     R6,R0
   \   00000040   0x2105             MOVS     R1,#+5
   \   00000042   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000044   0x.... 0x....      BL       gpio_read
   \   00000048   0x0007             MOVS     R7,R0
   \   0000004A   0x2106             MOVS     R1,#+6
   \   0000004C   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000004E   0x.... 0x....      BL       gpio_read
   \   00000052   0x0179             LSLS     R1,R7,#+5
   \   00000054   0xEB11 0x1106      ADDS     R1,R1,R6, LSL #+4
   \   00000058   0xEB11 0x1680      ADDS     R6,R1,R0, LSL #+6
   \   0000005C   0x2107             MOVS     R1,#+7
   \   0000005E   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000060   0x.... 0x....      BL       gpio_read
   \   00000064   0xEB16 0x10C0      ADDS     R0,R6,R0, LSL #+7
   \   00000068   0x0005             MOVS     R5,R0
     94               
     95               if(temp!=0x70)
   \   0000006A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006C   0x2D70             CMP      R5,#+112
   \   0000006E   0xD02A             BEQ.N    ??keyboard_scan_0
     96          	{
     97          	   delay_ms(10);
   \   00000070   0x200A             MOVS     R0,#+10
   \   00000072   0x.... 0x....      BL       delay_ms
     98                          
     99          	   temp=(gpio_read(keyport,(pin_begin+4))<<4)+(gpio_read(keyport,(pin_begin+5))<<5)+(gpio_read(keyport,(pin_begin+6))<<6)+(gpio_read(keyport,(pin_begin+7))<<7);
   \   00000076   0x2104             MOVS     R1,#+4
   \   00000078   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000007A   0x.... 0x....      BL       gpio_read
   \   0000007E   0x0005             MOVS     R5,R0
   \   00000080   0x2105             MOVS     R1,#+5
   \   00000082   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000084   0x.... 0x....      BL       gpio_read
   \   00000088   0x0006             MOVS     R6,R0
   \   0000008A   0x2106             MOVS     R1,#+6
   \   0000008C   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000008E   0x.... 0x....      BL       gpio_read
   \   00000092   0x0171             LSLS     R1,R6,#+5
   \   00000094   0xEB11 0x1105      ADDS     R1,R1,R5, LSL #+4
   \   00000098   0xEB11 0x1580      ADDS     R5,R1,R0, LSL #+6
   \   0000009C   0x2107             MOVS     R1,#+7
   \   0000009E   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000000A0   0x.... 0x....      BL       gpio_read
   \   000000A4   0xEB15 0x15C0      ADDS     R5,R5,R0, LSL #+7
    100                     
    101                     if(temp!=0x70)
   \   000000A8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000AA   0x2D70             CMP      R5,#+112
   \   000000AC   0xD00B             BEQ.N    ??keyboard_scan_0
    102          	      {
    103                           switch(temp)
   \   000000AE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B0   0x2D30             CMP      R5,#+48
   \   000000B2   0xD007             BEQ.N    ??keyboard_scan_1
   \   000000B4   0x2D50             CMP      R5,#+80
   \   000000B6   0xD003             BEQ.N    ??keyboard_scan_2
   \   000000B8   0x2D60             CMP      R5,#+96
   \   000000BA   0xD104             BNE.N    ??keyboard_scan_0
    104                           {
    105                          
    106          		 case 0x60:	
    107                                     key_num=10;                          //10号键被按下
   \                     ??keyboard_scan_3:
   \   000000BC   0x240A             MOVS     R4,#+10
    108                                     //LCD_P8x16_number(10,6,12);
    109          			   //LCD_P8x16_num3wei(0,0,12);  ;				
    110          			   break;
   \   000000BE   0xE002             B.N      ??keyboard_scan_0
    111          		 case 0x50:
    112                                     key_num=11;                         //11号键被按下
   \                     ??keyboard_scan_2:
   \   000000C0   0x240B             MOVS     R4,#+11
    113                                     //LCD_P8x16_number(10,6,13);
    114          		           //LCD_P8x16_num3wei(0,0,13); ;
    115          	  		   break;
   \   000000C2   0xE000             B.N      ??keyboard_scan_0
    116          		 case 0x30:
    117                                     key_num=12;                          //12号键被按下
   \                     ??keyboard_scan_1:
   \   000000C4   0x240C             MOVS     R4,#+12
    118                                     //LCD_P8x16_number(10,6,14);
    119          		           //LCD_P8x16_num3wei(0,0,14); ;
    120          			   break;
    121                                     /*
    122          		 case 0x70:
    123                                     key_num=15;                         //4号键被按下
    124                                     //LCD_P8x16_number(10,6,15);
    125          		           //LCD_P8x16_num3wei(0,0,15); ;
    126          	  		   break;
    127                                     */
    128                                     
    129                           }
    130          	       }			 	   
    131          	}
    132          
    133               //第三行--------------------------
    134               gpio_init (keyport,pin_begin,1,1);
   \                     ??keyboard_scan_0:
   \   000000C6   0x2301             MOVS     R3,#+1
   \   000000C8   0x2201             MOVS     R2,#+1
   \   000000CA   0x2100             MOVS     R1,#+0
   \   000000CC   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000000CE   0x.... 0x....      BL       gpio_init
    135               gpio_init (keyport,(pin_begin+1),1,0);
   \   000000D2   0x2300             MOVS     R3,#+0
   \   000000D4   0x2201             MOVS     R2,#+1
   \   000000D6   0x2101             MOVS     R1,#+1
   \   000000D8   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000000DA   0x.... 0x....      BL       gpio_init
    136               gpio_init (keyport,(pin_begin+2),1,1);
   \   000000DE   0x2301             MOVS     R3,#+1
   \   000000E0   0x2201             MOVS     R2,#+1
   \   000000E2   0x2102             MOVS     R1,#+2
   \   000000E4   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000000E6   0x.... 0x....      BL       gpio_init
    137               gpio_init (keyport,(pin_begin+3),1,1);
   \   000000EA   0x2301             MOVS     R3,#+1
   \   000000EC   0x2201             MOVS     R2,#+1
   \   000000EE   0x2103             MOVS     R1,#+3
   \   000000F0   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000000F2   0x.... 0x....      BL       gpio_init
    138                  
    139               temp=(gpio_read(keyport,(pin_begin+4))<<4)+(gpio_read(keyport,(pin_begin+5))<<5)+(gpio_read(keyport,(pin_begin+6))<<6)+(gpio_read(keyport,(pin_begin+7))<<7);
   \   000000F6   0x2104             MOVS     R1,#+4
   \   000000F8   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000000FA   0x.... 0x....      BL       gpio_read
   \   000000FE   0x0005             MOVS     R5,R0
   \   00000100   0x2105             MOVS     R1,#+5
   \   00000102   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000104   0x.... 0x....      BL       gpio_read
   \   00000108   0x0006             MOVS     R6,R0
   \   0000010A   0x2106             MOVS     R1,#+6
   \   0000010C   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000010E   0x.... 0x....      BL       gpio_read
   \   00000112   0x0171             LSLS     R1,R6,#+5
   \   00000114   0xEB11 0x1105      ADDS     R1,R1,R5, LSL #+4
   \   00000118   0xEB11 0x1580      ADDS     R5,R1,R0, LSL #+6
   \   0000011C   0x2107             MOVS     R1,#+7
   \   0000011E   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000120   0x.... 0x....      BL       gpio_read
   \   00000124   0xEB15 0x15C0      ADDS     R5,R5,R0, LSL #+7
    140                  
    141               if(temp!=0x70)
   \   00000128   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000012A   0x2D70             CMP      R5,#+112
   \   0000012C   0xD02A             BEQ.N    ??keyboard_scan_4
    142          	{
    143          	    delay_ms(10);
   \   0000012E   0x200A             MOVS     R0,#+10
   \   00000130   0x.... 0x....      BL       delay_ms
    144                          
    145          	   temp=(gpio_read(keyport,(pin_begin+4))<<4)+(gpio_read(keyport,(pin_begin+5))<<5)+(gpio_read(keyport,(pin_begin+6))<<6)+(gpio_read(keyport,(pin_begin+7))<<7);
   \   00000134   0x2104             MOVS     R1,#+4
   \   00000136   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000138   0x.... 0x....      BL       gpio_read
   \   0000013C   0x0005             MOVS     R5,R0
   \   0000013E   0x2105             MOVS     R1,#+5
   \   00000140   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000142   0x.... 0x....      BL       gpio_read
   \   00000146   0x0006             MOVS     R6,R0
   \   00000148   0x2106             MOVS     R1,#+6
   \   0000014A   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000014C   0x.... 0x....      BL       gpio_read
   \   00000150   0x0171             LSLS     R1,R6,#+5
   \   00000152   0xEB11 0x1105      ADDS     R1,R1,R5, LSL #+4
   \   00000156   0xEB11 0x1580      ADDS     R5,R1,R0, LSL #+6
   \   0000015A   0x2107             MOVS     R1,#+7
   \   0000015C   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000015E   0x.... 0x....      BL       gpio_read
   \   00000162   0xEB15 0x15C0      ADDS     R5,R5,R0, LSL #+7
    146                          
    147          	    if(temp!=0x70)
   \   00000166   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000168   0x2D70             CMP      R5,#+112
   \   0000016A   0xD00B             BEQ.N    ??keyboard_scan_4
    148          		{
    149                             switch(temp)
   \   0000016C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000016E   0x2D30             CMP      R5,#+48
   \   00000170   0xD007             BEQ.N    ??keyboard_scan_5
   \   00000172   0x2D50             CMP      R5,#+80
   \   00000174   0xD003             BEQ.N    ??keyboard_scan_6
   \   00000176   0x2D60             CMP      R5,#+96
   \   00000178   0xD104             BNE.N    ??keyboard_scan_4
    150                              {
    151          		    case 0x60:	
    152                                        key_num=7;                    //7号键被按下
   \                     ??keyboard_scan_7:
   \   0000017A   0x2407             MOVS     R4,#+7
    153                                        //LCD_P8x16_number(10,6,8);
    154          			      //LCD_P8x16_num3wei(0,0,8);					
    155          	           	      break;
   \   0000017C   0xE002             B.N      ??keyboard_scan_4
    156          		    case 0x50:
    157                                        key_num=8;                    //8号键被按下
   \                     ??keyboard_scan_6:
   \   0000017E   0x2408             MOVS     R4,#+8
    158                                        //LCD_P8x16_number(10,6,9);
    159          		              //LCD_P8x16_num3wei(0,0,9);
    160          			      break;
   \   00000180   0xE000             B.N      ??keyboard_scan_4
    161          		    case 0x30:
    162                                        key_num=9;                     //9号键被按下
   \                     ??keyboard_scan_5:
   \   00000182   0x2409             MOVS     R4,#+9
    163                                        //LCD_P8x16_number(10,6,10);
    164          		              //LCD_P8x16_num3wei(0,0,10);
    165          			      break;
    166                                        /*
    167          		    case 0x70:			             //8号键被按下
    168          		              key_num=11;
    169                                        //LCD_P8x16_number(10,6,11);
    170                                        //LCD_P8x16_num3wei(0,0,11);
    171          			      break;
    172                                        */
    173                              }
    174          		}			 	   
    175          	}
    176               //第二行------------------------
    177               gpio_init (keyport,pin_begin,1,1);
   \                     ??keyboard_scan_4:
   \   00000184   0x2301             MOVS     R3,#+1
   \   00000186   0x2201             MOVS     R2,#+1
   \   00000188   0x2100             MOVS     R1,#+0
   \   0000018A   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000018C   0x.... 0x....      BL       gpio_init
    178               gpio_init (keyport,(pin_begin+1),1,1);
   \   00000190   0x2301             MOVS     R3,#+1
   \   00000192   0x2201             MOVS     R2,#+1
   \   00000194   0x2101             MOVS     R1,#+1
   \   00000196   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000198   0x.... 0x....      BL       gpio_init
    179               gpio_init (keyport,(pin_begin+2),1,0);
   \   0000019C   0x2300             MOVS     R3,#+0
   \   0000019E   0x2201             MOVS     R2,#+1
   \   000001A0   0x2102             MOVS     R1,#+2
   \   000001A2   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000001A4   0x.... 0x....      BL       gpio_init
    180               gpio_init (keyport,(pin_begin+3),1,1);
   \   000001A8   0x2301             MOVS     R3,#+1
   \   000001AA   0x2201             MOVS     R2,#+1
   \   000001AC   0x2103             MOVS     R1,#+3
   \   000001AE   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000001B0   0x.... 0x....      BL       gpio_init
    181                  
    182               temp=(gpio_read(keyport,(pin_begin+4))<<4)+(gpio_read(keyport,(pin_begin+5))<<5)+(gpio_read(keyport,(pin_begin+6))<<6)+(gpio_read(keyport,(pin_begin+7))<<7);
   \   000001B4   0x2104             MOVS     R1,#+4
   \   000001B6   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000001B8   0x.... 0x....      BL       gpio_read
   \   000001BC   0x0005             MOVS     R5,R0
   \   000001BE   0x2105             MOVS     R1,#+5
   \   000001C0   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000001C2   0x.... 0x....      BL       gpio_read
   \   000001C6   0x0006             MOVS     R6,R0
   \   000001C8   0x2106             MOVS     R1,#+6
   \   000001CA   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000001CC   0x.... 0x....      BL       gpio_read
   \   000001D0   0x0171             LSLS     R1,R6,#+5
   \   000001D2   0xEB11 0x1105      ADDS     R1,R1,R5, LSL #+4
   \   000001D6   0xEB11 0x1580      ADDS     R5,R1,R0, LSL #+6
   \   000001DA   0x2107             MOVS     R1,#+7
   \   000001DC   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000001DE   0x.... 0x....      BL       gpio_read
   \   000001E2   0xEB15 0x15C0      ADDS     R5,R5,R0, LSL #+7
    183               
    184               if(temp!=0x70)
   \   000001E6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001E8   0x2D70             CMP      R5,#+112
   \   000001EA   0xD02A             BEQ.N    ??keyboard_scan_8
    185          	{
    186          	    delay_ms(10);
   \   000001EC   0x200A             MOVS     R0,#+10
   \   000001EE   0x.... 0x....      BL       delay_ms
    187                          
    188          	    temp=(gpio_read(keyport,(pin_begin+4))<<4)+(gpio_read(keyport,(pin_begin+5))<<5)+(gpio_read(keyport,(pin_begin+6))<<6)+(gpio_read(keyport,(pin_begin+7))<<7);
   \   000001F2   0x2104             MOVS     R1,#+4
   \   000001F4   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000001F6   0x.... 0x....      BL       gpio_read
   \   000001FA   0x0005             MOVS     R5,R0
   \   000001FC   0x2105             MOVS     R1,#+5
   \   000001FE   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000200   0x.... 0x....      BL       gpio_read
   \   00000204   0x0006             MOVS     R6,R0
   \   00000206   0x2106             MOVS     R1,#+6
   \   00000208   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000020A   0x.... 0x....      BL       gpio_read
   \   0000020E   0x0171             LSLS     R1,R6,#+5
   \   00000210   0xEB11 0x1105      ADDS     R1,R1,R5, LSL #+4
   \   00000214   0xEB11 0x1580      ADDS     R5,R1,R0, LSL #+6
   \   00000218   0x2107             MOVS     R1,#+7
   \   0000021A   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000021C   0x.... 0x....      BL       gpio_read
   \   00000220   0xEB15 0x15C0      ADDS     R5,R5,R0, LSL #+7
    189                          
    190          	    if(temp!=0x70)
   \   00000224   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000226   0x2D70             CMP      R5,#+112
   \   00000228   0xD00B             BEQ.N    ??keyboard_scan_8
    191          	         {
    192                              switch(temp)
   \   0000022A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000022C   0x2D30             CMP      R5,#+48
   \   0000022E   0xD007             BEQ.N    ??keyboard_scan_9
   \   00000230   0x2D50             CMP      R5,#+80
   \   00000232   0xD003             BEQ.N    ??keyboard_scan_10
   \   00000234   0x2D60             CMP      R5,#+96
   \   00000236   0xD104             BNE.N    ??keyboard_scan_8
    193                              {
    194          		    case 0x60:
    195                                        key_num=4;                         //4号键被按下
   \                     ??keyboard_scan_11:
   \   00000238   0x2404             MOVS     R4,#+4
    196                                        //LCD_P8x16_number(10,6,4);
    197          			      //LCD_P8x16_num3wei(0,0,4);;					
    198          	           	      break;
   \   0000023A   0xE002             B.N      ??keyboard_scan_8
    199          		    case 0x50:
    200                                        key_num=5;                        //5号键被按下
   \                     ??keyboard_scan_10:
   \   0000023C   0x2405             MOVS     R4,#+5
    201                                        //LCD_P8x16_number(10,6,5);
    202          		              //LCD_P8x16_num3wei(0,0,5); ;
    203          			      break;
   \   0000023E   0xE000             B.N      ??keyboard_scan_8
    204          		    case 0x30:
    205                                        key_num=6;                        //6号键被按下
   \                     ??keyboard_scan_9:
   \   00000240   0x2406             MOVS     R4,#+6
    206                                        //LCD_P8x16_number(10,6,6);
    207          		              //LCD_P8x16_num3wei(0,0,6);  ;
    208          			      break;
    209                                        /*
    210          		    case 0x70:
    211                                        key_num=7;                         //12号键被按下
    212                                        //LCD_P8x16_number(10,6,7);
    213          		              //LCD_P8x16_num3wei(0,0,7); ;
    214          			      break;
    215                                        */
    216                              }
    217          		 }			 	   
    218          	}
    219                 //第一行------------------------------
    220                 gpio_init (keyport,pin_begin,1,1);
   \                     ??keyboard_scan_8:
   \   00000242   0x2301             MOVS     R3,#+1
   \   00000244   0x2201             MOVS     R2,#+1
   \   00000246   0x2100             MOVS     R1,#+0
   \   00000248   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000024A   0x.... 0x....      BL       gpio_init
    221                 gpio_init (keyport,(pin_begin+1),1,1);
   \   0000024E   0x2301             MOVS     R3,#+1
   \   00000250   0x2201             MOVS     R2,#+1
   \   00000252   0x2101             MOVS     R1,#+1
   \   00000254   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000256   0x.... 0x....      BL       gpio_init
    222                 gpio_init (keyport,(pin_begin+2),1,1);
   \   0000025A   0x2301             MOVS     R3,#+1
   \   0000025C   0x2201             MOVS     R2,#+1
   \   0000025E   0x2102             MOVS     R1,#+2
   \   00000260   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000262   0x.... 0x....      BL       gpio_init
    223                 gpio_init (keyport,(pin_begin+3),1,0);
   \   00000266   0x2300             MOVS     R3,#+0
   \   00000268   0x2201             MOVS     R2,#+1
   \   0000026A   0x2103             MOVS     R1,#+3
   \   0000026C   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000026E   0x.... 0x....      BL       gpio_init
    224                  
    225          	temp=(gpio_read(keyport,(pin_begin+4))<<4)+(gpio_read(keyport,(pin_begin+5))<<5)+(gpio_read(keyport,(pin_begin+6))<<6)+(gpio_read(keyport,(pin_begin+7))<<7);
   \   00000272   0x2104             MOVS     R1,#+4
   \   00000274   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000276   0x.... 0x....      BL       gpio_read
   \   0000027A   0x0005             MOVS     R5,R0
   \   0000027C   0x2105             MOVS     R1,#+5
   \   0000027E   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   00000280   0x.... 0x....      BL       gpio_read
   \   00000284   0x0006             MOVS     R6,R0
   \   00000286   0x2106             MOVS     R1,#+6
   \   00000288   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000028A   0x.... 0x....      BL       gpio_read
   \   0000028E   0x0171             LSLS     R1,R6,#+5
   \   00000290   0xEB11 0x1105      ADDS     R1,R1,R5, LSL #+4
   \   00000294   0xEB11 0x1580      ADDS     R5,R1,R0, LSL #+6
   \   00000298   0x2107             MOVS     R1,#+7
   \   0000029A   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   0000029C   0x.... 0x....      BL       gpio_read
   \   000002A0   0xEB15 0x15C0      ADDS     R5,R5,R0, LSL #+7
    226                  
    227          	if(temp!=0x70)
   \   000002A4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002A6   0x2D70             CMP      R5,#+112
   \   000002A8   0xD02A             BEQ.N    ??keyboard_scan_12
    228          	{
    229          	    delay_ms(10);
   \   000002AA   0x200A             MOVS     R0,#+10
   \   000002AC   0x.... 0x....      BL       delay_ms
    230                          
    231          	    temp=(gpio_read(keyport,(pin_begin+4))<<4)+(gpio_read(keyport,(pin_begin+5))<<5)+(gpio_read(keyport,(pin_begin+6))<<6)+(gpio_read(keyport,(pin_begin+7))<<7);
   \   000002B0   0x2104             MOVS     R1,#+4
   \   000002B2   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000002B4   0x.... 0x....      BL       gpio_read
   \   000002B8   0x0005             MOVS     R5,R0
   \   000002BA   0x2105             MOVS     R1,#+5
   \   000002BC   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000002BE   0x.... 0x....      BL       gpio_read
   \   000002C2   0x0006             MOVS     R6,R0
   \   000002C4   0x2106             MOVS     R1,#+6
   \   000002C6   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000002C8   0x.... 0x....      BL       gpio_read
   \   000002CC   0x0171             LSLS     R1,R6,#+5
   \   000002CE   0xEB11 0x1105      ADDS     R1,R1,R5, LSL #+4
   \   000002D2   0xEB11 0x1580      ADDS     R5,R1,R0, LSL #+6
   \   000002D6   0x2107             MOVS     R1,#+7
   \   000002D8   0x....             LDR.N    R0,??DataTable2_10  ;; 0x400ff0c0
   \   000002DA   0x.... 0x....      BL       gpio_read
   \   000002DE   0xEB15 0x15C0      ADDS     R5,R5,R0, LSL #+7
    232                          
    233          	    if(temp!=0x70)
   \   000002E2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002E4   0x2D70             CMP      R5,#+112
   \   000002E6   0xD00B             BEQ.N    ??keyboard_scan_12
    234          		 {
    235                               switch(temp)
   \   000002E8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002EA   0x2D30             CMP      R5,#+48
   \   000002EC   0xD007             BEQ.N    ??keyboard_scan_13
   \   000002EE   0x2D50             CMP      R5,#+80
   \   000002F0   0xD003             BEQ.N    ??keyboard_scan_14
   \   000002F2   0x2D60             CMP      R5,#+96
   \   000002F4   0xD104             BNE.N    ??keyboard_scan_12
    236                               {
    237          		     case 0x60:
    238                                         key_num=1;                           //1号键被按下
   \                     ??keyboard_scan_15:
   \   000002F6   0x2401             MOVS     R4,#+1
    239                                         //LCD_P8x16_number(10,6,0);
    240          	                       //LCD_P8x16_num3wei(0,0,0);  ;					
    241          		               break;
   \   000002F8   0xE002             B.N      ??keyboard_scan_12
    242          		     case 0x50:
    243                                         key_num=2;                           //2号键被按下
   \                     ??keyboard_scan_14:
   \   000002FA   0x2402             MOVS     R4,#+2
    244                                         //LCD_P8x16_number(10,6,1);
    245          			       //LCD_P8x16_num3wei(0,0,1); ;
    246          	        	       break;
   \   000002FC   0xE000             B.N      ??keyboard_scan_12
    247          		     case  0x30:
    248                                          key_num=3;                           //3号键被按下
   \                     ??keyboard_scan_13:
   \   000002FE   0x2403             MOVS     R4,#+3
    249                                          //LCD_P8x16_number(10,6,2);
    250          		                //LCD_P8x16_num3wei(0,0,2); ;
    251          		       	        break;
    252                                          /*
    253          		     case  0x70:
    254                                          key_num=3;                            //16号键被按下
    255                                          //LCD_P8x16_number(10,6,3);
    256          			        //LCD_P8x16_num3wei(0,0,3); ;
    257          	       		        break;
    258                                          */
    259                               }
    260          		  }			 	   
    261          	} 
    262                  return(key_num);     
   \                     ??keyboard_scan_12:
   \   00000300   0x0020             MOVS     R0,R4
   \   00000302   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000304   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    263          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x4004C000         DC32     0x4004c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x000A0103         DC32     0xa0103

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x4004C004         DC32     0x4004c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x4004C008         DC32     0x4004c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x4004C00C         DC32     0x4004c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x4004C010         DC32     0x4004c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x4004C014         DC32     0x4004c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x4004C018         DC32     0x4004c018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x4004C01C         DC32     0x4004c01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  button_init
       24  keyboard_scan
             24 -> delay_ms
             24 -> gpio_init
             24 -> gpio_read
        8  matrix_keyboard_init
              8 -> gpio_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
      98  button_init
     774  keyboard_scan
     128  matrix_keyboard_init

 
 1 044 bytes in section .text
 
 1 044 bytes of CODE memory

Errors: none
Warnings: none
