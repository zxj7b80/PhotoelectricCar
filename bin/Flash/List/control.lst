###############################################################################
#                                                                             #
#                                                       21/Jan/2015  15:24:30 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐò #
#                    21.22.23\2014.08.22\src\Sources\C\Component_C\control.c  #
#    Command line =  "E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐ #
#                    ò21.22.23\2014.08.22\src\Sources\C\Component_C\control.c #
#                    " -D IAR -D TWR_K60N512 -lCN                             #
#                    "E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐ #
#                    ò21.22.23\2014.08.22\bin\Flash\List\" -lB                #
#                    "E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐ #
#                    ò21.22.23\2014.08.22\bin\Flash\List\" -o                 #
#                    "E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐ #
#                    ò21.22.23\2014.08.22\bin\Flash\Obj\" --no_cse            #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config              #
#                    "D:\MyProgramFiles\iar for arm                           #
#                    v6.3\arm\INC\c\DLib_Config_Normal.h" -I                  #
#                    "E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐ #
#                    ò21.22.23\2014.08.22\src\Sources\H\" -I                  #
#                    "E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐ #
#                    ò21.22.23\2014.08.22\src\Sources\H\Component_H\" -I      #
#                    "E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐ #
#                    ò21.22.23\2014.08.22\src\Sources\H\Frame_H\" -Ol         #
#                    --use_c++_inline                                         #
#    List file    =  E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐò #
#                    21.22.23\2014.08.22\bin\Flash\List\control.lst           #
#    Object file  =  E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐò #
#                    21.22.23\2014.08.22\bin\Flash\Obj\control.o              #
#                                                                             #
#                                                                             #
###############################################################################

E:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\×Ü¾öÈü±ÈÈü³ÌÐò21.22.23\2014.08.22\src\Sources\C\Component_C\control.c
      1          #include "includes.h"
      2          
      3          //-----------
      4          #define SI_SetVal()                         gpio_init (PORTE , 0, 1, 1)
      5          #define SI_ClrVal()                         gpio_init (PORTE , 0, 1, 0)
      6          #define CLK_SetVal()                        gpio_init (PORTE , 1, 1, 1)
      7          #define CLK_ClrVal()                        gpio_init (PORTE , 1, 1, 0)
      8          #define SI_SetVal_1()                       gpio_init (PORTA , 12, 1, 1)
      9          #define SI_ClrVal_1()                       gpio_init (PORTA , 12, 1, 0)
     10          #define CLK_SetVal_1()                      gpio_init (PORTA , 13, 1, 1)
     11          #define CLK_ClrVal_1()                      gpio_init (PORTA , 13, 1, 0)
     12          #define DIR_DEFAULT_MIN                     50
     13          #define DIRECTION_CONTROL_PERIOD            20
     14          #define DIR_CONTROL_P                       0.017
     15          #define DIR_CONTROL_D                       0.0007
     16          #define GATE                                45
     17          #define DIRECTION_CONTROL_DEADVALUE         0
     18          #define DIRECTION_CONTROL_OUT_MAX	    MOTOR_OUT_MAX
     19          #define DIRECTION_CONTROL_OUT_MIN	    MOTOR_OUT_MIN
     20          
     21          //------------
     22          #define MOTOR_OUT_DEAD_VAL                  0
     23          #define MOTOR_SPEED_POSITIVE	            (g_fMotorOut > 0)
     24          #define MOTOR_OUT_MAX                       1.0
     25          #define MOTOR_OUT_MIN                      -1.0
     26          //------------------------------------------------------------------------------

   \                                 In section .bss, align 4
     27          int16   g_nInputVoltage[5]={0};
   \                     g_nInputVoltage:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     28          int32	g_lnInputVoltageSigma[5]={0};    	
   \                     g_lnInputVoltageSigma:
   \   00000000                      DS8 20
     29          #define VOLTAGE_GRAVITY                     g_nInputVoltage[0]
     30          #define VOLTAGE_GYRO                        g_nInputVoltage[1]
     31          #define VOLTAGE_LEFT                        g_nInputVoltage[2]
     32          #define VOLTAGE_RIGHT                       g_nInputVoltage[3]		
     33          #define DIR_CONTROL_D_VALUE                 g_nInputVoltage[4]
     34          #define key_1                               (((GPIO_PDIR_REG(PTA_BASE_PTR))>>(19))&1)
     35          //------------------------------------------------------------------------------
     36          
     37          //-----------

   \                                 In section .bss, align 4
     38          float g_fCarSpeed=0;
   \                     g_fCarSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     39          float g_fCarSpeedstart=0;
   \                     g_fCarSpeedstart:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     40          int16 g_nMotorPulse=0;
   \                     g_nMotorPulse:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     41          int16 g_nRightMotorPulse=0;
   \                     g_nRightMotorPulse:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     42          float g_fSpeedControlIntegral=0;
   \                     g_fSpeedControlIntegral:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     43          float g_fSpeedControlOutOld =0;
   \                     g_fSpeedControlOutOld:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     44          float g_fSpeedControlOutNew =0;
   \                     g_fSpeedControlOutNew:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     45          float g_fSpeedControlOut =0;
   \                     g_fSpeedControlOut:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     46          uint8 g_nSpeedControlPeriod =0;
   \                     g_nSpeedControlPeriod:
   \   00000000                      DS8 1
     47          
     48          //-----------

   \                                 In section .bss, align 4
     49          float g_fDirectionControlOutOld=0;
   \                     g_fDirectionControlOutOld:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     50          float g_fDirectionControlOutNew =0;
   \                     g_fDirectionControlOutNew:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     51          float g_fDirectionControlOut=0;
   \                     g_fDirectionControlOut:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     52          int16 g_nDirectionControlPeriod=0;
   \                     g_nDirectionControlPeriod:
   \   00000000                      DS8 2
     53          
     54          

   \                                 In section .bss, align 2
     55          int16 front_l=0,front_r=127;
   \                     front_l:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     front_r:
   \   00000000   0x007F             DC16 127

   \                                 In section .bss, align 2
     56          int16 route_view;
   \                     route_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     57          int16 route_mid;
   \                     route_mid:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     58          int16 front_l_view,front_r_view;
   \                     front_l_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     59          int16 front_max=0;
   \                     front_max:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     60          int16 front_min=0;
   \                     front_min:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     61          int16 Aver_F=0;
   \                     Aver_F:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     62          int16 delta_l=0,delta_r=0;
   \                     delta_l:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     delta_r:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     63          int16 front_l_last=0,front_r_last=0;
   \                     front_l_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     64          int16 front_l_pre1=0,front_r_pre1=0,front_l_pre2=0,front_r_pre2=0,front_l_pre3=0,front_r_pre3=0,front_l_pre4=0,front_r_pre4=0;
   \                     front_l_pre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_pre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_l_pre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_pre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_l_pre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_pre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_l_pre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_pre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     65          int16 front_width=0;
   \                     front_width:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     66          int16 cl_f=0,cl_f_pre=0;
   \                     cl_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     cl_f_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     67          int16 Lfch=0,Rfch=0;
   \                     Lfch:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rfch:
   \   00000000                      DS8 2
     68          

   \                                 In section .bss, align 2
     69          int16 front_l_reference=0,front_r_reference=128;
   \                     front_l_reference:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     front_r_reference:
   \   00000000   0x0080             DC16 128

   \                                 In section .bss, align 2
     70          int16 front_OFFSET_KZ=0;
   \                     front_OFFSET_KZ:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     71          int16 front_reference;
   \                     front_reference:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     72          int16 front_OFFSET_KZ_pre=0,front_OFFSET=0,front_OFFSET_pre=0,front_OFFSET_pre1=0,front_OFFSET_pre2=0,front_OFFSET_pre3=0,front_OFFSET_pre4=0,front_OFFSET_pre5=0,front_OFFSET_pre6=0,front_OFFSET_pre7=0,front_OFFSET_pre8=0,front_OFFSET_pre9=0,front_OFFSET_pre10=0;//ÉÏÒ»´ÎÎ»ÖÃÆ«²î
   \                     front_OFFSET_KZ_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre9:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_OFFSET_pre10:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     73          int16 d_err1=0,d_err2=0,d_err3=0,d_err4=0,d_err5=0,d_err6=0,d_err7=0,d_err8=0,d_err9=0;
   \                     d_err1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     d_err9:
   \   00000000                      DS8 2
     74          
     75          

   \                                 In section .bss, align 2
     76          int16 zong_l=0,zong_r=127;
   \                     zong_l:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     zong_r:
   \   00000000   0x007F             DC16 127
     77          

   \                                 In section .bss, align 2
     78          int16 zong_l_view,zong_r_view;
   \                     zong_l_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_r_view:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     79          int16 zong_max=0;
   \                     zong_max:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     80          int16 zong_min=0;
   \                     zong_min:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     81          int16 Aver_Z=0;
   \                     Aver_Z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     82          int16 zong_l_last=0,zong_r_last=0;
   \                     zong_l_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_r_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     83          int16 zong_l_pre=0,zong_r_pre=0;
   \                     zong_l_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_r_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     84          int16 zong_width=0;
   \                     zong_width:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     85          int16 cl_z=0;
   \                     cl_z:
   \   00000000                      DS8 2
     86          

   \                                 In section .bss, align 2
     87          int16 zong_l_reference=0,zong_r_reference=128;
   \                     zong_l_reference:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     zong_r_reference:
   \   00000000   0x0080             DC16 128

   \                                 In section .bss, align 2
     88          int16 zong_OFFSET_KZ=0;
   \                     zong_OFFSET_KZ:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     89          int16 zong_reference;
   \                     zong_reference:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     90          int16 zong_OFFSET_KZ_pre=0,zong_OFFSET=0,zong_OFFSET_pre=0,zong_OFFSET_pre1=0,zong_OFFSET_pre2=0,zong_OFFSET_pre3=0,zong_OFFSET_pre4=0,zong_OFFSET_pre5=0,zong_OFFSET_pre6=0,zong_OFFSET_pre7=0,zong_OFFSET_pre8=0,zong_OFFSET_pre9=0,zong_OFFSET_pre10=0;//ÉÏÒ»´ÎÎ»ÖÃÆ«²î
   \                     zong_OFFSET_KZ_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre9:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_OFFSET_pre10:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     91          int16 z_err1=0,z_err2=0,z_err3=0,z_err4=0,z_err5=0,z_err6=0,z_err7=0,z_err8=0,z_err9=0;
   \                     z_err1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err7:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err8:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     z_err9:
   \   00000000                      DS8 2
     92          

   \                                 In section .data, align 2
     93          int16 servo_duty=4780;//¶æ»úÕ¼¿Õ±È
   \                     servo_duty:
   \   00000000   0x12AC             DC16 4780
     94          

   \                                 In section .bss, align 2
     95          int16 D_err=0;
   \                     D_err:
   \   00000000                      DS8 2
     96          
     97          //------------

   \                                 In section .bss, align 4
     98          float g_fMotorOut=0;
   \                     g_fMotorOut:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     99          int16 g_nMotorPulseSigma =0;
   \                     g_nMotorPulseSigma:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
    100          extern int16 OutData[4] = { 0 };//ÐéÄâÊ¾²¨Æ÷Êä³ö
   \                     OutData:
   \   00000000                      DS8 8
    101          extern uint8 a,b;
    102          extern int16 speedflag;
    103          //----------------------------------------------------------------------------------------------------

   \                                 In section .bss, align 2
    104          int16   gravity,voltage_gravity;
   \                     gravity:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     voltage_gravity:
   \   00000000                      DS8 2
    105          extern  int16   hongwai_l,hongwai_r;
    106          extern  int16   HONGWAI_L,HONGWAI_R;
    107          

   \                                 In section .text, align 2, keep-with-next
    108          void GetSamplezhi()
    109          {
   \                     GetSamplezhi:
   \   00000000   0xB580             PUSH     {R7,LR}
    110            g_lnInputVoltageSigma[0]+= hw_ad_ave(0,17,12,20);//×ó1   
   \   00000002   0x2314             MOVS     R3,#+20
   \   00000004   0x220C             MOVS     R2,#+12
   \   00000006   0x2111             MOVS     R1,#+17
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       hw_ad_ave
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000012   0x6809             LDR      R1,[R1, #+0]
   \   00000014   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    111            g_lnInputVoltageSigma[1]+= hw_ad_ave(1,7,12,20);//ÓÒ1
   \   0000001E   0x2314             MOVS     R3,#+20
   \   00000020   0x220C             MOVS     R2,#+12
   \   00000022   0x2107             MOVS     R1,#+7
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       hw_ad_ave
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000002E   0x6849             LDR      R1,[R1, #+4]
   \   00000030   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000038   0x6048             STR      R0,[R1, #+4]
    112            //g_lnInputVoltageSigma[2]+= hw_ad_ave(0,12,12,20);
    113          }
   \   0000003A   0xBD01             POP      {R0,PC}          ;; return
    114          

   \                                 In section .text, align 2, keep-with-next
    115          void GetOFFSET()
    116          {
    117            HONGWAI_L=g_lnInputVoltageSigma[0]/200;
   \                     GetOFFSET:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x21C8             MOVS     R1,#+200
   \   00000008   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000010   0x8008             STRH     R0,[R1, #+0]
    118            HONGWAI_R=g_lnInputVoltageSigma[1]/200;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000016   0x6840             LDR      R0,[R0, #+4]
   \   00000018   0x21C8             MOVS     R1,#+200
   \   0000001A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000022   0x8008             STRH     R0,[R1, #+0]
    119            //gyro_direction= g_lnInputVoltageSigma[2]/200;  
    120          }
   \   00000024   0x4770             BX       LR               ;; return
    121          

   \                                 In section .text, align 2, keep-with-next
    122          void get_ad()
    123          {
   \                     get_ad:
   \   00000000   0xB580             PUSH     {R7,LR}
    124            hongwai_l = hw_ad_ave(0,17,12,20);              
   \   00000002   0x2314             MOVS     R3,#+20
   \   00000004   0x220C             MOVS     R2,#+12
   \   00000006   0x2111             MOVS     R1,#+17
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       hw_ad_ave
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   00000012   0x8008             STRH     R0,[R1, #+0]
    125            hongwai_r = hw_ad_ave(1,7,12,20);                   
   \   00000014   0x2314             MOVS     R3,#+20
   \   00000016   0x220C             MOVS     R2,#+12
   \   00000018   0x2107             MOVS     R1,#+7
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x.... 0x....      BL       hw_ad_ave
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable11_4
   \   00000024   0x8008             STRH     R0,[R1, #+0]
    126            //DIR_CONTROL_D_VALUE = hw_ad_ave(0,12,12,20);            //---------µÃ×ªÏòÍÓÂÝÒÇµçÑ¹ÐÅºÅ(PTB2)
    127          }
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    128          
    129          //-------------------------------------·½Ïò¿ØÖÆ-------------------------------

   \                                 In section .text, align 2, keep-with-next
    130          void CCD_init(void)
    131          {
   \                     CCD_init:
   \   00000000   0xB580             PUSH     {R7,LR}
    132            gpio_init (PORTE , 0, 1, 1);
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000000C   0x.... 0x....      BL       gpio_init
    133            gpio_init (PORTE , 1, 1, 1);
   \   00000010   0x2301             MOVS     R3,#+1
   \   00000012   0x2201             MOVS     R2,#+1
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       gpio_init
    134            gpio_init (PORTA , 12, 1, 1);
   \   0000001E   0x2301             MOVS     R3,#+1
   \   00000020   0x2201             MOVS     R2,#+1
   \   00000022   0x210C             MOVS     R1,#+12
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000028   0x.... 0x....      BL       gpio_init
    135            gpio_init (PORTA , 13, 1, 1);
   \   0000002C   0x2301             MOVS     R3,#+1
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0x210D             MOVS     R1,#+13
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000036   0x.... 0x....      BL       gpio_init
    136            hw_adc_init(1);
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x.... 0x....      BL       hw_adc_init
    137          }
   \   00000040   0xBD01             POP      {R0,PC}          ;; return
    138          /*
    139          void button_init()
    140          {
    141             SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;    //´ò¿ªPORTD¶Ë¿ÚµÄÊ±ÖÓ
    142             PORTA_PCR19=(0|PORT_PCR_MUX(1));
    143             gpio_init (PORTA,19, 0,0);
    144          }
    145          */

   \                                 In section .text, align 2, keep-with-next
    146          void ADC0_stop(void)
    147          
    148          {
   \                     ADC0_stop:
   \   00000000   0xB580             PUSH     {R7,LR}
    149            hw_adc_convertstop(0,8);
   \   00000002   0x2108             MOVS     R1,#+8
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       hw_adc_convertstop
    150            hw_adc_convertstop(0,9);
   \   0000000A   0x2109             MOVS     R1,#+9
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       hw_adc_convertstop
    151            hw_adc_convertstop(0,12);
   \   00000012   0x210C             MOVS     R1,#+12
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       hw_adc_convertstop
    152          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    153          

   \                                 In section .text, align 2, keep-with-next
    154          void ADC0_start(void)
    155          {
   \                     ADC0_start:
   \   00000000   0xB580             PUSH     {R7,LR}
    156            hw_adc_convertstart(0,8,12);
   \   00000002   0x220C             MOVS     R2,#+12
   \   00000004   0x2108             MOVS     R1,#+8
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       hw_adc_convertstart
    157            hw_adc_convertstart(0,9,12);
   \   0000000C   0x220C             MOVS     R2,#+12
   \   0000000E   0x2109             MOVS     R1,#+9
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       hw_adc_convertstart
    158            hw_adc_convertstart(0,12,12);
   \   00000016   0x220C             MOVS     R2,#+12
   \   00000018   0x210C             MOVS     R1,#+12
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       hw_adc_convertstart
    159          }
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    160          
    161          

   \                                 In section .text, align 2, keep-with-next
    162          void StartIntegrationFront(void)
    163          {
   \                     StartIntegrationFront:
   \   00000000   0xB510             PUSH     {R4,LR}
    164            unsigned char i;
    165          
    166            SI_SetVal();            /* SI  = 1 */
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000000C   0x.... 0x....      BL       gpio_init
    167            SamplingDelay();
   \   00000010   0x.... 0x....      BL       SamplingDelay
    168            CLK_SetVal();           /* CLK = 1 */
   \   00000014   0x2301             MOVS     R3,#+1
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000001E   0x.... 0x....      BL       gpio_init
    169            SamplingDelay();
   \   00000022   0x.... 0x....      BL       SamplingDelay
    170            SI_ClrVal();            /* SI  = 0 */
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000030   0x.... 0x....      BL       gpio_init
    171            SamplingDelay();
   \   00000034   0x.... 0x....      BL       SamplingDelay
    172            CLK_ClrVal();           /* CLK = 0 */
   \   00000038   0x2300             MOVS     R3,#+0
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0x2101             MOVS     R1,#+1
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       gpio_init
    173          
    174            for(i=0; i<127; i++)
   \   00000046   0x2400             MOVS     R4,#+0
   \   00000048   0xE016             B.N      ??StartIntegrationFront_0
    175            {
    176                SamplingDelay();
   \                     ??StartIntegrationFront_1:
   \   0000004A   0x.... 0x....      BL       SamplingDelay
    177                SamplingDelay();
   \   0000004E   0x.... 0x....      BL       SamplingDelay
    178                CLK_SetVal();       /* CLK = 1 */
   \   00000052   0x2301             MOVS     R3,#+1
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0x2101             MOVS     R1,#+1
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000005C   0x.... 0x....      BL       gpio_init
    179                SamplingDelay();
   \   00000060   0x.... 0x....      BL       SamplingDelay
    180                SamplingDelay();
   \   00000064   0x.... 0x....      BL       SamplingDelay
    181                CLK_ClrVal();       /* CLK = 0 */
   \   00000068   0x2300             MOVS     R3,#+0
   \   0000006A   0x2201             MOVS     R2,#+1
   \   0000006C   0x2101             MOVS     R1,#+1
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000072   0x.... 0x....      BL       gpio_init
    182            }
   \   00000076   0x1C64             ADDS     R4,R4,#+1
   \                     ??StartIntegrationFront_0:
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0x2C7F             CMP      R4,#+127
   \   0000007C   0xD3E5             BCC.N    ??StartIntegrationFront_1
    183            SamplingDelay();
   \   0000007E   0x.... 0x....      BL       SamplingDelay
    184            SamplingDelay();
   \   00000082   0x.... 0x....      BL       SamplingDelay
    185            CLK_SetVal();           /* CLK = 1 */
   \   00000086   0x2301             MOVS     R3,#+1
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x2101             MOVS     R1,#+1
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000090   0x.... 0x....      BL       gpio_init
    186            SamplingDelay();
   \   00000094   0x.... 0x....      BL       SamplingDelay
    187            SamplingDelay();
   \   00000098   0x.... 0x....      BL       SamplingDelay
    188            CLK_ClrVal();           /* CLK = 0 */
   \   0000009C   0x2300             MOVS     R3,#+0
   \   0000009E   0x2201             MOVS     R2,#+1
   \   000000A0   0x2101             MOVS     R1,#+1
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   000000A6   0x.... 0x....      BL       gpio_init
    189          }
   \   000000AA   0xBD10             POP      {R4,PC}          ;; return
    190          

   \                                 In section .text, align 2, keep-with-next
    191          void StartIntegrationZong(void)
    192          {
   \                     StartIntegrationZong:
   \   00000000   0xB510             PUSH     {R4,LR}
    193            unsigned char i;
    194          
    195            //SI_SetVal();            /* SI  = 1 */
    196            SI_SetVal_1();
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210C             MOVS     R1,#+12
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000000C   0x.... 0x....      BL       gpio_init
    197            SamplingDelay();
   \   00000010   0x.... 0x....      BL       SamplingDelay
    198            //CLK_SetVal();           /* CLK = 1 */
    199            CLK_SetVal_1();
   \   00000014   0x2301             MOVS     R3,#+1
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x210D             MOVS     R1,#+13
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000001E   0x.... 0x....      BL       gpio_init
    200            SamplingDelay();
   \   00000022   0x.... 0x....      BL       SamplingDelay
    201            //SI_ClrVal();            /* SI  = 0 */
    202            SI_ClrVal_1();
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x210C             MOVS     R1,#+12
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000030   0x.... 0x....      BL       gpio_init
    203            SamplingDelay();
   \   00000034   0x.... 0x....      BL       SamplingDelay
    204            //CLK_ClrVal();           /* CLK = 0 */
    205            CLK_ClrVal_1();
   \   00000038   0x2300             MOVS     R3,#+0
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0x210D             MOVS     R1,#+13
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000042   0x.... 0x....      BL       gpio_init
    206          
    207            for(i=0; i<127; i++)
   \   00000046   0x2400             MOVS     R4,#+0
   \   00000048   0xE016             B.N      ??StartIntegrationZong_0
    208            {
    209                SamplingDelay();
   \                     ??StartIntegrationZong_1:
   \   0000004A   0x.... 0x....      BL       SamplingDelay
    210                SamplingDelay();
   \   0000004E   0x.... 0x....      BL       SamplingDelay
    211                //CLK_SetVal();       /* CLK = 1 */
    212                CLK_SetVal_1();
   \   00000052   0x2301             MOVS     R3,#+1
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0x210D             MOVS     R1,#+13
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000005C   0x.... 0x....      BL       gpio_init
    213                SamplingDelay();
   \   00000060   0x.... 0x....      BL       SamplingDelay
    214                SamplingDelay();
   \   00000064   0x.... 0x....      BL       SamplingDelay
    215                //CLK_ClrVal();       /* CLK = 0 */
    216                CLK_ClrVal_1();
   \   00000068   0x2300             MOVS     R3,#+0
   \   0000006A   0x2201             MOVS     R2,#+1
   \   0000006C   0x210D             MOVS     R1,#+13
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000072   0x.... 0x....      BL       gpio_init
    217            }
   \   00000076   0x1C64             ADDS     R4,R4,#+1
   \                     ??StartIntegrationZong_0:
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0x2C7F             CMP      R4,#+127
   \   0000007C   0xD3E5             BCC.N    ??StartIntegrationZong_1
    218            SamplingDelay();
   \   0000007E   0x.... 0x....      BL       SamplingDelay
    219            SamplingDelay();
   \   00000082   0x.... 0x....      BL       SamplingDelay
    220            //CLK_SetVal();           /* CLK = 1 */
    221            CLK_SetVal_1();
   \   00000086   0x2301             MOVS     R3,#+1
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x210D             MOVS     R1,#+13
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000090   0x.... 0x....      BL       gpio_init
    222            SamplingDelay();
   \   00000094   0x.... 0x....      BL       SamplingDelay
    223            SamplingDelay();
   \   00000098   0x.... 0x....      BL       SamplingDelay
    224            //CLK_ClrVal();           /* CLK = 0 */
    225            CLK_ClrVal_1();
   \   0000009C   0x2300             MOVS     R3,#+0
   \   0000009E   0x2201             MOVS     R2,#+1
   \   000000A0   0x210D             MOVS     R1,#+13
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   000000A6   0x.... 0x....      BL       gpio_init
    226          }
   \   000000AA   0xBD10             POP      {R4,PC}          ;; return
    227          
    228          
    229          

   \                                 In section .text, align 2, keep-with-next
    230          void ImageCapture_F(uint8 * ImageData_F)
    231          {
   \                     ImageCapture_F:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    232              unsigned char i;
    233              extern uint8 AtemP;
    234          
    235              SI_SetVal();            
   \   00000004   0x2301             MOVS     R3,#+1
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       gpio_init
    236              SamplingDelay();
   \   00000012   0x.... 0x....      BL       SamplingDelay
    237              CLK_SetVal();          
   \   00000016   0x2301             MOVS     R3,#+1
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000020   0x.... 0x....      BL       gpio_init
    238              SamplingDelay();
   \   00000024   0x.... 0x....      BL       SamplingDelay
    239              SI_ClrVal();           
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x2201             MOVS     R2,#+1
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000032   0x.... 0x....      BL       gpio_init
    240              SamplingDelay();
   \   00000036   0x.... 0x....      BL       SamplingDelay
    241              
    242              //Delay 10us for sample the first pixel
    243              for(i = 0; i < 150; i++)//ÓÉ10us¸ÄÎª10*8/5us
   \   0000003A   0x2500             MOVS     R5,#+0
   \   0000003C   0xE002             B.N      ??ImageCapture_F_0
    244              {
    245                SamplingDelay();  //200ns
   \                     ??ImageCapture_F_1:
   \   0000003E   0x.... 0x....      BL       SamplingDelay
    246              }
   \   00000042   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ImageCapture_F_0:
   \   00000044   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000046   0x2D96             CMP      R5,#+150
   \   00000048   0xD3F9             BCC.N    ??ImageCapture_F_1
    247              //Sampling Pixel_F 1
    248              *ImageData_F =  hw_ad_once(1, 6, 8);
   \   0000004A   0x2208             MOVS     R2,#+8
   \   0000004C   0x2106             MOVS     R1,#+6
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       hw_ad_once
   \   00000054   0x7020             STRB     R0,[R4, #+0]
    249              ImageData_F ++ ;
   \   00000056   0x1C64             ADDS     R4,R4,#+1
    250              CLK_ClrVal();          
   \   00000058   0x2300             MOVS     R3,#+0
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   00000062   0x.... 0x....      BL       gpio_init
    251              
    252              for(i=0; i<127; i++)
   \   00000066   0x2500             MOVS     R5,#+0
   \   00000068   0xE01D             B.N      ??ImageCapture_F_2
    253              {
    254                  SamplingDelay();
   \                     ??ImageCapture_F_3:
   \   0000006A   0x.... 0x....      BL       SamplingDelay
    255                  SamplingDelay();
   \   0000006E   0x.... 0x....      BL       SamplingDelay
    256                  CLK_SetVal();       
   \   00000072   0x2301             MOVS     R3,#+1
   \   00000074   0x2201             MOVS     R2,#+1
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   0000007C   0x.... 0x....      BL       gpio_init
    257                  SamplingDelay();
   \   00000080   0x.... 0x....      BL       SamplingDelay
    258                  SamplingDelay();
   \   00000084   0x.... 0x....      BL       SamplingDelay
    259          
    260                  //Sampling Pixel_F 2~128
    261                  *ImageData_F = hw_ad_once(1, 6, 8);
   \   00000088   0x2208             MOVS     R2,#+8
   \   0000008A   0x2106             MOVS     R1,#+6
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       hw_ad_once
   \   00000092   0x7020             STRB     R0,[R4, #+0]
    262                  ImageData_F ++;
   \   00000094   0x1C64             ADDS     R4,R4,#+1
    263                  CLK_ClrVal();      
   \   00000096   0x2300             MOVS     R3,#+0
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x2101             MOVS     R1,#+1
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   000000A0   0x.... 0x....      BL       gpio_init
    264              }
   \   000000A4   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ImageCapture_F_2:
   \   000000A6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A8   0x2D7F             CMP      R5,#+127
   \   000000AA   0xD3DE             BCC.N    ??ImageCapture_F_3
    265              SamplingDelay();
   \   000000AC   0x.... 0x....      BL       SamplingDelay
    266              SamplingDelay();
   \   000000B0   0x.... 0x....      BL       SamplingDelay
    267              CLK_SetVal();          
   \   000000B4   0x2301             MOVS     R3,#+1
   \   000000B6   0x2201             MOVS     R2,#+1
   \   000000B8   0x2101             MOVS     R1,#+1
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   000000BE   0x.... 0x....      BL       gpio_init
    268              SamplingDelay();
   \   000000C2   0x.... 0x....      BL       SamplingDelay
    269              SamplingDelay();
   \   000000C6   0x.... 0x....      BL       SamplingDelay
    270              CLK_ClrVal();          
   \   000000CA   0x2300             MOVS     R3,#+0
   \   000000CC   0x2201             MOVS     R2,#+1
   \   000000CE   0x2101             MOVS     R1,#+1
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x400ff100
   \   000000D4   0x.... 0x....      BL       gpio_init
    271          }
   \   000000D8   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    272          

   \                                 In section .text, align 2, keep-with-next
    273          void ImageCapture_Z(uint8 * ImageData_Z)
    274          {
   \                     ImageCapture_Z:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    275              unsigned char i;
    276              extern uint8 AtemP;
    277          
    278              SI_SetVal_1();
   \   00000004   0x2301             MOVS     R3,#+1
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x210C             MOVS     R1,#+12
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000000E   0x.... 0x....      BL       gpio_init
    279              SamplingDelay();
   \   00000012   0x.... 0x....      BL       SamplingDelay
    280              CLK_SetVal_1();
   \   00000016   0x2301             MOVS     R3,#+1
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x210D             MOVS     R1,#+13
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000020   0x.... 0x....      BL       gpio_init
    281              SamplingDelay();
   \   00000024   0x.... 0x....      BL       SamplingDelay
    282              SI_ClrVal_1();
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x2201             MOVS     R2,#+1
   \   0000002C   0x210C             MOVS     R1,#+12
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000032   0x.... 0x....      BL       gpio_init
    283              SamplingDelay();
   \   00000036   0x.... 0x....      BL       SamplingDelay
    284              //Delay 10us for sample the first pixel
    285              for(i = 0; i < 80; i++)//ÓÉ10us¸ÄÎª10*10/5us
   \   0000003A   0x2500             MOVS     R5,#+0
   \   0000003C   0xE002             B.N      ??ImageCapture_Z_0
    286              {
    287                SamplingDelay();  //200ns
   \                     ??ImageCapture_Z_1:
   \   0000003E   0x.... 0x....      BL       SamplingDelay
    288              }
   \   00000042   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ImageCapture_Z_0:
   \   00000044   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000046   0x2D50             CMP      R5,#+80
   \   00000048   0xD3F9             BCC.N    ??ImageCapture_Z_1
    289              //Sampling Pixel_Z 1
    290              *ImageData_Z= hw_ad_once(1, 14, 8);
   \   0000004A   0x2208             MOVS     R2,#+8
   \   0000004C   0x210E             MOVS     R1,#+14
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       hw_ad_once
   \   00000054   0x7020             STRB     R0,[R4, #+0]
    291              ImageData_Z ++;
   \   00000056   0x1C64             ADDS     R4,R4,#+1
    292              CLK_ClrVal_1();
   \   00000058   0x2300             MOVS     R3,#+0
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x210D             MOVS     R1,#+13
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   00000062   0x.... 0x....      BL       gpio_init
    293          
    294              for(i=0; i<127; i++)
   \   00000066   0x2500             MOVS     R5,#+0
   \   00000068   0xE01D             B.N      ??ImageCapture_Z_2
    295              {
    296                  SamplingDelay();
   \                     ??ImageCapture_Z_3:
   \   0000006A   0x.... 0x....      BL       SamplingDelay
    297                  SamplingDelay();
   \   0000006E   0x.... 0x....      BL       SamplingDelay
    298                  CLK_SetVal_1();
   \   00000072   0x2301             MOVS     R3,#+1
   \   00000074   0x2201             MOVS     R2,#+1
   \   00000076   0x210D             MOVS     R1,#+13
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   0000007C   0x.... 0x....      BL       gpio_init
    299                  SamplingDelay();
   \   00000080   0x.... 0x....      BL       SamplingDelay
    300                  SamplingDelay();
   \   00000084   0x.... 0x....      BL       SamplingDelay
    301                  
    302                  //Sampling Pixel_F 2~128
    303                  *ImageData_Z= hw_ad_once(1, 14, 8);
   \   00000088   0x2208             MOVS     R2,#+8
   \   0000008A   0x210E             MOVS     R1,#+14
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       hw_ad_once
   \   00000092   0x7020             STRB     R0,[R4, #+0]
    304                  ImageData_Z++;
   \   00000094   0x1C64             ADDS     R4,R4,#+1
    305                  CLK_ClrVal_1();
   \   00000096   0x2300             MOVS     R3,#+0
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x210D             MOVS     R1,#+13
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   000000A0   0x.... 0x....      BL       gpio_init
    306              }
   \   000000A4   0x1C6D             ADDS     R5,R5,#+1
   \                     ??ImageCapture_Z_2:
   \   000000A6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A8   0x2D7F             CMP      R5,#+127
   \   000000AA   0xD3DE             BCC.N    ??ImageCapture_Z_3
    307              SamplingDelay();
   \   000000AC   0x.... 0x....      BL       SamplingDelay
    308              SamplingDelay();
   \   000000B0   0x.... 0x....      BL       SamplingDelay
    309              CLK_SetVal_1();
   \   000000B4   0x2301             MOVS     R3,#+1
   \   000000B6   0x2201             MOVS     R2,#+1
   \   000000B8   0x210D             MOVS     R1,#+13
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   000000BE   0x.... 0x....      BL       gpio_init
    310              SamplingDelay();
   \   000000C2   0x.... 0x....      BL       SamplingDelay
    311              SamplingDelay();
   \   000000C6   0x.... 0x....      BL       SamplingDelay
    312              CLK_ClrVal_1();
   \   000000CA   0x2300             MOVS     R3,#+0
   \   000000CC   0x2201             MOVS     R2,#+1
   \   000000CE   0x210D             MOVS     R1,#+13
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff000
   \   000000D4   0x.... 0x....      BL       gpio_init
    313          }
   \   000000D8   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    314          

   \                                 In section .data, align 2
    315          int16  TargetPixelAverageVoltage = 30;                          //Éè¶¨Ä¿±êÆ½¾ùµçÑ¹Öµ£¬Êµ¼ÊµçÑ¹µÄ10±¶ 
   \                     TargetPixelAverageVoltage:
   \   00000000   0x001E             DC16 30

   \                                 In section .bss, align 2
    316          int16  PixelAverageVoltageError = 0;                            //Éè¶¨Ä¿±êÆ½¾ùµçÑ¹ÖµÓëÊµ¼ÊÖµµÄÆ«²î£¬Êµ¼ÊµçÑ¹µÄ10±¶ 
   \                     PixelAverageVoltageError:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
    317          int16  TargetPixelAverageVoltageAllowError = 2;                 //Éè¶¨Ä¿±êÆ½¾ùµçÑ¹ÖµÔÊÐíµÄÆ«²î£¬Êµ¼ÊµçÑ¹µÄ10±¶ 
   \                     TargetPixelAverageVoltageAllowError:
   \   00000000   0x0002             DC16 2
    318          
    319          extern uint8 Pixel_F[128];

   \                                 In section .bss, align 1
    320          uint8        PixelAverageValue_Front=0;                                       //128¸öÏñËØµãµÄÆ½¾ùADÖµ 
   \                     PixelAverageValue_Front:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    321          uint8        PixelAverageVoltage_Front=0;                                     //128¸öÏñËØµãµÄÆ½¾ùµçÑ¹ÖµµÄ10±¶ 
   \                     PixelAverageVoltage_Front:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    322          uint8        IntegrationTime_Front=10;                                        //ÆØ¹âÊ±¼ä£¬µ¥Î»ms 
   \                     IntegrationTime_Front:
   \   00000000   0x0A               DC8 10

   \                                 In section .text, align 2, keep-with-next
    323          void CalculateIntegrationTimeFront(void)
    324          {
   \                     CalculateIntegrationTimeFront:
   \   00000000   0xB580             PUSH     {R7,LR}
    325              PixelAverageValue_Front = PixelAverage(128,Pixel_F);/* ¼ÆËã128¸öÏñËØµãµÄÆ½¾ùADÖµ */
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000006   0x2080             MOVS     R0,#+128
   \   00000008   0x.... 0x....      BL       PixelAverage
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_8
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    326              PixelAverageVoltage_Front = (uint8)((int)(PixelAverageValue_Front * 25 / 128));/* ¼ÆËã128¸öÏñËØµãµÄÆ½¾ùµçÑ¹Öµ,Êµ¼ÊÖµµÄ10±¶ */
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2119             MOVS     R1,#+25
   \   0000001A   0x4348             MULS     R0,R1,R0
   \   0000001C   0x2180             MOVS     R1,#+128
   \   0000001E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000026   0x7008             STRB     R0,[R1, #+0]
    327              PixelAverageVoltageError = TargetPixelAverageVoltage - PixelAverageVoltage_Front;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_10
   \   0000002C   0x8800             LDRH     R0,[R0, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000032   0x7809             LDRB     R1,[R1, #+0]
   \   00000034   0x1A40             SUBS     R0,R0,R1
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000003A   0x8008             STRH     R0,[R1, #+0]
    328              if(PixelAverageVoltageError < -TargetPixelAverageVoltageAllowError)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000040   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000048   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000004C   0x42C8             CMN      R0,R1
   \   0000004E   0xDA06             BGE.N    ??CalculateIntegrationTimeFront_0
    329                IntegrationTime_Front--;//¶àÓÚÄ¿±êÖµ£¬ÆØ¹âÊ±¼ä´óÁË
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
    330              if(PixelAverageVoltageError > TargetPixelAverageVoltageAllowError)
   \                     ??CalculateIntegrationTimeFront_0:
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   00000062   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000006A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000006E   0x4288             CMP      R0,R1
   \   00000070   0xDA06             BGE.N    ??CalculateIntegrationTimeFront_1
    331                IntegrationTime_Front++;//ÉÙÓÚÄ¿±êÖµ£¬ÆØ¹âÊ±¼äÐ¡ÁË
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0x1C40             ADDS     R0,R0,#+1
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   0000007E   0x7008             STRB     R0,[R1, #+0]
    332              if(IntegrationTime_Front <= 1)
   \                     ??CalculateIntegrationTimeFront_1:
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x2802             CMP      R0,#+2
   \   00000088   0xD203             BCS.N    ??CalculateIntegrationTimeFront_2
    333                IntegrationTime_Front = 1;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   0000008E   0x2101             MOVS     R1,#+1
   \   00000090   0x7001             STRB     R1,[R0, #+0]
    334              if(IntegrationTime_Front >= 20)
   \                     ??CalculateIntegrationTimeFront_2:
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000096   0x7800             LDRB     R0,[R0, #+0]
   \   00000098   0x2814             CMP      R0,#+20
   \   0000009A   0xD303             BCC.N    ??CalculateIntegrationTimeFront_3
    335                IntegrationTime_Front = 20;
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   000000A0   0x2114             MOVS     R1,#+20
   \   000000A2   0x7001             STRB     R1,[R0, #+0]
    336          }
   \                     ??CalculateIntegrationTimeFront_3:
   \   000000A4   0xBD01             POP      {R0,PC}          ;; return
    337          
    338          extern uint8 Pixel_Z[128];

   \                                 In section .bss, align 1
    339          uint8        PixelAverageValue_Zong=0;
   \                     PixelAverageValue_Zong:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    340          uint8        PixelAverageVoltage_Zong=0;
   \                     PixelAverageVoltage_Zong:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    341          uint8        IntegrationTime_Zong = 2;                              // ÆØ¹âÊ±¼ä£¬µ¥Î»ms
   \                     IntegrationTime_Zong:
   \   00000000   0x02               DC8 2

   \                                 In section .text, align 2, keep-with-next
    342          void CalculateIntegrationTimeZong(void)
    343          {
   \                     CalculateIntegrationTimeZong:
   \   00000000   0xB580             PUSH     {R7,LR}
    344              PixelAverageValue_Zong = PixelAverage(128,Pixel_Z);/* ¼ÆËã128¸öÏñËØµãµÄÆ½¾ùADÖµ */
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable11_14
   \   00000006   0x2080             MOVS     R0,#+128
   \   00000008   0x.... 0x....      BL       PixelAverage
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_15
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    345              PixelAverageVoltage_Zong = (uint8)((int)(PixelAverageValue_Zong * 25 / 128));/* ¼ÆËã128¸öÏñËØµãµÄÆ½¾ùµçÑ¹Öµ,Êµ¼ÊÖµµÄ10±¶ */
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_15
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2119             MOVS     R1,#+25
   \   0000001A   0x4348             MULS     R0,R1,R0
   \   0000001C   0x2180             MOVS     R1,#+128
   \   0000001E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable11_16
   \   00000026   0x7008             STRB     R0,[R1, #+0]
    346              PixelAverageVoltageError = TargetPixelAverageVoltage - PixelAverageVoltage_Zong;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_10
   \   0000002C   0x8800             LDRH     R0,[R0, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable11_16
   \   00000032   0x7809             LDRB     R1,[R1, #+0]
   \   00000034   0x1A40             SUBS     R0,R0,R1
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000003A   0x8008             STRH     R0,[R1, #+0]
    347              if(PixelAverageVoltageError < -TargetPixelAverageVoltageAllowError)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000040   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000048   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000004C   0x42C8             CMN      R0,R1
   \   0000004E   0xDA06             BGE.N    ??CalculateIntegrationTimeZong_0
    348                IntegrationTime_Zong--;
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable11_17
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
    349              if(PixelAverageVoltageError > TargetPixelAverageVoltageAllowError)
   \                     ??CalculateIntegrationTimeZong_0:
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   00000062   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000006A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000006E   0x4288             CMP      R0,R1
   \   00000070   0xDA06             BGE.N    ??CalculateIntegrationTimeZong_1
    350                IntegrationTime_Zong++;
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0x1C40             ADDS     R0,R0,#+1
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable11_17
   \   0000007E   0x7008             STRB     R0,[R1, #+0]
    351              if(IntegrationTime_Zong <= 1)
   \                     ??CalculateIntegrationTimeZong_1:
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x2802             CMP      R0,#+2
   \   00000088   0xD203             BCS.N    ??CalculateIntegrationTimeZong_2
    352                IntegrationTime_Zong = 1;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   0000008E   0x2101             MOVS     R1,#+1
   \   00000090   0x7001             STRB     R1,[R0, #+0]
    353              if(IntegrationTime_Zong >= 3)
   \                     ??CalculateIntegrationTimeZong_2:
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000096   0x7800             LDRB     R0,[R0, #+0]
   \   00000098   0x2803             CMP      R0,#+3
   \   0000009A   0xD303             BCC.N    ??CalculateIntegrationTimeZong_3
    354                IntegrationTime_Zong = 3;
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   000000A0   0x2103             MOVS     R1,#+3
   \   000000A2   0x7001             STRB     R1,[R0, #+0]
    355          }
   \                     ??CalculateIntegrationTimeZong_3:
   \   000000A4   0xBD01             POP      {R0,PC}          ;; return
    356          

   \                                 In section .text, align 2, keep-with-next
    357          uint8 PixelAverage(uint8 len, uint8 *data)
    358          {
   \                     PixelAverage:
   \   00000000   0xB410             PUSH     {R4}
    359            uint8 i;
    360            uint16 sum = 0;
   \   00000002   0x2300             MOVS     R3,#+0
    361            for(i = 0; i<len; i++)
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0xE004             B.N      ??PixelAverage_0
    362            {
    363               sum = sum + *data++;
   \                     ??PixelAverage_1:
   \   00000008   0x780C             LDRB     R4,[R1, #+0]
   \   0000000A   0xFA53 0xF384      UXTAB    R3,R3,R4
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
    364            }
   \   00000010   0x1C52             ADDS     R2,R2,#+1
   \                     ??PixelAverage_0:
   \   00000012   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x4282             CMP      R2,R0
   \   00000018   0xD3F6             BCC.N    ??PixelAverage_1
    365            return ((uint8)(sum/len));
   \   0000001A   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0xFB93 0xF0F0      SDIV     R0,R3,R0
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0xBC10             POP      {R4}
   \   00000026   0x4770             BX       LR               ;; return
    366          }
    367          

   \                                 In section .text, align 2, keep-with-next
    368          int Abs(int a)
    369          {
    370            int i;
    371            i=a;
    372            if(i<0) i=-a;
   \                     Abs:
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD501             BPL.N    ??Abs_0
   \   00000004   0x4240             RSBS     R0,R0,#+0
   \   00000006   0xE7FF             B.N      ??Abs_1
    373            else i=a;
    374            return i;
   \                     ??Abs_0:
   \                     ??Abs_1:
   \   00000008   0x4770             BX       LR               ;; return
    375          }
    376          
    377          //CCD¶þÖµ»¯
    378          extern  uint8  IT_ref;

   \                                 In section .bss, align 2
    379          int16  bodong=0;
   \                     bodong:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    380          int16 high_aver_f=0,low_aver_f=0;
   \                     high_aver_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     low_aver_f:
   \   00000000                      DS8 2

   \                                 In section .text, align 2, keep-with-next
    381          void binaryzation_F(unsigned char *point)
    382          {
   \                     binaryzation_F:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    383            uint8 i,j,num_high_f=0,num_low_f=0,max_label=0,min_label=0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0x2600             MOVS     R6,#+0
   \   00000008   0x2000             MOVS     R0,#+0
    384            uint8 tb_fg=0;
   \   0000000A   0x2100             MOVS     R1,#+0
    385            
    386            front_max=Pixel_F[7];
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000010   0x79D2             LDRB     R2,[R2, #+7]
   \   00000012   0x.... 0x....      LDR.W    R3,??DataTable11_18
   \   00000016   0x801A             STRH     R2,[R3, #+0]
    387            front_min=Pixel_F[7];
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   0000001C   0x79D2             LDRB     R2,[R2, #+7]
   \   0000001E   0x.... 0x....      LDR.W    R3,??DataTable11_19
   \   00000022   0x801A             STRH     R2,[R3, #+0]
    388          
    389            for(i=7;i<=120;i++)
   \   00000024   0x2707             MOVS     R7,#+7
   \   00000026   0xE013             B.N      ??binaryzation_F_0
    390            {
    391              if(front_max<Pixel_F[i])
    392              {
    393                max_label=i;
    394                front_max=Pixel_F[i];
    395              }
    396              else if(front_min>Pixel_F[i])
   \                     ??binaryzation_F_1:
   \   00000028   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000002E   0x5C38             LDRB     R0,[R7, R0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable11_19
   \   00000034   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000038   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xDA07             BGE.N    ??binaryzation_F_2
    397              {
    398                min_label=i;
   \   0000003E   0x0038             MOVS     R0,R7
    399                front_min=Pixel_F[i];
   \   00000040   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000046   0x5C79             LDRB     R1,[R7, R1]
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable11_19
   \   0000004C   0x8011             STRH     R1,[R2, #+0]
    400              }
   \                     ??binaryzation_F_2:
   \   0000004E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_0:
   \   00000050   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000052   0x2F79             CMP      R7,#+121
   \   00000054   0xD213             BCS.N    ??binaryzation_F_3
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000005A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000005E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000064   0x5C79             LDRB     R1,[R7, R1]
   \   00000066   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000068   0x4288             CMP      R0,R1
   \   0000006A   0xDADD             BGE.N    ??binaryzation_F_1
   \   0000006C   0x003E             MOVS     R6,R7
   \   0000006E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000074   0x5C38             LDRB     R0,[R7, R0]
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable11_18
   \   0000007A   0x8008             STRH     R0,[R1, #+0]
   \   0000007C   0xE7E7             B.N      ??binaryzation_F_2
    401            }
    402            if((front_max-Pixel_F[max_label-2]>10)&&(front_max-Pixel_F[max_label+2]>10)&&(Abs(Pixel_F[max_label-2]-Pixel_F[max_label+2])<10))
   \                     ??binaryzation_F_3:
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   00000082   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000086   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000008C   0x1871             ADDS     R1,R6,R1
   \   0000008E   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000092   0x1A40             SUBS     R0,R0,R1
   \   00000094   0x280B             CMP      R0,#+11
   \   00000096   0xDB36             BLT.N    ??binaryzation_F_4
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000009C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000A6   0x1871             ADDS     R1,R6,R1
   \   000000A8   0x7889             LDRB     R1,[R1, #+2]
   \   000000AA   0x1A40             SUBS     R0,R0,R1
   \   000000AC   0x280B             CMP      R0,#+11
   \   000000AE   0xDB2A             BLT.N    ??binaryzation_F_4
   \   000000B0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000B6   0x1830             ADDS     R0,R6,R0
   \   000000B8   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   000000BC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000C2   0x1871             ADDS     R1,R6,R1
   \   000000C4   0x7889             LDRB     R1,[R1, #+2]
   \   000000C6   0x1A40             SUBS     R0,R0,R1
   \   000000C8   0x.... 0x....      BL       Abs
   \   000000CC   0x280A             CMP      R0,#+10
   \   000000CE   0xDA1A             BGE.N    ??binaryzation_F_4
    403            {
    404              Pixel_F[max_label]=(Pixel_F[max_label-2]+Pixel_F[max_label+2])/2;
   \   000000D0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000D6   0x1830             ADDS     R0,R6,R0
   \   000000D8   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   000000DC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000E2   0x1871             ADDS     R1,R6,R1
   \   000000E4   0x7889             LDRB     R1,[R1, #+2]
   \   000000E6   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   000000EA   0x2102             MOVS     R1,#+2
   \   000000EC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000F0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000F6   0x5470             STRB     R0,[R6, R1]
    405              front_max=Pixel_F[max_label];
   \   000000F8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000FE   0x5C30             LDRB     R0,[R6, R0]
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable11_18
   \   00000104   0x8008             STRH     R0,[R1, #+0]
    406            }
    407            Aver_F=(front_max+front_min)/2;
   \                     ??binaryzation_F_4:
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000010A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable11_19
   \   00000112   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000116   0x1808             ADDS     R0,R1,R0
   \   00000118   0x2102             MOVS     R1,#+2
   \   0000011A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   00000122   0x8008             STRH     R0,[R1, #+0]
    408            /*
    409            //È·¶¨ÊÇ·ñ´æÔÚÌø±äÑØ
    410            tb_fg=0;
    411            for(i=7;i<120;i++)
    412            {
    413              if(Abs(Pixel_F[i]-Pixel_F[i+1])>(front_max-front_min)/5)
    414              {
    415                tb_fg=1;
    416                break;
    417              }
    418            }
    419            */
    420            for(i=7;i<=120;i++)
   \   00000124   0x2707             MOVS     R7,#+7
   \   00000126   0xE00C             B.N      ??binaryzation_F_5
    421            {
    422              if(Pixel_F[i]>=Aver_F) 
    423              {
    424                high_aver_f+=Pixel_F[i];
    425                num_high_f++;
    426              }
    427              else 
    428              {
    429                low_aver_f+=Pixel_F[i];
   \                     ??binaryzation_F_6:
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   0000012C   0x8800             LDRH     R0,[R0, #+0]
   \   0000012E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000134   0x5C79             LDRB     R1,[R7, R1]
   \   00000136   0x1840             ADDS     R0,R0,R1
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable11_21
   \   0000013C   0x8008             STRH     R0,[R1, #+0]
    430                num_low_f++;
   \   0000013E   0x1C6D             ADDS     R5,R5,#+1
    431              }
   \                     ??binaryzation_F_7:
   \   00000140   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_5:
   \   00000142   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000144   0x2F79             CMP      R7,#+121
   \   00000146   0xD217             BCS.N    ??binaryzation_F_8
   \   00000148   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000014E   0x5C38             LDRB     R0,[R7, R0]
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   00000154   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000158   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000015A   0x4288             CMP      R0,R1
   \   0000015C   0xDBE4             BLT.N    ??binaryzation_F_6
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable11_22
   \   00000162   0x8800             LDRH     R0,[R0, #+0]
   \   00000164   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000016A   0x5C79             LDRB     R1,[R7, R1]
   \   0000016C   0x1840             ADDS     R0,R0,R1
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable11_22
   \   00000172   0x8008             STRH     R0,[R1, #+0]
   \   00000174   0x1C64             ADDS     R4,R4,#+1
   \   00000176   0xE7E3             B.N      ??binaryzation_F_7
    432            }
    433            high_aver_f=high_aver_f/num_high_f;
   \                     ??binaryzation_F_8:
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable11_22
   \   0000017C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000180   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000182   0xFB90 0xF0F4      SDIV     R0,R0,R4
   \   00000186   0x.... 0x....      LDR.W    R1,??DataTable11_22
   \   0000018A   0x8008             STRH     R0,[R1, #+0]
    434            low_aver_f=low_aver_f/num_low_f;
   \   0000018C   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   00000190   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000194   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000196   0xFB90 0xF0F5      SDIV     R0,R0,R5
   \   0000019A   0x.... 0x....      LDR.W    R1,??DataTable11_21
   \   0000019E   0x8008             STRH     R0,[R1, #+0]
    435            Aver_F=(high_aver_f+low_aver_f)/2;
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable11_22
   \   000001A4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001A8   0x.... 0x....      LDR.W    R1,??DataTable11_21
   \   000001AC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001B0   0x1808             ADDS     R0,R1,R0
   \   000001B2   0x2102             MOVS     R1,#+2
   \   000001B4   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001B8   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   000001BC   0x8008             STRH     R0,[R1, #+0]
    436            //LCD_P8x16_number(10,4,high_aver_f);
    437            //LCD_P8x16_number(70,4,low_aver_f);
    438          
    439            //tb_fg=0;
    440            for(i=7;i<120;i++)
   \   000001BE   0x2707             MOVS     R7,#+7
   \   000001C0   0xE012             B.N      ??binaryzation_F_9
    441            {
    442              bodong+=Abs(Pixel_F[i]-Aver_F);
   \                     ??binaryzation_F_10:
   \   000001C2   0x.... 0x....      LDR.W    R0,??DataTable11_23
   \   000001C6   0x8804             LDRH     R4,[R0, #+0]
   \   000001C8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000001CE   0x5C38             LDRB     R0,[R7, R0]
   \   000001D0   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   000001D4   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000001D8   0x1A40             SUBS     R0,R0,R1
   \   000001DA   0x.... 0x....      BL       Abs
   \   000001DE   0x1900             ADDS     R0,R0,R4
   \   000001E0   0x.... 0x....      LDR.W    R1,??DataTable11_23
   \   000001E4   0x8008             STRH     R0,[R1, #+0]
    443            }
   \   000001E6   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_9:
   \   000001E8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001EA   0x2F78             CMP      R7,#+120
   \   000001EC   0xD3E9             BCC.N    ??binaryzation_F_10
    444            bodong=bodong/114;
   \   000001EE   0x.... 0x....      LDR.W    R0,??DataTable11_23
   \   000001F2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001F6   0x2172             MOVS     R1,#+114
   \   000001F8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001FC   0x.... 0x....      LDR.W    R1,??DataTable11_23
   \   00000200   0x8008             STRH     R0,[R1, #+0]
    445            //ÈüµÀ
    446            if(bodong>15)
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable11_23
   \   00000206   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000020A   0x2810             CMP      R0,#+16
   \   0000020C   0xDB4D             BLT.N    ??binaryzation_F_11
    447            {
    448              //Ö´ÐÐ¶þÖµ»¯
    449              for(i=7;i<=120;i++)
   \   0000020E   0x2707             MOVS     R7,#+7
   \   00000210   0xE005             B.N      ??binaryzation_F_12
    450              {
    451                if(Pixel_F[i]>=Aver_F) Pixel_F[i]=1;
    452                else Pixel_F[i]=0;
   \                     ??binaryzation_F_13:
   \   00000212   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000218   0x2100             MOVS     R1,#+0
   \   0000021A   0x5439             STRB     R1,[R7, R0]
   \                     ??binaryzation_F_14:
   \   0000021C   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_12:
   \   0000021E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000220   0x2F79             CMP      R7,#+121
   \   00000222   0xD210             BCS.N    ??binaryzation_F_15
   \   00000224   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000022A   0x5C38             LDRB     R0,[R7, R0]
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable11_20
   \   00000230   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000234   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000236   0x4288             CMP      R0,R1
   \   00000238   0xDBEB             BLT.N    ??binaryzation_F_13
   \   0000023A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000240   0x2101             MOVS     R1,#+1
   \   00000242   0x5439             STRB     R1,[R7, R0]
   \   00000244   0xE7EA             B.N      ??binaryzation_F_14
    453              }
    454              
    455              if(Pixel_F[7]==1)
   \                     ??binaryzation_F_15:
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000024A   0x79C0             LDRB     R0,[R0, #+7]
   \   0000024C   0x2801             CMP      R0,#+1
   \   0000024E   0xD109             BNE.N    ??binaryzation_F_16
    456                for(i=0;i<=7;i++) Pixel_F[i]=1;
   \   00000250   0x2700             MOVS     R7,#+0
   \                     ??binaryzation_F_17:
   \   00000252   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000254   0x2F08             CMP      R7,#+8
   \   00000256   0xD20F             BCS.N    ??binaryzation_F_18
   \   00000258   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000025A   0x....             LDR.N    R0,??DataTable11_7
   \   0000025C   0x2101             MOVS     R1,#+1
   \   0000025E   0x5439             STRB     R1,[R7, R0]
   \   00000260   0x1C7F             ADDS     R7,R7,#+1
   \   00000262   0xE7F6             B.N      ??binaryzation_F_17
    457              else
    458                for(i=0;i<=7;i++) Pixel_F[i]=0;
   \                     ??binaryzation_F_16:
   \   00000264   0x2700             MOVS     R7,#+0
   \   00000266   0xE004             B.N      ??binaryzation_F_19
   \                     ??binaryzation_F_20:
   \   00000268   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000026A   0x....             LDR.N    R0,??DataTable11_7
   \   0000026C   0x2100             MOVS     R1,#+0
   \   0000026E   0x5439             STRB     R1,[R7, R0]
   \   00000270   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_19:
   \   00000272   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000274   0x2F08             CMP      R7,#+8
   \   00000276   0xD3F7             BCC.N    ??binaryzation_F_20
    459              
    460              if(Pixel_F[120]==1)
   \                     ??binaryzation_F_18:
   \   00000278   0x....             LDR.N    R0,??DataTable11_7
   \   0000027A   0xF890 0x0078      LDRB     R0,[R0, #+120]
   \   0000027E   0x2801             CMP      R0,#+1
   \   00000280   0xD109             BNE.N    ??binaryzation_F_21
    461                for(i=120;i<=127;i++) Pixel_F[i]=1;
   \   00000282   0x2778             MOVS     R7,#+120
   \                     ??binaryzation_F_22:
   \   00000284   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000286   0x2F80             CMP      R7,#+128
   \   00000288   0xD22E             BCS.N    ??binaryzation_F_23
   \   0000028A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000028C   0x....             LDR.N    R0,??DataTable11_7
   \   0000028E   0x2101             MOVS     R1,#+1
   \   00000290   0x5439             STRB     R1,[R7, R0]
   \   00000292   0x1C7F             ADDS     R7,R7,#+1
   \   00000294   0xE7F6             B.N      ??binaryzation_F_22
    462              else
    463                for(i=120;i<=127;i++) Pixel_F[i]=0;
   \                     ??binaryzation_F_21:
   \   00000296   0x2778             MOVS     R7,#+120
   \                     ??binaryzation_F_24:
   \   00000298   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000029A   0x2F80             CMP      R7,#+128
   \   0000029C   0xD224             BCS.N    ??binaryzation_F_23
   \   0000029E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002A0   0x....             LDR.N    R0,??DataTable11_7
   \   000002A2   0x2100             MOVS     R1,#+0
   \   000002A4   0x5439             STRB     R1,[R7, R0]
   \   000002A6   0x1C7F             ADDS     R7,R7,#+1
   \   000002A8   0xE7F6             B.N      ??binaryzation_F_24
    464              
    465            }
    466            //Ã¤Çø
    467            else if(bodong<=15)
   \                     ??binaryzation_F_11:
   \   000002AA   0x....             LDR.N    R0,??DataTable11_23
   \   000002AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002B0   0x2810             CMP      R0,#+16
   \   000002B2   0xDA19             BGE.N    ??binaryzation_F_23
    468            {
    469               if(IntegrationTime_Front>IT_ref)
   \   000002B4   0x....             LDR.N    R0,??DataTable11_24
   \   000002B6   0x7800             LDRB     R0,[R0, #+0]
   \   000002B8   0x....             LDR.N    R1,??DataTable11_13
   \   000002BA   0x7809             LDRB     R1,[R1, #+0]
   \   000002BC   0x4288             CMP      R0,R1
   \   000002BE   0xD209             BCS.N    ??binaryzation_F_25
    470                 for(i=0;i<=127;i++) Pixel_F[i]=0;
   \   000002C0   0x2700             MOVS     R7,#+0
   \                     ??binaryzation_F_26:
   \   000002C2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002C4   0x2F80             CMP      R7,#+128
   \   000002C6   0xD20F             BCS.N    ??binaryzation_F_23
   \   000002C8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002CA   0x....             LDR.N    R0,??DataTable11_7
   \   000002CC   0x2100             MOVS     R1,#+0
   \   000002CE   0x5439             STRB     R1,[R7, R0]
   \   000002D0   0x1C7F             ADDS     R7,R7,#+1
   \   000002D2   0xE7F6             B.N      ??binaryzation_F_26
    471               else
    472                 for(i=0;i<=127;i++) Pixel_F[i]=1;
   \                     ??binaryzation_F_25:
   \   000002D4   0x2700             MOVS     R7,#+0
   \   000002D6   0xE004             B.N      ??binaryzation_F_27
   \                     ??binaryzation_F_28:
   \   000002D8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002DA   0x....             LDR.N    R0,??DataTable11_7
   \   000002DC   0x2101             MOVS     R1,#+1
   \   000002DE   0x5439             STRB     R1,[R7, R0]
   \   000002E0   0x1C7F             ADDS     R7,R7,#+1
   \                     ??binaryzation_F_27:
   \   000002E2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002E4   0x2F80             CMP      R7,#+128
   \   000002E6   0xD3F7             BCC.N    ??binaryzation_F_28
    473            }
    474            /*
    475            if(tb_fg==1)
    476            {
    477              
    478            }
    479            */
    480            //ÂË²¨
    481            for(j=3;j<125;j++)
   \                     ??binaryzation_F_23:
   \   000002E8   0x2003             MOVS     R0,#+3
   \   000002EA   0xE02C             B.N      ??binaryzation_F_29
    482            {
    483              if( Pixel_F[j]==0)
   \                     ??binaryzation_F_30:
   \   000002EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002EE   0x....             LDR.N    R1,??DataTable11_7
   \   000002F0   0x5C41             LDRB     R1,[R0, R1]
   \   000002F2   0x2900             CMP      R1,#+0
   \   000002F4   0xD110             BNE.N    ??binaryzation_F_31
    484              {
    485                if((Pixel_F[j-1]==1)&&(Pixel_F[j+1]==1))
   \   000002F6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002F8   0x....             LDR.N    R1,??DataTable11_7
   \   000002FA   0x1841             ADDS     R1,R0,R1
   \   000002FC   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000300   0x2901             CMP      R1,#+1
   \   00000302   0xD109             BNE.N    ??binaryzation_F_31
   \   00000304   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000306   0x....             LDR.N    R1,??DataTable11_7
   \   00000308   0x1841             ADDS     R1,R0,R1
   \   0000030A   0x7849             LDRB     R1,[R1, #+1]
   \   0000030C   0x2901             CMP      R1,#+1
   \   0000030E   0xD103             BNE.N    ??binaryzation_F_31
    486                  Pixel_F[j]=1;
   \   00000310   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000312   0x....             LDR.N    R1,??DataTable11_7
   \   00000314   0x2201             MOVS     R2,#+1
   \   00000316   0x5442             STRB     R2,[R0, R1]
    487              }
    488              if(Pixel_F[j]==1)
   \                     ??binaryzation_F_31:
   \   00000318   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000031A   0x....             LDR.N    R1,??DataTable11_7
   \   0000031C   0x5C41             LDRB     R1,[R0, R1]
   \   0000031E   0x2901             CMP      R1,#+1
   \   00000320   0xD110             BNE.N    ??binaryzation_F_32
    489              {
    490                if((Pixel_F[j-1]==0)&&(Pixel_F[j+1]==0))
   \   00000322   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000324   0x....             LDR.N    R1,??DataTable11_7
   \   00000326   0x1841             ADDS     R1,R0,R1
   \   00000328   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000032C   0x2900             CMP      R1,#+0
   \   0000032E   0xD109             BNE.N    ??binaryzation_F_32
   \   00000330   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000332   0x....             LDR.N    R1,??DataTable11_7
   \   00000334   0x1841             ADDS     R1,R0,R1
   \   00000336   0x7849             LDRB     R1,[R1, #+1]
   \   00000338   0x2900             CMP      R1,#+0
   \   0000033A   0xD103             BNE.N    ??binaryzation_F_32
    491                  Pixel_F[j]=0;
   \   0000033C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000033E   0x....             LDR.N    R1,??DataTable11_7
   \   00000340   0x2200             MOVS     R2,#+0
   \   00000342   0x5442             STRB     R2,[R0, R1]
    492              }
    493            }
   \                     ??binaryzation_F_32:
   \   00000344   0x1C40             ADDS     R0,R0,#+1
   \                     ??binaryzation_F_29:
   \   00000346   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000348   0x287D             CMP      R0,#+125
   \   0000034A   0xD3CF             BCC.N    ??binaryzation_F_30
    494          }
   \   0000034C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    495          

   \                                 In section .bss, align 2
    496          int16 high_aver_z=0,low_aver_z=0;
   \                     high_aver_z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     low_aver_z:
   \   00000000                      DS8 2

   \                                 In section .text, align 2, keep-with-next
    497          void binaryzation_Z(unsigned char *point)
    498          {
   \                     binaryzation_Z:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    499            uint8 i,j,num_high_z=0,num_low_z=0,max_label=0,min_label=0;
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0x2600             MOVS     R6,#+0
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0x2000             MOVS     R0,#+0
    500            zong_max=Pixel_Z[1];
   \   0000000C   0x....             LDR.N    R1,??DataTable11_14
   \   0000000E   0x7849             LDRB     R1,[R1, #+1]
   \   00000010   0x....             LDR.N    R2,??DataTable11_25
   \   00000012   0x8011             STRH     R1,[R2, #+0]
    501            zong_min=Pixel_Z[1];
   \   00000014   0x....             LDR.N    R1,??DataTable11_14
   \   00000016   0x7849             LDRB     R1,[R1, #+1]
   \   00000018   0x....             LDR.N    R2,??DataTable11_26
   \   0000001A   0x8011             STRH     R1,[R2, #+0]
    502          
    503            for(i=1;i<127;i++)
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0xE00F             B.N      ??binaryzation_Z_0
    504            {
    505              if(zong_max<Pixel_Z[i])
    506              {
    507                max_label=i;
    508                zong_max=Pixel_Z[i];
    509              }
    510              else if(zong_min>Pixel_Z[i])
   \                     ??binaryzation_Z_1:
   \   00000020   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000022   0x....             LDR.N    R0,??DataTable11_14
   \   00000024   0x5C08             LDRB     R0,[R1, R0]
   \   00000026   0x....             LDR.N    R2,??DataTable11_26
   \   00000028   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000002C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002E   0x4290             CMP      R0,R2
   \   00000030   0xDA05             BGE.N    ??binaryzation_Z_2
    511              {
    512                min_label=i;
   \   00000032   0x0008             MOVS     R0,R1
    513                zong_min=Pixel_Z[i];
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x....             LDR.N    R2,??DataTable11_14
   \   00000038   0x5C8A             LDRB     R2,[R1, R2]
   \   0000003A   0x....             LDR.N    R3,??DataTable11_26
   \   0000003C   0x801A             STRH     R2,[R3, #+0]
    514              }
   \                     ??binaryzation_Z_2:
   \   0000003E   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_Z_0:
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0x297F             CMP      R1,#+127
   \   00000044   0xD20F             BCS.N    ??binaryzation_Z_3
   \   00000046   0x....             LDR.N    R0,??DataTable11_25
   \   00000048   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000004C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004E   0x....             LDR.N    R2,??DataTable11_14
   \   00000050   0x5C8A             LDRB     R2,[R1, R2]
   \   00000052   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000054   0x4290             CMP      R0,R2
   \   00000056   0xDAE3             BGE.N    ??binaryzation_Z_1
   \   00000058   0x000F             MOVS     R7,R1
   \   0000005A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005C   0x....             LDR.N    R0,??DataTable11_14
   \   0000005E   0x5C08             LDRB     R0,[R1, R0]
   \   00000060   0x....             LDR.N    R2,??DataTable11_25
   \   00000062   0x8010             STRH     R0,[R2, #+0]
   \   00000064   0xE7EB             B.N      ??binaryzation_Z_2
    515            }
    516            if((zong_max-Pixel_Z[max_label-2]>10)&&(zong_max-Pixel_Z[max_label+2]>10)&&(Abs(Pixel_Z[max_label-2]-Pixel_Z[max_label+2])<10))
   \                     ??binaryzation_Z_3:
   \   00000066   0x....             LDR.N    R0,??DataTable11_25
   \   00000068   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000006C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000006E   0x....             LDR.N    R1,??DataTable11_14
   \   00000070   0x1879             ADDS     R1,R7,R1
   \   00000072   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000076   0x1A40             SUBS     R0,R0,R1
   \   00000078   0x280B             CMP      R0,#+11
   \   0000007A   0xDB29             BLT.N    ??binaryzation_Z_4
   \   0000007C   0x....             LDR.N    R0,??DataTable11_25
   \   0000007E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000082   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000084   0x....             LDR.N    R1,??DataTable11_14
   \   00000086   0x1879             ADDS     R1,R7,R1
   \   00000088   0x7889             LDRB     R1,[R1, #+2]
   \   0000008A   0x1A40             SUBS     R0,R0,R1
   \   0000008C   0x280B             CMP      R0,#+11
   \   0000008E   0xDB1F             BLT.N    ??binaryzation_Z_4
   \   00000090   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000092   0x....             LDR.N    R0,??DataTable11_14
   \   00000094   0x1838             ADDS     R0,R7,R0
   \   00000096   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   0000009A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000009C   0x....             LDR.N    R1,??DataTable11_14
   \   0000009E   0x1879             ADDS     R1,R7,R1
   \   000000A0   0x7889             LDRB     R1,[R1, #+2]
   \   000000A2   0x1A40             SUBS     R0,R0,R1
   \   000000A4   0x.... 0x....      BL       Abs
   \   000000A8   0x280A             CMP      R0,#+10
   \   000000AA   0xDA11             BGE.N    ??binaryzation_Z_4
    517            {
    518              Pixel_Z[max_label]=Pixel_Z[max_label-2]+Pixel_Z[max_label+2];
   \   000000AC   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000AE   0x....             LDR.N    R0,??DataTable11_14
   \   000000B0   0x1838             ADDS     R0,R7,R0
   \   000000B2   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   000000B6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000B8   0x....             LDR.N    R1,??DataTable11_14
   \   000000BA   0x1879             ADDS     R1,R7,R1
   \   000000BC   0x7889             LDRB     R1,[R1, #+2]
   \   000000BE   0x1808             ADDS     R0,R1,R0
   \   000000C0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C2   0x....             LDR.N    R1,??DataTable11_14
   \   000000C4   0x5478             STRB     R0,[R7, R1]
    519              zong_max=Pixel_Z[max_label];
   \   000000C6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C8   0x....             LDR.N    R0,??DataTable11_14
   \   000000CA   0x5C38             LDRB     R0,[R7, R0]
   \   000000CC   0x....             LDR.N    R1,??DataTable11_25
   \   000000CE   0x8008             STRH     R0,[R1, #+0]
    520            }
    521            Aver_Z=(zong_max+zong_min)/2;
   \                     ??binaryzation_Z_4:
   \   000000D0   0x....             LDR.N    R0,??DataTable11_25
   \   000000D2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000D6   0x....             LDR.N    R1,??DataTable11_26
   \   000000D8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000DC   0x1808             ADDS     R0,R1,R0
   \   000000DE   0x2102             MOVS     R1,#+2
   \   000000E0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000E4   0x....             LDR.N    R1,??DataTable11_27
   \   000000E6   0x8008             STRH     R0,[R1, #+0]
    522            for(i=0;i<127;i++)
   \   000000E8   0x2100             MOVS     R1,#+0
   \   000000EA   0xE009             B.N      ??binaryzation_Z_5
    523            {
    524              if(Pixel_Z[i]>=Aver_Z) 
    525              {
    526                high_aver_z+=Pixel_Z[i];
    527                num_high_z++;
    528              }
    529              else 
    530              {
    531                low_aver_z+=Pixel_Z[i];
   \                     ??binaryzation_Z_6:
   \   000000EC   0x....             LDR.N    R0,??DataTable11_28
   \   000000EE   0x8800             LDRH     R0,[R0, #+0]
   \   000000F0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F2   0x....             LDR.N    R2,??DataTable11_14
   \   000000F4   0x5C8A             LDRB     R2,[R1, R2]
   \   000000F6   0x1880             ADDS     R0,R0,R2
   \   000000F8   0x....             LDR.N    R2,??DataTable11_28
   \   000000FA   0x8010             STRH     R0,[R2, #+0]
    532                num_low_z++;
   \   000000FC   0x1C76             ADDS     R6,R6,#+1
    533              }
   \                     ??binaryzation_Z_7:
   \   000000FE   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_Z_5:
   \   00000100   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000102   0x297F             CMP      R1,#+127
   \   00000104   0xD212             BCS.N    ??binaryzation_Z_8
   \   00000106   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000108   0x....             LDR.N    R0,??DataTable11_14
   \   0000010A   0x5C08             LDRB     R0,[R1, R0]
   \   0000010C   0x....             LDR.N    R2,??DataTable11_27
   \   0000010E   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000112   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000114   0x4290             CMP      R0,R2
   \   00000116   0xDBE9             BLT.N    ??binaryzation_Z_6
   \   00000118   0x....             LDR.N    R0,??DataTable11_29
   \   0000011A   0x8800             LDRH     R0,[R0, #+0]
   \   0000011C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011E   0x....             LDR.N    R2,??DataTable11_14
   \   00000120   0x5C8A             LDRB     R2,[R1, R2]
   \   00000122   0x1880             ADDS     R0,R0,R2
   \   00000124   0x....             LDR.N    R2,??DataTable11_29
   \   00000126   0x8010             STRH     R0,[R2, #+0]
   \   00000128   0x1C6D             ADDS     R5,R5,#+1
   \   0000012A   0xE7E8             B.N      ??binaryzation_Z_7
    534            }
    535            high_aver_z=high_aver_z/num_high_z;
   \                     ??binaryzation_Z_8:
   \   0000012C   0x....             LDR.N    R0,??DataTable11_29
   \   0000012E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000132   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000134   0xFB90 0xF0F5      SDIV     R0,R0,R5
   \   00000138   0x....             LDR.N    R1,??DataTable11_29
   \   0000013A   0x8008             STRH     R0,[R1, #+0]
    536            low_aver_z=low_aver_z/num_low_z;
   \   0000013C   0x....             LDR.N    R0,??DataTable11_28
   \   0000013E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000142   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000144   0xFB90 0xF0F6      SDIV     R0,R0,R6
   \   00000148   0x....             LDR.N    R1,??DataTable11_28
   \   0000014A   0x8008             STRH     R0,[R1, #+0]
    537            Aver_Z=(high_aver_z+low_aver_z)/2;
   \   0000014C   0x....             LDR.N    R0,??DataTable11_29
   \   0000014E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000152   0x....             LDR.N    R1,??DataTable11_28
   \   00000154   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000158   0x1808             ADDS     R0,R1,R0
   \   0000015A   0x2102             MOVS     R1,#+2
   \   0000015C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000160   0x....             LDR.N    R1,??DataTable11_27
   \   00000162   0x8008             STRH     R0,[R1, #+0]
    538            //LCD_P8x16_number(10,4,high_aver_z);
    539            //LCD_P8x16_number(70,4,low_aver_z);
    540          
    541            for(i=0;i<128;i++)
   \   00000164   0x2100             MOVS     R1,#+0
   \   00000166   0xE003             B.N      ??binaryzation_Z_9
    542            {
    543              if(*point>=Aver_Z)//PixelAverageValue_Front*0.6
    544                *point=1;
    545              else
    546                *point=0;
   \                     ??binaryzation_Z_10:
   \   00000168   0x2000             MOVS     R0,#+0
   \   0000016A   0x7020             STRB     R0,[R4, #+0]
    547              point++;
   \                     ??binaryzation_Z_11:
   \   0000016C   0x1C64             ADDS     R4,R4,#+1
   \   0000016E   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_Z_9:
   \   00000170   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000172   0x2980             CMP      R1,#+128
   \   00000174   0xD209             BCS.N    ??binaryzation_Z_12
   \   00000176   0x7820             LDRB     R0,[R4, #+0]
   \   00000178   0x....             LDR.N    R2,??DataTable11_27
   \   0000017A   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000017E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000180   0x4290             CMP      R0,R2
   \   00000182   0xDBF1             BLT.N    ??binaryzation_Z_10
   \   00000184   0x2001             MOVS     R0,#+1
   \   00000186   0x7020             STRB     R0,[R4, #+0]
   \   00000188   0xE7F0             B.N      ??binaryzation_Z_11
    548            }
    549            //ÂË²¨
    550            for(j=3;j<125;j++)
   \                     ??binaryzation_Z_12:
   \   0000018A   0x2003             MOVS     R0,#+3
   \   0000018C   0xE02C             B.N      ??binaryzation_Z_13
    551            {
    552              if( Pixel_Z[j]==0)
   \                     ??binaryzation_Z_14:
   \   0000018E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000190   0x....             LDR.N    R1,??DataTable11_14
   \   00000192   0x5C41             LDRB     R1,[R0, R1]
   \   00000194   0x2900             CMP      R1,#+0
   \   00000196   0xD110             BNE.N    ??binaryzation_Z_15
    553              {
    554                if((Pixel_Z[j-1]==1)&&(Pixel_Z[j+1]==1))
   \   00000198   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019A   0x....             LDR.N    R1,??DataTable11_14
   \   0000019C   0x1841             ADDS     R1,R0,R1
   \   0000019E   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000001A2   0x2901             CMP      R1,#+1
   \   000001A4   0xD109             BNE.N    ??binaryzation_Z_15
   \   000001A6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001A8   0x....             LDR.N    R1,??DataTable11_14
   \   000001AA   0x1841             ADDS     R1,R0,R1
   \   000001AC   0x7849             LDRB     R1,[R1, #+1]
   \   000001AE   0x2901             CMP      R1,#+1
   \   000001B0   0xD103             BNE.N    ??binaryzation_Z_15
    555                  Pixel_Z[j]=1;
   \   000001B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B4   0x....             LDR.N    R1,??DataTable11_14
   \   000001B6   0x2201             MOVS     R2,#+1
   \   000001B8   0x5442             STRB     R2,[R0, R1]
    556              }
    557              if(Pixel_Z[j]==1)
   \                     ??binaryzation_Z_15:
   \   000001BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BC   0x....             LDR.N    R1,??DataTable11_14
   \   000001BE   0x5C41             LDRB     R1,[R0, R1]
   \   000001C0   0x2901             CMP      R1,#+1
   \   000001C2   0xD110             BNE.N    ??binaryzation_Z_16
    558              {
    559                if((Pixel_Z[j-1]==0)&&(Pixel_Z[j+1]==0))
   \   000001C4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001C6   0x....             LDR.N    R1,??DataTable11_14
   \   000001C8   0x1841             ADDS     R1,R0,R1
   \   000001CA   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000001CE   0x2900             CMP      R1,#+0
   \   000001D0   0xD109             BNE.N    ??binaryzation_Z_16
   \   000001D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001D4   0x....             LDR.N    R1,??DataTable11_14
   \   000001D6   0x1841             ADDS     R1,R0,R1
   \   000001D8   0x7849             LDRB     R1,[R1, #+1]
   \   000001DA   0x2900             CMP      R1,#+0
   \   000001DC   0xD103             BNE.N    ??binaryzation_Z_16
    560                  Pixel_Z[j]=0;
   \   000001DE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001E0   0x....             LDR.N    R1,??DataTable11_14
   \   000001E2   0x2200             MOVS     R2,#+0
   \   000001E4   0x5442             STRB     R2,[R0, R1]
    561              }
    562            }
   \                     ??binaryzation_Z_16:
   \   000001E6   0x1C40             ADDS     R0,R0,#+1
   \                     ??binaryzation_Z_13:
   \   000001E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EA   0x287D             CMP      R0,#+125
   \   000001EC   0xD3CF             BCC.N    ??binaryzation_Z_14
    563            
    564            //for(j=0;j<128;j++) Pixel_Z[j]=Pixel_Z[j]*100;
    565          }
   \   000001EE   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    566          
    567          //-----------------------------------------------------------------------------------------------------------------------

   \                                 In section .bss, align 2
    568          int16   rensha_count=0;
   \                     rensha_count:
   \   00000000                      DS8 2
    569          extern float k_out;

   \                                 In section .bss, align 2
    570          int16  lost_all_count=0;
   \                     lost_all_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    571          uint8  lost_all_flag=0,lost_left_flag=0,lost_right_flag=0;
   \                     lost_all_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     lost_left_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     lost_right_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    572          uint8  Rdiaotou_flag=0;
   \                     Rdiaotou_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    573          int16  Rdiaotou_count=0,Rqing_count=0;
   \                     Rdiaotou_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rqing_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    574          uint8  Ldiaotou_flag=0;
   \                     Ldiaotou_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    575          int16  Ldiaotou_count=0,Lqing_count=0;
   \                     Ldiaotou_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lqing_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    576          uint8  banma_flag=0;
   \                     banma_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    577          uint8  LHOLDdiao_flag=0,RHOLDdiao_flag=0;
   \                     LHOLDdiao_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     RHOLDdiao_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    578          uint8  Lendiao=0,Rendiao=0;
   \                     Lendiao:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Rendiao:
   \   00000000                      DS8 1
    579          

   \                                 In section .bss, align 1
    580          uint8  rzguo_flag=0;
   \                     rzguo_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    581          uint8  rzguo_count=0;
   \                     rzguo_count:
   \   00000000                      DS8 1
    582          

   \                                 In section .bss, align 2
    583          int16   ZZ_count=0;
   \                     ZZ_count:
   \   00000000                      DS8 2
    584          

   \                                 In section .bss, align 4
    585          int16 route_f[100]={0};
   \                     route_f:
   \   00000000                      DS8 200

   \                                 In section .bss, align 4
    586          int16 chafang_f[100]={0};
   \                     chafang_f:
   \   00000000                      DS8 200

   \                                 In section .bss, align 2
    587          int16 route_ave_f=0;
   \                     route_ave_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    588          int16 fangcha_f=0,fangcha_qian_f=0,fangcha_hou_f=0;
   \                     fangcha_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     fangcha_qian_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     fangcha_hou_f:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    589          int16 Rpre1=0,Rpre2=0,Rpre3=0,Rpre4=0,Lpre1=0,Lpre2=0,Lpre3=0,Lpre4=0;
   \                     Rpre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rpre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rpre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Rpre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lpre1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lpre2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lpre3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     Lpre4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    590          int16 R_aver=0,L_aver=0;
   \                     R_aver:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     L_aver:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    591          int16 L_fch=0,R_fch=0;
   \                     L_fch:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     R_fch:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    592          int16 qpx_count=0;
   \                     qpx_count:
   \   00000000                      DS8 2

   \                                 In section .data, align 1
    593          uint8 rzop=1;
   \                     rzop:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 2
    594          int16 front_l_fg_last=0,front_r_fg_last=0;
   \                     front_l_fg_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_fg_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    595          int16 front_l_flag=0,front_r_flag=0;
   \                     front_l_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    596          int16 real_l=0,real_r=0;
   \                     real_l:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     real_r:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    597          uint8 mq=0,mq_last=0;
   \                     mq:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     mq_last:
   \   00000000                      DS8 1
    598          

   \                                 In section .bss, align 2
    599          int16 LR_count=0;
   \                     LR_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    600          int16 Lr_count=0;
   \                     Lr_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    601          int16 lR_count=0;
   \                     lR_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    602          int16 lr_count=0;
   \                     lr_count:
   \   00000000                      DS8 2
    603          

   \                                 In section .data, align 2
    604          int16 jiao_L=20,jiao_R=23;
   \                     jiao_L:
   \   00000000   0x0014             DC16 20

   \                                 In section .data, align 2
   \                     jiao_R:
   \   00000000   0x0017             DC16 23
    605          
    606          extern   int16      fch_dp1,fch_dp2,fch_dp3;

   \                                 In section .bss, align 1
    607          uint8  ga_fg=0,gl_fg=0,gr_fg=0;
   \                     ga_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     gl_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     gr_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    608          uint8  ga_fg_last=0,gl_fg_last=0,gr_fg_last=0;
   \                     ga_fg_last:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     gl_fg_last:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     gr_fg_last:
   \   00000000                      DS8 1
    609          

   \                                 In section .bss, align 1
    610          uint8  sz_in=0;
   \                     sz_in:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    611          uint8  sz_l=0,sz_r=0;
   \                     sz_l:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     sz_r:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    612          int16  sz_in_ct=0;
   \                     sz_in_ct:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    613          uint8  mq_look1=0,mq_look2=0,mq_look3=0,mq_look4=0;
   \                     mq_look1:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     mq_look2:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     mq_look3:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     mq_look4:
   \   00000000                      DS8 1
    614          

   \                                 In section .data, align 2
    615          int16  OFFSET_keep=20;
   \                     OFFSET_keep:
   \   00000000   0x0014             DC16 20
    616          extern uint8  CAR_GO;
    617          /*
    618          1-¶Ô³ÆÎÊÌâ
    619            63
    620          */

   \                                 In section .text, align 2, keep-with-next
    621          void get_front()
    622          {
   \                     get_front:
   \   00000000   0xB510             PUSH     {R4,LR}
    623              int16 i,j;
    624              
    625              if(CAR_GO==1)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable12
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD110             BNE.N    ??get_front_0
    626              {
    627                qpx_count++;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000010   0x8800             LDRH     R0,[R0, #+0]
   \   00000012   0x1C40             ADDS     R0,R0,#+1
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   00000018   0x8008             STRH     R0,[R1, #+0]
    628                if(qpx_count>35) qpx_count=36;
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   0000001E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000022   0x2824             CMP      R0,#+36
   \   00000024   0xDB03             BLT.N    ??get_front_0
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   0000002A   0x2124             MOVS     R1,#+36
   \   0000002C   0x8001             STRH     R1,[R0, #+0]
    629              }
    630              
    631              
    632              ga_fg=0;
   \                     ??get_front_0:
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x7001             STRB     R1,[R0, #+0]
    633              gl_fg=0;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x7001             STRB     R1,[R0, #+0]
    634              gr_fg=0;
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable13_2
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x7001             STRB     R1,[R0, #+0]
    635          
    636              mq=0;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x7001             STRB     R1,[R0, #+0]
    637              
    638              if(LHOLDdiao_flag==0)
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   00000052   0x7800             LDRB     R0,[R0, #+0]
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD103             BNE.N    ??get_front_1
    639              {
    640                Ldiaotou_flag=0;
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
    641              }
    642              if(RHOLDdiao_flag==0)
   \                     ??get_front_1:
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD103             BNE.N    ??get_front_2
    643              {
    644                Rdiaotou_flag=0;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    645              }
    646              //Ñ°Ïß
    647              for(i=121;i>=6;i--)
   \                     ??get_front_2:
   \   00000072   0x2079             MOVS     R0,#+121
   \   00000074   0xE004             B.N      ??get_front_3
    648              {
    649                if((Pixel_F[i]==1)&&(Pixel_F[i-1]==0)&&(Pixel_F[i-2]==0)&&(Pixel_F[i-3]==0))
    650                {
    651                  front_l = i-2;
    652                  front_l_flag = 1;
    653                  break;
    654                }
    655                front_l_flag = 0;
   \                     ??get_front_4:
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   0000007A   0x2200             MOVS     R2,#+0
   \   0000007C   0x800A             STRH     R2,[R1, #+0]
   \   0000007E   0x1E40             SUBS     R0,R0,#+1
   \                     ??get_front_3:
   \   00000080   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000082   0x2806             CMP      R0,#+6
   \   00000084   0xDB25             BLT.N    ??get_front_5
   \   00000086   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   0000008C   0x5C41             LDRB     R1,[R0, R1]
   \   0000008E   0x2901             CMP      R1,#+1
   \   00000090   0xD1F1             BNE.N    ??get_front_4
   \   00000092   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000098   0x1841             ADDS     R1,R0,R1
   \   0000009A   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000009E   0x2900             CMP      R1,#+0
   \   000000A0   0xD1E9             BNE.N    ??get_front_4
   \   000000A2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000000A8   0x1841             ADDS     R1,R0,R1
   \   000000AA   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   000000AE   0x2900             CMP      R1,#+0
   \   000000B0   0xD1E1             BNE.N    ??get_front_4
   \   000000B2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000000B8   0x1841             ADDS     R1,R0,R1
   \   000000BA   0xF811 0x1C03      LDRB     R1,[R1, #-3]
   \   000000BE   0x2900             CMP      R1,#+0
   \   000000C0   0xD1D9             BNE.N    ??get_front_4
   \   000000C2   0x1E80             SUBS     R0,R0,#+2
   \   000000C4   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   000000C8   0x8008             STRH     R0,[R1, #+0]
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000000CE   0x2101             MOVS     R1,#+1
   \   000000D0   0x8001             STRH     R1,[R0, #+0]
    656              }
    657              for(j=6;j<=121;j++)
   \                     ??get_front_5:
   \   000000D2   0x2006             MOVS     R0,#+6
   \   000000D4   0xE004             B.N      ??get_front_6
    658              {
    659                 if((Pixel_F[j]==1)&&(Pixel_F[j+1]==0)&&(Pixel_F[j+2]==0)&&(Pixel_F[j+3]==0))
    660                {
    661                  front_r = j+2;
    662                  front_r_flag = 1;
    663                  break;
    664                }
    665                front_r_flag = 0;
   \                     ??get_front_7:
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   000000DA   0x2200             MOVS     R2,#+0
   \   000000DC   0x800A             STRH     R2,[R1, #+0]
   \   000000DE   0x1C40             ADDS     R0,R0,#+1
   \                     ??get_front_6:
   \   000000E0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E2   0x287A             CMP      R0,#+122
   \   000000E4   0xDA22             BGE.N    ??get_front_8
   \   000000E6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000000EC   0x5C41             LDRB     R1,[R0, R1]
   \   000000EE   0x2901             CMP      R1,#+1
   \   000000F0   0xD1F1             BNE.N    ??get_front_7
   \   000000F2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000000F8   0x1841             ADDS     R1,R0,R1
   \   000000FA   0x7849             LDRB     R1,[R1, #+1]
   \   000000FC   0x2900             CMP      R1,#+0
   \   000000FE   0xD1EA             BNE.N    ??get_front_7
   \   00000100   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000106   0x1841             ADDS     R1,R0,R1
   \   00000108   0x7889             LDRB     R1,[R1, #+2]
   \   0000010A   0x2900             CMP      R1,#+0
   \   0000010C   0xD1E3             BNE.N    ??get_front_7
   \   0000010E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000114   0x1841             ADDS     R1,R0,R1
   \   00000116   0x78C9             LDRB     R1,[R1, #+3]
   \   00000118   0x2900             CMP      R1,#+0
   \   0000011A   0xD1DC             BNE.N    ??get_front_7
   \   0000011C   0x1C80             ADDS     R0,R0,#+2
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000122   0x8008             STRH     R0,[R1, #+0]
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   00000128   0x2101             MOVS     R1,#+1
   \   0000012A   0x8001             STRH     R1,[R0, #+0]
    666              }
    667              
    668              /*Èç¹ûÏ¸ÖÂµÄ×ö²»µ½£¬²»·Á¼òµ¥»¯*/
    669              //A.²Éµ½×óÓÒÊý¾Ý
    670              if((front_l_flag == 1)&&(front_r_flag == 1))
   \                     ??get_front_8:
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   00000130   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000134   0x2801             CMP      R0,#+1
   \   00000136   0xF040 0x80B4      BNE.W    ??get_front_9
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   0000013E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000142   0x2801             CMP      R0,#+1
   \   00000144   0xF040 0x80AD      BNE.W    ??get_front_9
    671              {  
    672                LR_count++;
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000014C   0x8800             LDRH     R0,[R0, #+0]
   \   0000014E   0x1C40             ADDS     R0,R0,#+1
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000154   0x8008             STRH     R0,[R1, #+0]
    673                Lr_count=0;
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   0000015A   0x2100             MOVS     R1,#+0
   \   0000015C   0x8001             STRH     R1,[R0, #+0]
    674                lR_count=0;
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   00000162   0x2100             MOVS     R1,#+0
   \   00000164   0x8001             STRH     R1,[R0, #+0]
    675                lr_count=0;
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000016A   0x2100             MOVS     R1,#+0
   \   0000016C   0x8001             STRH     R1,[R0, #+0]
    676                
    677                //a.1.×óÖµ´óÓÚÓÒÖµ,ÓÐÇÒÖ»ÓÐÒ»ÌõÓÐÓÃ±ß
    678                //--Ò×ÄªÃû³å³öÈüµÀ(29,98)
    679                //  1-ÁÚ½üÊ®×Ö
    680                //  2-³öÈË×Ö
    681                //  3-³öÊ®×Ö
    682                //  4-×¢Òâfront_widthÓë(front_r_last-front_l_last)Ö®¼äµÄÌø±ä
    683                if(front_l>front_r)            
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000172   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   0000017A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000017E   0x4288             CMP      R0,R1
   \   00000180   0xDA7D             BGE.N    ??get_front_10
    684                { 
    685                  if(qpx_count>35)//·ÀÖ¹Æô¶¯Ê±Ö÷CCD²Éµ½ÆðÅÜÏß³ö´í
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   00000186   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000018A   0x2824             CMP      R0,#+36
   \   0000018C   0xDB6A             BLT.N    ??get_front_11
    686                  {
    687                    //------------------------------------------------------------------
    688                    if(mq_last==1)
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable13_14
   \   00000192   0x7800             LDRB     R0,[R0, #+0]
   \   00000194   0x2801             CMP      R0,#+1
   \   00000196   0xD136             BNE.N    ??get_front_12
    689                    {
    690                      //mq=mq_last;
    691                      //if(ga_fg_last==1)  ga_fg=1;
    692                      //if(gl_fg_last==1)  gl_fg=1;
    693                      //if(gr_fg_last==1)  gr_fg=1;
    694                      
    695                      //front_l=front_l_last;
    696                      //front_r=front_r_last;
    697                      if((front_l_fg_last==1)&&(front_r_fg_last==0))  front_r=front_l+(front_r_last-front_l_last);
   \   00000198   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000019C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001A0   0x2801             CMP      R0,#+1
   \   000001A2   0xD113             BNE.N    ??get_front_13
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   000001A8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001AC   0x2800             CMP      R0,#+0
   \   000001AE   0xD10D             BNE.N    ??get_front_13
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   000001B4   0x8800             LDRH     R0,[R0, #+0]
   \   000001B6   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   000001BA   0x8809             LDRH     R1,[R1, #+0]
   \   000001BC   0x1808             ADDS     R0,R1,R0
   \   000001BE   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   000001C2   0x8809             LDRH     R1,[R1, #+0]
   \   000001C4   0x1A40             SUBS     R0,R0,R1
   \   000001C6   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   000001CA   0x8008             STRH     R0,[R1, #+0]
    698                      if((front_l_fg_last==0)&&(front_r_fg_last==1))  front_l=front_r-(front_r_last-front_l_last);
   \                     ??get_front_13:
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000001D0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001D4   0x2800             CMP      R0,#+0
   \   000001D6   0xF040 0x81C9      BNE.W    ??get_front_14
   \   000001DA   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   000001DE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001E2   0x2801             CMP      R0,#+1
   \   000001E4   0xF040 0x81C2      BNE.W    ??get_front_14
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000001EC   0x8800             LDRH     R0,[R0, #+0]
   \   000001EE   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   000001F2   0x8809             LDRH     R1,[R1, #+0]
   \   000001F4   0x1A40             SUBS     R0,R0,R1
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   000001FA   0x8809             LDRH     R1,[R1, #+0]
   \   000001FC   0x1808             ADDS     R0,R1,R0
   \   000001FE   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000202   0x8008             STRH     R0,[R1, #+0]
   \   00000204   0xE1B2             B.N      ??get_front_14
    699                      
    700                      //front_l_flag=front_l_fg_last;
    701                      //front_r_flag=front_r_fg_last;
    702                    }
    703                    else
    704                    {
    705                      //-m1-//
    706                      /*front_l=front_l_last;
    707                      front_r=front_r_last;*/
    708                      //-m2-//
    709                      /*if(Abs((front_l+front_l+front_width)/2-cl_f_pre)>Abs((front_r+front_r-front_width)/2-cl_f_pre)) 
    710                        front_l=front_r-front_width;
    711                      else 
    712                        front_r=front_l+front_width;*/
    713                      //-m3-//
    714                      if(Abs(front_l-front_l_last)<Abs(front_r-front_r_last))
   \                     ??get_front_12:
   \   00000206   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000020A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000212   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000216   0x1A40             SUBS     R0,R0,R1
   \   00000218   0x.... 0x....      BL       Abs
   \   0000021C   0x0004             MOVS     R4,R0
   \   0000021E   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000222   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000022A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000022E   0x1A40             SUBS     R0,R0,R1
   \   00000230   0x.... 0x....      BL       Abs
   \   00000234   0x4284             CMP      R4,R0
   \   00000236   0xDA0A             BGE.N    ??get_front_15
    715                        front_r = front_l+front_width;
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000023C   0x8800             LDRH     R0,[R0, #+0]
   \   0000023E   0x.... 0x....      LDR.W    R1,??DataTable13_16
   \   00000242   0x8809             LDRH     R1,[R1, #+0]
   \   00000244   0x1808             ADDS     R0,R1,R0
   \   00000246   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   0000024A   0x8008             STRH     R0,[R1, #+0]
   \   0000024C   0xE18E             B.N      ??get_front_14
    716                      else
    717                        front_l = front_r-front_width;
   \                     ??get_front_15:
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000252   0x8800             LDRH     R0,[R0, #+0]
   \   00000254   0x.... 0x....      LDR.W    R1,??DataTable13_16
   \   00000258   0x8809             LDRH     R1,[R1, #+0]
   \   0000025A   0x1A40             SUBS     R0,R0,R1
   \   0000025C   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000260   0x8008             STRH     R0,[R1, #+0]
   \   00000262   0xE183             B.N      ??get_front_14
    718                      //-m4-//
    719                      /*if(gl_fg_last==1)
    720                      {
    721                        gl_fg=1;
    722                        front_r = front_l+front_width;
    723                      }
    724                  
    725                      if(gr_fg_last==1)
    726                      {
    727                        gr_fg=1;
    728                        front_l = front_r-front_width;
    729                      }
    730                      
    731                      if(ga_fg_last==1)
    732                      {
    733                        front_l=front_l_last;
    734                        front_r=front_r_last;
    735                      }*/
    736                      //-m5-//
    737                      //if(front_OFFSET_pre1<0)  front_l = front_r-(front_r-front_r_last);
    738                      //else front_r = front_l+(front_r-front_r_last);
    739                      //-m6-//
    740                    }
    741                  }
    742                  else
    743                  { 
    744                     /*if(ga_fg_last==1)  ga_fg=1;
    745                     if(gl_fg_last==1)  gl_fg=1;
    746                     if(gr_fg_last==1)  gr_fg=1;*/
    747                    
    748                     front_l=front_l_last;
   \                     ??get_front_11:
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000268   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   0000026C   0x8809             LDRH     R1,[R1, #+0]
   \   0000026E   0x8001             STRH     R1,[R0, #+0]
    749                     front_r=front_r_last;
   \   00000270   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000274   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   00000278   0x8809             LDRH     R1,[R1, #+0]
   \   0000027A   0x8001             STRH     R1,[R0, #+0]
   \   0000027C   0xE176             B.N      ??get_front_14
    750                  }
    751                }
    752                //a.2.ÓÒÖµ´óÓÚ×óÖµ,Õý³£
    753                else
    754                {
    755                  if(front_r-front_l<front_width-5) 
   \                     ??get_front_10:
   \   0000027E   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000282   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   0000028A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000028E   0x1A40             SUBS     R0,R0,R1
   \   00000290   0x.... 0x....      LDR.W    R1,??DataTable13_16
   \   00000294   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000298   0x1F49             SUBS     R1,R1,#+5
   \   0000029A   0x4288             CMP      R0,R1
   \   0000029C   0xF2C0 0x8166      BLT.W    ??get_front_14
    756                  {
    757                    /*if(ga_fg_last==1)  ga_fg=1;
    758                    if(gl_fg_last==1)  gl_fg=1;
    759                    if(gr_fg_last==1)  gr_fg=1;*/
    760                    
    761                    //front_l=front_l_last;
    762                    //front_r=front_r_last;
    763                    //if((front_l+front_r)/2<front_reference) front_l=front_r-(front_r_last-front_l_last);
    764                    //else front_r = front_l+(front_r_last-front_l_last);
    765                  }
    766                  else if(front_r-front_l>=front_width-5)
   \   000002A0   0xE164             B.N      ??get_front_14
    767                  {
    768                    //ga_fg=1;
    769                    
    770                    /*if(qpx_count>25)
    771                    {
    772                      //ÓÐ¿ÉÄÜ³öÏÖÍêÈ«²Éµ½±ðµÄÈüµÀ
    773                      if(Abs((front_l+front_r)/2-cl_f_pre)>15)//´óÌø±ä
    774                      {
    775                        front_l=front_l_last;
    776                        front_r=front_r_last;
    777                      }
    778                      else
    779                        ga_fg=1;
    780                    }
    781                    else
    782                    {}*/
    783                  }
    784                }  
    785              }
    786              //B.ÓÒÊý¾Ý¶ªÊ§
    787              else if((front_l_flag == 1)&&(front_r_flag == 0))
   \                     ??get_front_9:
   \   000002A2   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000002A6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002AA   0x2801             CMP      R0,#+1
   \   000002AC   0xF040 0x8081      BNE.W    ??get_front_16
   \   000002B0   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   000002B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002B8   0x2800             CMP      R0,#+0
   \   000002BA   0xD17A             BNE.N    ??get_front_16
    788              {
    789                LR_count=0;
   \   000002BC   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000002C0   0x2100             MOVS     R1,#+0
   \   000002C2   0x8001             STRH     R1,[R0, #+0]
    790                Lr_count++;
   \   000002C4   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   000002C8   0x8800             LDRH     R0,[R0, #+0]
   \   000002CA   0x1C40             ADDS     R0,R0,#+1
   \   000002CC   0x.... 0x....      LDR.W    R1,??DataTable13_11
   \   000002D0   0x8008             STRH     R0,[R1, #+0]
    791                lR_count=0;
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   000002D6   0x2100             MOVS     R1,#+0
   \   000002D8   0x8001             STRH     R1,[R0, #+0]
    792                lr_count=0;
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   000002DE   0x2100             MOVS     R1,#+0
   \   000002E0   0x8001             STRH     R1,[R0, #+0]
    793                
    794                //È«¶ª
    795                if(front_l>cl_f_pre)//cl_f_pre
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable14_3
   \   000002E6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002EA   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   000002EE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002F2   0x4288             CMP      R0,R1
   \   000002F4   0xDA0C             BGE.N    ??get_front_17
    796                {
    797                  //gr_fg=1;
    798                  front_l=front_l_last;
   \   000002F6   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   000002FA   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   000002FE   0x8809             LDRH     R1,[R1, #+0]
   \   00000300   0x8001             STRH     R1,[R0, #+0]
    799                  front_r=front_r_last;
   \   00000302   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000030A   0x8809             LDRH     R1,[R1, #+0]
   \   0000030C   0x8001             STRH     R1,[R0, #+0]
   \   0000030E   0xE12D             B.N      ??get_front_14
    800                }
    801                //-m2-//ÒÔÈü¿íÅÐ¶Ï--------------
    802                else if(front_l<=cl_f_pre)
   \                     ??get_front_17:
   \   00000310   0x.... 0x....      LDR.W    R0,??DataTable14_3
   \   00000314   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000318   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   0000031C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000320   0x4288             CMP      R0,R1
   \   00000322   0xF2C0 0x8123      BLT.W    ??get_front_14
    803                { 
    804                  //gl_fg=1;
    805                  //ÔÚ¡°Ê®×ÖÍä¡±´¦´óÆ«²î
    806                  if(front_l<127-front_width-15)//-10(29,69,98)
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000032A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000032E   0x.... 0x....      LDR.W    R1,??DataTable13_16
   \   00000332   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000336   0xF1D1 0x0170      RSBS     R1,R1,#+112
   \   0000033A   0x4288             CMP      R0,R1
   \   0000033C   0xDA2A             BGE.N    ??get_front_18
    807                  {
    808                      Rdiaotou_flag=1;
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000342   0x2101             MOVS     R1,#+1
   \   00000344   0x7001             STRB     R1,[R0, #+0]
    809                    
    810                      Lpre4=Lpre3;
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable14_4
   \   0000034A   0x.... 0x....      LDR.W    R1,??DataTable14_5
   \   0000034E   0x8809             LDRH     R1,[R1, #+0]
   \   00000350   0x8001             STRH     R1,[R0, #+0]
    811                      Lpre3=Lpre2;
   \   00000352   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   00000356   0x.... 0x....      LDR.W    R1,??DataTable14_6
   \   0000035A   0x8809             LDRH     R1,[R1, #+0]
   \   0000035C   0x8001             STRH     R1,[R0, #+0]
    812                      Lpre2=Lpre1;
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable14_6
   \   00000362   0x.... 0x....      LDR.W    R1,??DataTable14_7
   \   00000366   0x8809             LDRH     R1,[R1, #+0]
   \   00000368   0x8001             STRH     R1,[R0, #+0]
    813                      Lpre1=front_l;
   \   0000036A   0x.... 0x....      LDR.W    R0,??DataTable14_7
   \   0000036E   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000372   0x8809             LDRH     R1,[R1, #+0]
   \   00000374   0x8001             STRH     R1,[R0, #+0]
    814                      //A.Êµ¼ÊÉÏfront_width²»ÊÇ´ËÊ±Êµ¼ÊµÄÈüµÀ¿í¶È
    815                      //B.´Ë´¦ÓÃÁËÀúÊ·Öµ£¬ÔÚ¹ýÈË×ÖÍäºó»áÊÜÓ°Ïì
    816                      //-m1-//
    817                      front_r =front_l+(front_r_last-front_l_last); 
   \   00000376   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000037A   0x8800             LDRH     R0,[R0, #+0]
   \   0000037C   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   00000380   0x8809             LDRH     R1,[R1, #+0]
   \   00000382   0x1808             ADDS     R0,R1,R0
   \   00000384   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000388   0x8809             LDRH     R1,[R1, #+0]
   \   0000038A   0x1A40             SUBS     R0,R0,R1
   \   0000038C   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000390   0x8008             STRH     R0,[R1, #+0]
   \   00000392   0xE0EB             B.N      ??get_front_14
    818                      
    819                      //front_l=front_l-((front_r_last-front_l_last)-front_width)/2;
    820                      //front_r=front_r-((front_r_last-front_l_last)-front_width)/2;
    821                      //-m2-//
    822                      //front_l=front_l_last;
    823                      //front_r=front_r_last;
    824                  } 
    825                  else 
    826                  {   //-m1-//
    827                      front_r =front_l+(front_r_last-front_l_last);
   \                     ??get_front_18:
   \   00000394   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000398   0x8800             LDRH     R0,[R0, #+0]
   \   0000039A   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000039E   0x8809             LDRH     R1,[R1, #+0]
   \   000003A0   0x1808             ADDS     R0,R1,R0
   \   000003A2   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   000003A6   0x8809             LDRH     R1,[R1, #+0]
   \   000003A8   0x1A40             SUBS     R0,R0,R1
   \   000003AA   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   000003AE   0x8008             STRH     R0,[R1, #+0]
   \   000003B0   0xE0DC             B.N      ??get_front_14
    828                      
    829                      //front_l=front_l-((front_r_last-front_l_last)-front_width)/2;
    830                      //front_r=front_r-((front_r_last-front_l_last)-front_width)/2;
    831                  }
    832                }
    833              }
    834              //C.×óÊý¾Ý¶ª
    835              else if((front_l_flag == 0)&&(front_r_flag == 1))
   \                     ??get_front_16:
   \   000003B2   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000003B6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003BA   0x2800             CMP      R0,#+0
   \   000003BC   0xF040 0x8080      BNE.W    ??get_front_19
   \   000003C0   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   000003C4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003C8   0x2801             CMP      R0,#+1
   \   000003CA   0xD179             BNE.N    ??get_front_19
    836              { 
    837                LR_count=0;
   \   000003CC   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   000003D0   0x2100             MOVS     R1,#+0
   \   000003D2   0x8001             STRH     R1,[R0, #+0]
    838                Lr_count=0;
   \   000003D4   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   000003D8   0x2100             MOVS     R1,#+0
   \   000003DA   0x8001             STRH     R1,[R0, #+0]
    839                lR_count++;
   \   000003DC   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   000003E0   0x8800             LDRH     R0,[R0, #+0]
   \   000003E2   0x1C40             ADDS     R0,R0,#+1
   \   000003E4   0x.... 0x....      LDR.W    R1,??DataTable13_12
   \   000003E8   0x8008             STRH     R0,[R1, #+0]
    840                lr_count=0;
   \   000003EA   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   000003EE   0x2100             MOVS     R1,#+0
   \   000003F0   0x8001             STRH     R1,[R0, #+0]
    841                
    842                if(front_r<cl_f_pre)//cl_f_pre
   \   000003F2   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000003F6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003FA   0x.... 0x....      LDR.W    R1,??DataTable14_3
   \   000003FE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000402   0x4288             CMP      R0,R1
   \   00000404   0xDA0C             BGE.N    ??get_front_20
    843                {
    844                  //gl_fg=1;
    845                  front_l=front_l_last;
   \   00000406   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000040A   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   0000040E   0x8809             LDRH     R1,[R1, #+0]
   \   00000410   0x8001             STRH     R1,[R0, #+0]
    846                  front_r=front_r_last;
   \   00000412   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000416   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000041A   0x8809             LDRH     R1,[R1, #+0]
   \   0000041C   0x8001             STRH     R1,[R0, #+0]
   \   0000041E   0xE0A5             B.N      ??get_front_14
    847                }
    848                //2.ÒÔÈü¿íÅÐ¶Ï
    849                else if(front_r>=cl_f_pre)
   \                     ??get_front_20:
   \   00000420   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000424   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000428   0x.... 0x....      LDR.W    R1,??DataTable14_3
   \   0000042C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000430   0x4288             CMP      R0,R1
   \   00000432   0xF2C0 0x809B      BLT.W    ??get_front_14
    850                { //gr_fg=1;
    851                  //ÔÚ¡°Ê®×ÖÍä¡±´¦´óÆ«²î
    852                   if(front_r>front_width+15)//Â·¾¶£¬Ã¿´ÎÈëÍäµÄÐ§¹û£¬¾­Ñé´ó+10(29,69,98)
   \   00000436   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   0000043A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000043E   0x300F             ADDS     R0,R0,#+15
   \   00000440   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000444   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000448   0x4288             CMP      R0,R1
   \   0000044A   0xDA2A             BGE.N    ??get_front_21
    853                   {
    854                     Ldiaotou_flag=1;
   \   0000044C   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   00000450   0x2101             MOVS     R1,#+1
   \   00000452   0x7001             STRB     R1,[R0, #+0]
    855                     
    856                     Rpre4=Rpre3;
   \   00000454   0x.... 0x....      LDR.W    R0,??DataTable14_8
   \   00000458   0x.... 0x....      LDR.W    R1,??DataTable14_9
   \   0000045C   0x8809             LDRH     R1,[R1, #+0]
   \   0000045E   0x8001             STRH     R1,[R0, #+0]
    857                     Rpre3=Rpre2;
   \   00000460   0x.... 0x....      LDR.W    R0,??DataTable14_9
   \   00000464   0x.... 0x....      LDR.W    R1,??DataTable14_10
   \   00000468   0x8809             LDRH     R1,[R1, #+0]
   \   0000046A   0x8001             STRH     R1,[R0, #+0]
    858                     Rpre2=Rpre1;
   \   0000046C   0x.... 0x....      LDR.W    R0,??DataTable14_10
   \   00000470   0x.... 0x....      LDR.W    R1,??DataTable14_11
   \   00000474   0x8809             LDRH     R1,[R1, #+0]
   \   00000476   0x8001             STRH     R1,[R0, #+0]
    859                     Rpre1=front_r;
   \   00000478   0x.... 0x....      LDR.W    R0,??DataTable14_11
   \   0000047C   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000480   0x8809             LDRH     R1,[R1, #+0]
   \   00000482   0x8001             STRH     R1,[R0, #+0]
    860                     //-m1-//
    861                     front_l=front_r-(front_r_last-front_l_last);
   \   00000484   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000488   0x8800             LDRH     R0,[R0, #+0]
   \   0000048A   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000048E   0x8809             LDRH     R1,[R1, #+0]
   \   00000490   0x1A40             SUBS     R0,R0,R1
   \   00000492   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000496   0x8809             LDRH     R1,[R1, #+0]
   \   00000498   0x1808             ADDS     R0,R1,R0
   \   0000049A   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   0000049E   0x8008             STRH     R0,[R1, #+0]
   \   000004A0   0xE064             B.N      ??get_front_14
    862                     
    863                     //front_l=front_l+((front_r_last-front_l_last)-front_width)/2;
    864                     //front_r=front_r+((front_r_last-front_l_last)-front_width)/2;
    865                     //-m2-//
    866                     //front_l=front_l_last;
    867                     //front_r=front_r_last;
    868                     
    869                   } 
    870                   else
    871                   { //-m1-//
    872                     front_l=front_r-(front_r_last-front_l_last);
   \                     ??get_front_21:
   \   000004A2   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000004A6   0x8800             LDRH     R0,[R0, #+0]
   \   000004A8   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   000004AC   0x8809             LDRH     R1,[R1, #+0]
   \   000004AE   0x1A40             SUBS     R0,R0,R1
   \   000004B0   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   000004B4   0x8809             LDRH     R1,[R1, #+0]
   \   000004B6   0x1808             ADDS     R0,R1,R0
   \   000004B8   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   000004BC   0x8008             STRH     R0,[R1, #+0]
   \   000004BE   0xE055             B.N      ??get_front_14
    873                     
    874                     //front_l=front_l+((front_r_last-front_l_last)-front_width)/2;
    875                     //front_r=front_r+((front_r_last-front_l_last)-front_width)/2;
    876                   }
    877                }
    878              }
    879              //D.Á½±ßÊý¾Ý¶¼¶ªÊ§
    880              else if((front_l_flag == 0)&&(front_r_flag == 0))
   \                     ??get_front_19:
   \   000004C0   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000004C4   0x8800             LDRH     R0,[R0, #+0]
   \   000004C6   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   000004CA   0x8809             LDRH     R1,[R1, #+0]
   \   000004CC   0x4308             ORRS     R0,R1,R0
   \   000004CE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004D0   0x2800             CMP      R0,#+0
   \   000004D2   0xD14B             BNE.N    ??get_front_14
    881              { 
    882                //È«°×£¬Ö»ÓÐÊ®×ÖÍä
    883                if(IntegrationTime_Front<IT_ref)
   \   000004D4   0x.... 0x....      LDR.W    R0,??DataTable14_12
   \   000004D8   0x7800             LDRB     R0,[R0, #+0]
   \   000004DA   0x.... 0x....      LDR.W    R1,??DataTable14_13
   \   000004DE   0x7809             LDRB     R1,[R1, #+0]
   \   000004E0   0x4288             CMP      R0,R1
   \   000004E2   0xD21C             BCS.N    ??get_front_22
    884                {
    885                  //-m3-//-------------------
    886                  mq=1;
   \   000004E4   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   000004E8   0x2101             MOVS     R1,#+1
   \   000004EA   0x7001             STRB     R1,[R0, #+0]
    887                  
    888                  front_l_flag=front_l_fg_last;
   \   000004EC   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000004F0   0x.... 0x....      LDR.W    R1,??DataTable14
   \   000004F4   0x8809             LDRH     R1,[R1, #+0]
   \   000004F6   0x8001             STRH     R1,[R0, #+0]
    889                  front_r_flag=front_r_fg_last;
   \   000004F8   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   000004FC   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   00000500   0x8809             LDRH     R1,[R1, #+0]
   \   00000502   0x8001             STRH     R1,[R0, #+0]
    890                  
    891                  front_l=front_l_reference;
   \   00000504   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000508   0x.... 0x....      LDR.W    R1,??DataTable14_14
   \   0000050C   0x8809             LDRH     R1,[R1, #+0]
   \   0000050E   0x8001             STRH     R1,[R0, #+0]
    892                  front_r=front_r_reference;
   \   00000510   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000514   0x.... 0x....      LDR.W    R1,??DataTable14_15
   \   00000518   0x8809             LDRH     R1,[R1, #+0]
   \   0000051A   0x8001             STRH     R1,[R0, #+0]
   \   0000051C   0xE013             B.N      ??get_front_23
    893                  
    894                  //front_l=front_l_last;
    895                  //front_r=front_r_last;
    896                  
    897                  //if(ga_fg_last==1)  ga_fg=1;
    898                  //if(gl_fg_last==1)  gl_fg=1;
    899                  //if(gr_fg_last==1)  gr_fg=1;  
    900                }
    901                //È«ºÚ£¬ÇúÂÊ´óµÄÍä´¦
    902                else if(IntegrationTime_Front>IT_ref)
   \                     ??get_front_22:
   \   0000051E   0x.... 0x....      LDR.W    R0,??DataTable14_13
   \   00000522   0x7800             LDRB     R0,[R0, #+0]
   \   00000524   0x.... 0x....      LDR.W    R1,??DataTable14_12
   \   00000528   0x7809             LDRB     R1,[R1, #+0]
   \   0000052A   0x4288             CMP      R0,R1
   \   0000052C   0xD20B             BCS.N    ??get_front_23
    903                {
    904                  front_l=front_l_last;
   \   0000052E   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000532   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000536   0x8809             LDRH     R1,[R1, #+0]
   \   00000538   0x8001             STRH     R1,[R0, #+0]
    905                  front_r=front_r_last;
   \   0000053A   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   0000053E   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   00000542   0x8809             LDRH     R1,[R1, #+0]
   \   00000544   0x8001             STRH     R1,[R0, #+0]
    906                  
    907                  /*if(ga_fg_last==1)  ga_fg=1;
    908                  if(gl_fg_last==1)  gl_fg=1;
    909                  if(gr_fg_last==1)  gr_fg=1;*/ 
    910                }
    911                
    912                LR_count=0;
   \                     ??get_front_23:
   \   00000546   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000054A   0x2100             MOVS     R1,#+0
   \   0000054C   0x8001             STRH     R1,[R0, #+0]
    913                Lr_count=0;
   \   0000054E   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   00000552   0x2100             MOVS     R1,#+0
   \   00000554   0x8001             STRH     R1,[R0, #+0]
    914                lR_count=0;
   \   00000556   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   0000055A   0x2100             MOVS     R1,#+0
   \   0000055C   0x8001             STRH     R1,[R0, #+0]
    915                lr_count++;
   \   0000055E   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   00000562   0x8800             LDRH     R0,[R0, #+0]
   \   00000564   0x1C40             ADDS     R0,R0,#+1
   \   00000566   0x.... 0x....      LDR.W    R1,??DataTable13_13
   \   0000056A   0x8008             STRH     R0,[R1, #+0]
    916              }
    917              
    918              mq_last=mq;
   \                     ??get_front_14:
   \   0000056C   0x.... 0x....      LDR.W    R0,??DataTable13_14
   \   00000570   0x.... 0x....      LDR.W    R1,??DataTable13_3
   \   00000574   0x7809             LDRB     R1,[R1, #+0]
   \   00000576   0x7001             STRB     R1,[R0, #+0]
    919              
    920              if(rzop==1)
   \   00000578   0x.... 0x....      LDR.W    R0,??DataTable14_16
   \   0000057C   0x7800             LDRB     R0,[R0, #+0]
   \   0000057E   0x2801             CMP      R0,#+1
   \   00000580   0xF040 0x80F7      BNE.W    ??get_front_24
    921              {
    922              //-m2-//ÒÔÈüµÀ¿í¼°ÆäËûÅÐ¶ÏÈüµÀ¿í
    923              //ÓÒµ÷Í·-----------------------¶æ»úµÄÖÐÖµ
    924              if(Rdiaotou_flag==1)
   \   00000584   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000588   0x7800             LDRB     R0,[R0, #+0]
   \   0000058A   0x2801             CMP      R0,#+1
   \   0000058C   0xD167             BNE.N    ??get_front_25
    925              {
    926                //gl_fg=1;
    927                
    928                Rdiaotou_count++;
   \   0000058E   0x.... 0x....      LDR.W    R0,??DataTable14_17
   \   00000592   0x8800             LDRH     R0,[R0, #+0]
   \   00000594   0x1C40             ADDS     R0,R0,#+1
   \   00000596   0x.... 0x....      LDR.W    R1,??DataTable14_17
   \   0000059A   0x8008             STRH     R0,[R1, #+0]
    929                if(Rdiaotou_count<=3)//2 
   \   0000059C   0x.... 0x....      LDR.W    R0,??DataTable14_17
   \   000005A0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005A4   0x2804             CMP      R0,#+4
   \   000005A6   0xDB5A             BLT.N    ??get_front_25
    930                {}
    931                else if(Rdiaotou_count>3&&Rdiaotou_count<20)//30
   \   000005A8   0x.... 0x....      LDR.W    R0,??DataTable14_17
   \   000005AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005B0   0x1F00             SUBS     R0,R0,#+4
   \   000005B2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000005B4   0x2810             CMP      R0,#+16
   \   000005B6   0xD23A             BCS.N    ??get_front_26
    932                {                                        
    933                  if((front_r_last-front_l_last)<=(front_width+5))//1-ÓëÖ±µÀÈëÊ®×ÖÓÐ³åÍ» 2-¶à´Î½øÈë
   \   000005B8   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   000005BC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005C0   0x1D40             ADDS     R0,R0,#+5
   \   000005C2   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   000005C6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000005CA   0x.... 0x....      LDR.W    R2,??DataTable14_2
   \   000005CE   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000005D2   0x1A89             SUBS     R1,R1,R2
   \   000005D4   0x4288             CMP      R0,R1
   \   000005D6   0xDB03             BLT.N    ??get_front_27
    934                    Rendiao=1;
   \   000005D8   0x.... 0x....      LDR.W    R0,??DataTable14_18
   \   000005DC   0x2101             MOVS     R1,#+1
   \   000005DE   0x7001             STRB     R1,[R0, #+0]
    935                  
    936                  if(Rendiao==1)
   \                     ??get_front_27:
   \   000005E0   0x.... 0x....      LDR.W    R0,??DataTable14_18
   \   000005E4   0x7800             LDRB     R0,[R0, #+0]
   \   000005E6   0x2801             CMP      R0,#+1
   \   000005E8   0xD139             BNE.N    ??get_front_25
    937                  {
    938                    RHOLDdiao_flag=1;
   \   000005EA   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   000005EE   0x2101             MOVS     R1,#+1
   \   000005F0   0x7001             STRB     R1,[R0, #+0]
    939                    if(Rdiaotou_count<22)//22
   \   000005F2   0x.... 0x....      LDR.W    R0,??DataTable14_17
   \   000005F6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005FA   0x2816             CMP      R0,#+22
   \   000005FC   0xDA2F             BGE.N    ??get_front_25
    940                    {
    941                      front_l=157-front_width/2;
   \   000005FE   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   00000602   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000606   0x2102             MOVS     R1,#+2
   \   00000608   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000060C   0xF1D0 0x009D      RSBS     R0,R0,#+157
   \   00000610   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000614   0x8008             STRH     R0,[R1, #+0]
    942                      front_r=157+front_width/2;
   \   00000616   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   0000061A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000061E   0x2102             MOVS     R1,#+2
   \   00000620   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000624   0x309D             ADDS     R0,R0,#+157
   \   00000626   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   0000062A   0x8008             STRH     R0,[R1, #+0]
   \   0000062C   0xE017             B.N      ??get_front_25
    943                    }
    944                  } 
    945                }
    946                else 
    947                {
    948                  Rdiaotou_count=0;
   \                     ??get_front_26:
   \   0000062E   0x.... 0x....      LDR.W    R0,??DataTable14_17
   \   00000632   0x2100             MOVS     R1,#+0
   \   00000634   0x8001             STRH     R1,[R0, #+0]
    949                  Rdiaotou_flag=0;
   \   00000636   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   0000063A   0x2100             MOVS     R1,#+0
   \   0000063C   0x7001             STRB     R1,[R0, #+0]
    950                  Rendiao=0;
   \   0000063E   0x.... 0x....      LDR.W    R0,??DataTable14_18
   \   00000642   0x2100             MOVS     R1,#+0
   \   00000644   0x7001             STRB     R1,[R0, #+0]
    951                  RHOLDdiao_flag=0;
   \   00000646   0x.... 0x....      LDR.W    R0,??DataTable13_6
   \   0000064A   0x2100             MOVS     R1,#+0
   \   0000064C   0x7001             STRB     R1,[R0, #+0]
    952                  rensha_count=0; 
   \   0000064E   0x.... 0x....      LDR.W    R0,??DataTable14_19
   \   00000652   0x2100             MOVS     R1,#+0
   \   00000654   0x8001             STRH     R1,[R0, #+0]
    953                  //---
    954                  rzguo_flag=1;
   \   00000656   0x.... 0x....      LDR.W    R0,??DataTable14_20
   \   0000065A   0x2101             MOVS     R1,#+1
   \   0000065C   0x7001             STRB     R1,[R0, #+0]
    955                }
    956              }
    957              
    958              if(Rdiaotou_flag==0&&RHOLDdiao_flag==0)
   \                     ??get_front_25:
   \   0000065E   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000662   0x7800             LDRB     R0,[R0, #+0]
   \   00000664   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000668   0x7809             LDRB     R1,[R1, #+0]
   \   0000066A   0x4308             ORRS     R0,R1,R0
   \   0000066C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000066E   0x2800             CMP      R0,#+0
   \   00000670   0xD103             BNE.N    ??get_front_28
    959              {
    960                  Rdiaotou_count=0;
   \   00000672   0x.... 0x....      LDR.W    R0,??DataTable14_17
   \   00000676   0x2100             MOVS     R1,#+0
   \   00000678   0x8001             STRH     R1,[R0, #+0]
    961              }
    962          
    963              //×óµ÷Í·
    964              if(Ldiaotou_flag==1)
   \                     ??get_front_28:
   \   0000067A   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   0000067E   0x7800             LDRB     R0,[R0, #+0]
   \   00000680   0x2801             CMP      R0,#+1
   \   00000682   0xD168             BNE.N    ??get_front_29
    965              {
    966                //gr_fg=1;
    967                Ldiaotou_count++;
   \   00000684   0x.... 0x....      LDR.W    R0,??DataTable14_21
   \   00000688   0x8800             LDRH     R0,[R0, #+0]
   \   0000068A   0x1C40             ADDS     R0,R0,#+1
   \   0000068C   0x.... 0x....      LDR.W    R1,??DataTable14_21
   \   00000690   0x8008             STRH     R0,[R1, #+0]
    968                if(Ldiaotou_count<=3) 
   \   00000692   0x.... 0x....      LDR.W    R0,??DataTable14_21
   \   00000696   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000069A   0x2804             CMP      R0,#+4
   \   0000069C   0xDB5B             BLT.N    ??get_front_29
    969                {}
    970                else if(Ldiaotou_count>3&&Ldiaotou_count<30)//30
   \   0000069E   0x.... 0x....      LDR.W    R0,??DataTable14_21
   \   000006A2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000006A6   0x1F00             SUBS     R0,R0,#+4
   \   000006A8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000006AA   0x281A             CMP      R0,#+26
   \   000006AC   0xD23B             BCS.N    ??get_front_30
    971                {                                         
    972                  if((front_r_last-front_l_last)<=(front_width+5))//ÓëÖ±µÀÈëÊ®×ÖÓÐ³åÍ»
   \   000006AE   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   000006B2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000006B6   0x1D40             ADDS     R0,R0,#+5
   \   000006B8   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   000006BC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000006C0   0x.... 0x....      LDR.W    R2,??DataTable14_2
   \   000006C4   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000006C8   0x1A89             SUBS     R1,R1,R2
   \   000006CA   0x4288             CMP      R0,R1
   \   000006CC   0xDB03             BLT.N    ??get_front_31
    973                    Lendiao=1;
   \   000006CE   0x.... 0x....      LDR.W    R0,??DataTable14_22
   \   000006D2   0x2101             MOVS     R1,#+1
   \   000006D4   0x7001             STRB     R1,[R0, #+0]
    974                  
    975                  if(Lendiao==1)
   \                     ??get_front_31:
   \   000006D6   0x.... 0x....      LDR.W    R0,??DataTable14_22
   \   000006DA   0x7800             LDRB     R0,[R0, #+0]
   \   000006DC   0x2801             CMP      R0,#+1
   \   000006DE   0xD13A             BNE.N    ??get_front_29
    976                  {
    977                    LHOLDdiao_flag=1;
   \   000006E0   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   000006E4   0x2101             MOVS     R1,#+1
   \   000006E6   0x7001             STRB     R1,[R0, #+0]
    978                    if(Ldiaotou_count<22)//22
   \   000006E8   0x.... 0x....      LDR.W    R0,??DataTable14_21
   \   000006EC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000006F0   0x2816             CMP      R0,#+22
   \   000006F2   0xDA30             BGE.N    ??get_front_29
    979                    {
    980                      front_l=-30-front_width/2;
   \   000006F4   0xF07F 0x001D      MVNS     R0,#+29
   \   000006F8   0x.... 0x....      LDR.W    R1,??DataTable13_16
   \   000006FC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000700   0x2202             MOVS     R2,#+2
   \   00000702   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000706   0x1A40             SUBS     R0,R0,R1
   \   00000708   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   0000070C   0x8008             STRH     R0,[R1, #+0]
    981                      front_r=-30+front_width/2;
   \   0000070E   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   00000712   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000716   0x2102             MOVS     R1,#+2
   \   00000718   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000071C   0x381E             SUBS     R0,R0,#+30
   \   0000071E   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   00000722   0x8008             STRH     R0,[R1, #+0]
   \   00000724   0xE017             B.N      ??get_front_29
    982                    } 
    983                  }
    984                }
    985                else 
    986                {
    987                  Ldiaotou_count=0;
   \                     ??get_front_30:
   \   00000726   0x.... 0x....      LDR.W    R0,??DataTable14_21
   \   0000072A   0x2100             MOVS     R1,#+0
   \   0000072C   0x8001             STRH     R1,[R0, #+0]
    988                  Ldiaotou_flag=0;
   \   0000072E   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   00000732   0x2100             MOVS     R1,#+0
   \   00000734   0x7001             STRB     R1,[R0, #+0]
    989                  Lendiao=0;
   \   00000736   0x.... 0x....      LDR.W    R0,??DataTable14_22
   \   0000073A   0x2100             MOVS     R1,#+0
   \   0000073C   0x7001             STRB     R1,[R0, #+0]
    990                  LHOLDdiao_flag=0;
   \   0000073E   0x.... 0x....      LDR.W    R0,??DataTable13_4
   \   00000742   0x2100             MOVS     R1,#+0
   \   00000744   0x7001             STRB     R1,[R0, #+0]
    991                  rensha_count=0;
   \   00000746   0x.... 0x....      LDR.W    R0,??DataTable14_19
   \   0000074A   0x2100             MOVS     R1,#+0
   \   0000074C   0x8001             STRH     R1,[R0, #+0]
    992                  //---
    993                  rzguo_flag=1;
   \   0000074E   0x.... 0x....      LDR.W    R0,??DataTable14_20
   \   00000752   0x2101             MOVS     R1,#+1
   \   00000754   0x7001             STRB     R1,[R0, #+0]
    994                }
    995              }
    996              
    997              if(Ldiaotou_flag==0&&LHOLDdiao_flag==0)
   \                     ??get_front_29:
   \   00000756   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   0000075A   0x7800             LDRB     R0,[R0, #+0]
   \   0000075C   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   00000760   0x7809             LDRB     R1,[R1, #+0]
   \   00000762   0x4308             ORRS     R0,R1,R0
   \   00000764   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000766   0x2800             CMP      R0,#+0
   \   00000768   0xD103             BNE.N    ??get_front_24
    998              {
    999                  Ldiaotou_count=0;//ÊÇÓÉÓÚÎ´ÄÜ¼°Ê±ÇåÁãÂð£¿
   \   0000076A   0x.... 0x....      LDR.W    R0,??DataTable14_21
   \   0000076E   0x2100             MOVS     R1,#+0
   \   00000770   0x8001             STRH     R1,[R0, #+0]
   1000              }
   1001            }
   1002            
   1003            //³öÊ®×Ö------------------------------------
   1004            //-m1-//
   1005            if((front_l+front_r)/2-front_reference>0)
   \                     ??get_front_24:
   \   00000772   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000776   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000077A   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   0000077E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000782   0x1808             ADDS     R0,R1,R0
   \   00000784   0x2102             MOVS     R1,#+2
   \   00000786   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000078A   0x.... 0x....      LDR.W    R1,??DataTable15
   \   0000078E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000792   0x1A40             SUBS     R0,R0,R1
   \   00000794   0x2801             CMP      R0,#+1
   \   00000796   0xDB17             BLT.N    ??get_front_32
   1006            {
   1007              if((front_l_flag == 0)&&(front_r_flag == 1))
   \   00000798   0x....             LDR.N    R0,??DataTable12_3
   \   0000079A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000079E   0x2800             CMP      R0,#+0
   \   000007A0   0xD129             BNE.N    ??get_front_33
   \   000007A2   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   000007A6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000007AA   0x2801             CMP      R0,#+1
   \   000007AC   0xD123             BNE.N    ??get_front_33
   1008              {
   1009                front_l=front_l_last;
   \   000007AE   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   000007B2   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   000007B6   0x8809             LDRH     R1,[R1, #+0]
   \   000007B8   0x8001             STRH     R1,[R0, #+0]
   1010                front_r=front_r_last;
   \   000007BA   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000007BE   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   000007C2   0x8809             LDRH     R1,[R1, #+0]
   \   000007C4   0x8001             STRH     R1,[R0, #+0]
   \   000007C6   0xE016             B.N      ??get_front_33
   1011              }
   1012            }
   1013            else
   1014            {
   1015              if((front_l_flag == 1)&&(front_r_flag == 0))
   \                     ??get_front_32:
   \   000007C8   0x....             LDR.N    R0,??DataTable12_3
   \   000007CA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000007CE   0x2801             CMP      R0,#+1
   \   000007D0   0xD111             BNE.N    ??get_front_33
   \   000007D2   0x.... 0x....      LDR.W    R0,??DataTable13_8
   \   000007D6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000007DA   0x2800             CMP      R0,#+0
   \   000007DC   0xD10B             BNE.N    ??get_front_33
   1016              {
   1017                front_l=front_l_last;
   \   000007DE   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   000007E2   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   000007E6   0x8809             LDRH     R1,[R1, #+0]
   \   000007E8   0x8001             STRH     R1,[R0, #+0]
   1018                front_r=front_r_last;
   \   000007EA   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000007EE   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   000007F2   0x8809             LDRH     R1,[R1, #+0]
   \   000007F4   0x8001             STRH     R1,[R0, #+0]
   1019              }
   1020            }
   1021          
   1022            //!!!³ÌÐòbug,ÔÚÊ®×ÖÍäÐ±³å³öÈüµÀ
   1023            if(front_l>front_r)
   \                     ??get_front_33:
   \   000007F6   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000007FA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000007FE   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000802   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000806   0x4288             CMP      R0,R1
   \   00000808   0xDA0B             BGE.N    ??get_front_34
   1024            {
   1025                front_l=front_l_last;
   \   0000080A   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000080E   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000812   0x8809             LDRH     R1,[R1, #+0]
   \   00000814   0x8001             STRH     R1,[R0, #+0]
   1026                front_r=front_r_last;
   \   00000816   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   0000081A   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000081E   0x8809             LDRH     R1,[R1, #+0]
   \   00000820   0x8001             STRH     R1,[R0, #+0]
   1027            }
   1028            //----------------------------------------------
   1029            
   1030            //Ö±µÀÈëÍä
   1031            /*
   1032            1-Éè¶¯Ì¬P
   1033            2-Æ½ÒÆÏñËØµã
   1034            */
   1035            //-----------------------------------
   1036              cl_f = (front_l+front_r)/2;
   \                     ??get_front_34:
   \   00000822   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000826   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000082A   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   0000082E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000832   0x1808             ADDS     R0,R1,R0
   \   00000834   0x2102             MOVS     R1,#+2
   \   00000836   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000083A   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   0000083E   0x8008             STRH     R0,[R1, #+0]
   1037              front_OFFSET = cl_f - front_reference;
   \   00000840   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000844   0x8800             LDRH     R0,[R0, #+0]
   \   00000846   0x.... 0x....      LDR.W    R1,??DataTable15
   \   0000084A   0x8809             LDRH     R1,[R1, #+0]
   \   0000084C   0x1A40             SUBS     R0,R0,R1
   \   0000084E   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   00000852   0x8008             STRH     R0,[R1, #+0]
   1038          
   1039              ga_fg_last=ga_fg;
   \   00000854   0x.... 0x....      LDR.W    R0,??DataTable15_3
   \   00000858   0x....             LDR.N    R1,??DataTable13
   \   0000085A   0x7809             LDRB     R1,[R1, #+0]
   \   0000085C   0x7001             STRB     R1,[R0, #+0]
   1040              gl_fg_last=gl_fg;
   \   0000085E   0x.... 0x....      LDR.W    R0,??DataTable15_4
   \   00000862   0x....             LDR.N    R1,??DataTable13_1
   \   00000864   0x7809             LDRB     R1,[R1, #+0]
   \   00000866   0x7001             STRB     R1,[R0, #+0]
   1041              gr_fg_last=gr_fg;
   \   00000868   0x.... 0x....      LDR.W    R0,??DataTable15_5
   \   0000086C   0x....             LDR.N    R1,??DataTable13_2
   \   0000086E   0x7809             LDRB     R1,[R1, #+0]
   \   00000870   0x7001             STRB     R1,[R0, #+0]
   1042              
   1043              cl_f_pre = cl_f;
   \   00000872   0x.... 0x....      LDR.W    R0,??DataTable14_3
   \   00000876   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   0000087A   0x8809             LDRH     R1,[R1, #+0]
   \   0000087C   0x8001             STRH     R1,[R0, #+0]
   1044              
   1045              front_l_fg_last=front_l_flag;
   \   0000087E   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000882   0x....             LDR.N    R1,??DataTable12_3
   \   00000884   0x8809             LDRH     R1,[R1, #+0]
   \   00000886   0x8001             STRH     R1,[R0, #+0]
   1046              front_r_fg_last=front_r_flag;
   \   00000888   0x.... 0x....      LDR.W    R0,??DataTable14_1
   \   0000088C   0x....             LDR.N    R1,??DataTable13_8
   \   0000088E   0x8809             LDRH     R1,[R1, #+0]
   \   00000890   0x8001             STRH     R1,[R0, #+0]
   1047              
   1048              front_l_pre4=front_l_pre3;
   \   00000892   0x.... 0x....      LDR.W    R0,??DataTable15_6
   \   00000896   0x.... 0x....      LDR.W    R1,??DataTable15_7
   \   0000089A   0x8809             LDRH     R1,[R1, #+0]
   \   0000089C   0x8001             STRH     R1,[R0, #+0]
   1049              front_r_pre4=front_r_pre3;
   \   0000089E   0x.... 0x....      LDR.W    R0,??DataTable15_8
   \   000008A2   0x.... 0x....      LDR.W    R1,??DataTable15_9
   \   000008A6   0x8809             LDRH     R1,[R1, #+0]
   \   000008A8   0x8001             STRH     R1,[R0, #+0]
   1050              front_l_pre3=front_l_pre2;
   \   000008AA   0x.... 0x....      LDR.W    R0,??DataTable15_7
   \   000008AE   0x.... 0x....      LDR.W    R1,??DataTable15_10
   \   000008B2   0x8809             LDRH     R1,[R1, #+0]
   \   000008B4   0x8001             STRH     R1,[R0, #+0]
   1051              front_r_pre3=front_r_pre2;
   \   000008B6   0x.... 0x....      LDR.W    R0,??DataTable15_9
   \   000008BA   0x.... 0x....      LDR.W    R1,??DataTable15_11
   \   000008BE   0x8809             LDRH     R1,[R1, #+0]
   \   000008C0   0x8001             STRH     R1,[R0, #+0]
   1052              front_l_pre2=front_l_pre1;
   \   000008C2   0x.... 0x....      LDR.W    R0,??DataTable15_10
   \   000008C6   0x.... 0x....      LDR.W    R1,??DataTable15_12
   \   000008CA   0x8809             LDRH     R1,[R1, #+0]
   \   000008CC   0x8001             STRH     R1,[R0, #+0]
   1053              front_r_pre2=front_r_pre1;
   \   000008CE   0x.... 0x....      LDR.W    R0,??DataTable15_11
   \   000008D2   0x.... 0x....      LDR.W    R1,??DataTable15_13
   \   000008D6   0x8809             LDRH     R1,[R1, #+0]
   \   000008D8   0x8001             STRH     R1,[R0, #+0]
   1054              front_l_pre1=front_l_last;
   \   000008DA   0x.... 0x....      LDR.W    R0,??DataTable15_12
   \   000008DE   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   000008E2   0x8809             LDRH     R1,[R1, #+0]
   \   000008E4   0x8001             STRH     R1,[R0, #+0]
   1055              front_r_pre1=front_r_last;
   \   000008E6   0x.... 0x....      LDR.W    R0,??DataTable15_13
   \   000008EA   0x....             LDR.N    R1,??DataTable13_15
   \   000008EC   0x8809             LDRH     R1,[R1, #+0]
   \   000008EE   0x8001             STRH     R1,[R0, #+0]
   1056              front_l_last=front_l;
   \   000008F0   0x.... 0x....      LDR.W    R0,??DataTable14_2
   \   000008F4   0x....             LDR.N    R1,??DataTable13_7
   \   000008F6   0x8809             LDRH     R1,[R1, #+0]
   \   000008F8   0x8001             STRH     R1,[R0, #+0]
   1057              front_r_last=front_r;
   \   000008FA   0x....             LDR.N    R0,??DataTable13_15
   \   000008FC   0x....             LDR.N    R1,??DataTable13_9
   \   000008FE   0x8809             LDRH     R1,[R1, #+0]
   \   00000900   0x8001             STRH     R1,[R0, #+0]
   1058              
   1059              front_OFFSET_pre10 = front_OFFSET_pre9;
   \   00000902   0x.... 0x....      LDR.W    R0,??DataTable16
   \   00000906   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   0000090A   0x8809             LDRH     R1,[R1, #+0]
   \   0000090C   0x8001             STRH     R1,[R0, #+0]
   1060              front_OFFSET_pre9 = front_OFFSET_pre8;
   \   0000090E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000912   0x.... 0x....      LDR.W    R1,??DataTable16_2
   \   00000916   0x8809             LDRH     R1,[R1, #+0]
   \   00000918   0x8001             STRH     R1,[R0, #+0]
   1061              front_OFFSET_pre8 = front_OFFSET_pre7;
   \   0000091A   0x.... 0x....      LDR.W    R0,??DataTable16_2
   \   0000091E   0x.... 0x....      LDR.W    R1,??DataTable16_3
   \   00000922   0x8809             LDRH     R1,[R1, #+0]
   \   00000924   0x8001             STRH     R1,[R0, #+0]
   1062              front_OFFSET_pre7 = front_OFFSET_pre6;
   \   00000926   0x.... 0x....      LDR.W    R0,??DataTable16_3
   \   0000092A   0x.... 0x....      LDR.W    R1,??DataTable16_4
   \   0000092E   0x8809             LDRH     R1,[R1, #+0]
   \   00000930   0x8001             STRH     R1,[R0, #+0]
   1063              front_OFFSET_pre6 = front_OFFSET_pre5;
   \   00000932   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   00000936   0x.... 0x....      LDR.W    R1,??DataTable16_5
   \   0000093A   0x8809             LDRH     R1,[R1, #+0]
   \   0000093C   0x8001             STRH     R1,[R0, #+0]
   1064              front_OFFSET_pre5 = front_OFFSET_pre4;
   \   0000093E   0x.... 0x....      LDR.W    R0,??DataTable16_5
   \   00000942   0x.... 0x....      LDR.W    R1,??DataTable16_6
   \   00000946   0x8809             LDRH     R1,[R1, #+0]
   \   00000948   0x8001             STRH     R1,[R0, #+0]
   1065              front_OFFSET_pre4 = front_OFFSET_pre3;
   \   0000094A   0x.... 0x....      LDR.W    R0,??DataTable16_6
   \   0000094E   0x.... 0x....      LDR.W    R1,??DataTable16_7
   \   00000952   0x8809             LDRH     R1,[R1, #+0]
   \   00000954   0x8001             STRH     R1,[R0, #+0]
   1066              front_OFFSET_pre3 = front_OFFSET_pre2;
   \   00000956   0x.... 0x....      LDR.W    R0,??DataTable16_7
   \   0000095A   0x.... 0x....      LDR.W    R1,??DataTable16_8
   \   0000095E   0x8809             LDRH     R1,[R1, #+0]
   \   00000960   0x8001             STRH     R1,[R0, #+0]
   1067              front_OFFSET_pre2 = front_OFFSET_pre1;
   \   00000962   0x.... 0x....      LDR.W    R0,??DataTable16_8
   \   00000966   0x.... 0x....      LDR.W    R1,??DataTable16_9
   \   0000096A   0x8809             LDRH     R1,[R1, #+0]
   \   0000096C   0x8001             STRH     R1,[R0, #+0]
   1068              front_OFFSET_pre1 = front_OFFSET;
   \   0000096E   0x.... 0x....      LDR.W    R0,??DataTable16_9
   \   00000972   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   00000976   0x8809             LDRH     R1,[R1, #+0]
   \   00000978   0x8001             STRH     R1,[R0, #+0]
   1069              
   1070              //d_err1 = front_OFFSET - front_OFFSET_pre1;ºãÎª0
   1071              d_err1 = front_OFFSET_pre1 - front_OFFSET_pre2;
   \   0000097A   0x.... 0x....      LDR.W    R0,??DataTable16_9
   \   0000097E   0x8800             LDRH     R0,[R0, #+0]
   \   00000980   0x.... 0x....      LDR.W    R1,??DataTable16_8
   \   00000984   0x8809             LDRH     R1,[R1, #+0]
   \   00000986   0x1A40             SUBS     R0,R0,R1
   \   00000988   0x.... 0x....      LDR.W    R1,??DataTable16_10
   \   0000098C   0x8008             STRH     R0,[R1, #+0]
   1072              d_err2 = front_OFFSET_pre2 - front_OFFSET_pre3;
   \   0000098E   0x.... 0x....      LDR.W    R0,??DataTable16_8
   \   00000992   0x8800             LDRH     R0,[R0, #+0]
   \   00000994   0x.... 0x....      LDR.W    R1,??DataTable16_7
   \   00000998   0x8809             LDRH     R1,[R1, #+0]
   \   0000099A   0x1A40             SUBS     R0,R0,R1
   \   0000099C   0x.... 0x....      LDR.W    R1,??DataTable16_11
   \   000009A0   0x8008             STRH     R0,[R1, #+0]
   1073              d_err3 = front_OFFSET_pre3 - front_OFFSET_pre4;
   \   000009A2   0x.... 0x....      LDR.W    R0,??DataTable16_7
   \   000009A6   0x8800             LDRH     R0,[R0, #+0]
   \   000009A8   0x.... 0x....      LDR.W    R1,??DataTable16_6
   \   000009AC   0x8809             LDRH     R1,[R1, #+0]
   \   000009AE   0x1A40             SUBS     R0,R0,R1
   \   000009B0   0x.... 0x....      LDR.W    R1,??DataTable16_12
   \   000009B4   0x8008             STRH     R0,[R1, #+0]
   1074              d_err4 = front_OFFSET_pre4 - front_OFFSET_pre5;
   \   000009B6   0x.... 0x....      LDR.W    R0,??DataTable16_6
   \   000009BA   0x8800             LDRH     R0,[R0, #+0]
   \   000009BC   0x.... 0x....      LDR.W    R1,??DataTable16_5
   \   000009C0   0x8809             LDRH     R1,[R1, #+0]
   \   000009C2   0x1A40             SUBS     R0,R0,R1
   \   000009C4   0x.... 0x....      LDR.W    R1,??DataTable16_13
   \   000009C8   0x8008             STRH     R0,[R1, #+0]
   1075              d_err5 = front_OFFSET_pre5 - front_OFFSET_pre6;
   \   000009CA   0x.... 0x....      LDR.W    R0,??DataTable16_5
   \   000009CE   0x8800             LDRH     R0,[R0, #+0]
   \   000009D0   0x.... 0x....      LDR.W    R1,??DataTable16_4
   \   000009D4   0x8809             LDRH     R1,[R1, #+0]
   \   000009D6   0x1A40             SUBS     R0,R0,R1
   \   000009D8   0x.... 0x....      LDR.W    R1,??DataTable16_14
   \   000009DC   0x8008             STRH     R0,[R1, #+0]
   1076              d_err6 = front_OFFSET_pre6 - front_OFFSET_pre7;
   \   000009DE   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   000009E2   0x8800             LDRH     R0,[R0, #+0]
   \   000009E4   0x.... 0x....      LDR.W    R1,??DataTable16_3
   \   000009E8   0x8809             LDRH     R1,[R1, #+0]
   \   000009EA   0x1A40             SUBS     R0,R0,R1
   \   000009EC   0x.... 0x....      LDR.W    R1,??DataTable16_15
   \   000009F0   0x8008             STRH     R0,[R1, #+0]
   1077              d_err7 = front_OFFSET_pre7 - front_OFFSET_pre8;
   \   000009F2   0x.... 0x....      LDR.W    R0,??DataTable16_3
   \   000009F6   0x8800             LDRH     R0,[R0, #+0]
   \   000009F8   0x.... 0x....      LDR.W    R1,??DataTable16_2
   \   000009FC   0x8809             LDRH     R1,[R1, #+0]
   \   000009FE   0x1A40             SUBS     R0,R0,R1
   \   00000A00   0x.... 0x....      LDR.W    R1,??DataTable16_16
   \   00000A04   0x8008             STRH     R0,[R1, #+0]
   1078              d_err8 = front_OFFSET_pre8 - front_OFFSET_pre9;
   \   00000A06   0x.... 0x....      LDR.W    R0,??DataTable16_2
   \   00000A0A   0x8800             LDRH     R0,[R0, #+0]
   \   00000A0C   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000A10   0x8809             LDRH     R1,[R1, #+0]
   \   00000A12   0x1A40             SUBS     R0,R0,R1
   \   00000A14   0x.... 0x....      LDR.W    R1,??DataTable16_17
   \   00000A18   0x8008             STRH     R0,[R1, #+0]
   1079              d_err9 = front_OFFSET_pre9 - front_OFFSET_pre10;   
   \   00000A1A   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000A1E   0x8800             LDRH     R0,[R0, #+0]
   \   00000A20   0x.... 0x....      LDR.W    R1,??DataTable16
   \   00000A24   0x8809             LDRH     R1,[R1, #+0]
   \   00000A26   0x1A40             SUBS     R0,R0,R1
   \   00000A28   0x.... 0x....      LDR.W    R1,??DataTable18
   \   00000A2C   0x8008             STRH     R0,[R1, #+0]
   1080          }
   \   00000A2E   0xBD10             POP      {R4,PC}          ;; return
   1081          

   \                                 In section .text, align 2, keep-with-next
   1082          void route_type_F()
   1083          {
   \                     route_type_F:
   \   00000000   0xB430             PUSH     {R4,R5}
   1084            char i;
   1085            char fch_first=3;//ÈüµÀ¹ý¶É
   \   00000002   0x2003             MOVS     R0,#+3
   1086            char label_count=6;
   \   00000004   0x2106             MOVS     R1,#+6
   1087            char fch_av_count=0;
   \   00000006   0x2200             MOVS     R2,#+0
   1088            
   1089            fangcha_f=0;
   \   00000008   0x.... 0x....      LDR.W    R3,??DataTable16_18
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0x801C             STRH     R4,[R3, #+0]
   1090            fangcha_qian_f=0;
   \   00000010   0x.... 0x....      LDR.W    R3,??DataTable16_19
   \   00000014   0x2400             MOVS     R4,#+0
   \   00000016   0x801C             STRH     R4,[R3, #+0]
   1091            fangcha_hou_f=0;
   \   00000018   0x.... 0x....      LDR.W    R3,??DataTable18_1
   \   0000001C   0x2400             MOVS     R4,#+0
   \   0000001E   0x801C             STRH     R4,[R3, #+0]
   1092            
   1093            fch_av_count = label_count - fch_first+1;
   \   00000020   0x1A0B             SUBS     R3,R1,R0
   \   00000022   0x1C5B             ADDS     R3,R3,#+1
   \   00000024   0x001A             MOVS     R2,R3
   1094            //Ë¢ÐÂ
   1095            route_f[0]=front_OFFSET;
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable16_20
   \   0000002A   0x.... 0x....      LDR.W    R4,??DataTable15_2
   \   0000002E   0x8824             LDRH     R4,[R4, #+0]
   \   00000030   0x801C             STRH     R4,[R3, #+0]
   1096            for(i=100;i>0;i--)
   \   00000032   0x2364             MOVS     R3,#+100
   \   00000034   0xE00C             B.N      ??route_type_F_0
   1097            {
   1098              route_f[i] = route_f[i-1];
   \                     ??route_type_F_1:
   \   00000036   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000038   0x.... 0x....      LDR.W    R4,??DataTable16_20
   \   0000003C   0xEB14 0x0443      ADDS     R4,R4,R3, LSL #+1
   \   00000040   0xF834 0x4C02      LDRH     R4,[R4, #-2]
   \   00000044   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000046   0x.... 0x....      LDR.W    R5,??DataTable16_20
   \   0000004A   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1099            }
   \   0000004E   0x1E5B             SUBS     R3,R3,#+1
   \                     ??route_type_F_0:
   \   00000050   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000052   0x2B01             CMP      R3,#+1
   \   00000054   0xD2EF             BCS.N    ??route_type_F_1
   1100            //Ç°3
   1101            for(i=0;i<3;i++)
   \   00000056   0x2300             MOVS     R3,#+0
   \   00000058   0xE00C             B.N      ??route_type_F_2
   1102            {
   1103              route_ave_f += route_f[i]; 
   \                     ??route_type_F_3:
   \   0000005A   0x.... 0x....      LDR.W    R4,??DataTable16_21
   \   0000005E   0x8824             LDRH     R4,[R4, #+0]
   \   00000060   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000062   0x.... 0x....      LDR.W    R5,??DataTable16_20
   \   00000066   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000006A   0x192C             ADDS     R4,R5,R4
   \   0000006C   0x.... 0x....      LDR.W    R5,??DataTable16_21
   \   00000070   0x802C             STRH     R4,[R5, #+0]
   1104            }
   \   00000072   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_2:
   \   00000074   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000076   0x2B03             CMP      R3,#+3
   \   00000078   0xD3EF             BCC.N    ??route_type_F_3
   1105            route_ave_f = route_ave_f/3;
   \   0000007A   0x.... 0x....      LDR.W    R3,??DataTable16_21
   \   0000007E   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000082   0x2403             MOVS     R4,#+3
   \   00000084   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   00000088   0x.... 0x....      LDR.W    R4,??DataTable16_21
   \   0000008C   0x8023             STRH     R3,[R4, #+0]
   1106            
   1107            for(i=0;i<3;i++)
   \   0000008E   0x2300             MOVS     R3,#+0
   \   00000090   0xE010             B.N      ??route_type_F_4
   1108            {
   1109              chafang_f[i] = route_f[i]*route_f[i];//changshi
   \                     ??route_type_F_5:
   \   00000092   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000094   0x.... 0x....      LDR.W    R4,??DataTable16_20
   \   00000098   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   0000009C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000009E   0x.... 0x....      LDR.W    R5,??DataTable16_20
   \   000000A2   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   000000A6   0x436C             MULS     R4,R5,R4
   \   000000A8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000AA   0x.... 0x....      LDR.W    R5,??DataTable16_22
   \   000000AE   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1110            }
   \   000000B2   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_4:
   \   000000B4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000B6   0x2B03             CMP      R3,#+3
   \   000000B8   0xD3EB             BCC.N    ??route_type_F_5
   1111            for(i=0;i<3;i++)
   \   000000BA   0x2300             MOVS     R3,#+0
   \   000000BC   0xE00C             B.N      ??route_type_F_6
   1112            {
   1113              fangcha_f += chafang_f[i]; 
   \                     ??route_type_F_7:
   \   000000BE   0x.... 0x....      LDR.W    R4,??DataTable16_18
   \   000000C2   0x8824             LDRH     R4,[R4, #+0]
   \   000000C4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000C6   0x.... 0x....      LDR.W    R5,??DataTable16_22
   \   000000CA   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   000000CE   0x192C             ADDS     R4,R5,R4
   \   000000D0   0x.... 0x....      LDR.W    R5,??DataTable16_18
   \   000000D4   0x802C             STRH     R4,[R5, #+0]
   1114            }
   \   000000D6   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_6:
   \   000000D8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000DA   0x2B03             CMP      R3,#+3
   \   000000DC   0xD3EF             BCC.N    ??route_type_F_7
   1115            fangcha_qian_f = fangcha_f/3;
   \   000000DE   0x.... 0x....      LDR.W    R3,??DataTable16_18
   \   000000E2   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   000000E6   0x2403             MOVS     R4,#+3
   \   000000E8   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   000000EC   0x.... 0x....      LDR.W    R4,??DataTable16_19
   \   000000F0   0x8023             STRH     R3,[R4, #+0]
   1116            
   1117            
   1118            //Çå0
   1119            route_ave_f=0;
   \   000000F2   0x.... 0x....      LDR.W    R3,??DataTable16_21
   \   000000F6   0x2400             MOVS     R4,#+0
   \   000000F8   0x801C             STRH     R4,[R3, #+0]
   1120            for(i=0;i<5;i++)
   \   000000FA   0x2300             MOVS     R3,#+0
   \   000000FC   0xE006             B.N      ??route_type_F_8
   1121            {
   1122              chafang_f[i] = 0;
   \                     ??route_type_F_9:
   \   000000FE   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000100   0x.... 0x....      LDR.W    R4,??DataTable16_22
   \   00000104   0x2500             MOVS     R5,#+0
   \   00000106   0xF824 0x5013      STRH     R5,[R4, R3, LSL #+1]
   1123            }
   \   0000010A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_8:
   \   0000010C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000010E   0x2B05             CMP      R3,#+5
   \   00000110   0xD3F5             BCC.N    ??route_type_F_9
   1124            fangcha_f=0;
   \   00000112   0x.... 0x....      LDR.W    R3,??DataTable16_18
   \   00000116   0x2400             MOVS     R4,#+0
   \   00000118   0x801C             STRH     R4,[R3, #+0]
   1125            
   1126            //ºóÐø
   1127            for(i=fch_first;i<label_count;i++)
   \   0000011A   0x0003             MOVS     R3,R0
   \   0000011C   0xE00C             B.N      ??route_type_F_10
   1128            {
   1129              route_ave_f += route_f[i]; 
   \                     ??route_type_F_11:
   \   0000011E   0x.... 0x....      LDR.W    R4,??DataTable16_21
   \   00000122   0x8824             LDRH     R4,[R4, #+0]
   \   00000124   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000126   0x.... 0x....      LDR.W    R5,??DataTable16_20
   \   0000012A   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000012E   0x192C             ADDS     R4,R5,R4
   \   00000130   0x.... 0x....      LDR.W    R5,??DataTable16_21
   \   00000134   0x802C             STRH     R4,[R5, #+0]
   1130            }
   \   00000136   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_10:
   \   00000138   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000013A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013C   0x428B             CMP      R3,R1
   \   0000013E   0xD3EE             BCC.N    ??route_type_F_11
   1131            route_ave_f = route_ave_f/label_count;
   \   00000140   0x.... 0x....      LDR.W    R3,??DataTable16_21
   \   00000144   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000148   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014A   0xFB93 0xF3F1      SDIV     R3,R3,R1
   \   0000014E   0x.... 0x....      LDR.W    R4,??DataTable16_21
   \   00000152   0x8023             STRH     R3,[R4, #+0]
   1132            
   1133            for(i=fch_first;i<label_count;i++)
   \   00000154   0x0003             MOVS     R3,R0
   \   00000156   0xE010             B.N      ??route_type_F_12
   1134            {
   1135              chafang_f[i] = route_f[i]*route_f[i];
   \                     ??route_type_F_13:
   \   00000158   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000015A   0x.... 0x....      LDR.W    R4,??DataTable16_20
   \   0000015E   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   00000162   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000164   0x.... 0x....      LDR.W    R5,??DataTable16_20
   \   00000168   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000016C   0x436C             MULS     R4,R5,R4
   \   0000016E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000170   0x.... 0x....      LDR.W    R5,??DataTable16_22
   \   00000174   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1136            }
   \   00000178   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_12:
   \   0000017A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000017C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000017E   0x428B             CMP      R3,R1
   \   00000180   0xD3EA             BCC.N    ??route_type_F_13
   1137            for(i=fch_first;i<label_count;i++)
   \   00000182   0x0003             MOVS     R3,R0
   \   00000184   0xE00C             B.N      ??route_type_F_14
   1138            {
   1139              fangcha_f += chafang_f[i]; 
   \                     ??route_type_F_15:
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable16_18
   \   0000018A   0x8800             LDRH     R0,[R0, #+0]
   \   0000018C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000018E   0x.... 0x....      LDR.W    R4,??DataTable16_22
   \   00000192   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   00000196   0x1820             ADDS     R0,R4,R0
   \   00000198   0x.... 0x....      LDR.W    R4,??DataTable16_18
   \   0000019C   0x8020             STRH     R0,[R4, #+0]
   1140            }
   \   0000019E   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_F_14:
   \   000001A0   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001A2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A4   0x428B             CMP      R3,R1
   \   000001A6   0xD3EE             BCC.N    ??route_type_F_15
   1141            fangcha_hou_f = fangcha_f/fch_av_count;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable16_18
   \   000001AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001B0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001B2   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \   000001B6   0x.... 0x....      LDR.W    R1,??DataTable18_1
   \   000001BA   0x8008             STRH     R0,[R1, #+0]
   1142          }
   \   000001BC   0xBC30             POP      {R4,R5}
   \   000001BE   0x4770             BX       LR               ;; return
   1143          //----------------------------------

   \                                 In section .bss, align 2
   1144          int16  stop_flag=0;
   \                     stop_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1145          int16  stop_count=0;
   \                     stop_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1146          int16  black_l=0,black_r=0,zheng=0;
   \                     black_l:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     black_r:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zheng:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1147          int16  delay_count=0;
   \                     delay_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1148          int16  zhong=0;
   \                     zhong:
   \   00000000                      DS8 2
   1149          extern uint8  qpx_en;

   \                                 In section .text, align 2, keep-with-next
   1150          void get_fu()
   1151          {
   \                     get_fu:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
   1152            int16 i,j,ii=0,jj=0;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   1153            int16 jiang_l[10]={0},jiang_r[10]={0};
   \   00000008   0xA805             ADD      R0,SP,#+20
   \   0000000A   0x2114             MOVS     R1,#+20
   \   0000000C   0x.... 0x....      BL       __aeabi_memclr4
   \   00000010   0xA800             ADD      R0,SP,#+0
   \   00000012   0x2114             MOVS     R1,#+20
   \   00000014   0x.... 0x....      BL       __aeabi_memclr4
   1154            
   1155            for(i=126;i>=2;i--)
   \   00000018   0x207E             MOVS     R0,#+126
   \   0000001A   0xE022             B.N      ??get_fu_0
   1156            {
   1157              if(Pixel_Z[i+1]==1&&Pixel_Z[i]==1&&Pixel_Z[i-1]==0&&Pixel_Z[i-2]==0)
   \                     ??get_fu_1:
   \   0000001C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000022   0x1841             ADDS     R1,R0,R1
   \   00000024   0x7849             LDRB     R1,[R1, #+1]
   \   00000026   0x2901             CMP      R1,#+1
   \   00000028   0xD11A             BNE.N    ??get_fu_2
   \   0000002A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000030   0x5C41             LDRB     R1,[R0, R1]
   \   00000032   0x2901             CMP      R1,#+1
   \   00000034   0xD114             BNE.N    ??get_fu_2
   \   00000036   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000003C   0x1841             ADDS     R1,R0,R1
   \   0000003E   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000042   0x2900             CMP      R1,#+0
   \   00000044   0xD10C             BNE.N    ??get_fu_2
   \   00000046   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000004C   0x1841             ADDS     R1,R0,R1
   \   0000004E   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000052   0x2900             CMP      R1,#+0
   \   00000054   0xD104             BNE.N    ??get_fu_2
   1158              {
   1159                jiang_l[ii++]=i;
   \   00000056   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000058   0xA905             ADD      R1,SP,#+20
   \   0000005A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000005E   0x1C64             ADDS     R4,R4,#+1
   1160              }
   1161            }
   \                     ??get_fu_2:
   \   00000060   0x1E40             SUBS     R0,R0,#+1
   \                     ??get_fu_0:
   \   00000062   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000064   0x2802             CMP      R0,#+2
   \   00000066   0xDAD9             BGE.N    ??get_fu_1
   1162            for(j=1;j<=125;j++)
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0xE021             B.N      ??get_fu_3
   1163            {
   1164              if(Pixel_Z[j-1]==1&&Pixel_Z[j]==1&&Pixel_Z[j+1]==0&&Pixel_Z[j+2]==0)
   \                     ??get_fu_4:
   \   0000006C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000072   0x1841             ADDS     R1,R0,R1
   \   00000074   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000078   0x2901             CMP      R1,#+1
   \   0000007A   0xD118             BNE.N    ??get_fu_5
   \   0000007C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   00000082   0x5C41             LDRB     R1,[R0, R1]
   \   00000084   0x2901             CMP      R1,#+1
   \   00000086   0xD112             BNE.N    ??get_fu_5
   \   00000088   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000008E   0x1841             ADDS     R1,R0,R1
   \   00000090   0x7849             LDRB     R1,[R1, #+1]
   \   00000092   0x2900             CMP      R1,#+0
   \   00000094   0xD10B             BNE.N    ??get_fu_5
   \   00000096   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable18_2
   \   0000009C   0x1841             ADDS     R1,R0,R1
   \   0000009E   0x7889             LDRB     R1,[R1, #+2]
   \   000000A0   0x2900             CMP      R1,#+0
   \   000000A2   0xD104             BNE.N    ??get_fu_5
   1165              {
   1166                jiang_r[jj++]=j;
   \   000000A4   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000000A6   0xA900             ADD      R1,SP,#+0
   \   000000A8   0xF821 0x0015      STRH     R0,[R1, R5, LSL #+1]
   \   000000AC   0x1C6D             ADDS     R5,R5,#+1
   1167              }
   1168            }
   \                     ??get_fu_5:
   \   000000AE   0x1C40             ADDS     R0,R0,#+1
   \                     ??get_fu_3:
   \   000000B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000B2   0x287E             CMP      R0,#+126
   \   000000B4   0xDBDA             BLT.N    ??get_fu_4
   1169            
   1170            if(ii==3&&jj==3)
   \   000000B6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000B8   0x2C03             CMP      R4,#+3
   \   000000BA   0xD157             BNE.N    ??get_fu_6
   \   000000BC   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000000BE   0x2D03             CMP      R5,#+3
   \   000000C0   0xD154             BNE.N    ??get_fu_6
   1171            {
   1172              black_l=jiang_l[1]-jiang_r[0];
   \   000000C2   0xF8BD 0x0016      LDRH     R0,[SP, #+22]
   \   000000C6   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   000000CA   0x1A40             SUBS     R0,R0,R1
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable18_3
   \   000000D0   0x8008             STRH     R0,[R1, #+0]
   1173              black_r=jiang_l[0]-jiang_r[1];
   \   000000D2   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   000000D6   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000000DA   0x1A40             SUBS     R0,R0,R1
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable18_4
   \   000000E0   0x8008             STRH     R0,[R1, #+0]
   1174              
   1175              zhong=jiang_r[1]-jiang_l[1];
   \   000000E2   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000000E6   0xF8BD 0x1016      LDRH     R1,[SP, #+22]
   \   000000EA   0x1A40             SUBS     R0,R0,R1
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   000000F0   0x8008             STRH     R0,[R1, #+0]
   1176              
   1177              zheng=(jiang_l[2]+jiang_r[2])/2;
   \   000000F2   0xF9BD 0x0018      LDRSH    R0,[SP, #+24]
   \   000000F6   0xF9BD 0x1004      LDRSH    R1,[SP, #+4]
   \   000000FA   0xFA01 0xF080      SXTAH    R0,R1,R0
   \   000000FE   0x2102             MOVS     R1,#+2
   \   00000100   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable18_6
   \   00000108   0x8008             STRH     R0,[R1, #+0]
   1178              
   1179              if(Abs(zong_reference-zheng)<10&&(zhong>=zong_width*9/40-5&&zhong<=zong_width*9/40+5))
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable18_7
   \   0000010E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable18_6
   \   00000116   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000011A   0x1A40             SUBS     R0,R0,R1
   \   0000011C   0x.... 0x....      BL       Abs
   \   00000120   0x280A             CMP      R0,#+10
   \   00000122   0xDA23             BGE.N    ??get_fu_6
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   00000128   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000012C   0x2109             MOVS     R1,#+9
   \   0000012E   0x4348             MULS     R0,R1,R0
   \   00000130   0x2128             MOVS     R1,#+40
   \   00000132   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000136   0x1F40             SUBS     R0,R0,#+5
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   0000013C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000140   0x4281             CMP      R1,R0
   \   00000142   0xDB13             BLT.N    ??get_fu_6
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable18_8
   \   00000148   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000014C   0x2109             MOVS     R1,#+9
   \   0000014E   0x4348             MULS     R0,R1,R0
   \   00000150   0x2128             MOVS     R1,#+40
   \   00000152   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000156   0x1D40             ADDS     R0,R0,#+5
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   0000015C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000160   0x4288             CMP      R0,R1
   \   00000162   0xDB03             BLT.N    ??get_fu_6
   1180                stop_flag=1;
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable19
   \   00000168   0x2101             MOVS     R1,#+1
   \   0000016A   0x8001             STRH     R1,[R0, #+0]
   1181            }
   1182           
   1183            if(stop_flag==1) 
   \                     ??get_fu_6:
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable19
   \   00000170   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000174   0x2801             CMP      R0,#+1
   \   00000176   0xD119             BNE.N    ??get_fu_7
   1184            {
   1185              if(delay_count++>15)
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable19_1
   \   0000017C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000180   0x1C41             ADDS     R1,R0,#+1
   \   00000182   0x.... 0x....      LDR.W    R2,??DataTable19_1
   \   00000186   0x8011             STRH     R1,[R2, #+0]
   \   00000188   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000018A   0x2810             CMP      R0,#+16
   \   0000018C   0xDB0E             BLT.N    ??get_fu_7
   1186              {
   1187                delay_count=0;
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable19_1
   \   00000192   0x2100             MOVS     R1,#+0
   \   00000194   0x8001             STRH     R1,[R0, #+0]
   1188                stop_flag=0;
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable19
   \   0000019A   0x2100             MOVS     R1,#+0
   \   0000019C   0x8001             STRH     R1,[R0, #+0]
   1189                ++stop_count;
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable19_2
   \   000001A2   0x8800             LDRH     R0,[R0, #+0]
   \   000001A4   0x1C40             ADDS     R0,R0,#+1
   \   000001A6   0x.... 0x....      LDR.W    R1,??DataTable19_2
   \   000001AA   0x8008             STRH     R0,[R1, #+0]
   1190              }
   1191            } 
   1192          }
   \                     ??get_fu_7:
   \   000001AC   0xB00B             ADD      SP,SP,#+44
   \   000001AE   0xBD30             POP      {R4,R5,PC}       ;; return
   1193          
   1194          //--------------------------------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
   1195          void get_zong()
   1196          {
   \                     get_zong:
   \   00000000   0xB410             PUSH     {R4}
   1197              int16 i,j;
   1198              int16 zong_l_flag,zong_r_flag;
   1199              uint8 hold_flag=0;
   \   00000002   0x2300             MOVS     R3,#+0
   1200              
   1201              hold_flag=0;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x000B             MOVS     R3,R1
   1202              
   1203              for(i=126;i>=4;i--)
   \   00000008   0x217E             MOVS     R1,#+126
   \   0000000A   0xE001             B.N      ??get_zong_0
   1204              {
   1205                if((Pixel_Z[i]==1)&&(Pixel_Z[i-1]==0)&&(Pixel_Z[i-2]==0)&&(Pixel_Z[i-3]==0))
   1206                {
   1207                  zong_l = i-2;
   1208                  zong_l_flag = 1;
   1209                  break;
   1210                }
   1211                zong_l_flag = 0;
   \                     ??get_zong_1:
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x1E49             SUBS     R1,R1,#+1
   \                     ??get_zong_0:
   \   00000010   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000012   0x2904             CMP      R1,#+4
   \   00000014   0xDB22             BLT.N    ??get_zong_2
   \   00000016   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable18_2
   \   0000001C   0x5C8A             LDRB     R2,[R1, R2]
   \   0000001E   0x2A01             CMP      R2,#+1
   \   00000020   0xD1F4             BNE.N    ??get_zong_1
   \   00000022   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable18_2
   \   00000028   0x188A             ADDS     R2,R1,R2
   \   0000002A   0xF812 0x2C01      LDRB     R2,[R2, #-1]
   \   0000002E   0x2A00             CMP      R2,#+0
   \   00000030   0xD1EC             BNE.N    ??get_zong_1
   \   00000032   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable18_2
   \   00000038   0x188A             ADDS     R2,R1,R2
   \   0000003A   0xF812 0x2C02      LDRB     R2,[R2, #-2]
   \   0000003E   0x2A00             CMP      R2,#+0
   \   00000040   0xD1E4             BNE.N    ??get_zong_1
   \   00000042   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000044   0x.... 0x....      LDR.W    R2,??DataTable18_2
   \   00000048   0x188A             ADDS     R2,R1,R2
   \   0000004A   0xF812 0x2C03      LDRB     R2,[R2, #-3]
   \   0000004E   0x2A00             CMP      R2,#+0
   \   00000050   0xD1DC             BNE.N    ??get_zong_1
   \   00000052   0x1E8A             SUBS     R2,R1,#+2
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable19_3
   \   00000058   0x801A             STRH     R2,[R3, #+0]
   \   0000005A   0x2201             MOVS     R2,#+1
   1212              }
   1213              for(j=1;j<123;j++)
   \                     ??get_zong_2:
   \   0000005C   0x2301             MOVS     R3,#+1
   \   0000005E   0xE001             B.N      ??get_zong_3
   1214              {
   1215                 if((Pixel_Z[j]==1)&&(Pixel_Z[j+1]==0)&&(Pixel_Z[j+2]==0)&&(Pixel_Z[j+3]==0))
   1216                {
   1217                  zong_r = j+2;
   1218                  zong_r_flag = 1;
   1219                  break;
   1220                }
   1221                zong_r_flag = 0;
   \                     ??get_zong_4:
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x1C5B             ADDS     R3,R3,#+1
   \                     ??get_zong_3:
   \   00000064   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000066   0x2B7B             CMP      R3,#+123
   \   00000068   0xDA1F             BGE.N    ??get_zong_5
   \   0000006A   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000070   0x5C18             LDRB     R0,[R3, R0]
   \   00000072   0x2801             CMP      R0,#+1
   \   00000074   0xD1F4             BNE.N    ??get_zong_4
   \   00000076   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   0000007C   0x1818             ADDS     R0,R3,R0
   \   0000007E   0x7840             LDRB     R0,[R0, #+1]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD1ED             BNE.N    ??get_zong_4
   \   00000084   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   0000008A   0x1818             ADDS     R0,R3,R0
   \   0000008C   0x7880             LDRB     R0,[R0, #+2]
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xD1E6             BNE.N    ??get_zong_4
   \   00000092   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000098   0x1818             ADDS     R0,R3,R0
   \   0000009A   0x78C0             LDRB     R0,[R0, #+3]
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD1DF             BNE.N    ??get_zong_4
   \   000000A0   0x1C98             ADDS     R0,R3,#+2
   \   000000A2   0x.... 0x....      LDR.W    R4,??DataTable19_4
   \   000000A6   0x8020             STRH     R0,[R4, #+0]
   \   000000A8   0x2001             MOVS     R0,#+1
   1222              }
   1223              //A.²Éµ½×óÓÒÊý¾Ý
   1224              if((zong_l_flag == 1)&&(zong_r_flag == 1))
   \                     ??get_zong_5:
   \   000000AA   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000AC   0x2A01             CMP      R2,#+1
   \   000000AE   0xD15A             BNE.N    ??get_zong_6
   \   000000B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000B2   0x2801             CMP      R0,#+1
   \   000000B4   0xD157             BNE.N    ??get_zong_6
   1225              {  
   1226                //a.µ±¿´µ½µÄÈ«²¿ÊÇ±³¾°Ê±,ÓÉÓÚ±³¾°»Ò¶ÈÖµ²»¾ùÔÈ,¶þÖµ»¯ºóÒÀÈ»ÄÜÎó²Éµ½ºÚ°×Ìø±ä 
   1227                if((high_aver_f-low_aver_f)>45)
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable19_5
   \   000000BA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000BE   0x.... 0x....      LDR.W    R2,??DataTable19_6
   \   000000C2   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000000C6   0x1A80             SUBS     R0,R0,R2
   \   000000C8   0x282E             CMP      R0,#+46
   \   000000CA   0xDB3F             BLT.N    ??get_zong_7
   1228                {
   1229                  //a.1.×óÖµ´óÓÚÓÒÖµ,Á½±ßÊý¾Ý¶¼¶ªÊ§     
   1230                  if(zong_l>zong_r)            
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   000000D0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000D4   0x.... 0x....      LDR.W    R2,??DataTable19_3
   \   000000D8   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000000DC   0x4290             CMP      R0,R2
   \   000000DE   0xF280 0x80E7      BGE.W    ??get_zong_8
   1231                  {  
   1232                    //ÏòÓÒ¹ÕÍäÊ±¿´µ½×ó±ßÈüµÀ,ÓÒ±ßÑØ·¢Éú½Ï´óÎ»ÒÆ,ÓÒÖµ¼ÙÏó,×óÖµÕæÊµ
   1233                    if(zong_r_last-zong_r>30)
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable19_7
   \   000000E6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000EA   0x.... 0x....      LDR.W    R2,??DataTable19_4
   \   000000EE   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000000F2   0x1A80             SUBS     R0,R0,R2
   \   000000F4   0x281F             CMP      R0,#+31
   \   000000F6   0xDB0E             BLT.N    ??get_zong_9
   1234                    {
   1235                      zong_l=i-2;
   \   000000F8   0x1E88             SUBS     R0,R1,#+2
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable19_3
   \   000000FE   0x8008             STRH     R0,[R1, #+0]
   1236                      zong_r=zong_l+zong_width;
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   00000104   0x8800             LDRH     R0,[R0, #+0]
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable18_8
   \   0000010A   0x8809             LDRH     R1,[R1, #+0]
   \   0000010C   0x1808             ADDS     R0,R1,R0
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable19_4
   \   00000112   0x8008             STRH     R0,[R1, #+0]
   \   00000114   0xE0CC             B.N      ??get_zong_8
   1237                    }
   1238                    //Ïò×ó¹ÕÍäÊ±¿´µ½ÓÒ±ßÈüµÀ,×ó±ßÑØ·¢Éú½Ï´óÎ»ÒÆ,×óÖµ¼ÙÏó,ÓÒÖµÕæÊµ
   1239                    else if(zong_l-zong_l_last>30)
   \                     ??get_zong_9:
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   0000011A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   00000122   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000126   0x1A40             SUBS     R0,R0,R1
   \   00000128   0x281F             CMP      R0,#+31
   \   0000012A   0xF2C0 0x80C1      BLT.W    ??get_zong_8
   1240                    {
   1241                      zong_r=j+2;
   \   0000012E   0x1C98             ADDS     R0,R3,#+2
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable19_4
   \   00000134   0x8008             STRH     R0,[R1, #+0]
   1242                      zong_l=zong_r-zong_width;
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   0000013A   0x8800             LDRH     R0,[R0, #+0]
   \   0000013C   0x.... 0x....      LDR.W    R1,??DataTable18_8
   \   00000140   0x8809             LDRH     R1,[R1, #+0]
   \   00000142   0x1A40             SUBS     R0,R0,R1
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable19_3
   \   00000148   0x8008             STRH     R0,[R1, #+0]
   \   0000014A   0xE0B1             B.N      ??get_zong_8
   1243                    }         
   1244                  }       
   1245                  //a.2.ÓÒÖµ´óÓÚ×óÖµ,Õý³£
   1246                  else
   1247                  {}
   1248                }
   1249                //b.
   1250                else
   1251                {
   1252                  zong_l=zong_l_last;
   \                     ??get_zong_7:
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   00000154   0x8809             LDRH     R1,[R1, #+0]
   \   00000156   0x8001             STRH     R1,[R0, #+0]
   1253                  zong_r=zong_r_last;
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   0000015C   0x.... 0x....      LDR.W    R1,??DataTable19_7
   \   00000160   0x8809             LDRH     R1,[R1, #+0]
   \   00000162   0x8001             STRH     R1,[R0, #+0]
   \   00000164   0xE0A4             B.N      ??get_zong_8
   1254                  //hold_flag=1;
   1255                }   
   1256              }
   1257              //B.ÓÒÊý¾Ý¶ªÊ§
   1258              else if((zong_l_flag == 1)&&(zong_r_flag == 0))
   \                     ??get_zong_6:
   \   00000166   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000168   0x2A01             CMP      R2,#+1
   \   0000016A   0xD13C             BNE.N    ??get_zong_10
   \   0000016C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000016E   0x2800             CMP      R0,#+0
   \   00000170   0xD139             BNE.N    ??get_zong_10
   1259              {
   1260                if((high_aver_f-low_aver_f)>45)
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable19_5
   \   00000176   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000017A   0x.... 0x....      LDR.W    R1,??DataTable19_6
   \   0000017E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000182   0x1A40             SUBS     R0,R0,R1
   \   00000184   0x282E             CMP      R0,#+46
   \   00000186   0xDB21             BLT.N    ??get_zong_11
   1261                {
   1262                  if(zong_l>zong_r_last)
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable19_7
   \   0000018C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000190   0x.... 0x....      LDR.W    R1,??DataTable19_3
   \   00000194   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000198   0x4288             CMP      R0,R1
   \   0000019A   0xDA0C             BGE.N    ??get_zong_12
   1263                  {
   1264                    zong_l=zong_l_last;
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   000001A4   0x8809             LDRH     R1,[R1, #+0]
   \   000001A6   0x8001             STRH     R1,[R0, #+0]
   1265                    zong_r=zong_r_last;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable19_7
   \   000001B0   0x8809             LDRH     R1,[R1, #+0]
   \   000001B2   0x8001             STRH     R1,[R0, #+0]
   \   000001B4   0xE07C             B.N      ??get_zong_8
   1266                    //hold_flag=1;
   1267                  }
   1268                  else 
   1269                  {
   1270                    zong_r =zong_l+zong_width; 
   \                     ??get_zong_12:
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   000001BA   0x8800             LDRH     R0,[R0, #+0]
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable18_8
   \   000001C0   0x8809             LDRH     R1,[R1, #+0]
   \   000001C2   0x1808             ADDS     R0,R1,R0
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable19_4
   \   000001C8   0x8008             STRH     R0,[R1, #+0]
   \   000001CA   0xE071             B.N      ??get_zong_8
   1271                  }
   1272                  /*
   1273                  else
   1274                  {
   1275                    //ÔÚ¡°Ê®×ÖÍä¡±´¦´óÆ«²î
   1276                    if(front_l<127-front_width)
   1277                    {
   1278                      front_l=front_l_last+1;
   1279                      front_r=front_r_last+1;
   1280                    } 
   1281                    else 
   1282                    {
   1283                      front_r =front_l+front_width; 
   1284                    }
   1285                  }
   1286                  */
   1287                } 
   1288                else
   1289                {
   1290                  zong_l=zong_l_last;
   \                     ??get_zong_11:
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   000001D0   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   000001D4   0x8809             LDRH     R1,[R1, #+0]
   \   000001D6   0x8001             STRH     R1,[R0, #+0]
   1291                  zong_r=zong_r_last;
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable19_7
   \   000001E0   0x8809             LDRH     R1,[R1, #+0]
   \   000001E2   0x8001             STRH     R1,[R0, #+0]
   \   000001E4   0xE064             B.N      ??get_zong_8
   1292                  //hold_flag=1;
   1293                }
   1294              }
   1295              //C.×óÊý¾Ý¶ª
   1296              else if((zong_l_flag == 0)&&(zong_r_flag == 1))
   \                     ??get_zong_10:
   \   000001E6   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000001E8   0x2A00             CMP      R2,#+0
   \   000001EA   0xD13C             BNE.N    ??get_zong_13
   \   000001EC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001EE   0x2801             CMP      R0,#+1
   \   000001F0   0xD139             BNE.N    ??get_zong_13
   1297              {
   1298                if((high_aver_f-low_aver_f)>45)
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable19_5
   \   000001F6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable19_6
   \   000001FE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000202   0x1A40             SUBS     R0,R0,R1
   \   00000204   0x282E             CMP      R0,#+46
   \   00000206   0xDB21             BLT.N    ??get_zong_14
   1299                {
   1300                  if(zong_r<zong_l_last)
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   0000020C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000210   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   00000214   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000218   0x4288             CMP      R0,R1
   \   0000021A   0xDA0C             BGE.N    ??get_zong_15
   1301                  {
   1302                    zong_l=zong_l_last;
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   00000220   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   00000224   0x8809             LDRH     R1,[R1, #+0]
   \   00000226   0x8001             STRH     R1,[R0, #+0]
   1303                    zong_r=zong_r_last;
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable19_7
   \   00000230   0x8809             LDRH     R1,[R1, #+0]
   \   00000232   0x8001             STRH     R1,[R0, #+0]
   \   00000234   0xE03C             B.N      ??get_zong_8
   1304                    //hold_flag=1;
   1305                  }
   1306                  else
   1307                  {
   1308                     zong_l=front_r-zong_width;
   \                     ??get_zong_15:
   \   00000236   0x.... 0x....      LDR.W    R0,??DataTable19_9
   \   0000023A   0x8800             LDRH     R0,[R0, #+0]
   \   0000023C   0x.... 0x....      LDR.W    R1,??DataTable18_8
   \   00000240   0x8809             LDRH     R1,[R1, #+0]
   \   00000242   0x1A40             SUBS     R0,R0,R1
   \   00000244   0x.... 0x....      LDR.W    R1,??DataTable19_3
   \   00000248   0x8008             STRH     R0,[R1, #+0]
   \   0000024A   0xE031             B.N      ??get_zong_8
   1309                  }
   1310                  /*
   1311                  else
   1312                  {  //ÔÚ¡°Ê®×ÖÍä¡±´¦´óÆ«²î
   1313                     if(front_r>front_width)//Â·¾¶£¬Ã¿´ÎÈëÍäµÄÐ§¹û
   1314                     {
   1315                       front_l=front_l_last-1;
   1316                       front_r=front_r_last-1;
   1317                     } 
   1318                     else
   1319                     {
   1320                       front_l=front_r-front_width;
   1321                     }
   1322                  }
   1323                  */
   1324                }
   1325                else
   1326                {
   1327                  zong_l=zong_l_last;
   \                     ??get_zong_14:
   \   0000024C   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   00000254   0x8809             LDRH     R1,[R1, #+0]
   \   00000256   0x8001             STRH     R1,[R0, #+0]
   1328                  zong_r=zong_r_last;
   \   00000258   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   0000025C   0x.... 0x....      LDR.W    R1,??DataTable19_7
   \   00000260   0x8809             LDRH     R1,[R1, #+0]
   \   00000262   0x8001             STRH     R1,[R0, #+0]
   \   00000264   0xE024             B.N      ??get_zong_8
   1329                  //hold_flag=1;
   1330                }
   1331              }
   1332              //D.Á½±ßÊý¾Ý¶¼¶ªÊ§
   1333              else if((zong_l_flag == 0)&&(zong_r_flag == 0))
   \                     ??get_zong_13:
   \   00000266   0x4310             ORRS     R0,R0,R2
   \   00000268   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000026A   0x2800             CMP      R0,#+0
   \   0000026C   0xD120             BNE.N    ??get_zong_8
   1334              {
   1335                if(zong_l_last>63||zong_r_last<64)
   \   0000026E   0x.... 0x....      LDR.W    R0,??DataTable19_8
   \   00000272   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000276   0x2840             CMP      R0,#+64
   \   00000278   0xDA05             BGE.N    ??get_zong_16
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable19_7
   \   0000027E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000282   0x2840             CMP      R0,#+64
   \   00000284   0xDA0C             BGE.N    ??get_zong_17
   1336                {
   1337                  zong_l=zong_l_last;
   \                     ??get_zong_16:
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   0000028A   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   0000028E   0x8809             LDRH     R1,[R1, #+0]
   \   00000290   0x8001             STRH     R1,[R0, #+0]
   1338                  zong_r=zong_r_last;
   \   00000292   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   00000296   0x.... 0x....      LDR.W    R1,??DataTable19_7
   \   0000029A   0x8809             LDRH     R1,[R1, #+0]
   \   0000029C   0x8001             STRH     R1,[R0, #+0]
   \   0000029E   0xE007             B.N      ??get_zong_8
   1339                  //hold_flag=1;
   1340                }
   1341                else
   1342                {
   1343                  zong_l=0;
   \                     ??get_zong_17:
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   000002A4   0x2100             MOVS     R1,#+0
   \   000002A6   0x8001             STRH     R1,[R0, #+0]
   1344                  zong_r=127;
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable19_4
   \   000002AC   0x217F             MOVS     R1,#+127
   \   000002AE   0x8001             STRH     R1,[R0, #+0]
   1345                }
   1346              }
   1347              cl_z = (zong_l+zong_r)/2;
   \                     ??get_zong_8:
   \   000002B0   0x.... 0x....      LDR.W    R0,??DataTable19_3
   \   000002B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002B8   0x.... 0x....      LDR.W    R1,??DataTable19_4
   \   000002BC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002C0   0x1808             ADDS     R0,R1,R0
   \   000002C2   0x2102             MOVS     R1,#+2
   \   000002C4   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002C8   0x.... 0x....      LDR.W    R1,??DataTable19_10
   \   000002CC   0x8008             STRH     R0,[R1, #+0]
   1348              zong_OFFSET = cl_z-zong_reference;
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable19_10
   \   000002D2   0x8800             LDRH     R0,[R0, #+0]
   \   000002D4   0x.... 0x....      LDR.W    R1,??DataTable18_7
   \   000002D8   0x8809             LDRH     R1,[R1, #+0]
   \   000002DA   0x1A40             SUBS     R0,R0,R1
   \   000002DC   0x.... 0x....      LDR.W    R1,??DataTable19_11
   \   000002E0   0x8008             STRH     R0,[R1, #+0]
   1349              
   1350              //if(hold_flag==1) zong_OFFSET=zong_OFFSET*k_out;
   1351                
   1352              
   1353              zong_l_last=zong_l;
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable19_8
   \   000002E6   0x.... 0x....      LDR.W    R1,??DataTable19_3
   \   000002EA   0x8809             LDRH     R1,[R1, #+0]
   \   000002EC   0x8001             STRH     R1,[R0, #+0]
   1354              zong_r_last=zong_r;
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable19_7
   \   000002F2   0x.... 0x....      LDR.W    R1,??DataTable19_4
   \   000002F6   0x8809             LDRH     R1,[R1, #+0]
   \   000002F8   0x8001             STRH     R1,[R0, #+0]
   1355              zong_l_pre=zong_l_last;
   \   000002FA   0x.... 0x....      LDR.W    R0,??DataTable19_12
   \   000002FE   0x.... 0x....      LDR.W    R1,??DataTable19_8
   \   00000302   0x8809             LDRH     R1,[R1, #+0]
   \   00000304   0x8001             STRH     R1,[R0, #+0]
   1356              zong_r_pre=zong_r_last;
   \   00000306   0x.... 0x....      LDR.W    R0,??DataTable19_13
   \   0000030A   0x.... 0x....      LDR.W    R1,??DataTable19_7
   \   0000030E   0x8809             LDRH     R1,[R1, #+0]
   \   00000310   0x8001             STRH     R1,[R0, #+0]
   1357              
   1358              zong_OFFSET_pre10 = zong_OFFSET_pre9;
   \   00000312   0x.... 0x....      LDR.W    R0,??DataTable19_14
   \   00000316   0x.... 0x....      LDR.W    R1,??DataTable19_15
   \   0000031A   0x8809             LDRH     R1,[R1, #+0]
   \   0000031C   0x8001             STRH     R1,[R0, #+0]
   1359              zong_OFFSET_pre9 = zong_OFFSET_pre8;
   \   0000031E   0x.... 0x....      LDR.W    R0,??DataTable19_15
   \   00000322   0x.... 0x....      LDR.W    R1,??DataTable19_16
   \   00000326   0x8809             LDRH     R1,[R1, #+0]
   \   00000328   0x8001             STRH     R1,[R0, #+0]
   1360              zong_OFFSET_pre8 = zong_OFFSET_pre7;
   \   0000032A   0x.... 0x....      LDR.W    R0,??DataTable19_16
   \   0000032E   0x.... 0x....      LDR.W    R1,??DataTable19_17
   \   00000332   0x8809             LDRH     R1,[R1, #+0]
   \   00000334   0x8001             STRH     R1,[R0, #+0]
   1361              zong_OFFSET_pre7 = zong_OFFSET_pre6;
   \   00000336   0x.... 0x....      LDR.W    R0,??DataTable19_17
   \   0000033A   0x.... 0x....      LDR.W    R1,??DataTable19_18
   \   0000033E   0x8809             LDRH     R1,[R1, #+0]
   \   00000340   0x8001             STRH     R1,[R0, #+0]
   1362              zong_OFFSET_pre6 = zong_OFFSET_pre5;
   \   00000342   0x.... 0x....      LDR.W    R0,??DataTable19_18
   \   00000346   0x.... 0x....      LDR.W    R1,??DataTable19_19
   \   0000034A   0x8809             LDRH     R1,[R1, #+0]
   \   0000034C   0x8001             STRH     R1,[R0, #+0]
   1363              zong_OFFSET_pre5 = zong_OFFSET_pre4;
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable19_19
   \   00000352   0x.... 0x....      LDR.W    R1,??DataTable19_20
   \   00000356   0x8809             LDRH     R1,[R1, #+0]
   \   00000358   0x8001             STRH     R1,[R0, #+0]
   1364              zong_OFFSET_pre4 = zong_OFFSET_pre3;
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable19_20
   \   0000035E   0x.... 0x....      LDR.W    R1,??DataTable19_21
   \   00000362   0x8809             LDRH     R1,[R1, #+0]
   \   00000364   0x8001             STRH     R1,[R0, #+0]
   1365              zong_OFFSET_pre3 = zong_OFFSET_pre2;
   \   00000366   0x.... 0x....      LDR.W    R0,??DataTable19_21
   \   0000036A   0x.... 0x....      LDR.W    R1,??DataTable19_22
   \   0000036E   0x8809             LDRH     R1,[R1, #+0]
   \   00000370   0x8001             STRH     R1,[R0, #+0]
   1366              zong_OFFSET_pre2 = zong_OFFSET_pre1;
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable19_22
   \   00000376   0x.... 0x....      LDR.W    R1,??DataTable19_23
   \   0000037A   0x8809             LDRH     R1,[R1, #+0]
   \   0000037C   0x8001             STRH     R1,[R0, #+0]
   1367              zong_OFFSET_pre1 = zong_OFFSET;
   \   0000037E   0x.... 0x....      LDR.W    R0,??DataTable19_23
   \   00000382   0x.... 0x....      LDR.W    R1,??DataTable19_11
   \   00000386   0x8809             LDRH     R1,[R1, #+0]
   \   00000388   0x8001             STRH     R1,[R0, #+0]
   1368              
   1369              //d_err1 = front_OFFSET - front_OFFSET_pre1;ºãÎª0
   1370              z_err1 = zong_OFFSET_pre1 - zong_OFFSET_pre2;
   \   0000038A   0x.... 0x....      LDR.W    R0,??DataTable19_23
   \   0000038E   0x8800             LDRH     R0,[R0, #+0]
   \   00000390   0x.... 0x....      LDR.W    R1,??DataTable19_22
   \   00000394   0x8809             LDRH     R1,[R1, #+0]
   \   00000396   0x1A40             SUBS     R0,R0,R1
   \   00000398   0x.... 0x....      LDR.W    R1,??DataTable19_24
   \   0000039C   0x8008             STRH     R0,[R1, #+0]
   1371              z_err2 = zong_OFFSET_pre2 - zong_OFFSET_pre3;
   \   0000039E   0x.... 0x....      LDR.W    R0,??DataTable19_22
   \   000003A2   0x8800             LDRH     R0,[R0, #+0]
   \   000003A4   0x.... 0x....      LDR.W    R1,??DataTable19_21
   \   000003A8   0x8809             LDRH     R1,[R1, #+0]
   \   000003AA   0x1A40             SUBS     R0,R0,R1
   \   000003AC   0x.... 0x....      LDR.W    R1,??DataTable19_25
   \   000003B0   0x8008             STRH     R0,[R1, #+0]
   1372              z_err3 = zong_OFFSET_pre3 - zong_OFFSET_pre4;
   \   000003B2   0x.... 0x....      LDR.W    R0,??DataTable19_21
   \   000003B6   0x8800             LDRH     R0,[R0, #+0]
   \   000003B8   0x.... 0x....      LDR.W    R1,??DataTable19_20
   \   000003BC   0x8809             LDRH     R1,[R1, #+0]
   \   000003BE   0x1A40             SUBS     R0,R0,R1
   \   000003C0   0x.... 0x....      LDR.W    R1,??DataTable19_26
   \   000003C4   0x8008             STRH     R0,[R1, #+0]
   1373              z_err4 = zong_OFFSET_pre4 - zong_OFFSET_pre5;
   \   000003C6   0x.... 0x....      LDR.W    R0,??DataTable19_20
   \   000003CA   0x8800             LDRH     R0,[R0, #+0]
   \   000003CC   0x.... 0x....      LDR.W    R1,??DataTable19_19
   \   000003D0   0x8809             LDRH     R1,[R1, #+0]
   \   000003D2   0x1A40             SUBS     R0,R0,R1
   \   000003D4   0x.... 0x....      LDR.W    R1,??DataTable19_27
   \   000003D8   0x8008             STRH     R0,[R1, #+0]
   1374              z_err5 = zong_OFFSET_pre5 - zong_OFFSET_pre6;
   \   000003DA   0x.... 0x....      LDR.W    R0,??DataTable19_19
   \   000003DE   0x8800             LDRH     R0,[R0, #+0]
   \   000003E0   0x.... 0x....      LDR.W    R1,??DataTable19_18
   \   000003E4   0x8809             LDRH     R1,[R1, #+0]
   \   000003E6   0x1A40             SUBS     R0,R0,R1
   \   000003E8   0x.... 0x....      LDR.W    R1,??DataTable19_28
   \   000003EC   0x8008             STRH     R0,[R1, #+0]
   1375              z_err6 = zong_OFFSET_pre6 - zong_OFFSET_pre7;
   \   000003EE   0x.... 0x....      LDR.W    R0,??DataTable19_18
   \   000003F2   0x8800             LDRH     R0,[R0, #+0]
   \   000003F4   0x.... 0x....      LDR.W    R1,??DataTable19_17
   \   000003F8   0x8809             LDRH     R1,[R1, #+0]
   \   000003FA   0x1A40             SUBS     R0,R0,R1
   \   000003FC   0x.... 0x....      LDR.W    R1,??DataTable19_29
   \   00000400   0x8008             STRH     R0,[R1, #+0]
   1376              z_err7 = zong_OFFSET_pre7 - zong_OFFSET_pre8;
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable19_17
   \   00000406   0x8800             LDRH     R0,[R0, #+0]
   \   00000408   0x.... 0x....      LDR.W    R1,??DataTable19_16
   \   0000040C   0x8809             LDRH     R1,[R1, #+0]
   \   0000040E   0x1A40             SUBS     R0,R0,R1
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable19_30
   \   00000414   0x8008             STRH     R0,[R1, #+0]
   1377              z_err8 = zong_OFFSET_pre8 - zong_OFFSET_pre9;
   \   00000416   0x.... 0x....      LDR.W    R0,??DataTable19_16
   \   0000041A   0x8800             LDRH     R0,[R0, #+0]
   \   0000041C   0x.... 0x....      LDR.W    R1,??DataTable19_15
   \   00000420   0x8809             LDRH     R1,[R1, #+0]
   \   00000422   0x1A40             SUBS     R0,R0,R1
   \   00000424   0x.... 0x....      LDR.W    R1,??DataTable19_31
   \   00000428   0x8008             STRH     R0,[R1, #+0]
   1378              z_err9 = zong_OFFSET_pre9 - zong_OFFSET_pre10;  
   \   0000042A   0x.... 0x....      LDR.W    R0,??DataTable19_15
   \   0000042E   0x8800             LDRH     R0,[R0, #+0]
   \   00000430   0x.... 0x....      LDR.W    R1,??DataTable19_14
   \   00000434   0x8809             LDRH     R1,[R1, #+0]
   \   00000436   0x1A40             SUBS     R0,R0,R1
   \   00000438   0x.... 0x....      LDR.W    R1,??DataTable19_32
   \   0000043C   0x8008             STRH     R0,[R1, #+0]
   1379          }
   \   0000043E   0xBC10             POP      {R4}
   \   00000440   0x4770             BX       LR               ;; return
   1380          

   \                                 In section .bss, align 4
   1381          int16 route_z[100]={0};
   \                     route_z:
   \   00000000                      DS8 200

   \                                 In section .bss, align 4
   1382          int16 chafang_z[100]={0};
   \                     chafang_z:
   \   00000000                      DS8 200

   \                                 In section .bss, align 2
   1383          int16 route_ave_z=0;
   \                     route_ave_z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1384          int16 fangcha_z=0,fangcha_qian_z=0,fangcha_hou_z=0;
   \                     fangcha_z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     fangcha_qian_z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     fangcha_hou_z:
   \   00000000                      DS8 2
   1385          

   \                                 In section .text, align 2, keep-with-next
   1386          void route_type_Z()
   1387          {
   \                     route_type_Z:
   \   00000000   0xB430             PUSH     {R4,R5}
   1388            char i;
   1389            char fch_first=3;//ÈüµÀ¹ý¶É
   \   00000002   0x2003             MOVS     R0,#+3
   1390            char label_count=6;
   \   00000004   0x2106             MOVS     R1,#+6
   1391            char fch_av_count=0;
   \   00000006   0x2200             MOVS     R2,#+0
   1392            
   1393            fangcha_z=0;
   \   00000008   0x.... 0x....      LDR.W    R3,??DataTable19_33
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0x801C             STRH     R4,[R3, #+0]
   1394            fangcha_qian_z=0;
   \   00000010   0x.... 0x....      LDR.W    R3,??DataTable19_34
   \   00000014   0x2400             MOVS     R4,#+0
   \   00000016   0x801C             STRH     R4,[R3, #+0]
   1395            fangcha_hou_z=0;
   \   00000018   0x.... 0x....      LDR.W    R3,??DataTable19_35
   \   0000001C   0x2400             MOVS     R4,#+0
   \   0000001E   0x801C             STRH     R4,[R3, #+0]
   1396            
   1397            fch_av_count = label_count - fch_first+1;
   \   00000020   0x1A0B             SUBS     R3,R1,R0
   \   00000022   0x1C5B             ADDS     R3,R3,#+1
   \   00000024   0x001A             MOVS     R2,R3
   1398            //Ë¢ÐÂ
   1399            route_z[0]=zong_OFFSET;
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable19_36
   \   0000002A   0x.... 0x....      LDR.W    R4,??DataTable19_11
   \   0000002E   0x8824             LDRH     R4,[R4, #+0]
   \   00000030   0x801C             STRH     R4,[R3, #+0]
   1400            for(i=100;i>0;i--)
   \   00000032   0x2364             MOVS     R3,#+100
   \   00000034   0xE00C             B.N      ??route_type_Z_0
   1401            {
   1402              route_z[i] = route_z[i-1];
   \                     ??route_type_Z_1:
   \   00000036   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000038   0x.... 0x....      LDR.W    R4,??DataTable19_36
   \   0000003C   0xEB14 0x0443      ADDS     R4,R4,R3, LSL #+1
   \   00000040   0xF834 0x4C02      LDRH     R4,[R4, #-2]
   \   00000044   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000046   0x.... 0x....      LDR.W    R5,??DataTable19_36
   \   0000004A   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1403            }
   \   0000004E   0x1E5B             SUBS     R3,R3,#+1
   \                     ??route_type_Z_0:
   \   00000050   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000052   0x2B01             CMP      R3,#+1
   \   00000054   0xD2EF             BCS.N    ??route_type_Z_1
   1404            //Ç°3
   1405            for(i=0;i<3;i++)
   \   00000056   0x2300             MOVS     R3,#+0
   \   00000058   0xE00C             B.N      ??route_type_Z_2
   1406            {
   1407              route_ave_z += route_z[i]; 
   \                     ??route_type_Z_3:
   \   0000005A   0x.... 0x....      LDR.W    R4,??DataTable19_37
   \   0000005E   0x8824             LDRH     R4,[R4, #+0]
   \   00000060   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000062   0x.... 0x....      LDR.W    R5,??DataTable19_36
   \   00000066   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000006A   0x192C             ADDS     R4,R5,R4
   \   0000006C   0x.... 0x....      LDR.W    R5,??DataTable19_37
   \   00000070   0x802C             STRH     R4,[R5, #+0]
   1408            }
   \   00000072   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_2:
   \   00000074   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000076   0x2B03             CMP      R3,#+3
   \   00000078   0xD3EF             BCC.N    ??route_type_Z_3
   1409            route_ave_z = route_ave_z/3;
   \   0000007A   0x.... 0x....      LDR.W    R3,??DataTable19_37
   \   0000007E   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000082   0x2403             MOVS     R4,#+3
   \   00000084   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   00000088   0x.... 0x....      LDR.W    R4,??DataTable19_37
   \   0000008C   0x8023             STRH     R3,[R4, #+0]
   1410            
   1411            for(i=0;i<3;i++)
   \   0000008E   0x2300             MOVS     R3,#+0
   \   00000090   0xE010             B.N      ??route_type_Z_4
   1412            {
   1413              chafang_z[i] = route_z[i]*route_z[i];
   \                     ??route_type_Z_5:
   \   00000092   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000094   0x.... 0x....      LDR.W    R4,??DataTable19_36
   \   00000098   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   0000009C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000009E   0x.... 0x....      LDR.W    R5,??DataTable19_36
   \   000000A2   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   000000A6   0x436C             MULS     R4,R5,R4
   \   000000A8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000AA   0x.... 0x....      LDR.W    R5,??DataTable19_38
   \   000000AE   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1414            }
   \   000000B2   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_4:
   \   000000B4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000B6   0x2B03             CMP      R3,#+3
   \   000000B8   0xD3EB             BCC.N    ??route_type_Z_5
   1415            for(i=0;i<3;i++)
   \   000000BA   0x2300             MOVS     R3,#+0
   \   000000BC   0xE00C             B.N      ??route_type_Z_6
   1416            {
   1417              fangcha_z += chafang_z[i]; 
   \                     ??route_type_Z_7:
   \   000000BE   0x.... 0x....      LDR.W    R4,??DataTable19_33
   \   000000C2   0x8824             LDRH     R4,[R4, #+0]
   \   000000C4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000C6   0x.... 0x....      LDR.W    R5,??DataTable19_38
   \   000000CA   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   000000CE   0x192C             ADDS     R4,R5,R4
   \   000000D0   0x.... 0x....      LDR.W    R5,??DataTable19_33
   \   000000D4   0x802C             STRH     R4,[R5, #+0]
   1418            }
   \   000000D6   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_6:
   \   000000D8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000DA   0x2B03             CMP      R3,#+3
   \   000000DC   0xD3EF             BCC.N    ??route_type_Z_7
   1419            fangcha_qian_z = fangcha_z/3;
   \   000000DE   0x.... 0x....      LDR.W    R3,??DataTable19_33
   \   000000E2   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   000000E6   0x2403             MOVS     R4,#+3
   \   000000E8   0xFB93 0xF3F4      SDIV     R3,R3,R4
   \   000000EC   0x.... 0x....      LDR.W    R4,??DataTable19_34
   \   000000F0   0x8023             STRH     R3,[R4, #+0]
   1420            
   1421            
   1422            //Çå0
   1423            route_ave_z=0;
   \   000000F2   0x.... 0x....      LDR.W    R3,??DataTable19_37
   \   000000F6   0x2400             MOVS     R4,#+0
   \   000000F8   0x801C             STRH     R4,[R3, #+0]
   1424            for(i=0;i<5;i++)
   \   000000FA   0x2300             MOVS     R3,#+0
   \   000000FC   0xE006             B.N      ??route_type_Z_8
   1425            {
   1426              chafang_z[i] = 0;
   \                     ??route_type_Z_9:
   \   000000FE   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000100   0x.... 0x....      LDR.W    R4,??DataTable19_38
   \   00000104   0x2500             MOVS     R5,#+0
   \   00000106   0xF824 0x5013      STRH     R5,[R4, R3, LSL #+1]
   1427            }
   \   0000010A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_8:
   \   0000010C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000010E   0x2B05             CMP      R3,#+5
   \   00000110   0xD3F5             BCC.N    ??route_type_Z_9
   1428            fangcha_z=0;
   \   00000112   0x.... 0x....      LDR.W    R3,??DataTable19_33
   \   00000116   0x2400             MOVS     R4,#+0
   \   00000118   0x801C             STRH     R4,[R3, #+0]
   1429            
   1430            //ºóÐø
   1431            for(i=fch_first;i<label_count;i++)
   \   0000011A   0x0003             MOVS     R3,R0
   \   0000011C   0xE00C             B.N      ??route_type_Z_10
   1432            {
   1433              route_ave_z += route_z[i]; 
   \                     ??route_type_Z_11:
   \   0000011E   0x.... 0x....      LDR.W    R4,??DataTable19_37
   \   00000122   0x8824             LDRH     R4,[R4, #+0]
   \   00000124   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000126   0x.... 0x....      LDR.W    R5,??DataTable19_36
   \   0000012A   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000012E   0x192C             ADDS     R4,R5,R4
   \   00000130   0x.... 0x....      LDR.W    R5,??DataTable19_37
   \   00000134   0x802C             STRH     R4,[R5, #+0]
   1434            }
   \   00000136   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_10:
   \   00000138   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000013A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013C   0x428B             CMP      R3,R1
   \   0000013E   0xD3EE             BCC.N    ??route_type_Z_11
   1435            route_ave_z = route_ave_z/label_count;
   \   00000140   0x.... 0x....      LDR.W    R3,??DataTable19_37
   \   00000144   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000148   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014A   0xFB93 0xF3F1      SDIV     R3,R3,R1
   \   0000014E   0x.... 0x....      LDR.W    R4,??DataTable19_37
   \   00000152   0x8023             STRH     R3,[R4, #+0]
   1436            
   1437            for(i=fch_first;i<label_count;i++)
   \   00000154   0x0003             MOVS     R3,R0
   \   00000156   0xE010             B.N      ??route_type_Z_12
   1438            {
   1439              chafang_z[i] = route_z[i]*route_z[i];
   \                     ??route_type_Z_13:
   \   00000158   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000015A   0x.... 0x....      LDR.W    R4,??DataTable19_36
   \   0000015E   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   00000162   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000164   0x.... 0x....      LDR.W    R5,??DataTable19_36
   \   00000168   0xF835 0x5013      LDRH     R5,[R5, R3, LSL #+1]
   \   0000016C   0x436C             MULS     R4,R5,R4
   \   0000016E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000170   0x.... 0x....      LDR.W    R5,??DataTable19_38
   \   00000174   0xF825 0x4013      STRH     R4,[R5, R3, LSL #+1]
   1440            }
   \   00000178   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_12:
   \   0000017A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000017C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000017E   0x428B             CMP      R3,R1
   \   00000180   0xD3EA             BCC.N    ??route_type_Z_13
   1441            for(i=fch_first;i<label_count;i++)
   \   00000182   0x0003             MOVS     R3,R0
   \   00000184   0xE00C             B.N      ??route_type_Z_14
   1442            {
   1443              fangcha_z += chafang_z[i]; 
   \                     ??route_type_Z_15:
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable19_33
   \   0000018A   0x8800             LDRH     R0,[R0, #+0]
   \   0000018C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000018E   0x.... 0x....      LDR.W    R4,??DataTable19_38
   \   00000192   0xF834 0x4013      LDRH     R4,[R4, R3, LSL #+1]
   \   00000196   0x1820             ADDS     R0,R4,R0
   \   00000198   0x.... 0x....      LDR.W    R4,??DataTable19_33
   \   0000019C   0x8020             STRH     R0,[R4, #+0]
   1444            }
   \   0000019E   0x1C5B             ADDS     R3,R3,#+1
   \                     ??route_type_Z_14:
   \   000001A0   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001A2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A4   0x428B             CMP      R3,R1
   \   000001A6   0xD3EE             BCC.N    ??route_type_Z_15
   1445            fangcha_hou_z = fangcha_z/fch_av_count;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable19_33
   \   000001AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001B0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001B2   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \   000001B6   0x.... 0x....      LDR.W    R1,??DataTable19_35
   \   000001BA   0x8008             STRH     R0,[R1, #+0]
   1446          }
   \   000001BC   0xBC30             POP      {R4,R5}
   \   000001BE   0x4770             BX       LR               ;; return
   1447          
   1448          
   1449          //---------------------------------------¶æ»ú¿ØÖÆ------------------------------------------//
   1450                         

   \                                 In section .bss, align 4
   1451                   int32      pulse_count=0,pulse_count_pre=0;
   \                     pulse_count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     pulse_count_pre:
   \   00000000                      DS8 4
   1452          
   1453          #define  bolang     (fangcha_qian_f>100&&fangcha_qian_f<250)
   1454          extern   float      Kp,Kp_hold;
   1455          extern   float      Kd,Kd_hold;
   1456          extern   float      Ki,Ki_hold;
   1457          extern   float      Kp_ZW,Kp_WW,Kp_WZ,Kp_ZZ,Kp_BL;
   1458          extern   float      Kd_ZW,Kd_WW,Kd_WZ,Kd_ZZ,Kd_BL;

   \                                 In section .data, align 4
   1459                   float      k=0.02,t=0.0,chu=6.0;
   \                     k:
   \   00000000   0x3CA3D70A         DC32 3CA3D70AH

   \                                 In section .bss, align 4
   \                     t:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     chu:
   \   00000000   0x40C00000         DC32 40C00000H

   \                                 In section .bss, align 8
   1460                   double     delta_p=0.0;
   \                     delta_p:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
   1461                   double     I_sumerr=0.0;
   \                     I_sumerr:
   \   00000000                      DS8 8

   \                                 In section .data, align 2
   1462                   int16      ZHONG=4440;
   \                     ZHONG:
   \   00000000   0x1158             DC16 4440
   1463          //old1-×ó³ÔÁ¦-4455;//1-4500;//4-×óÊ®×Ö¼«²î-4550;//5-4525goodÒÑ»µ//6-4570-×óÓÒ¶¼²»¹»//7-4440good //8-4640ÓÒ²î//9-4510 not ok//10-4530-ok    

   \                                 In section .data, align 2
   1464                   int16      xianfu=1300;
   \                     xianfu:
   \   00000000   0x0514             DC16 1300
   1465                   

   \                                 In section .bss, align 1
   1466                   uint8      shache_fg=0;
   \                     shache_fg:
   \   00000000                      DS8 1
   1467                  
   1468          extern   uint8      d_p;
   1469          /*
   1470          1- ×ó×ª±ÈÓÒ×ª¼±        
   1471             µ÷Ç°ÂÖÍâÇã
   1472          */
   1473          

   \                                 In section .text, align 2, keep-with-next
   1474          void SetServoVoltage()
   1475          {         
   \                     SetServoVoltage:
   \   00000000   0xB510             PUSH     {R4,LR}
   1476            front_OFFSET_KZ = front_OFFSET;//PÏî£¡£¡£¡²»ÄÜÃ³È»µØ¼ÓÆ«²î
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable19_39
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable19_40
   \   0000000A   0x8809             LDRH     R1,[R1, #+0]
   \   0000000C   0x8001             STRH     R1,[R0, #+0]
   1477            
   1478            if(d_p==1)
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable19_41
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xF040 0x80B5      BNE.W    ??SetServoVoltage_0
   1479            {
   1480              if(front_OFFSET_KZ>100)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable19_39
   \   0000001E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000022   0x2865             CMP      R0,#+101
   \   00000024   0xDB03             BLT.N    ??SetServoVoltage_1
   1481              front_OFFSET_KZ=100;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable19_39
   \   0000002A   0x2164             MOVS     R1,#+100
   \   0000002C   0x8001             STRH     R1,[R0, #+0]
   1482              if(front_OFFSET_KZ<-100)
   \                     ??SetServoVoltage_1:
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable19_39
   \   00000032   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000036   0xF07F 0x0163      MVNS     R1,#+99
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xDA04             BGE.N    ??SetServoVoltage_2
   1483                front_OFFSET_KZ=-100;
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable19_39
   \   00000042   0xF07F 0x0163      MVNS     R1,#+99
   \   00000046   0x8001             STRH     R1,[R0, #+0]
   1484              
   1485              t=k*front_OFFSET_KZ; 
   \                     ??SetServoVoltage_2:
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable19_39
   \   0000004C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000050   0x.... 0x....      BL       __aeabi_i2f
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable19_42
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x.... 0x....      BL       __aeabi_fmul
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable19_43
   \   00000062   0x6008             STR      R0,[R1, #+0]
   1486              delta_p=t-1/6*t*t*t+3*t*t*t*t*t;
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable19_43
   \   00000068   0x6801             LDR      R1,[R0, #+0]
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x.... 0x....      BL       __aeabi_fmul
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable19_43
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0x.... 0x....      BL       __aeabi_fmul
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable19_43
   \   0000007E   0x6809             LDR      R1,[R1, #+0]
   \   00000080   0x.... 0x....      BL       __aeabi_fmul
   \   00000084   0x0001             MOVS     R1,R0
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable19_43
   \   0000008A   0x6800             LDR      R0,[R0, #+0]
   \   0000008C   0x.... 0x....      BL       __aeabi_fsub
   \   00000090   0x0004             MOVS     R4,R0
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable19_43
   \   00000096   0x6801             LDR      R1,[R0, #+0]
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable19_44  ;; 0x40400000
   \   0000009C   0x.... 0x....      BL       __aeabi_fmul
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable19_43
   \   000000A4   0x6809             LDR      R1,[R1, #+0]
   \   000000A6   0x.... 0x....      BL       __aeabi_fmul
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable19_43
   \   000000AE   0x6809             LDR      R1,[R1, #+0]
   \   000000B0   0x.... 0x....      BL       __aeabi_fmul
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable19_43
   \   000000B8   0x6809             LDR      R1,[R1, #+0]
   \   000000BA   0x.... 0x....      BL       __aeabi_fmul
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable19_43
   \   000000C2   0x6809             LDR      R1,[R1, #+0]
   \   000000C4   0x.... 0x....      BL       __aeabi_fmul
   \   000000C8   0x0021             MOVS     R1,R4
   \   000000CA   0x.... 0x....      BL       __aeabi_fadd
   \   000000CE   0x.... 0x....      BL       __aeabi_f2d
   \   000000D2   0x.... 0x....      LDR.W    R2,??DataTable19_45
   \   000000D6   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
   1487              delta_p=delta_p/chu;
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable19_46
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0x.... 0x....      BL       __aeabi_f2d
   \   000000E4   0x0002             MOVS     R2,R0
   \   000000E6   0x000B             MOVS     R3,R1
   \   000000E8   0x.... 0x....      LDR.W    R4,??DataTable19_45
   \   000000EC   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   000000F0   0x.... 0x....      BL       __aeabi_ddiv
   \   000000F4   0x.... 0x....      LDR.W    R2,??DataTable19_45
   \   000000F8   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
   1488              
   1489              if(delta_p>20)
   \   000000FC   0x.... 0x....      LDR.W    R2,??DataTable19_45
   \   00000100   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000104   0x2201             MOVS     R2,#+1
   \   00000106   0x.... 0x....      LDR.W    R3,??DataTable20  ;; 0x40340000
   \   0000010A   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000010E   0xD806             BHI.N    ??SetServoVoltage_3
   1490                delta_p=20;
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable19_45
   \   00000114   0x2200             MOVS     R2,#+0
   \   00000116   0x.... 0x....      LDR.W    R3,??DataTable20  ;; 0x40340000
   \   0000011A   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
   1491              if(delta_p<-20)
   \                     ??SetServoVoltage_3:
   \   0000011E   0x.... 0x....      LDR.W    R2,??DataTable19_45
   \   00000122   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000126   0x2200             MOVS     R2,#+0
   \   00000128   0x.... 0x....      LDR.W    R3,??DataTable20_1  ;; 0xc0340000
   \   0000012C   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000130   0xD206             BCS.N    ??SetServoVoltage_4
   1492                delta_p=-20;
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable19_45
   \   00000136   0x2200             MOVS     R2,#+0
   \   00000138   0x.... 0x....      LDR.W    R3,??DataTable20_1  ;; 0xc0340000
   \   0000013C   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
   1493              
   1494              if(delta_p<0) delta_p=-delta_p;
   \                     ??SetServoVoltage_4:
   \   00000140   0x.... 0x....      LDR.W    R2,??DataTable19_45
   \   00000144   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000148   0x2200             MOVS     R2,#+0
   \   0000014A   0x2300             MOVS     R3,#+0
   \   0000014C   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000150   0xD209             BCS.N    ??SetServoVoltage_5
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable19_45
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable19_45
   \   0000015A   0xE9D1 0x2300      LDRD     R2,R3,[R1, #+0]
   \   0000015E   0xF093 0x4300      EORS     R3,R3,#0x80000000
   \   00000162   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
   1495              
   1496              Kp=Kp_hold+delta_p;
   \                     ??SetServoVoltage_5:
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable21
   \   0000016A   0x6800             LDR      R0,[R0, #+0]
   \   0000016C   0x.... 0x....      BL       __aeabi_f2d
   \   00000170   0x....             LDR.N    R4,??DataTable19_45
   \   00000172   0xE9D4 0x2300      LDRD     R2,R3,[R4, #+0]
   \   00000176   0x.... 0x....      BL       __aeabi_dadd
   \   0000017A   0x.... 0x....      BL       __aeabi_d2f
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable21_1
   \   00000182   0x6008             STR      R0,[R1, #+0]
   1497            }
   1498          
   1499            if(stop_flag==1)  
   \                     ??SetServoVoltage_0:
   \   00000184   0x....             LDR.N    R0,??DataTable19
   \   00000186   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000018A   0x2801             CMP      R0,#+1
   \   0000018C   0xD108             BNE.N    ??SetServoVoltage_6
   1500            {
   1501              Kp=13;
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable21_1
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable21_2  ;; 0x41500000
   \   00000196   0x6001             STR      R1,[R0, #+0]
   1502              Kd=0;
   \   00000198   0x.... 0x....      LDR.W    R0,??DataTable22
   \   0000019C   0x2100             MOVS     R1,#+0
   \   0000019E   0x6001             STR      R1,[R0, #+0]
   1503            }
   1504            
   1505            D_err=front_OFFSET_KZ-front_OFFSET_KZ_pre;//DÏî
   \                     ??SetServoVoltage_6:
   \   000001A0   0x....             LDR.N    R0,??DataTable19_39
   \   000001A2   0x8800             LDRH     R0,[R0, #+0]
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable22_1
   \   000001A8   0x8809             LDRH     R1,[R1, #+0]
   \   000001AA   0x1A40             SUBS     R0,R0,R1
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable22_2
   \   000001B0   0x8008             STRH     R0,[R1, #+0]
   1506            servo_duty=(int16)(ZHONG+Kp*front_OFFSET_KZ+Kd*D_err);
   \   000001B2   0x.... 0x....      LDR.W    R0,??DataTable23
   \   000001B6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001BA   0x.... 0x....      BL       __aeabi_i2f
   \   000001BE   0x0004             MOVS     R4,R0
   \   000001C0   0x....             LDR.N    R0,??DataTable19_39
   \   000001C2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001C6   0x.... 0x....      BL       __aeabi_i2f
   \   000001CA   0x.... 0x....      LDR.W    R1,??DataTable21_1
   \   000001CE   0x6809             LDR      R1,[R1, #+0]
   \   000001D0   0x.... 0x....      BL       __aeabi_fmul
   \   000001D4   0x0021             MOVS     R1,R4
   \   000001D6   0x.... 0x....      BL       __aeabi_fadd
   \   000001DA   0x0004             MOVS     R4,R0
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable22_2
   \   000001E0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001E4   0x.... 0x....      BL       __aeabi_i2f
   \   000001E8   0x.... 0x....      LDR.W    R1,??DataTable22
   \   000001EC   0x6809             LDR      R1,[R1, #+0]
   \   000001EE   0x.... 0x....      BL       __aeabi_fmul
   \   000001F2   0x0021             MOVS     R1,R4
   \   000001F4   0x.... 0x....      BL       __aeabi_fadd
   \   000001F8   0x.... 0x....      BL       __aeabi_f2iz
   \   000001FC   0x.... 0x....      LDR.W    R1,??DataTable26
   \   00000200   0x8008             STRH     R0,[R1, #+0]
   1507            front_OFFSET_KZ_pre=front_OFFSET_KZ;
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000206   0x....             LDR.N    R1,??DataTable19_39
   \   00000208   0x8809             LDRH     R1,[R1, #+0]
   \   0000020A   0x8001             STRH     R1,[R0, #+0]
   1508            
   1509            //servo_duty=ZHONG;//+xianfu;
   1510            //¶æ»úÏÞ·ù±£»¤
   1511            if(LHOLDdiao_flag==1||RHOLDdiao_flag==1)
   \   0000020C   0x.... 0x....      LDR.W    R0,??DataTable24
   \   00000210   0x7800             LDRB     R0,[R0, #+0]
   \   00000212   0x2801             CMP      R0,#+1
   \   00000214   0xD004             BEQ.N    ??SetServoVoltage_7
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable24_1
   \   0000021A   0x7800             LDRB     R0,[R0, #+0]
   \   0000021C   0x2801             CMP      R0,#+1
   \   0000021E   0xD136             BNE.N    ??SetServoVoltage_8
   1512            {
   1513              if(servo_duty>ZHONG+xianfu+100)
   \                     ??SetServoVoltage_7:
   \   00000220   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000224   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000228   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   0000022C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000230   0x1808             ADDS     R0,R1,R0
   \   00000232   0x3064             ADDS     R0,R0,#+100
   \   00000234   0x.... 0x....      LDR.W    R1,??DataTable26
   \   00000238   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000023C   0x4288             CMP      R0,R1
   \   0000023E   0xDA0A             BGE.N    ??SetServoVoltage_9
   1514                servo_duty=ZHONG+xianfu+100;
   \   00000240   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000244   0x8800             LDRH     R0,[R0, #+0]
   \   00000246   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   0000024A   0x8809             LDRH     R1,[R1, #+0]
   \   0000024C   0x1808             ADDS     R0,R1,R0
   \   0000024E   0x3064             ADDS     R0,R0,#+100
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable26
   \   00000254   0x8008             STRH     R0,[R1, #+0]
   1515              if(servo_duty<ZHONG-xianfu-100)
   \                     ??SetServoVoltage_9:
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable26
   \   0000025A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000025E   0x.... 0x....      LDR.W    R1,??DataTable23
   \   00000262   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000266   0x.... 0x....      LDR.W    R2,??DataTable24_2
   \   0000026A   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000026E   0x1A89             SUBS     R1,R1,R2
   \   00000270   0x3964             SUBS     R1,R1,#+100
   \   00000272   0x4288             CMP      R0,R1
   \   00000274   0xDA41             BGE.N    ??SetServoVoltage_10
   1516                servo_duty=ZHONG-xianfu-100;
   \   00000276   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000027A   0x8800             LDRH     R0,[R0, #+0]
   \   0000027C   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   00000280   0x8809             LDRH     R1,[R1, #+0]
   \   00000282   0x1A40             SUBS     R0,R0,R1
   \   00000284   0x3864             SUBS     R0,R0,#+100
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable26
   \   0000028A   0x8008             STRH     R0,[R1, #+0]
   \   0000028C   0xE035             B.N      ??SetServoVoltage_10
   1517            }
   1518            else
   1519            {
   1520              if(servo_duty>ZHONG+xianfu-130)
   \                     ??SetServoVoltage_8:
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000292   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000296   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   0000029A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000029E   0x1808             ADDS     R0,R1,R0
   \   000002A0   0x3882             SUBS     R0,R0,#+130
   \   000002A2   0x.... 0x....      LDR.W    R1,??DataTable26
   \   000002A6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002AA   0x4288             CMP      R0,R1
   \   000002AC   0xDA0A             BGE.N    ??SetServoVoltage_11
   1521                servo_duty=ZHONG+xianfu-130;
   \   000002AE   0x.... 0x....      LDR.W    R0,??DataTable23
   \   000002B2   0x8800             LDRH     R0,[R0, #+0]
   \   000002B4   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   000002B8   0x8809             LDRH     R1,[R1, #+0]
   \   000002BA   0x1808             ADDS     R0,R1,R0
   \   000002BC   0x3882             SUBS     R0,R0,#+130
   \   000002BE   0x.... 0x....      LDR.W    R1,??DataTable26
   \   000002C2   0x8008             STRH     R0,[R1, #+0]
   1522              if(servo_duty<ZHONG-xianfu+130)
   \                     ??SetServoVoltage_11:
   \   000002C4   0x.... 0x....      LDR.W    R0,??DataTable26
   \   000002C8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002CC   0x.... 0x....      LDR.W    R1,??DataTable23
   \   000002D0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002D4   0x.... 0x....      LDR.W    R2,??DataTable24_2
   \   000002D8   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000002DC   0x1A89             SUBS     R1,R1,R2
   \   000002DE   0x3182             ADDS     R1,R1,#+130
   \   000002E0   0x4288             CMP      R0,R1
   \   000002E2   0xDA0A             BGE.N    ??SetServoVoltage_10
   1523                servo_duty=ZHONG-xianfu+130;
   \   000002E4   0x.... 0x....      LDR.W    R0,??DataTable23
   \   000002E8   0x8800             LDRH     R0,[R0, #+0]
   \   000002EA   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   000002EE   0x8809             LDRH     R1,[R1, #+0]
   \   000002F0   0x1A40             SUBS     R0,R0,R1
   \   000002F2   0x3082             ADDS     R0,R0,#+130
   \   000002F4   0x.... 0x....      LDR.W    R1,??DataTable26
   \   000002F8   0x8008             STRH     R0,[R1, #+0]
   1524            }
   1525            
   1526            //¶æ»úÊä³ö
   1527            FTM_PWM_ChangeDuty(0,2,servo_duty);//servo_duty±äÐ¡£¬¶æ»úÓÒ×ª£¬Ç°ÂÖ×óÆ«
   \                     ??SetServoVoltage_10:
   \   000002FA   0x.... 0x....      LDR.W    R0,??DataTable26
   \   000002FE   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000302   0x2102             MOVS     R1,#+2
   \   00000304   0x2000             MOVS     R0,#+0
   \   00000306   0x.... 0x....      BL       FTM_PWM_ChangeDuty
   1528          }
   \   0000030A   0xBD10             POP      {R4,PC}          ;; return
   1529          
   1530          //-----------------------ËÙ¶È¿ØÖÆ-------------------------------------------------------//

   \                                 In section .bss, align 1
   1531                  uint8    qd_count=0;
   \                     qd_count:
   \   00000000                      DS8 1
   1532          extern  int16    speed;

   \                                 In section .bss, align 2
   1533                  int16    speed_pwm=0;
   \                     speed_pwm:
   \   00000000                      DS8 2
   1534                 
   1535          extern  int16    shache_time;

   \                                 In section .bss, align 2
   1536                  int16    bl_shache_time=0;
   \                     bl_shache_time:
   \   00000000                      DS8 2
   1537          extern  int16    speed;
   1538          extern  int16    speed_H;
   1539          extern  int16    speed_L;
   1540          extern  int16    speed_B;

   \                                 In section .bss, align 2
   1541                  int16    speed_F=0;
   \                     speed_F:
   \   00000000                      DS8 2
   1542          
   1543          extern  int16    speed_jian;
   1544          extern  int16    PMAX; 
   1545          
   1546          extern  float    k_B;
   1547                  

   \                                 In section .data, align 2
   1548                  int16    Psha=60;
   \                     Psha:
   \   00000000   0x003C             DC16 60

   \                                 In section .bss, align 1
   1549                  uint8    shapo=0;
   \                     shapo:
   \   00000000                      DS8 1
   1550                  

   \                                 In section .data, align 1
   1551                  uint8    SHACHE_TIME_1=4;//5;
   \                     SHACHE_TIME_1:
   \   00000000   0x04               DC8 4

   \                                 In section .data, align 1
   1552                  uint8    SHACHE_TIME_2=5;//5;
   \                     SHACHE_TIME_2:
   \   00000000   0x05               DC8 5

   \                                 In section .data, align 1
   1553                  uint8    SHACHE_TIME_3=6;//6;
   \                     SHACHE_TIME_3:
   \   00000000   0x06               DC8 6

   \                                 In section .data, align 1
   1554                  uint8    SHACHE_TIME_4=7;
   \                     SHACHE_TIME_4:
   \   00000000   0x07               DC8 7

   \                                 In section .data, align 1
   1555                  uint8    SHACHE_TIME_5=15;
   \                     SHACHE_TIME_5:
   \   00000000   0x0F               DC8 15

   \                                 In section .data, align 1
   1556                  uint8    BL_SHACHE_TIME=15;
   \                     BL_SHACHE_TIME:
   \   00000000   0x0F               DC8 15
   1557                  

   \                                 In section .bss, align 1
   1558                  uint8    guosha_flag=0;
   \                     guosha_flag:
   \   00000000                      DS8 1
   1559                  

   \                                 In section .bss, align 1
   1560                  uint8    ZZ_flag=0;
   \                     ZZ_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1561                  uint8    WW_flag=0;
   \                     WW_flag:
   \   00000000                      DS8 1
   1562                  
   1563          extern  int16    Motor_Lock;
   1564          extern  int16    Servo_Lock;
   1565          

   \                                 In section .data, align 1
   1566                  uint8    jisha=1;
   \                     jisha:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 4
   1567                  float    sp=10.0,sd=10.0;
   \                     `sp`:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .data, align 4
   \                     sd:
   \   00000000   0x41200000         DC32 41200000H
   1568                  

   \                                 In section .bss, align 2
   1569                  int16    qd_ct=0;
   \                     qd_ct:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   1570                  int16    Pset=165;//170
   \                     Pset:
   \   00000000   0x00A5             DC16 165
   1571                  

   \                                 In section .bss, align 1
   1572                  uint8    rzsc_fg=0;
   \                     rzsc_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1573                  uint8    rshover_fg=0;
   \                     rshover_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1574                  uint8    tisu_fg=0;
   \                     tisu_fg:
   \   00000000                      DS8 1
   1575                  
   1576                  
   1577          //----------------------------------²âËÙ---------------------------------------        

   \                                 In section .text, align 2, keep-with-next
   1578          void GetMotorPulse()
   1579          {
   1580            uint32 nPulse;
   1581            nPulse=FTM2_CNT;                     
   \                     GetMotorPulse:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable26_1  ;; 0x400b8004
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   1582            g_nMotorPulse = (int32)nPulse;      
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable25
   \   0000000A   0x8008             STRH     R0,[R1, #+0]
   1583            g_nMotorPulseSigma +=g_nMotorPulse;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable25_1
   \   00000010   0x8800             LDRH     R0,[R0, #+0]
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable25
   \   00000016   0x8809             LDRH     R1,[R1, #+0]
   \   00000018   0x1808             ADDS     R0,R1,R0
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable25_1
   \   0000001E   0x8008             STRH     R0,[R1, #+0]
   1584            FTM2_CNT=0;
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable26_1  ;; 0x400b8004
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x6001             STR      R1,[R0, #+0]
   1585          }
   \   00000028   0x4770             BX       LR               ;; return
   1586          
   1587          //----------------------------------É²³µ1---------------------------------------

   \                                 In section .text, align 2, keep-with-next
   1588          void shache1()//Ìõ¼þµÃ·â±Õ
   1589          { 
   1590            
   1591            /*
   1592            1-²¨ÀËÍä±à³Ì¼ÇÂ¼ZZ_countµÄÊýÄ¿
   1593            */
   1594            //Z>>W
   1595            if(fangcha_qian_f>=fch_dp2)
   \                     shache1:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable25_2
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable25_3
   \   0000000C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000010   0x4288             CMP      R0,R1
   \   00000012   0xDB2D             BLT.N    ??shache1_0
   1596            {
   1597              WW_flag = 1;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable25_4
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x7001             STRB     R1,[R0, #+0]
   1598              if(ZZ_count>10)//8
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable26_2
   \   00000020   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000024   0x280B             CMP      R0,#+11
   \   00000026   0xDB18             BLT.N    ??shache1_1
   1599              {
   1600                if(pulse_count>Psha)  shache_fg=1;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   0000002C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000034   0x6809             LDR      R1,[R1, #+0]
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xDA04             BGE.N    ??shache1_2
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0x7001             STRB     R1,[R0, #+0]
   \   00000042   0xE053             B.N      ??shache1_3
   1601                else
   1602                {
   1603                  ZZ_count=0;
   \                     ??shache1_2:
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable26_2
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x8001             STRH     R1,[R0, #+0]
   1604                  speed=speed_L;
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable26_5
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable26_6
   \   00000054   0x8809             LDRH     R1,[R1, #+0]
   \   00000056   0x8001             STRH     R1,[R0, #+0]
   \   00000058   0xE048             B.N      ??shache1_3
   1605                }
   1606              }
   1607              else 
   1608              {
   1609                ZZ_count=0;
   \                     ??shache1_1:
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable26_2
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x8001             STRH     R1,[R0, #+0]
   1610                speed=speed_L;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable26_5
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable26_6
   \   0000006A   0x8809             LDRH     R1,[R1, #+0]
   \   0000006C   0x8001             STRH     R1,[R0, #+0]
   \   0000006E   0xE03D             B.N      ??shache1_3
   1611              }
   1612            }
   1613            //Z>>Z
   1614            else if(fangcha_qian_f<fch_dp2)
   \                     ??shache1_0:
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable25_2
   \   00000074   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable25_3
   \   0000007C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000080   0x4288             CMP      R0,R1
   \   00000082   0xDA33             BGE.N    ??shache1_3
   1615            {
   1616              if(WW_flag==1)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable25_4
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD107             BNE.N    ??shache1_4
   1617              {
   1618                WW_flag = 0;
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable25_4
   \   00000092   0x2100             MOVS     R1,#+0
   \   00000094   0x7001             STRB     R1,[R0, #+0]
   1619                ZZ_count = 0;
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable26_2
   \   0000009A   0x2100             MOVS     R1,#+0
   \   0000009C   0x8001             STRH     R1,[R0, #+0]
   1620              }
   1621              ZZ_count++;
   \                     ??shache1_4:
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable26_2
   \   000000A2   0x8800             LDRH     R0,[R0, #+0]
   \   000000A4   0x1C40             ADDS     R0,R0,#+1
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable26_2
   \   000000AA   0x8008             STRH     R0,[R1, #+0]
   1622              if(ZZ_count>2) //¼õÉÙÎóÅÐÇé¿öÏÂµÄÎó¼ÓËÙ 
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable26_2
   \   000000B0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000B4   0x2803             CMP      R0,#+3
   \   000000B6   0xDB13             BLT.N    ??shache1_5
   1623              {
   1624                speed = speed_H;
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable26_5
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable26_7
   \   000000C0   0x8809             LDRH     R1,[R1, #+0]
   \   000000C2   0x8001             STRH     R1,[R0, #+0]
   1625                if(pulse_count<Pset)  tisu_fg=1;
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable26_8
   \   000000CE   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000D2   0x4288             CMP      R0,R1
   \   000000D4   0xDA0A             BGE.N    ??shache1_3
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable26_9
   \   000000DA   0x2101             MOVS     R1,#+1
   \   000000DC   0x7001             STRB     R1,[R0, #+0]
   \   000000DE   0xE005             B.N      ??shache1_3
   1626              }   
   1627              else speed = speed_L;
   \                     ??shache1_5:
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable26_5
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable26_6
   \   000000E8   0x8809             LDRH     R1,[R1, #+0]
   \   000000EA   0x8001             STRH     R1,[R0, #+0]
   1628            }
   1629            //ÈË×ÖÍä------------------------------------------------------------------
   1630            if((LHOLDdiao_flag==1||RHOLDdiao_flag==1)&&(rshover_fg==0))
   \                     ??shache1_3:
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable24
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x2801             CMP      R0,#+1
   \   000000F4   0xD004             BEQ.N    ??shache1_6
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable24_1
   \   000000FA   0x7800             LDRB     R0,[R0, #+0]
   \   000000FC   0x2801             CMP      R0,#+1
   \   000000FE   0xD108             BNE.N    ??shache1_7
   \                     ??shache1_6:
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable26_10
   \   00000104   0x7800             LDRB     R0,[R0, #+0]
   \   00000106   0x2800             CMP      R0,#+0
   \   00000108   0xD103             BNE.N    ??shache1_7
   1631              rzsc_fg=1;
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable26_11
   \   0000010E   0x2101             MOVS     R1,#+1
   \   00000110   0x7001             STRB     R1,[R0, #+0]
   1632          }
   \                     ??shache1_7:
   \   00000112   0x4770             BX       LR               ;; return
   1633          //---------------------------------------------------------------
   1634          extern  uint8   dir_fg;
   1635          extern  int16   ceshi;
   1636          extern  uint8   ceshi_fg;

   \                                 In section .bss, align 8
   1637                  double  x=0.0,y=0.0;
   \                     x:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
   \                     y:
   \   00000000                      DS8 8
   1638                  

   \                                 In section .data, align 2
   1639                  int16   Pmax=250,Pmin=0;
   \                     Pmax:
   \   00000000   0x00FA             DC16 250

   \                                 In section .bss, align 2
   \                     Pmin:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
   1640                  uint8   ruwang_fg=0;  
   \                     ruwang_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
   1641                  int16   sha_width=0;
   \                     sha_width:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   1642                  int16   maybe_bl_ct=0;
   \                     maybe_bl_ct:
   \   00000000                      DS8 2
   1643                  

   \                                 In section .bss, align 1
   1644                  uint8   xiao_fg=0,da_fg=0;
   \                     xiao_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     da_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
   1645                  int16   xiao_ct=0,da_ct=0;
   \                     xiao_ct:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     da_ct:
   \   00000000                      DS8 2
   1646                  
   1647          extern  int16   Prz;
   1648          extern  float   Kmax,Kmin;

   \                                 In section .bss, align 1
   1649                  uint8   BLsha=0;
   \                     BLsha:
   \   00000000                      DS8 1
   1650                  
   1651          extern  int16   POsha;

   \                                 In section .bss, align 2
   1652                  int16   SHCH_CT=0;
   \                     SHCH_CT:
   \   00000000                      DS8 2
   1653                  

   \                                 In section .bss, align 1
   1654                  uint8   sh_x=0;
   \                     sh_x:
   \   00000000                      DS8 1
   1655                  

   \                                 In section .bss, align 1
   1656                  uint8   POshaen=0;
   \                     POshaen:
   \   00000000                      DS8 1
   1657                  

   \                                 In section .data, align 1
   1658                  uint8   shmode=1;
   \                     shmode:
   \   00000000   0x01               DC8 1
   1659          
   1660          /*Ã»ÊµÏÖÔ¤ÆÚµÄÐ§¹ûµÄ³ÌÐò£¬¾ÍÒ»ÌõÒ»ÌõµØµ÷ÊÔ*/        

   \                                 In section .text, align 2, keep-with-next
   1661          void Speed_PID()
   1662          {
   \                     Speed_PID:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   1663              
   1664              pulse_count=g_nMotorPulseSigma; 
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable25_1
   \   0000000A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000000E   0x6001             STR      R1,[R0, #+0]
   1665              g_nMotorPulseSigma=0;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable25_1
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x8001             STRH     R1,[R0, #+0]
   1666          
   1667              //É²³µ¿ØÖÆ,²Éµ½·½ÏòÊý¾ÝµÄµÚÒ»¸ö5ms²Å»á½øÈë
   1668              if(dir_fg==1)
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable26_12
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2801             CMP      R0,#+1
   \   00000020   0xD115             BNE.N    ??Speed_PID_0
   1669              {
   1670                dir_fg=0;
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable26_12
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x7001             STRB     R1,[R0, #+0]
   1671                if(front_r-front_l>front_width-10)//·ÀÕÏ°­ÎóÉ²
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable26_13
   \   0000002E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000032   0x380A             SUBS     R0,R0,#+10
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable26_14
   \   00000038   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable26_15
   \   00000040   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000044   0x1A89             SUBS     R1,R1,R2
   \   00000046   0x4288             CMP      R0,R1
   \   00000048   0xDA01             BGE.N    ??Speed_PID_0
   1672                  shache1(); 
   \   0000004A   0x.... 0x....      BL       shache1
   1673              }
   1674              
   1675              //²¨ÀËÍäÖ±½Ó´óÍäµÀ£¬É²³µ
   1676              if(BLsha==1)
   \                     ??Speed_PID_0:
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable26_16
   \   00000052   0x7800             LDRB     R0,[R0, #+0]
   \   00000054   0x2801             CMP      R0,#+1
   \   00000056   0xD15F             BNE.N    ??Speed_PID_1
   1677              {
   1678                if(front_l>=6&&front_r<=121)
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable26_15
   \   0000005C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000060   0x2806             CMP      R0,#+6
   \   00000062   0xDB39             BLT.N    ??Speed_PID_2
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable26_14
   \   00000068   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000006C   0x287A             CMP      R0,#+122
   \   0000006E   0xDA33             BGE.N    ??Speed_PID_2
   1679                {
   1680                  if(fangcha_qian_f<=fch_dp2)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable25_3
   \   00000074   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable25_2
   \   0000007C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000080   0x4288             CMP      R0,R1
   \   00000082   0xDB14             BLT.N    ??Speed_PID_3
   1681                  {
   1682                    xiao_fg=1;
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable26_17
   \   00000088   0x2101             MOVS     R1,#+1
   \   0000008A   0x7001             STRB     R1,[R0, #+0]
   1683                    if(da_fg==1)
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable26_18
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0x2801             CMP      R0,#+1
   \   00000094   0xD140             BNE.N    ??Speed_PID_1
   1684                    {
   1685                      da_fg=0;
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable26_18
   \   0000009A   0x2100             MOVS     R1,#+0
   \   0000009C   0x7001             STRB     R1,[R0, #+0]
   1686                      xiao_ct++;
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable26_19
   \   000000A2   0x8800             LDRH     R0,[R0, #+0]
   \   000000A4   0x1C40             ADDS     R0,R0,#+1
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable26_19
   \   000000AA   0x8008             STRH     R0,[R1, #+0]
   \   000000AC   0xE034             B.N      ??Speed_PID_1
   1687                    }
   1688                  }
   1689                  else
   1690                  {
   1691                    da_fg=1;
   \                     ??Speed_PID_3:
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable26_18
   \   000000B2   0x2101             MOVS     R1,#+1
   \   000000B4   0x7001             STRB     R1,[R0, #+0]
   1692                    if(xiao_fg==1)  
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable26_17
   \   000000BA   0x7800             LDRB     R0,[R0, #+0]
   \   000000BC   0x2801             CMP      R0,#+1
   \   000000BE   0xD12B             BNE.N    ??Speed_PID_1
   1693                    {
   1694                      xiao_fg=0;
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable26_17
   \   000000C4   0x2100             MOVS     R1,#+0
   \   000000C6   0x7001             STRB     R1,[R0, #+0]
   1695                      da_ct++;
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable26_20
   \   000000CC   0x8800             LDRH     R0,[R0, #+0]
   \   000000CE   0x1C40             ADDS     R0,R0,#+1
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable26_20
   \   000000D4   0x8008             STRH     R0,[R1, #+0]
   \   000000D6   0xE01F             B.N      ??Speed_PID_1
   1696                    }
   1697                  }
   1698                }
   1699                else
   1700                {
   1701                  if(xiao_ct>=2&&da_ct>=2)  
   \                     ??Speed_PID_2:
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable26_19
   \   000000DC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000E0   0x2802             CMP      R0,#+2
   \   000000E2   0xDB09             BLT.N    ??Speed_PID_4
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable26_20
   \   000000E8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000EC   0x2802             CMP      R0,#+2
   \   000000EE   0xDB03             BLT.N    ??Speed_PID_4
   1702                  {
   1703                    shache_fg=1;
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \   000000F4   0x2101             MOVS     R1,#+1
   \   000000F6   0x7001             STRB     R1,[R0, #+0]
   1704                  }
   1705                  
   1706                  xiao_ct=0;
   \                     ??Speed_PID_4:
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable26_19
   \   000000FC   0x2100             MOVS     R1,#+0
   \   000000FE   0x8001             STRH     R1,[R0, #+0]
   1707                  xiao_fg=0;
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable26_17
   \   00000104   0x2100             MOVS     R1,#+0
   \   00000106   0x7001             STRB     R1,[R0, #+0]
   1708                  da_ct=0;
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable26_20
   \   0000010C   0x2100             MOVS     R1,#+0
   \   0000010E   0x8001             STRH     R1,[R0, #+0]
   1709                  da_fg=0;
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable26_18
   \   00000114   0x2100             MOVS     R1,#+0
   \   00000116   0x7001             STRB     R1,[R0, #+0]
   1710                }
   1711              }
   1712              
   1713              //Æô¶¯¼ÓËÙ
   1714              //if(qd_count++<60) speed=1000;
   1715              //else qd_count=60;
   1716              
   1717              //×î¸ßËÙ¶ÈÏÞÖÆ
   1718              if(pulse_count>PMAX) 
   \                     ??Speed_PID_1:
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable26_21
   \   0000011C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000120   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000124   0x6809             LDR      R1,[R1, #+0]
   \   00000126   0x4288             CMP      R0,R1
   \   00000128   0xDA09             BGE.N    ??Speed_PID_5
   1719                speed = speed-speed_jian;//¿ØÖÆÐ§¹ûÃ÷ÏÔ
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable26_5
   \   0000012E   0x8800             LDRH     R0,[R0, #+0]
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable26_22
   \   00000134   0x8809             LDRH     R1,[R1, #+0]
   \   00000136   0x1A40             SUBS     R0,R0,R1
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable26_5
   \   0000013C   0x8008             STRH     R0,[R1, #+0]
   1720            
   1721              //Éè¶¨PIDÊäÈëÖµ
   1722              /*
   1723              1-Ó¦¸ÃÍ¬Ê±ÏÔÊ¾speed_pwmÓëspeed
   1724                Èç¹û²¨¶¯»òÓÐ¾²²î¶¼²»ºÏÊÊ
   1725              2-ÀûÓÃpulse_count¼ÇÂ¼Àï³Ì
   1726                Èç¹û¹»×¼È· ¿ÉÓÃÀ´Í£³µ
   1727              3-ÏÔÊ¾¿ªÊ¼É²³µÓë½áÊøÉ²³µÊ±µÄÂö³å
   1728                É²³µÔÚÓÚ ¼°Ê±+ÊÊµ±
   1729              */
   1730              
   1731              //É²³µº¯Êý-------
   1732              //-m1-//
   1733              x=(double)((Psha-pulse_count)/((Pmax-Pmin)/3));
   \                     ??Speed_PID_5:
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable26_23
   \   00000142   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000146   0x.... 0x....      LDR.W    R1,??DataTable26_24
   \   0000014A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000014E   0x1A40             SUBS     R0,R0,R1
   \   00000150   0x2103             MOVS     R1,#+3
   \   00000152   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable25_5
   \   0000015A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000015E   0x.... 0x....      LDR.W    R2,??DataTable26_3
   \   00000162   0x6812             LDR      R2,[R2, #+0]
   \   00000164   0x1A89             SUBS     R1,R1,R2
   \   00000166   0xFB91 0xF0F0      SDIV     R0,R1,R0
   \   0000016A   0x.... 0x....      BL       __aeabi_i2d
   \   0000016E   0x.... 0x....      LDR.W    R2,??DataTable26_25
   \   00000172   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
   1734              //y=(double)((Pset-pulse_count)/((Pmax-Pmin)/3));
   1735              speed_B=(int16)((x-1/6*x*x*x+3*x*x*x*x*x)-300);//250
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable26_25
   \   0000017A   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   0000017E   0x2000             MOVS     R0,#+0
   \   00000180   0x2100             MOVS     R1,#+0
   \   00000182   0x.... 0x....      BL       __aeabi_dmul
   \   00000186   0x.... 0x....      LDR.W    R4,??DataTable26_25
   \   0000018A   0xE9D4 0x2300      LDRD     R2,R3,[R4, #+0]
   \   0000018E   0x.... 0x....      BL       __aeabi_dmul
   \   00000192   0x.... 0x....      LDR.W    R4,??DataTable26_25
   \   00000196   0xE9D4 0x2300      LDRD     R2,R3,[R4, #+0]
   \   0000019A   0x.... 0x....      BL       __aeabi_dmul
   \   0000019E   0x0002             MOVS     R2,R0
   \   000001A0   0x000B             MOVS     R3,R1
   \   000001A2   0x.... 0x....      LDR.W    R4,??DataTable26_25
   \   000001A6   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   000001AA   0x.... 0x....      BL       __aeabi_dsub
   \   000001AE   0x0004             MOVS     R4,R0
   \   000001B0   0x000D             MOVS     R5,R1
   \   000001B2   0x.... 0x....      LDR.W    R0,??DataTable26_25
   \   000001B6   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   000001BA   0x2000             MOVS     R0,#+0
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable26_26  ;; 0x40080000
   \   000001C0   0x.... 0x....      BL       __aeabi_dmul
   \   000001C4   0x.... 0x....      LDR.W    R6,??DataTable26_25
   \   000001C8   0xE9D6 0x2300      LDRD     R2,R3,[R6, #+0]
   \   000001CC   0x.... 0x....      BL       __aeabi_dmul
   \   000001D0   0x.... 0x....      LDR.W    R6,??DataTable26_25
   \   000001D4   0xE9D6 0x2300      LDRD     R2,R3,[R6, #+0]
   \   000001D8   0x.... 0x....      BL       __aeabi_dmul
   \   000001DC   0x.... 0x....      LDR.W    R6,??DataTable26_25
   \   000001E0   0xE9D6 0x2300      LDRD     R2,R3,[R6, #+0]
   \   000001E4   0x.... 0x....      BL       __aeabi_dmul
   \   000001E8   0x.... 0x....      LDR.W    R6,??DataTable26_25
   \   000001EC   0xE9D6 0x2300      LDRD     R2,R3,[R6, #+0]
   \   000001F0   0x.... 0x....      BL       __aeabi_dmul
   \   000001F4   0x0022             MOVS     R2,R4
   \   000001F6   0x002B             MOVS     R3,R5
   \   000001F8   0x.... 0x....      BL       __aeabi_dadd
   \   000001FC   0x2200             MOVS     R2,#+0
   \   000001FE   0x.... 0x....      LDR.W    R3,??DataTable26_27  ;; 0xc072c000
   \   00000202   0x.... 0x....      BL       __aeabi_dadd
   \   00000206   0x.... 0x....      BL       __aeabi_d2iz
   \   0000020A   0x.... 0x....      LDR.W    R1,??DataTable26_28
   \   0000020E   0x8008             STRH     R0,[R1, #+0]
   1736              //speed_F=(int16)((y-1/6*y*y*y+3*y*y*y*y*y)+400);
   1737              /*//-m2-//
   1738              x=-(double)((pulse_count-Psha)/((Pmax-Pmin)/10));
   1739              speed_B=(int16)(x*x*x-200);*/
   1740              //-m3-//
   1741              //speed_B=-(pulse_count-Psha)*3;
   1742              //---------------------------------------------
   1743              if(shache_fg==1) 
   \   00000210   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \   00000214   0x7800             LDRB     R0,[R0, #+0]
   \   00000216   0x2801             CMP      R0,#+1
   \   00000218   0xF040 0x80E7      BNE.W    ??Speed_PID_6
   1744              { 
   1745                
   1746                if(shmode==1)
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable26_29
   \   00000220   0x7800             LDRB     R0,[R0, #+0]
   \   00000222   0x2801             CMP      R0,#+1
   \   00000224   0xD11F             BNE.N    ??Speed_PID_7
   1747                {
   1748                  if(pulse_count>Psha)  speed_pwm=speed_B;
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   0000022A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000022E   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000232   0x6809             LDR      R1,[R1, #+0]
   \   00000234   0x4288             CMP      R0,R1
   \   00000236   0xDA06             BGE.N    ??Speed_PID_8
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   0000023C   0x.... 0x....      LDR.W    R1,??DataTable26_28
   \   00000240   0x8809             LDRH     R1,[R1, #+0]
   \   00000242   0x8001             STRH     R1,[R0, #+0]
   \   00000244   0xE00F             B.N      ??Speed_PID_7
   1749                  else 
   1750                  {
   1751                    shache_fg=0;
   \                     ??Speed_PID_8:
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \   0000024A   0x2100             MOVS     R1,#+0
   \   0000024C   0x7001             STRB     R1,[R0, #+0]
   1752                    ZZ_count=0;
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable26_2
   \   00000252   0x2100             MOVS     R1,#+0
   \   00000254   0x8001             STRH     R1,[R0, #+0]
   1753                    qd_ct=0;
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable26_31
   \   0000025A   0x2100             MOVS     R1,#+0
   \   0000025C   0x8001             STRH     R1,[R0, #+0]
   1754                    speed_pwm=0;
   \   0000025E   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   00000262   0x2100             MOVS     R1,#+0
   \   00000264   0x8001             STRH     R1,[R0, #+0]
   1755                  }
   1756                }
   1757                
   1758                if(shmode==2)
   \                     ??Speed_PID_7:
   \   00000266   0x.... 0x....      LDR.W    R0,??DataTable26_29
   \   0000026A   0x7800             LDRB     R0,[R0, #+0]
   \   0000026C   0x2802             CMP      R0,#+2
   \   0000026E   0xF040 0x812D      BNE.W    ??Speed_PID_9
   1759                {
   1760                  //Èç´Ë·Ö¶ÎÐ§¹ûÏÔÖø£¬¿ÉÒÔ´ËÐÞ¸Äº¯Êý£¬Ìá¸ß»ùÖ·£¬Ôö´óÐ±ÂÊ
   1761                  if(pulse_count>Psha+100)  speed_pwm=-800;
   \   00000272   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   00000276   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000027A   0x3064             ADDS     R0,R0,#+100
   \   0000027C   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000280   0x6809             LDR      R1,[R1, #+0]
   \   00000282   0x4288             CMP      R0,R1
   \   00000284   0xDA05             BGE.N    ??Speed_PID_10
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   0000028A   0x.... 0x....      LDR.W    R1,??DataTable26_32  ;; 0xfffffce0
   \   0000028E   0x8001             STRH     R1,[R0, #+0]
   \   00000290   0xE11C             B.N      ??Speed_PID_9
   1762                  else if(pulse_count>Psha+80&&pulse_count<=Psha+100)  speed_pwm=-600;
   \                     ??Speed_PID_10:
   \   00000292   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   00000296   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000029A   0x3050             ADDS     R0,R0,#+80
   \   0000029C   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   000002A0   0x6809             LDR      R1,[R1, #+0]
   \   000002A2   0x4288             CMP      R0,R1
   \   000002A4   0xDA0F             BGE.N    ??Speed_PID_11
   \   000002A6   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   000002AA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002AE   0x3064             ADDS     R0,R0,#+100
   \   000002B0   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   000002B4   0x6809             LDR      R1,[R1, #+0]
   \   000002B6   0x4288             CMP      R0,R1
   \   000002B8   0xDB05             BLT.N    ??Speed_PID_11
   \   000002BA   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000002BE   0x.... 0x....      LDR.W    R1,??DataTable26_33  ;; 0xfffffda8
   \   000002C2   0x8001             STRH     R1,[R0, #+0]
   \   000002C4   0xE102             B.N      ??Speed_PID_9
   1763                  else if(pulse_count>Psha+60&&pulse_count<=Psha+80)  speed_pwm=-500;
   \                     ??Speed_PID_11:
   \   000002C6   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   000002CA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002CE   0x303C             ADDS     R0,R0,#+60
   \   000002D0   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   000002D4   0x6809             LDR      R1,[R1, #+0]
   \   000002D6   0x4288             CMP      R0,R1
   \   000002D8   0xDA0F             BGE.N    ??Speed_PID_12
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   000002DE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002E2   0x3050             ADDS     R0,R0,#+80
   \   000002E4   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   000002E8   0x6809             LDR      R1,[R1, #+0]
   \   000002EA   0x4288             CMP      R0,R1
   \   000002EC   0xDB05             BLT.N    ??Speed_PID_12
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000002F2   0x.... 0x....      LDR.W    R1,??DataTable26_34  ;; 0xfffffe0c
   \   000002F6   0x8001             STRH     R1,[R0, #+0]
   \   000002F8   0xE0E8             B.N      ??Speed_PID_9
   1764                  else if(pulse_count>Psha+40&&pulse_count<=Psha+60)  speed_pwm=-400;
   \                     ??Speed_PID_12:
   \   000002FA   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   000002FE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000302   0x3028             ADDS     R0,R0,#+40
   \   00000304   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000308   0x6809             LDR      R1,[R1, #+0]
   \   0000030A   0x4288             CMP      R0,R1
   \   0000030C   0xDA0F             BGE.N    ??Speed_PID_13
   \   0000030E   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   00000312   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000316   0x303C             ADDS     R0,R0,#+60
   \   00000318   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   0000031C   0x6809             LDR      R1,[R1, #+0]
   \   0000031E   0x4288             CMP      R0,R1
   \   00000320   0xDB05             BLT.N    ??Speed_PID_13
   \   00000322   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   00000326   0x.... 0x....      LDR.W    R1,??DataTable26_35  ;; 0xfffffe70
   \   0000032A   0x8001             STRH     R1,[R0, #+0]
   \   0000032C   0xE0CE             B.N      ??Speed_PID_9
   1765                  else if(pulse_count>Psha+20&&pulse_count<=Psha+40)  speed_pwm=-300;
   \                     ??Speed_PID_13:
   \   0000032E   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   00000332   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000336   0x3014             ADDS     R0,R0,#+20
   \   00000338   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   0000033C   0x6809             LDR      R1,[R1, #+0]
   \   0000033E   0x4288             CMP      R0,R1
   \   00000340   0xDA0F             BGE.N    ??Speed_PID_14
   \   00000342   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   00000346   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000034A   0x3028             ADDS     R0,R0,#+40
   \   0000034C   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000350   0x6809             LDR      R1,[R1, #+0]
   \   00000352   0x4288             CMP      R0,R1
   \   00000354   0xDB05             BLT.N    ??Speed_PID_14
   \   00000356   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   0000035A   0x.... 0x....      LDR.W    R1,??DataTable26_36  ;; 0xfffffed4
   \   0000035E   0x8001             STRH     R1,[R0, #+0]
   \   00000360   0xE0B4             B.N      ??Speed_PID_9
   1766                  else if(pulse_count>Psha+10&&pulse_count<=Psha+20)  speed_pwm=-200;
   \                     ??Speed_PID_14:
   \   00000362   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   00000366   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000036A   0x300A             ADDS     R0,R0,#+10
   \   0000036C   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000370   0x6809             LDR      R1,[R1, #+0]
   \   00000372   0x4288             CMP      R0,R1
   \   00000374   0xDA0F             BGE.N    ??Speed_PID_15
   \   00000376   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   0000037A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000037E   0x3014             ADDS     R0,R0,#+20
   \   00000380   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000384   0x6809             LDR      R1,[R1, #+0]
   \   00000386   0x4288             CMP      R0,R1
   \   00000388   0xDB05             BLT.N    ??Speed_PID_15
   \   0000038A   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   0000038E   0xF07F 0x01C7      MVNS     R1,#+199
   \   00000392   0x8001             STRH     R1,[R0, #+0]
   \   00000394   0xE09A             B.N      ??Speed_PID_9
   1767                  else if(pulse_count>Psha&&pulse_count<=Psha+10)  speed_pwm=-150;
   \                     ??Speed_PID_15:
   \   00000396   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   0000039A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000039E   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   000003A2   0x6809             LDR      R1,[R1, #+0]
   \   000003A4   0x4288             CMP      R0,R1
   \   000003A6   0xDA0F             BGE.N    ??Speed_PID_16
   \   000003A8   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   000003AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003B0   0x300A             ADDS     R0,R0,#+10
   \   000003B2   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   000003B6   0x6809             LDR      R1,[R1, #+0]
   \   000003B8   0x4288             CMP      R0,R1
   \   000003BA   0xDB05             BLT.N    ??Speed_PID_16
   \   000003BC   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000003C0   0xF07F 0x0195      MVNS     R1,#+149
   \   000003C4   0x8001             STRH     R1,[R0, #+0]
   \   000003C6   0xE081             B.N      ??Speed_PID_9
   1768                  else 
   1769                  {
   1770                    shache_fg=0;
   \                     ??Speed_PID_16:
   \   000003C8   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \   000003CC   0x2100             MOVS     R1,#+0
   \   000003CE   0x7001             STRB     R1,[R0, #+0]
   1771                    ZZ_count=0;
   \   000003D0   0x.... 0x....      LDR.W    R0,??DataTable26_2
   \   000003D4   0x2100             MOVS     R1,#+0
   \   000003D6   0x8001             STRH     R1,[R0, #+0]
   1772                    qd_ct=0;
   \   000003D8   0x.... 0x....      LDR.W    R0,??DataTable26_31
   \   000003DC   0x2100             MOVS     R1,#+0
   \   000003DE   0x8001             STRH     R1,[R0, #+0]
   1773                    speed_pwm=0;
   \   000003E0   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000003E4   0x2100             MOVS     R1,#+0
   \   000003E6   0x8001             STRH     R1,[R0, #+0]
   \   000003E8   0xE070             B.N      ??Speed_PID_9
   1774                  }
   1775                }
   1776              }
   1777              else
   1778              {
   1779                if(speed==speed_H)
   \                     ??Speed_PID_6:
   \   000003EA   0x.... 0x....      LDR.W    R0,??DataTable26_5
   \   000003EE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003F2   0x.... 0x....      LDR.W    R1,??DataTable26_7
   \   000003F6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000003FA   0x4288             CMP      R0,R1
   \   000003FC   0xD133             BNE.N    ??Speed_PID_17
   1780                {
   1781                  if(pulse_count<Pset*Kmax)  speed_pwm=1250;
   \   000003FE   0x.... 0x....      LDR.W    R0,??DataTable26_8
   \   00000402   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000406   0x.... 0x....      BL       __aeabi_i2f
   \   0000040A   0x.... 0x....      LDR.W    R1,??DataTable26_37
   \   0000040E   0x6809             LDR      R1,[R1, #+0]
   \   00000410   0x.... 0x....      BL       __aeabi_fmul
   \   00000414   0x0001             MOVS     R1,R0
   \   00000416   0x000C             MOVS     R4,R1
   \   00000418   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   0000041C   0x6800             LDR      R0,[R0, #+0]
   \   0000041E   0x.... 0x....      BL       __aeabi_i2f
   \   00000422   0x0021             MOVS     R1,R4
   \   00000424   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000428   0xD205             BCS.N    ??Speed_PID_18
   \   0000042A   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   0000042E   0xF240 0x41E2      MOVW     R1,#+1250
   \   00000432   0x8001             STRH     R1,[R0, #+0]
   \   00000434   0xE04A             B.N      ??Speed_PID_9
   1782                  else
   1783                  {
   1784                    PID_SetPoint(speed_H);
   \                     ??Speed_PID_18:
   \   00000436   0x.... 0x....      LDR.W    R0,??DataTable26_7
   \   0000043A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000043E   0x.... 0x....      BL       PID_SetPoint
   1785                    speed_pwm=(int16)(speed_H+IncPID_Calculate((pulse_count*19/10)));
   \   00000442   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   00000446   0x6800             LDR      R0,[R0, #+0]
   \   00000448   0x2113             MOVS     R1,#+19
   \   0000044A   0x4348             MULS     R0,R1,R0
   \   0000044C   0x210A             MOVS     R1,#+10
   \   0000044E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000452   0x.... 0x....      BL       IncPID_Calculate
   \   00000456   0x.... 0x....      LDR.W    R1,??DataTable26_7
   \   0000045A   0x8809             LDRH     R1,[R1, #+0]
   \   0000045C   0x1840             ADDS     R0,R0,R1
   \   0000045E   0x.... 0x....      LDR.W    R1,??DataTable26_30
   \   00000462   0x8008             STRH     R0,[R1, #+0]
   \   00000464   0xE032             B.N      ??Speed_PID_9
   1786                  }
   1787                }
   1788                else
   1789                { 
   1790                  if(pulse_count<Pset*Kmin)  speed_pwm=800;
   \                     ??Speed_PID_17:
   \   00000466   0x.... 0x....      LDR.W    R0,??DataTable26_8
   \   0000046A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000046E   0x.... 0x....      BL       __aeabi_i2f
   \   00000472   0x.... 0x....      LDR.W    R1,??DataTable26_38
   \   00000476   0x6809             LDR      R1,[R1, #+0]
   \   00000478   0x.... 0x....      BL       __aeabi_fmul
   \   0000047C   0x0001             MOVS     R1,R0
   \   0000047E   0x000C             MOVS     R4,R1
   \   00000480   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   00000484   0x6800             LDR      R0,[R0, #+0]
   \   00000486   0x.... 0x....      BL       __aeabi_i2f
   \   0000048A   0x0021             MOVS     R1,R4
   \   0000048C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000490   0xD205             BCS.N    ??Speed_PID_19
   \   00000492   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   00000496   0xF44F 0x7148      MOV      R1,#+800
   \   0000049A   0x8001             STRH     R1,[R0, #+0]
   \   0000049C   0xE016             B.N      ??Speed_PID_9
   1791                  else
   1792                  {
   1793                    PID_SetPoint(speed_L);
   \                     ??Speed_PID_19:
   \   0000049E   0x.... 0x....      LDR.W    R0,??DataTable26_6
   \   000004A2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004A6   0x.... 0x....      BL       PID_SetPoint
   1794                    speed_pwm=(int16)(speed_L+IncPID_Calculate((pulse_count*19/10)));
   \   000004AA   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   000004AE   0x6800             LDR      R0,[R0, #+0]
   \   000004B0   0x2113             MOVS     R1,#+19
   \   000004B2   0x4348             MULS     R0,R1,R0
   \   000004B4   0x210A             MOVS     R1,#+10
   \   000004B6   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000004BA   0x.... 0x....      BL       IncPID_Calculate
   \   000004BE   0x.... 0x....      LDR.W    R1,??DataTable26_6
   \   000004C2   0x8809             LDRH     R1,[R1, #+0]
   \   000004C4   0x1840             ADDS     R0,R0,R1
   \   000004C6   0x.... 0x....      LDR.W    R1,??DataTable26_30
   \   000004CA   0x8008             STRH     R0,[R1, #+0]
   1795                  }
   1796                }
   1797              }
   1798              
   1799              //¾¡ÔçÌáËÙ
   1800              if(shache_fg==0)
   \                     ??Speed_PID_9:
   \   000004CC   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \   000004D0   0x7800             LDRB     R0,[R0, #+0]
   \   000004D2   0x2800             CMP      R0,#+0
   \   000004D4   0xD14C             BNE.N    ??Speed_PID_20
   1801              { //Ö±µÀ¾¡ÔçÌáËÙ
   1802                if(front_r-front_l<front_width+10&&fangcha_qian_f<=fch_dp3)
   \   000004D6   0x.... 0x....      LDR.W    R0,??DataTable26_14
   \   000004DA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004DE   0x.... 0x....      LDR.W    R1,??DataTable26_15
   \   000004E2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000004E6   0x1A40             SUBS     R0,R0,R1
   \   000004E8   0x.... 0x....      LDR.W    R1,??DataTable26_13
   \   000004EC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000004F0   0x310A             ADDS     R1,R1,#+10
   \   000004F2   0x4288             CMP      R0,R1
   \   000004F4   0xDA3C             BGE.N    ??Speed_PID_20
   \   000004F6   0x.... 0x....      LDR.W    R0,??DataTable26_39
   \   000004FA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004FE   0x.... 0x....      LDR.W    R1,??DataTable25_2
   \   00000502   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000506   0x4288             CMP      R0,R1
   \   00000508   0xDB32             BLT.N    ??Speed_PID_20
   1803                {
   1804                  if(pulse_count<Pset*Kmax)  speed_pwm=1250;//1000
   \   0000050A   0x.... 0x....      LDR.W    R0,??DataTable26_8
   \   0000050E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000512   0x.... 0x....      BL       __aeabi_i2f
   \   00000516   0x.... 0x....      LDR.W    R1,??DataTable26_37
   \   0000051A   0x6809             LDR      R1,[R1, #+0]
   \   0000051C   0x.... 0x....      BL       __aeabi_fmul
   \   00000520   0x0001             MOVS     R1,R0
   \   00000522   0x000C             MOVS     R4,R1
   \   00000524   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   00000528   0x6800             LDR      R0,[R0, #+0]
   \   0000052A   0x.... 0x....      BL       __aeabi_i2f
   \   0000052E   0x0021             MOVS     R1,R4
   \   00000530   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000534   0xD205             BCS.N    ??Speed_PID_21
   \   00000536   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   0000053A   0xF240 0x41E2      MOVW     R1,#+1250
   \   0000053E   0x8001             STRH     R1,[R0, #+0]
   \   00000540   0xE016             B.N      ??Speed_PID_20
   1805                  else
   1806                  {
   1807                    PID_SetPoint(speed_H);
   \                     ??Speed_PID_21:
   \   00000542   0x.... 0x....      LDR.W    R0,??DataTable26_7
   \   00000546   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000054A   0x.... 0x....      BL       PID_SetPoint
   1808                    speed_pwm=(int16)(speed_H+IncPID_Calculate((pulse_count*19/10)));
   \   0000054E   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   00000552   0x6800             LDR      R0,[R0, #+0]
   \   00000554   0x2113             MOVS     R1,#+19
   \   00000556   0x4348             MULS     R0,R1,R0
   \   00000558   0x210A             MOVS     R1,#+10
   \   0000055A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000055E   0x.... 0x....      BL       IncPID_Calculate
   \   00000562   0x.... 0x....      LDR.W    R1,??DataTable26_7
   \   00000566   0x8809             LDRH     R1,[R1, #+0]
   \   00000568   0x1840             ADDS     R0,R0,R1
   \   0000056A   0x.... 0x....      LDR.W    R1,??DataTable26_30
   \   0000056E   0x8008             STRH     R0,[R1, #+0]
   1809                  }
   1810                }
   1811                //ÍäµÀ¾¡ÔçÌáËÙ
   1812              }
   1813              
   1814              //·ÀÖ¹É²³µÊ±¼ä¹ý³¤
   1815              if(sh_x==1)
   \                     ??Speed_PID_20:
   \   00000570   0x.... 0x....      LDR.W    R0,??DataTable26_40
   \   00000574   0x7800             LDRB     R0,[R0, #+0]
   \   00000576   0x2801             CMP      R0,#+1
   \   00000578   0xD11E             BNE.N    ??Speed_PID_22
   1816              {
   1817                if(shache_fg==1)
   \   0000057A   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \   0000057E   0x7800             LDRB     R0,[R0, #+0]
   \   00000580   0x2801             CMP      R0,#+1
   \   00000582   0xD115             BNE.N    ??Speed_PID_23
   1818                {
   1819                  SHCH_CT++;
   \   00000584   0x.... 0x....      LDR.W    R0,??DataTable26_41
   \   00000588   0x8800             LDRH     R0,[R0, #+0]
   \   0000058A   0x1C40             ADDS     R0,R0,#+1
   \   0000058C   0x.... 0x....      LDR.W    R1,??DataTable26_41
   \   00000590   0x8008             STRH     R0,[R1, #+0]
   1820                  if(SHCH_CT>80)  
   \   00000592   0x.... 0x....      LDR.W    R0,??DataTable26_41
   \   00000596   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000059A   0x2851             CMP      R0,#+81
   \   0000059C   0xDB0C             BLT.N    ??Speed_PID_22
   1821                  {
   1822                    SHCH_CT=0;
   \   0000059E   0x.... 0x....      LDR.W    R0,??DataTable26_41
   \   000005A2   0x2100             MOVS     R1,#+0
   \   000005A4   0x8001             STRH     R1,[R0, #+0]
   1823                    shache_fg=0;
   \   000005A6   0x.... 0x....      LDR.W    R0,??DataTable26_4
   \   000005AA   0x2100             MOVS     R1,#+0
   \   000005AC   0x7001             STRB     R1,[R0, #+0]
   \   000005AE   0xE003             B.N      ??Speed_PID_22
   1824                  }
   1825                }
   1826                else  SHCH_CT=0;
   \                     ??Speed_PID_23:
   \   000005B0   0x.... 0x....      LDR.W    R0,??DataTable26_41
   \   000005B4   0x2100             MOVS     R1,#+0
   \   000005B6   0x8001             STRH     R1,[R0, #+0]
   1827              }
   1828              
   1829              //ÆÂµÀÉ²³µ
   1830              if(POshaen==1)
   \                     ??Speed_PID_22:
   \   000005B8   0x.... 0x....      LDR.W    R0,??DataTable26_42
   \   000005BC   0x7800             LDRB     R0,[R0, #+0]
   \   000005BE   0x2801             CMP      R0,#+1
   \   000005C0   0xD11D             BNE.N    ??Speed_PID_24
   1831              {
   1832                if(shapo==1)
   \   000005C2   0x.... 0x....      LDR.W    R0,??DataTable26_43
   \   000005C6   0x7800             LDRB     R0,[R0, #+0]
   \   000005C8   0x2801             CMP      R0,#+1
   \   000005CA   0xD118             BNE.N    ??Speed_PID_24
   1833                {
   1834                  if(pulse_count>POsha)  speed_pwm=speed_B;
   \   000005CC   0x.... 0x....      LDR.W    R0,??DataTable26_44
   \   000005D0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005D4   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   000005D8   0x6809             LDR      R1,[R1, #+0]
   \   000005DA   0x4288             CMP      R0,R1
   \   000005DC   0xDA06             BGE.N    ??Speed_PID_25
   \   000005DE   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000005E2   0x.... 0x....      LDR.W    R1,??DataTable26_28
   \   000005E6   0x8809             LDRH     R1,[R1, #+0]
   \   000005E8   0x8001             STRH     R1,[R0, #+0]
   \   000005EA   0xE008             B.N      ??Speed_PID_24
   1835                  else
   1836                  {
   1837                    shapo=0;
   \                     ??Speed_PID_25:
   \   000005EC   0x.... 0x....      LDR.W    R0,??DataTable26_43
   \   000005F0   0x2100             MOVS     R1,#+0
   \   000005F2   0x7001             STRB     R1,[R0, #+0]
   1838                    speed_pwm=800;
   \   000005F4   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000005F8   0xF44F 0x7148      MOV      R1,#+800
   \   000005FC   0x8001             STRH     R1,[R0, #+0]
   1839                  }
   1840                }
   1841              }
   1842              
   1843              //ÈË×ÖÉ²³µ
   1844              if(rzsc_fg==1)
   \                     ??Speed_PID_24:
   \   000005FE   0x.... 0x....      LDR.W    R0,??DataTable26_11
   \   00000602   0x7800             LDRB     R0,[R0, #+0]
   \   00000604   0x2801             CMP      R0,#+1
   \   00000606   0xD11A             BNE.N    ??Speed_PID_26
   1845              {
   1846                if(pulse_count>Prz)  speed_pwm=-1250;
   \   00000608   0x.... 0x....      LDR.W    R0,??DataTable26_45
   \   0000060C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000610   0x.... 0x....      LDR.W    R1,??DataTable26_3
   \   00000614   0x6809             LDR      R1,[R1, #+0]
   \   00000616   0x4288             CMP      R0,R1
   \   00000618   0xDA05             BGE.N    ??Speed_PID_27
   \   0000061A   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   0000061E   0x.... 0x....      LDR.W    R1,??DataTable26_46  ;; 0xfffffb1e
   \   00000622   0x8001             STRH     R1,[R0, #+0]
   \   00000624   0xE00B             B.N      ??Speed_PID_26
   1847                else
   1848                {
   1849                  rzsc_fg=0;
   \                     ??Speed_PID_27:
   \   00000626   0x.... 0x....      LDR.W    R0,??DataTable26_11
   \   0000062A   0x2100             MOVS     R1,#+0
   \   0000062C   0x7001             STRB     R1,[R0, #+0]
   1850                  rshover_fg=1;
   \   0000062E   0x.... 0x....      LDR.W    R0,??DataTable26_10
   \   00000632   0x2101             MOVS     R1,#+1
   \   00000634   0x7001             STRB     R1,[R0, #+0]
   1851                  speed_pwm=0;
   \   00000636   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   0000063A   0x2100             MOVS     R1,#+0
   \   0000063C   0x8001             STRH     R1,[R0, #+0]
   1852                }
   1853              }
   1854              
   1855              //ÆðÅÜÏß¼ì²â
   1856              if(stop_flag==1) 
   \                     ??Speed_PID_26:
   \   0000063E   0x.... 0x....      LDR.W    R0,??DataTable26_47
   \   00000642   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000646   0x2801             CMP      R0,#+1
   \   00000648   0xD13A             BNE.N    ??Speed_PID_28
   1857              {
   1858                if(jisha==1)  speed_pwm=-500;
   \   0000064A   0x.... 0x....      LDR.W    R0,??DataTable26_48
   \   0000064E   0x7800             LDRB     R0,[R0, #+0]
   \   00000650   0x2801             CMP      R0,#+1
   \   00000652   0xD104             BNE.N    ??Speed_PID_29
   \   00000654   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   00000658   0x.... 0x....      LDR.W    R1,??DataTable26_34  ;; 0xfffffe0c
   \   0000065C   0x8001             STRH     R1,[R0, #+0]
   1859                if(pulse_count<5||jisha==2)
   \                     ??Speed_PID_29:
   \   0000065E   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   00000662   0x6800             LDR      R0,[R0, #+0]
   \   00000664   0x2805             CMP      R0,#+5
   \   00000666   0xDB04             BLT.N    ??Speed_PID_30
   \   00000668   0x.... 0x....      LDR.W    R0,??DataTable26_48
   \   0000066C   0x7800             LDRB     R0,[R0, #+0]
   \   0000066E   0x2802             CMP      R0,#+2
   \   00000670   0xD126             BNE.N    ??Speed_PID_28
   1860                {
   1861                  jisha=2;
   \                     ??Speed_PID_30:
   \   00000672   0x.... 0x....      LDR.W    R0,??DataTable26_48
   \   00000676   0x2102             MOVS     R1,#+2
   \   00000678   0x7001             STRB     R1,[R0, #+0]
   1862                  speed_pwm=(int16)(-sp*pulse_count+sd*(pulse_count-pulse_count_pre));
   \   0000067A   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   0000067E   0x6800             LDR      R0,[R0, #+0]
   \   00000680   0x.... 0x....      BL       __aeabi_i2f
   \   00000684   0x.... 0x....      LDR.W    R1,??DataTable26_49
   \   00000688   0x6809             LDR      R1,[R1, #+0]
   \   0000068A   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000068E   0x.... 0x....      BL       __aeabi_fmul
   \   00000692   0x0004             MOVS     R4,R0
   \   00000694   0x.... 0x....      LDR.W    R0,??DataTable26_3
   \   00000698   0x6800             LDR      R0,[R0, #+0]
   \   0000069A   0x.... 0x....      LDR.W    R1,??DataTable26_50
   \   0000069E   0x6809             LDR      R1,[R1, #+0]
   \   000006A0   0x1A40             SUBS     R0,R0,R1
   \   000006A2   0x.... 0x....      BL       __aeabi_i2f
   \   000006A6   0x.... 0x....      LDR.W    R1,??DataTable26_51
   \   000006AA   0x6809             LDR      R1,[R1, #+0]
   \   000006AC   0x.... 0x....      BL       __aeabi_fmul
   \   000006B0   0x0021             MOVS     R1,R4
   \   000006B2   0x.... 0x....      BL       __aeabi_fadd
   \   000006B6   0x.... 0x....      BL       __aeabi_f2iz
   \   000006BA   0x.... 0x....      LDR.W    R1,??DataTable26_30
   \   000006BE   0x8008             STRH     R0,[R1, #+0]
   1863                }
   1864              }
   1865              pulse_count_pre=pulse_count;
   \                     ??Speed_PID_28:
   \   000006C0   0x.... 0x....      LDR.W    R0,??DataTable26_50
   \   000006C4   0x....             LDR.N    R1,??DataTable26_3
   \   000006C6   0x6809             LDR      R1,[R1, #+0]
   \   000006C8   0x6001             STR      R1,[R0, #+0]
   1866          
   1867              //ÏÞ·ù
   1868              if(speed_pwm>1250)
   \   000006CA   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000006CE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000006D2   0xF240 0x41E3      MOVW     R1,#+1251
   \   000006D6   0x4288             CMP      R0,R1
   \   000006D8   0xDB04             BLT.N    ??Speed_PID_31
   1869                speed_pwm=1250;
   \   000006DA   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000006DE   0xF240 0x41E2      MOVW     R1,#+1250
   \   000006E2   0x8001             STRH     R1,[R0, #+0]
   1870              if(speed_pwm<-1250)
   \                     ??Speed_PID_31:
   \   000006E4   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000006E8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000006EC   0x.... 0x....      LDR.W    R1,??DataTable26_46  ;; 0xfffffb1e
   \   000006F0   0x4288             CMP      R0,R1
   \   000006F2   0xDA04             BGE.N    ??Speed_PID_32
   1871                speed_pwm=-1250;
   \   000006F4   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   000006F8   0x.... 0x....      LDR.W    R1,??DataTable26_46  ;; 0xfffffb1e
   \   000006FC   0x8001             STRH     R1,[R0, #+0]
   1872              
   1873              //Êä³ö
   1874              if(speed_pwm>0) 
   \                     ??Speed_PID_32:
   \   000006FE   0x.... 0x....      LDR.W    R0,??DataTable26_30
   \   00000702   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000706   0x2801             CMP      R0,#+1
   \   00000708   0xDB0D             BLT.N    ??Speed_PID_33
   1875              {
   1876                gpio_init(PORTB, 9, 1,0);//DIL_B;
   \   0000070A   0x2300             MOVS     R3,#+0
   \   0000070C   0x2201             MOVS     R2,#+1
   \   0000070E   0x2109             MOVS     R1,#+9
   \   00000710   0x.... 0x....      LDR.W    R0,??DataTable26_52  ;; 0x400ff040
   \   00000714   0x.... 0x....      BL       gpio_init
   1877                FTM1_C0V=speed_pwm;
   \   00000718   0x.... 0x....      LDR.W    R0,??DataTable26_53  ;; 0x40039010
   \   0000071C   0x....             LDR.N    R1,??DataTable26_30
   \   0000071E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000722   0x6001             STR      R1,[R0, #+0]
   \   00000724   0xE00F             B.N      ??Speed_PID_34
   1878              }
   1879              else 
   1880              {
   1881                gpio_init(PORTB, 9, 1,1);//DIL_F;
   \                     ??Speed_PID_33:
   \   00000726   0x2301             MOVS     R3,#+1
   \   00000728   0x2201             MOVS     R2,#+1
   \   0000072A   0x2109             MOVS     R1,#+9
   \   0000072C   0x.... 0x....      LDR.W    R0,??DataTable26_52  ;; 0x400ff040
   \   00000730   0x.... 0x....      BL       gpio_init
   1882                FTM1_C0V=1250+speed_pwm;
   \   00000734   0x....             LDR.N    R0,??DataTable26_30
   \   00000736   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000073A   0xF240 0x41E2      MOVW     R1,#+1250
   \   0000073E   0x1808             ADDS     R0,R1,R0
   \   00000740   0x.... 0x....      LDR.W    R1,??DataTable26_53  ;; 0x40039010
   \   00000744   0x6008             STR      R0,[R1, #+0]
   1883              }
   1884          }
   \                     ??Speed_PID_34:
   \   00000746   0xBD70             POP      {R4-R6,PC}       ;; return
   1885          
   1886          //----------------------------¸øCCDView·¢ËÍÍ¼Ïñ------------------------//

   \                                 In section .text, align 2, keep-with-next
   1887          void SendImageData(uint8 * ImageData)
   1888          {
   \                     SendImageData:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1889              unsigned char i;
   1890              unsigned char crc = 0;
   \   00000004   0x2600             MOVS     R6,#+0
   1891              /* Send Data */
   1892              uart_send1(UART3,'*');
   \   00000006   0x212A             MOVS     R1,#+42
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable26_54  ;; 0x4006d000
   \   0000000C   0x.... 0x....      BL       uart_send1
   1893              uart_send1(UART3,'L');
   \   00000010   0x214C             MOVS     R1,#+76
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable26_54  ;; 0x4006d000
   \   00000016   0x.... 0x....      BL       uart_send1
   1894              uart_send1(UART3,'D');
   \   0000001A   0x2144             MOVS     R1,#+68
   \   0000001C   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   0000001E   0x.... 0x....      BL       uart_send1
   1895          
   1896              SendHex(0);
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       SendHex
   1897              SendHex(0);
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       SendHex
   1898              SendHex(0);
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      BL       SendHex
   1899              SendHex(0);
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      BL       SendHex
   1900          
   1901              for(i=0; i<128; i++)
   \   0000003A   0x2500             MOVS     R5,#+0
   \   0000003C   0xE004             B.N      ??SendImageData_0
   1902              {
   1903                  SendHex(*ImageData ++);
   \                     ??SendImageData_1:
   \   0000003E   0x7820             LDRB     R0,[R4, #+0]
   \   00000040   0x.... 0x....      BL       SendHex
   \   00000044   0x1C64             ADDS     R4,R4,#+1
   1904              }
   \   00000046   0x1C6D             ADDS     R5,R5,#+1
   \                     ??SendImageData_0:
   \   00000048   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004A   0x2D80             CMP      R5,#+128
   \   0000004C   0xD3F7             BCC.N    ??SendImageData_1
   1905              SendHex(crc);
   \   0000004E   0x0030             MOVS     R0,R6
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x.... 0x....      BL       SendHex
   1906              uart_send1(UART3,'#');
   \   00000056   0x2123             MOVS     R1,#+35
   \   00000058   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   0000005A   0x.... 0x....      BL       uart_send1
   1907          }
   \   0000005E   0xBD70             POP      {R4-R6,PC}       ;; return
   1908          

   \                                 In section .text, align 2, keep-with-next
   1909          void SendHex(unsigned char hex)
   1910          {
   \                     SendHex:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1911            unsigned char temp;
   1912            temp = hex >> 4;
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x0920             LSRS     R0,R4,#+4
   1913            if(temp < 10)
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x280A             CMP      R0,#+10
   \   0000000C   0xD206             BCS.N    ??SendHex_0
   1914            {
   1915             uart_send1(UART3,temp + '0');
   \   0000000E   0xF110 0x0130      ADDS     R1,R0,#+48
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   00000016   0x.... 0x....      BL       uart_send1
   \   0000001A   0xE005             B.N      ??SendHex_1
   1916            }
   1917            else
   1918            {
   1919             uart_send1(UART3,temp - 10 + 'A');
   \                     ??SendHex_0:
   \   0000001C   0xF110 0x0137      ADDS     R1,R0,#+55
   \   00000020   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000022   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   00000024   0x.... 0x....      BL       uart_send1
   1920            }
   1921            temp = hex & 0x0F;
   \                     ??SendHex_1:
   \   00000028   0xF014 0x000F      ANDS     R0,R4,#0xF
   1922            if(temp < 10)
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x280A             CMP      R0,#+10
   \   00000030   0xD206             BCS.N    ??SendHex_2
   1923            {
   1924             uart_send1(UART3,temp + '0');
   \   00000032   0xF110 0x0130      ADDS     R1,R0,#+48
   \   00000036   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   0000003A   0x.... 0x....      BL       uart_send1
   \   0000003E   0xE005             B.N      ??SendHex_3
   1925            }
   1926            else
   1927            {
   1928             uart_send1(UART3,temp - 10 + 'A');
   \                     ??SendHex_2:
   \   00000040   0xF110 0x0137      ADDS     R1,R0,#+55
   \   00000044   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   00000048   0x.... 0x....      BL       uart_send1
   1929            }
   1930          }
   \                     ??SendHex_3:
   \   0000004C   0xBD10             POP      {R4,PC}          ;; return
   1931          

   \                                 In section .text, align 4, keep-with-next
   1932          void SamplingDelay(void)//CCDÑÓÊ±³ÌÐò 200ns
   1933          {
   \                     SamplingDelay:
   \   00000000   0xB081             SUB      SP,SP,#+4
   1934             volatile uint8 i;
   1935             for(i=0;i<1;i++)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000008   0xE006             B.N      ??SamplingDelay_0
   1936             {
   1937              asm("nop");
   \                     ??SamplingDelay_1:
   \   0000000A   0xBF00             nop              
   1938              asm("nop");
   \   0000000C   0xBF00             nop              
   1939             }
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x1C40             ADDS     R0,R0,#+1
   \   00000014   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \                     ??SamplingDelay_0:
   \   00000018   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000001C   0x2801             CMP      R0,#+1
   \   0000001E   0xD3F4             BCC.N    ??SamplingDelay_1
   1940          }
   \   00000020   0xB001             ADD      SP,SP,#+4
   \   00000022   0x4770             BX       LR               ;; return
   1941          //--------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
   1942          void Clear()
   1943          {
   1944              g_lnInputVoltageSigma[0]=0;
   \                     Clear:
   \   00000000   0x....             LDR.N    R0,??DataTable26_55
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x6001             STR      R1,[R0, #+0]
   1945              g_lnInputVoltageSigma[1]=0;
   \   00000006   0x....             LDR.N    R0,??DataTable26_55
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x6041             STR      R1,[R0, #+4]
   1946              g_lnInputVoltageSigma[2]=0;
   \   0000000C   0x....             LDR.N    R0,??DataTable26_55
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x6081             STR      R1,[R0, #+8]
   1947          }
   \   00000012   0x4770             BX       LR               ;; return
   1948          
   1949          /****************************ÐéÄâÊ¾²¨Æ÷Ä£¿é******************************/

   \                                 In section .text, align 2, keep-with-next
   1950          void virtual_scope_show(void)
   1951          {
   1952                OutData[0]=0;
   \                     virtual_scope_show:
   \   00000000   0x....             LDR.N    R0,??DataTable26_56
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x8001             STRH     R1,[R0, #+0]
   1953                OutData[1]=0;
   \   00000006   0x....             LDR.N    R0,??DataTable26_56
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x8041             STRH     R1,[R0, #+2]
   1954                OutData[2]=0;
   \   0000000C   0x....             LDR.N    R0,??DataTable26_56
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x8081             STRH     R1,[R0, #+4]
   1955                OutData[3]=0;
   \   00000012   0x....             LDR.N    R0,??DataTable26_56
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x80C1             STRH     R1,[R0, #+6]
   1956          }
   \   00000018   0x4770             BX       LR               ;; return
   1957          
   1958          

   \                                 In section .text, align 2, keep-with-next
   1959          void serial_Txd()//´«ÊäµÄÒ»Ö¡Êý¾Ý£¬°üÀ¨ÈçÏÂµÄÄÚÈÝ
   1960          {
   \                     serial_Txd:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   1961                  uint8 temp[10]={0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2300             MOVS     R3,#+0
   \   0000000C   0xC00E             STM      R0!,{R1-R3}
   \   0000000E   0x380C             SUBS     R0,R0,#+12
   1962                  uint8 i,j;
   1963                  //Ö¡Í·Êý¾Ý
   1964                  uart_send1 (UART3, 0xa5);
   \   00000010   0x21A5             MOVS     R1,#+165
   \   00000012   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   00000014   0x.... 0x....      BL       uart_send1
   1965                  uart_send1 (UART3, 0x5a);
   \   00000018   0x215A             MOVS     R1,#+90
   \   0000001A   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   0000001C   0x.... 0x....      BL       uart_send1
   1966          	
   1967                 //µÚÒ»ÌõÇúÏßµÄÊý¾Ý
   1968                  for(i=0;i<3;i++)
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0xE019             B.N      ??serial_Txd_0
   1969                  {
   1970                     temp[i*2]=(int)OutData[i]/10;
   \                     ??serial_Txd_1:
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x....             LDR.N    R1,??DataTable26_56
   \   00000028   0xF931 0x1010      LDRSH    R1,[R1, R0, LSL #+1]
   \   0000002C   0x220A             MOVS     R2,#+10
   \   0000002E   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0xAA00             ADD      R2,SP,#+0
   \   00000036   0xF802 0x1010      STRB     R1,[R2, R0, LSL #+1]
   1971                     temp[i*2+1]=(int)OutData[i]%10;
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x....             LDR.N    R1,??DataTable26_56
   \   0000003E   0xF931 0x1010      LDRSH    R1,[R1, R0, LSL #+1]
   \   00000042   0x220A             MOVS     R2,#+10
   \   00000044   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \   00000048   0xFB02 0x1113      MLS      R1,R2,R3,R1
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0xAA00             ADD      R2,SP,#+0
   \   00000050   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   00000054   0x7051             STRB     R1,[R2, #+1]
   1972                  }
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \                     ??serial_Txd_0:
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x2803             CMP      R0,#+3
   \   0000005C   0xD3E2             BCC.N    ??serial_Txd_1
   1973                 for(j=0;j<6;j++)
   \   0000005E   0x2400             MOVS     R4,#+0
   \   00000060   0xE006             B.N      ??serial_Txd_2
   1974                 {
   1975                    uart_send1 (UART3, temp[j]);
   \                     ??serial_Txd_3:
   \   00000062   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000064   0xA800             ADD      R0,SP,#+0
   \   00000066   0x5C21             LDRB     R1,[R4, R0]
   \   00000068   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   0000006A   0x.... 0x....      BL       uart_send1
   1976                 }
   \   0000006E   0x1C64             ADDS     R4,R4,#+1
   \                     ??serial_Txd_2:
   \   00000070   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000072   0x2C06             CMP      R4,#+6
   \   00000074   0xD3F5             BCC.N    ??serial_Txd_3
   1977                  delay_ms(10);
   \   00000076   0x200A             MOVS     R0,#+10
   \   00000078   0x.... 0x....      BL       delay_ms
   1978          }
   \   0000007C   0xBD1F             POP      {R0-R4,PC}       ;; return
   1979          
   1980          

   \                                 In section .text, align 2, keep-with-next
   1981          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
   1982          {
   \                     CRC_CHECK:
   \   00000000   0xB430             PUSH     {R4,R5}
   1983              unsigned short CRC_Temp;
   1984              unsigned char i,j;
   1985              CRC_Temp = 0xffff;
   \   00000002   0xF64F 0x72FF      MOVW     R2,#+65535
   1986          
   1987              for (i=0;i<CRC_CNT; i++)
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0xE000             B.N      ??CRC_CHECK_0
   \                     ??CRC_CHECK_1:
   \   0000000A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??CRC_CHECK_0:
   \   0000000C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x428B             CMP      R3,R1
   \   00000012   0xD213             BCS.N    ??CRC_CHECK_2
   1988              {
   1989                  CRC_Temp ^= Buf[i];
   \   00000014   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000016   0x5C1C             LDRB     R4,[R3, R0]
   \   00000018   0x4062             EORS     R2,R4,R2
   1990                  for (j=0;j<8;j++)
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0xE002             B.N      ??CRC_CHECK_3
   1991                  {
   1992                      if (CRC_Temp & 0x01)
   1993                          CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;
   1994                      else
   1995                          CRC_Temp = CRC_Temp >> 1;
   \                     ??CRC_CHECK_4:
   \   0000001E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000020   0x0852             LSRS     R2,R2,#+1
   \                     ??CRC_CHECK_5:
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??CRC_CHECK_3:
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2C08             CMP      R4,#+8
   \   00000028   0xD2EF             BCS.N    ??CRC_CHECK_1
   \   0000002A   0x07D5             LSLS     R5,R2,#+31
   \   0000002C   0xD5F7             BPL.N    ??CRC_CHECK_4
   \   0000002E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000030   0x0852             LSRS     R2,R2,#+1
   \   00000032   0xF482 0x4220      EOR      R2,R2,#0xA000
   \   00000036   0xF092 0x0201      EORS     R2,R2,#0x1
   \   0000003A   0xE7F2             B.N      ??CRC_CHECK_5
   1996                  }
   1997              }
   1998              return(CRC_Temp);
   \                     ??CRC_CHECK_2:
   \   0000003C   0x0010             MOVS     R0,R2
   \   0000003E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000040   0xBC30             POP      {R4,R5}
   \   00000042   0x4770             BX       LR               ;; return
   1999          }
   2000          
   2001          

   \                                 In section .text, align 2, keep-with-next
   2002          void OutPut_Data(void)
   2003          {
   \                     OutPut_Data:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
   2004            int temp[4] = {0};
   \   00000004   0xA807             ADD      R0,SP,#+28
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   2005            unsigned int temp1[4] = {0};
   \   0000000C   0xA803             ADD      R0,SP,#+12
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
   2006            unsigned char databuf[10] = {0};
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0xC00E             STM      R0!,{R1-R3}
   \   0000001E   0x380C             SUBS     R0,R0,#+12
   2007            unsigned char i;
   2008            unsigned short CRC16 = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   2009            for(i=0;i<4;i++)
   \   00000022   0x2400             MOVS     R4,#+0
   \   00000024   0xE010             B.N      ??OutPut_Data_0
   2010            {
   2011              temp[i]  = (int16)OutData[i];
   \                     ??OutPut_Data_1:
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0xA807             ADD      R0,SP,#+28
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0x....             LDR.N    R1,??DataTable26_56
   \   0000002E   0xF931 0x1014      LDRSH    R1,[R1, R4, LSL #+1]
   \   00000032   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   2012              temp1[i] = (uint16)temp[i];
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0xA803             ADD      R0,SP,#+12
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0xA907             ADD      R1,SP,#+28
   \   0000003E   0xF831 0x1024      LDRH     R1,[R1, R4, LSL #+2]
   \   00000042   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   2013            }
   \   00000046   0x1C64             ADDS     R4,R4,#+1
   \                     ??OutPut_Data_0:
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2C04             CMP      R4,#+4
   \   0000004C   0xD3EB             BCC.N    ??OutPut_Data_1
   2014          
   2015            for(i=0;i<4;i++)
   \   0000004E   0x2400             MOVS     R4,#+0
   \   00000050   0xE018             B.N      ??OutPut_Data_2
   2016            {
   2017              databuf[i*2]   = (int8)(temp1[i]%256);
   \                     ??OutPut_Data_3:
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0xA803             ADD      R0,SP,#+12
   \   00000056   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000005A   0xF44F 0x7180      MOV      R1,#+256
   \   0000005E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000062   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0xA800             ADD      R0,SP,#+0
   \   0000006A   0xF800 0x2014      STRB     R2,[R0, R4, LSL #+1]
   2018              databuf[i*2+1] = (int8)(temp1[i]/256);
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0xA803             ADD      R0,SP,#+12
   \   00000072   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000076   0x0A00             LSRS     R0,R0,#+8
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0xA900             ADD      R1,SP,#+0
   \   0000007C   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   00000080   0x7048             STRB     R0,[R1, #+1]
   2019            }
   \   00000082   0x1C64             ADDS     R4,R4,#+1
   \                     ??OutPut_Data_2:
   \   00000084   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000086   0x2C04             CMP      R4,#+4
   \   00000088   0xD3E3             BCC.N    ??OutPut_Data_3
   2020          
   2021            CRC16 = CRC_CHECK(databuf,8);
   \   0000008A   0x2108             MOVS     R1,#+8
   \   0000008C   0xA800             ADD      R0,SP,#+0
   \   0000008E   0x.... 0x....      BL       CRC_CHECK
   2022            databuf[8] = CRC16%256;
   \   00000092   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000094   0xF44F 0x7180      MOV      R1,#+256
   \   00000098   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000009C   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000A0   0xF88D 0x2008      STRB     R2,[SP, #+8]
   2023            databuf[9] = CRC16/256;
   \   000000A4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A6   0xF44F 0x7180      MOV      R1,#+256
   \   000000AA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000AE   0xF88D 0x0009      STRB     R0,[SP, #+9]
   2024          
   2025            for(i=0;i<10;i++)
   \   000000B2   0x2400             MOVS     R4,#+0
   \   000000B4   0xE006             B.N      ??OutPut_Data_4
   2026            uart_send1 (UART3,databuf[i]);
   \                     ??OutPut_Data_5:
   \   000000B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B8   0xA800             ADD      R0,SP,#+0
   \   000000BA   0x5C21             LDRB     R1,[R4, R0]
   \   000000BC   0x....             LDR.N    R0,??DataTable26_54  ;; 0x4006d000
   \   000000BE   0x.... 0x....      BL       uart_send1
   \   000000C2   0x1C64             ADDS     R4,R4,#+1
   \                     ??OutPut_Data_4:
   \   000000C4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C6   0x2C0A             CMP      R4,#+10
   \   000000C8   0xD3F5             BCC.N    ??OutPut_Data_5
   2027          }
   \   000000CA   0xB00C             ADD      SP,SP,#+48
   \   000000CC   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     g_lnInputVoltageSigma

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     HONGWAI_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     HONGWAI_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     hongwai_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x........         DC32     hongwai_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     Pixel_F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     PixelAverageValue_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     PixelAverageVoltage_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     TargetPixelAverageVoltage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     PixelAverageVoltageError

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x........         DC32     TargetPixelAverageVoltageAllowError

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x........         DC32     IntegrationTime_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x........         DC32     Pixel_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x........         DC32     PixelAverageValue_Zong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x........         DC32     PixelAverageVoltage_Zong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \   00000000   0x........         DC32     IntegrationTime_Zong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \   00000000   0x........         DC32     front_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \   00000000   0x........         DC32     front_min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \   00000000   0x........         DC32     Aver_F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_21:
   \   00000000   0x........         DC32     low_aver_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_22:
   \   00000000   0x........         DC32     high_aver_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_23:
   \   00000000   0x........         DC32     bodong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_24:
   \   00000000   0x........         DC32     IT_ref

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_25:
   \   00000000   0x........         DC32     zong_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_26:
   \   00000000   0x........         DC32     zong_min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_27:
   \   00000000   0x........         DC32     Aver_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_28:
   \   00000000   0x........         DC32     low_aver_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_29:
   \   00000000   0x........         DC32     high_aver_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     CAR_GO

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     qpx_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     Rdiaotou_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     front_l_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     Pixel_F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     ga_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     gl_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     gr_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     mq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x........         DC32     LHOLDdiao_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     Ldiaotou_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     RHOLDdiao_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     front_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     front_r_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     front_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     LR_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     Lr_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     lR_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     lr_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     mq_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     front_r_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     front_width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     front_l_fg_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     front_r_fg_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x........         DC32     front_l_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0x........         DC32     cl_f_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x........         DC32     Lpre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \   00000000   0x........         DC32     Lpre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \   00000000   0x........         DC32     Lpre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \   00000000   0x........         DC32     Lpre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \   00000000   0x........         DC32     Rpre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_9:
   \   00000000   0x........         DC32     Rpre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_10:
   \   00000000   0x........         DC32     Rpre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_11:
   \   00000000   0x........         DC32     Rpre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_12:
   \   00000000   0x........         DC32     IntegrationTime_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_13:
   \   00000000   0x........         DC32     IT_ref

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_14:
   \   00000000   0x........         DC32     front_l_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_15:
   \   00000000   0x........         DC32     front_r_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_16:
   \   00000000   0x........         DC32     rzop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_17:
   \   00000000   0x........         DC32     Rdiaotou_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_18:
   \   00000000   0x........         DC32     Rendiao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_19:
   \   00000000   0x........         DC32     rensha_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_20:
   \   00000000   0x........         DC32     rzguo_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_21:
   \   00000000   0x........         DC32     Ldiaotou_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_22:
   \   00000000   0x........         DC32     Lendiao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     front_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0x........         DC32     cl_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \   00000000   0x........         DC32     front_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_3:
   \   00000000   0x........         DC32     ga_fg_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_4:
   \   00000000   0x........         DC32     gl_fg_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_5:
   \   00000000   0x........         DC32     gr_fg_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_6:
   \   00000000   0x........         DC32     front_l_pre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_7:
   \   00000000   0x........         DC32     front_l_pre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_8:
   \   00000000   0x........         DC32     front_r_pre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_9:
   \   00000000   0x........         DC32     front_r_pre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_10:
   \   00000000   0x........         DC32     front_l_pre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_11:
   \   00000000   0x........         DC32     front_r_pre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_12:
   \   00000000   0x........         DC32     front_l_pre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_13:
   \   00000000   0x........         DC32     front_r_pre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x........         DC32     front_OFFSET_pre10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x........         DC32     front_OFFSET_pre9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \   00000000   0x........         DC32     front_OFFSET_pre8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_3:
   \   00000000   0x........         DC32     front_OFFSET_pre7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_4:
   \   00000000   0x........         DC32     front_OFFSET_pre6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_5:
   \   00000000   0x........         DC32     front_OFFSET_pre5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_6:
   \   00000000   0x........         DC32     front_OFFSET_pre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_7:
   \   00000000   0x........         DC32     front_OFFSET_pre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_8:
   \   00000000   0x........         DC32     front_OFFSET_pre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_9:
   \   00000000   0x........         DC32     front_OFFSET_pre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_10:
   \   00000000   0x........         DC32     d_err1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_11:
   \   00000000   0x........         DC32     d_err2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_12:
   \   00000000   0x........         DC32     d_err3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_13:
   \   00000000   0x........         DC32     d_err4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_14:
   \   00000000   0x........         DC32     d_err5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_15:
   \   00000000   0x........         DC32     d_err6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_16:
   \   00000000   0x........         DC32     d_err7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_17:
   \   00000000   0x........         DC32     d_err8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_18:
   \   00000000   0x........         DC32     fangcha_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_19:
   \   00000000   0x........         DC32     fangcha_qian_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_20:
   \   00000000   0x........         DC32     route_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_21:
   \   00000000   0x........         DC32     route_ave_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_22:
   \   00000000   0x........         DC32     chafang_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x........         DC32     d_err9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x........         DC32     fangcha_hou_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   0x........         DC32     Pixel_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \   00000000   0x........         DC32     black_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \   00000000   0x........         DC32     black_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \   00000000   0x........         DC32     zhong

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \   00000000   0x........         DC32     zheng

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \   00000000   0x........         DC32     zong_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \   00000000   0x........         DC32     zong_width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x........         DC32     stop_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_1:
   \   00000000   0x........         DC32     delay_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_2:
   \   00000000   0x........         DC32     stop_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_3:
   \   00000000   0x........         DC32     zong_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_4:
   \   00000000   0x........         DC32     zong_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_5:
   \   00000000   0x........         DC32     high_aver_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_6:
   \   00000000   0x........         DC32     low_aver_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_7:
   \   00000000   0x........         DC32     zong_r_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_8:
   \   00000000   0x........         DC32     zong_l_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_9:
   \   00000000   0x........         DC32     front_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_10:
   \   00000000   0x........         DC32     cl_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_11:
   \   00000000   0x........         DC32     zong_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_12:
   \   00000000   0x........         DC32     zong_l_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_13:
   \   00000000   0x........         DC32     zong_r_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_14:
   \   00000000   0x........         DC32     zong_OFFSET_pre10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_15:
   \   00000000   0x........         DC32     zong_OFFSET_pre9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_16:
   \   00000000   0x........         DC32     zong_OFFSET_pre8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_17:
   \   00000000   0x........         DC32     zong_OFFSET_pre7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_18:
   \   00000000   0x........         DC32     zong_OFFSET_pre6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_19:
   \   00000000   0x........         DC32     zong_OFFSET_pre5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_20:
   \   00000000   0x........         DC32     zong_OFFSET_pre4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_21:
   \   00000000   0x........         DC32     zong_OFFSET_pre3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_22:
   \   00000000   0x........         DC32     zong_OFFSET_pre2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_23:
   \   00000000   0x........         DC32     zong_OFFSET_pre1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_24:
   \   00000000   0x........         DC32     z_err1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_25:
   \   00000000   0x........         DC32     z_err2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_26:
   \   00000000   0x........         DC32     z_err3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_27:
   \   00000000   0x........         DC32     z_err4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_28:
   \   00000000   0x........         DC32     z_err5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_29:
   \   00000000   0x........         DC32     z_err6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_30:
   \   00000000   0x........         DC32     z_err7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_31:
   \   00000000   0x........         DC32     z_err8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_32:
   \   00000000   0x........         DC32     z_err9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_33:
   \   00000000   0x........         DC32     fangcha_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_34:
   \   00000000   0x........         DC32     fangcha_qian_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_35:
   \   00000000   0x........         DC32     fangcha_hou_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_36:
   \   00000000   0x........         DC32     route_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_37:
   \   00000000   0x........         DC32     route_ave_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_38:
   \   00000000   0x........         DC32     chafang_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_39:
   \   00000000   0x........         DC32     front_OFFSET_KZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_40:
   \   00000000   0x........         DC32     front_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_41:
   \   00000000   0x........         DC32     d_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_42:
   \   00000000   0x........         DC32     k

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_43:
   \   00000000   0x........         DC32     t

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_44:
   \   00000000   0x40400000         DC32     0x40400000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_45:
   \   00000000   0x........         DC32     delta_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_46:
   \   00000000   0x........         DC32     chu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   0x40340000         DC32     0x40340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_1:
   \   00000000   0xC0340000         DC32     0xc0340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x........         DC32     Kp_hold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x........         DC32     Kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   0x41500000         DC32     0x41500000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   0x........         DC32     Kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \   00000000   0x........         DC32     front_OFFSET_KZ_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \   00000000   0x........         DC32     D_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x........         DC32     ZHONG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x........         DC32     LHOLDdiao_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \   00000000   0x........         DC32     RHOLDdiao_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_2:
   \   00000000   0x........         DC32     xianfu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x........         DC32     g_nMotorPulse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_1:
   \   00000000   0x........         DC32     g_nMotorPulseSigma

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_2:
   \   00000000   0x........         DC32     fangcha_qian_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_3:
   \   00000000   0x........         DC32     fch_dp2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_4:
   \   00000000   0x........         DC32     WW_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_5:
   \   00000000   0x........         DC32     Psha

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   0x........         DC32     servo_duty

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_2:
   \   00000000   0x........         DC32     ZZ_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_3:
   \   00000000   0x........         DC32     pulse_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_4:
   \   00000000   0x........         DC32     shache_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_5:
   \   00000000   0x........         DC32     speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_6:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_7:
   \   00000000   0x........         DC32     speed_H

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_8:
   \   00000000   0x........         DC32     Pset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_9:
   \   00000000   0x........         DC32     tisu_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_10:
   \   00000000   0x........         DC32     rshover_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_11:
   \   00000000   0x........         DC32     rzsc_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_12:
   \   00000000   0x........         DC32     dir_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_13:
   \   00000000   0x........         DC32     front_width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_14:
   \   00000000   0x........         DC32     front_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_15:
   \   00000000   0x........         DC32     front_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_16:
   \   00000000   0x........         DC32     BLsha

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_17:
   \   00000000   0x........         DC32     xiao_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_18:
   \   00000000   0x........         DC32     da_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_19:
   \   00000000   0x........         DC32     xiao_ct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_20:
   \   00000000   0x........         DC32     da_ct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_21:
   \   00000000   0x........         DC32     PMAX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_22:
   \   00000000   0x........         DC32     speed_jian

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_23:
   \   00000000   0x........         DC32     Pmax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_24:
   \   00000000   0x........         DC32     Pmin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_25:
   \   00000000   0x........         DC32     x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_26:
   \   00000000   0x40080000         DC32     0x40080000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_27:
   \   00000000   0xC072C000         DC32     0xc072c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_28:
   \   00000000   0x........         DC32     speed_B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_29:
   \   00000000   0x........         DC32     shmode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_30:
   \   00000000   0x........         DC32     speed_pwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_31:
   \   00000000   0x........         DC32     qd_ct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_32:
   \   00000000   0xFFFFFCE0         DC32     0xfffffce0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_33:
   \   00000000   0xFFFFFDA8         DC32     0xfffffda8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_34:
   \   00000000   0xFFFFFE0C         DC32     0xfffffe0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_35:
   \   00000000   0xFFFFFE70         DC32     0xfffffe70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_36:
   \   00000000   0xFFFFFED4         DC32     0xfffffed4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_37:
   \   00000000   0x........         DC32     Kmax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_38:
   \   00000000   0x........         DC32     Kmin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_39:
   \   00000000   0x........         DC32     fch_dp3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_40:
   \   00000000   0x........         DC32     sh_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_41:
   \   00000000   0x........         DC32     SHCH_CT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_42:
   \   00000000   0x........         DC32     POshaen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_43:
   \   00000000   0x........         DC32     shapo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_44:
   \   00000000   0x........         DC32     POsha

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_45:
   \   00000000   0x........         DC32     Prz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_46:
   \   00000000   0xFFFFFB1E         DC32     0xfffffb1e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_47:
   \   00000000   0x........         DC32     stop_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_48:
   \   00000000   0x........         DC32     jisha

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_49:
   \   00000000   0x........         DC32     `sp`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_50:
   \   00000000   0x........         DC32     pulse_count_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_51:
   \   00000000   0x........         DC32     sd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_52:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_53:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_54:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_55:
   \   00000000   0x........         DC32     g_lnInputVoltageSigma

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_56:
   \   00000000   0x........         DC32     OutData

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   2028          
   2029          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  ADC0_start
              8 -> hw_adc_convertstart
        8  ADC0_stop
              8 -> hw_adc_convertstop
        0  Abs
        8  CCD_init
              8 -> gpio_init
              8 -> hw_adc_init
        8  CRC_CHECK
        8  CalculateIntegrationTimeFront
              8 -> PixelAverage
        8  CalculateIntegrationTimeZong
              8 -> PixelAverage
        0  Clear
        0  GetMotorPulse
        0  GetOFFSET
        8  GetSamplezhi
              8 -> hw_ad_ave
       16  ImageCapture_F
             16 -> SamplingDelay
             16 -> gpio_init
             16 -> hw_ad_once
       16  ImageCapture_Z
             16 -> SamplingDelay
             16 -> gpio_init
             16 -> hw_ad_once
       56  OutPut_Data
             56 -> CRC_CHECK
             56 -> __aeabi_memclr4
             56 -> uart_send1
        4  PixelAverage
        4  SamplingDelay
        8  SendHex
              8 -> uart_send1
       16  SendImageData
             16 -> SendHex
             16 -> uart_send1
        8  SetServoVoltage
              8 -> FTM_PWM_ChangeDuty
              8 -> __aeabi_cdcmple
              8 -> __aeabi_cdrcmple
              8 -> __aeabi_d2f
              8 -> __aeabi_dadd
              8 -> __aeabi_ddiv
              8 -> __aeabi_f2d
              8 -> __aeabi_f2iz
              8 -> __aeabi_fadd
              8 -> __aeabi_fmul
              8 -> __aeabi_fsub
              8 -> __aeabi_i2f
       16  Speed_PID
             16 -> IncPID_Calculate
             16 -> PID_SetPoint
             16 -> __aeabi_cfcmple
             16 -> __aeabi_d2iz
             16 -> __aeabi_dadd
             16 -> __aeabi_dmul
             16 -> __aeabi_dsub
             16 -> __aeabi_f2iz
             16 -> __aeabi_fadd
             16 -> __aeabi_fmul
             16 -> __aeabi_i2d
             16 -> __aeabi_i2f
             16 -> gpio_init
             16 -> shache1
        8  StartIntegrationFront
              8 -> SamplingDelay
              8 -> gpio_init
        8  StartIntegrationZong
              8 -> SamplingDelay
              8 -> gpio_init
       24  binaryzation_F
             24 -> Abs
       24  binaryzation_Z
             24 -> Abs
        8  get_ad
              8 -> hw_ad_ave
        8  get_front
              8 -> Abs
       56  get_fu
             56 -> Abs
             56 -> __aeabi_memclr4
        4  get_zong
        8  route_type_F
        8  route_type_Z
       24  serial_Txd
             24 -> delay_ms
             24 -> uart_send1
        0  shache1
        0  virtual_scope_show


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant {0}>
      20  ?<Constant {0}>_1
      12  ?<Constant {0}>_2
      16  ?<Constant {0}>_3
      16  ?<Constant {0}>_4
      12  ?<Constant {0}>_5
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_21
       4  ??DataTable11_22
       4  ??DataTable11_23
       4  ??DataTable11_24
       4  ??DataTable11_25
       4  ??DataTable11_26
       4  ??DataTable11_27
       4  ??DataTable11_28
       4  ??DataTable11_29
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_2
       4  ??DataTable13_3
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_10
       4  ??DataTable14_11
       4  ??DataTable14_12
       4  ??DataTable14_13
       4  ??DataTable14_14
       4  ??DataTable14_15
       4  ??DataTable14_16
       4  ??DataTable14_17
       4  ??DataTable14_18
       4  ??DataTable14_19
       4  ??DataTable14_2
       4  ??DataTable14_20
       4  ??DataTable14_21
       4  ??DataTable14_22
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
       4  ??DataTable14_9
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_10
       4  ??DataTable15_11
       4  ??DataTable15_12
       4  ??DataTable15_13
       4  ??DataTable15_2
       4  ??DataTable15_3
       4  ??DataTable15_4
       4  ??DataTable15_5
       4  ??DataTable15_6
       4  ??DataTable15_7
       4  ??DataTable15_8
       4  ??DataTable15_9
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_10
       4  ??DataTable16_11
       4  ??DataTable16_12
       4  ??DataTable16_13
       4  ??DataTable16_14
       4  ??DataTable16_15
       4  ??DataTable16_16
       4  ??DataTable16_17
       4  ??DataTable16_18
       4  ??DataTable16_19
       4  ??DataTable16_2
       4  ??DataTable16_20
       4  ??DataTable16_21
       4  ??DataTable16_22
       4  ??DataTable16_3
       4  ??DataTable16_4
       4  ??DataTable16_5
       4  ??DataTable16_6
       4  ??DataTable16_7
       4  ??DataTable16_8
       4  ??DataTable16_9
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_2
       4  ??DataTable18_3
       4  ??DataTable18_4
       4  ??DataTable18_5
       4  ??DataTable18_6
       4  ??DataTable18_7
       4  ??DataTable18_8
       4  ??DataTable19
       4  ??DataTable19_1
       4  ??DataTable19_10
       4  ??DataTable19_11
       4  ??DataTable19_12
       4  ??DataTable19_13
       4  ??DataTable19_14
       4  ??DataTable19_15
       4  ??DataTable19_16
       4  ??DataTable19_17
       4  ??DataTable19_18
       4  ??DataTable19_19
       4  ??DataTable19_2
       4  ??DataTable19_20
       4  ??DataTable19_21
       4  ??DataTable19_22
       4  ??DataTable19_23
       4  ??DataTable19_24
       4  ??DataTable19_25
       4  ??DataTable19_26
       4  ??DataTable19_27
       4  ??DataTable19_28
       4  ??DataTable19_29
       4  ??DataTable19_3
       4  ??DataTable19_30
       4  ??DataTable19_31
       4  ??DataTable19_32
       4  ??DataTable19_33
       4  ??DataTable19_34
       4  ??DataTable19_35
       4  ??DataTable19_36
       4  ??DataTable19_37
       4  ??DataTable19_38
       4  ??DataTable19_39
       4  ??DataTable19_4
       4  ??DataTable19_40
       4  ??DataTable19_41
       4  ??DataTable19_42
       4  ??DataTable19_43
       4  ??DataTable19_44
       4  ??DataTable19_45
       4  ??DataTable19_46
       4  ??DataTable19_5
       4  ??DataTable19_6
       4  ??DataTable19_7
       4  ??DataTable19_8
       4  ??DataTable19_9
       4  ??DataTable20
       4  ??DataTable20_1
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_2
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_2
       4  ??DataTable23
       4  ??DataTable24
       4  ??DataTable24_1
       4  ??DataTable24_2
       4  ??DataTable25
       4  ??DataTable25_1
       4  ??DataTable25_2
       4  ??DataTable25_3
       4  ??DataTable25_4
       4  ??DataTable25_5
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable26_10
       4  ??DataTable26_11
       4  ??DataTable26_12
       4  ??DataTable26_13
       4  ??DataTable26_14
       4  ??DataTable26_15
       4  ??DataTable26_16
       4  ??DataTable26_17
       4  ??DataTable26_18
       4  ??DataTable26_19
       4  ??DataTable26_2
       4  ??DataTable26_20
       4  ??DataTable26_21
       4  ??DataTable26_22
       4  ??DataTable26_23
       4  ??DataTable26_24
       4  ??DataTable26_25
       4  ??DataTable26_26
       4  ??DataTable26_27
       4  ??DataTable26_28
       4  ??DataTable26_29
       4  ??DataTable26_3
       4  ??DataTable26_30
       4  ??DataTable26_31
       4  ??DataTable26_32
       4  ??DataTable26_33
       4  ??DataTable26_34
       4  ??DataTable26_35
       4  ??DataTable26_36
       4  ??DataTable26_37
       4  ??DataTable26_38
       4  ??DataTable26_39
       4  ??DataTable26_4
       4  ??DataTable26_40
       4  ??DataTable26_41
       4  ??DataTable26_42
       4  ??DataTable26_43
       4  ??DataTable26_44
       4  ??DataTable26_45
       4  ??DataTable26_46
       4  ??DataTable26_47
       4  ??DataTable26_48
       4  ??DataTable26_49
       4  ??DataTable26_5
       4  ??DataTable26_50
       4  ??DataTable26_51
       4  ??DataTable26_52
       4  ??DataTable26_53
       4  ??DataTable26_54
       4  ??DataTable26_55
       4  ??DataTable26_56
       4  ??DataTable26_6
       4  ??DataTable26_7
       4  ??DataTable26_8
       4  ??DataTable26_9
      34  ADC0_start
      28  ADC0_stop
      10  Abs
       2  Aver_F
       2  Aver_Z
       1  BL_SHACHE_TIME
       1  BLsha
      66  CCD_init
      68  CRC_CHECK
     166  CalculateIntegrationTimeFront
     166  CalculateIntegrationTimeZong
      20  Clear
       2  D_err
      42  GetMotorPulse
      38  GetOFFSET
      60  GetSamplezhi
       8  I_sumerr
     218  ImageCapture_F
     218  ImageCapture_Z
       1  IntegrationTime_Front
       1  IntegrationTime_Zong
       1  LHOLDdiao_flag
       2  LR_count
       2  L_aver
       2  L_fch
       2  Ldiaotou_count
       1  Ldiaotou_flag
       1  Lendiao
       2  Lfch
       2  Lpre1
       2  Lpre2
       2  Lpre3
       2  Lpre4
       2  Lqing_count
       2  Lr_count
       2  OFFSET_keep
       8  OutData
     206  OutPut_Data
       1  POshaen
      40  PixelAverage
       1  PixelAverageValue_Front
       1  PixelAverageValue_Zong
       2  PixelAverageVoltageError
       1  PixelAverageVoltage_Front
       1  PixelAverageVoltage_Zong
       2  Pmax
       2  Pmin
       2  Pset
       2  Psha
       1  RHOLDdiao_flag
       2  R_aver
       2  R_fch
       2  Rdiaotou_count
       1  Rdiaotou_flag
       1  Rendiao
       2  Rfch
       2  Rpre1
       2  Rpre2
       2  Rpre3
       2  Rpre4
       2  Rqing_count
       1  SHACHE_TIME_1
       1  SHACHE_TIME_2
       1  SHACHE_TIME_3
       1  SHACHE_TIME_4
       1  SHACHE_TIME_5
       2  SHCH_CT
      36  SamplingDelay
      78  SendHex
      96  SendImageData
     780  SetServoVoltage
    1864  Speed_PID
     172  StartIntegrationFront
     172  StartIntegrationZong
       2  TargetPixelAverageVoltage
       2  TargetPixelAverageVoltageAllowError
       1  WW_flag
       2  ZHONG
       2  ZZ_count
       1  ZZ_flag
       1  banma_flag
     846  binaryzation_F
     496  binaryzation_Z
       2  bl_shache_time
       2  black_l
       2  black_r
       2  bodong
     200  chafang_f
     200  chafang_z
       4  chu
       2  cl_f
       2  cl_f_pre
       2  cl_z
       2  d_err1
       2  d_err2
       2  d_err3
       2  d_err4
       2  d_err5
       2  d_err6
       2  d_err7
       2  d_err8
       2  d_err9
       2  da_ct
       1  da_fg
       2  delay_count
       2  delta_l
       8  delta_p
       2  delta_r
       2  fangcha_f
       2  fangcha_hou_f
       2  fangcha_hou_z
       2  fangcha_qian_f
       2  fangcha_qian_z
       2  fangcha_z
       2  front_OFFSET
       2  front_OFFSET_KZ
       2  front_OFFSET_KZ_pre
       2  front_OFFSET_pre
       2  front_OFFSET_pre1
       2  front_OFFSET_pre10
       2  front_OFFSET_pre2
       2  front_OFFSET_pre3
       2  front_OFFSET_pre4
       2  front_OFFSET_pre5
       2  front_OFFSET_pre6
       2  front_OFFSET_pre7
       2  front_OFFSET_pre8
       2  front_OFFSET_pre9
       2  front_l
       2  front_l_fg_last
       2  front_l_flag
       2  front_l_last
       2  front_l_pre1
       2  front_l_pre2
       2  front_l_pre3
       2  front_l_pre4
       2  front_l_reference
       2  front_l_view
       2  front_max
       2  front_min
       2  front_r
       2  front_r_fg_last
       2  front_r_flag
       2  front_r_last
       2  front_r_pre1
       2  front_r_pre2
       2  front_r_pre3
       2  front_r_pre4
       2  front_r_reference
       2  front_r_view
       2  front_reference
       2  front_width
       4  g_fCarSpeed
       4  g_fCarSpeedstart
       4  g_fDirectionControlOut
       4  g_fDirectionControlOutNew
       4  g_fDirectionControlOutOld
       4  g_fMotorOut
       4  g_fSpeedControlIntegral
       4  g_fSpeedControlOut
       4  g_fSpeedControlOutNew
       4  g_fSpeedControlOutOld
      20  g_lnInputVoltageSigma
       2  g_nDirectionControlPeriod
      12  g_nInputVoltage
       2  g_nMotorPulse
       2  g_nMotorPulseSigma
       2  g_nRightMotorPulse
       1  g_nSpeedControlPeriod
       1  ga_fg
       1  ga_fg_last
      40  get_ad
    2608  get_front
     432  get_fu
    1090  get_zong
       1  gl_fg
       1  gl_fg_last
       1  gr_fg
       1  gr_fg_last
       2  gravity
       1  guosha_flag
       2  high_aver_f
       2  high_aver_z
       2  jiao_L
       2  jiao_R
       1  jisha
       4  k
       2  lR_count
       2  lost_all_count
       1  lost_all_flag
       1  lost_left_flag
       1  lost_right_flag
       2  low_aver_f
       2  low_aver_z
       2  lr_count
       2  maybe_bl_ct
       1  mq
       1  mq_last
       1  mq_look1
       1  mq_look2
       1  mq_look3
       1  mq_look4
       4  pulse_count
       4  pulse_count_pre
       1  qd_count
       2  qd_ct
       2  qpx_count
       2  real_l
       2  real_r
       2  rensha_count
       2  route_ave_f
       2  route_ave_z
     200  route_f
       2  route_mid
     448  route_type_F
     448  route_type_Z
       2  route_view
     200  route_z
       1  rshover_fg
       1  ruwang_fg
       1  rzguo_count
       1  rzguo_flag
       1  rzop
       1  rzsc_fg
       4  sd
     126  serial_Txd
       2  servo_duty
       1  sh_x
       2  sha_width
     276  shache1
       1  shache_fg
       1  shapo
       1  shmode
       4  sp
       2  speed_F
       2  speed_pwm
       2  stop_count
       2  stop_flag
       1  sz_in
       2  sz_in_ct
       1  sz_l
       1  sz_r
       4  t
       1  tisu_fg
      26  virtual_scope_show
       2  voltage_gravity
       8  x
       2  xianfu
       2  xiao_ct
       1  xiao_fg
       8  y
       2  z_err1
       2  z_err2
       2  z_err3
       2  z_err4
       2  z_err5
       2  z_err6
       2  z_err7
       2  z_err8
       2  z_err9
       2  zheng
       2  zhong
       2  zong_OFFSET
       2  zong_OFFSET_KZ
       2  zong_OFFSET_KZ_pre
       2  zong_OFFSET_pre
       2  zong_OFFSET_pre1
       2  zong_OFFSET_pre10
       2  zong_OFFSET_pre2
       2  zong_OFFSET_pre3
       2  zong_OFFSET_pre4
       2  zong_OFFSET_pre5
       2  zong_OFFSET_pre6
       2  zong_OFFSET_pre7
       2  zong_OFFSET_pre8
       2  zong_OFFSET_pre9
       2  zong_l
       2  zong_l_last
       2  zong_l_pre
       2  zong_l_reference
       2  zong_l_view
       2  zong_max
       2  zong_min
       2  zong_r
       2  zong_r_last
       2  zong_r_pre
       2  zong_r_reference
       2  zong_r_view
       2  zong_reference
       2  zong_width

 
  1 283 bytes in section .bss
     57 bytes in section .data
     96 bytes in section .rodata
 12 386 bytes in section .text
 
 12 386 bytes of CODE  memory
     96 bytes of CONST memory
  1 340 bytes of DATA  memory

Errors: none
Warnings: 4
