###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.3.6832/W32 for ARM        31/Dec/2015  15:29:37
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\src\Sources\C\main.c
#    Command line =  
#        "G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\src\Sources\C\main.c"
#        -D IAR -D TWR_K60N512 -lCN
#        "G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\bin\Flash\List\"
#        -lB
#        "G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\bin\Flash\List\"
#        -o
#        "G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\bin\Flash\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\MyProgramFiles\IAR
#        7.10.3\arm\INC\c\DLib_Config_Normal.h" -I
#        "G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\src\Sources\H\"
#        -I
#        "G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\src\Sources\H\Component_H\"
#        -I
#        "G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\src\Sources\H\Frame_H\"
#        -Ol --use_c++_inline
#    List file    =  
#        G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\bin\Flash\List\main.lst
#    Object file  =  
#        G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\bin\Flash\Obj\main.o
#
###############################################################################

G:\FREESCALE智能车竞赛\freescale(九)\程序\总决赛比赛程序21.22.23\2014.08.22\src\Sources\C\main.c
      1          //头文件
      2          #include "includes.h"
      3          
      4          //全局变量声明
      5          extern  int16  periph_clk_khz;
      6          
      7          extern  int16  cl_f,cl_f_pre;//如果赋初值，会出现重复定义
      8          extern  int16  front_l,front_r;

   \                                 In section .bss, align 2
      9                  int16  cl_f_long,front_l_long,front_r_long,IT_long;
   \                     cl_f_long:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_l_long:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     front_r_long:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     IT_long:
   \   00000000                      DS8 2
     10          extern  int16  front_reference,front_l_reference,front_r_reference;

   \                                 In section .data, align 1
     11                  uint8  IT_ref=10;
   \                     IT_ref:
   \   00000000   0x0A               DC8 10
     12          extern  int16  front_max,front_min;

   \                                 In section .bss, align 2
     13                  int16  lost_all_count_max=0;
   \                     lost_all_count_max:
   \   00000000                      DS8 2
     14          extern  int16  lost_all_count;
     15          extern  uint8  lost_all_flag;
     16          extern  int16  Aver_F,high_aver_f,low_aver_f;
     17          extern  int16  R_aver,L_aver;
     18          extern  uint8  Ldiaotou_flag,Rdiaotou_flag;
     19          extern  int16  Ldiaotou_count,Rdiaotou_count;
     20          
     21          extern  int16  front_l_flag,front_r_flag;
     22          
     23          extern  int16  bodong;
     24          
     25          extern  int16  cl_z;
     26          extern  int16  zong_l,zong_r;

   \                                 In section .bss, align 2
     27                  int16  cl_z_long,zong_l_long,zong_r_long;
   \                     cl_z_long:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_l_long:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     zong_r_long:
   \   00000000                      DS8 2
     28          extern  int16  zong_reference,zong_l_reference,zong_r_reference;
     29          extern  int16  zong_max,zong_min;
     30          
     31          extern  uint8  Pixel_F[128],Pixel_Z[128];
     32          extern  uint8  IntegrationTime_Front,IntegrationTime_Zong;
     33          extern  uint8  integration_piont_Front,integration_piont_Zong;
     34          extern  uint8  pit0_1ms_flag;
     35          extern  uint8  TIME1flag_20ms,TIME1flag_20ms_Z;
     36          extern  int16  speedflag;

   \                                 In section .data, align 2
     37                  int16  Motor_Lock=1;
   \                     Motor_Lock:
   \   00000000   0x0001             DC16 1

   \                                 In section .data, align 2
     38                  int16  Servo_Lock=1;
   \                     Servo_Lock:
   \   00000000   0x0001             DC16 1
     39          
     40          extern  int16  delta_l,delta_r;
     41          extern  int16  fangcha_f,fangcha_qian_f,fangcha_hou_f;
     42          extern  int16  fangcha_z,fangcha_qian_z,fangcha_hou_z;

   \                                 In section .data, align 2
     43                  int16  fch_dp1=256,fch_dp2=81,fch_dp3=625;
   \                     fch_dp1:
   \   00000000   0x0100             DC16 256

   \                                 In section .data, align 2
   \                     fch_dp2:
   \   00000000   0x0051             DC16 81

   \                                 In section .data, align 2
   \                     fch_dp3:
   \   00000000   0x0271             DC16 625
     44          
     45          
     46                  /*前瞻提高，切线厉害，过第二十字好，立上3.25，（75，30.97）*/

   \                                 In section .data, align 4
     47                  float  Kp=19.0;//合适的前瞻是最好的！
   \                     Kp:
   \   00000000   0x41980000         DC32 41980000H

   \                                 In section .bss, align 4
     48                  float  Ki=0.0;
   \                     Ki:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     49                  float  Kd=21.0;
   \                     Kd:
   \   00000000   0x41A80000         DC32 41A80000H

   \                                 In section .data, align 4
     50                  float  Kp_hold=19.0;
   \                     Kp_hold:
   \   00000000   0x41980000         DC32 41980000H

   \                                 In section .bss, align 4
     51                  float  Ki_hold=0.0;
   \                     Ki_hold:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     52                  float  Kd_hold=21.0;
   \                     Kd_hold:
   \   00000000   0x41A80000         DC32 41A80000H
     53                 

   \                                 In section .data, align 4
     54                  float  Kp_ZW=18.0,Kp_WW=13.0,Kp_WZ=13.5,Kp_ZZ=16.5,Kp_BL=0.5;
   \                     Kp_ZW:
   \   00000000   0x41900000         DC32 41900000H

   \                                 In section .data, align 4
   \                     Kp_WW:
   \   00000000   0x41500000         DC32 41500000H

   \                                 In section .data, align 4
   \                     Kp_WZ:
   \   00000000   0x41580000         DC32 41580000H

   \                                 In section .data, align 4
   \                     Kp_ZZ:
   \   00000000   0x41840000         DC32 41840000H

   \                                 In section .data, align 4
   \                     Kp_BL:
   \   00000000   0x3F000000         DC32 3F000000H

   \                                 In section .data, align 4
     55                  float  Kd_ZW=20.0,Kd_WW=18.5,Kd_WZ=18.5,Kd_ZZ=23.0,Kd_BL=20.0;
   \                     Kd_ZW:
   \   00000000   0x41A00000         DC32 41A00000H

   \                                 In section .data, align 4
   \                     Kd_WW:
   \   00000000   0x41940000         DC32 41940000H

   \                                 In section .data, align 4
   \                     Kd_WZ:
   \   00000000   0x41940000         DC32 41940000H

   \                                 In section .data, align 4
   \                     Kd_ZZ:
   \   00000000   0x41B80000         DC32 41B80000H

   \                                 In section .data, align 4
   \                     Kd_BL:
   \   00000000   0x41A00000         DC32 41A00000H
     56          

   \                                 In section .data, align 4
     57                  float   Kmax=0.8,Kmin=0.6;
   \                     Kmax:
   \   00000000   0x3F4CCCCD         DC32 3F4CCCCDH

   \                                 In section .data, align 4
   \                     Kmin:
   \   00000000   0x3F19999A         DC32 3F19999AH
     58                  
     59          extern  float  sp,sd;
     60                 

   \                                 In section .bss, align 1
     61                  uint8  d_p=0;
   \                     d_p:
   \   00000000                      DS8 1
     62          extern  float  chu;
     63                 
     64          

   \                                 In section .data, align 4
     65                  float  k_out=1.5;
   \                     k_out:
   \   00000000   0x3FC00000         DC32 3FC00000H

   \                                 In section .data, align 4
     66                  float  k_B=1.0;
   \                     k_B:
   \   00000000   0x3F800000         DC32 3F800000H
     67                 

   \                                 In section .bss, align 2
     68                  int16  shache_time=0;
   \                     shache_time:
   \   00000000                      DS8 2
     69          extern  int16  ZZ_count;

   \                                 In section .bss, align 2
     70                  int16  ZZ_count_max=0;
   \                     ZZ_count_max:
   \   00000000                      DS8 2
     71          extern  int16  bl_count;
     72          extern  uint8  bl_flag;
     73          extern  int16  stop_flag;
     74          extern  int16  stop_count;
     75          extern  int16  black_l,black_r;
     76          extern  int16  Psha;
     77          extern  int16  ZHONG;
     78          extern  int16  xianfu;
     79          

   \                                 In section .data, align 1
     80                  uint8  mode=1;        
   \                     mode:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 1
     81                  uint8  fch_mo=1;
   \                     fch_mo:
   \   00000000   0x01               DC8 1
     82          extern  uint8  shmode;
     83          
     84                 /*供电线*/
     85                 //提速需谨慎，始终调不出好的参数则降速处理

   \                                 In section .data, align 2
     86                  int16  speed=365;
   \                     speed:
   \   00000000   0x016D             DC16 365

   \                                 In section .data, align 2
     87                  int16  speed_H=360;
   \                     speed_H:
   \   00000000   0x0168             DC16 360

   \                                 In section .data, align 2
     88                  int16  speed_L=280;
   \                     speed_L:
   \   00000000   0x0118             DC16 280

   \                                 In section .data, align 2
     89                  int16  speed_B=300;
   \                     speed_B:
   \   00000000   0x012C             DC16 300

   \                                 In section .data, align 2
     90                  int16  speed_jian=20;
   \                     speed_jian:
   \   00000000   0x0014             DC16 20

   \                                 In section .data, align 2
     91                  int16  PMAX=175;
   \                     PMAX:
   \   00000000   0x00AF             DC16 175
     92          extern  int16  Pmax;

   \                                 In section .data, align 2
     93                  int16  Prz=-10;
   \                     Prz:
   \   00000000   0xFFF6             DC16 -10

   \                                 In section .data, align 2
     94                  int16  POsha=100;
   \                     POsha:
   \   00000000   0x0064             DC16 100
     95                 
     96          extern  int16  d_err1,d_err2,d_err3,d_err4,d_err5,d_err6,d_err7,d_err8,d_err9;

   \                                 In section .bss, align 2
     97                  int16  d_err1_max=0;
   \                     d_err1_max:
   \   00000000                      DS8 2
     98          extern  int16  z_err1,z_err2,z_err3,z_err4,z_err5,z_err6,z_err7,z_err8,z_err9;
     99          extern  int16  front_OFFSET,front_OFFSET_pre;
    100          extern  int16  zong_OFFSET;
    101          

   \                                 In section .bss, align 1
    102                  uint8  a=0;
   \                     a:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    103                  uint8  showcnt=0;
   \                     showcnt:
   \   00000000                      DS8 1
    104          extern  int16  front_width;
    105          extern  int16  zong_width;
    106          

   \                                 In section .bss, align 2
    107                  int16  FRONT_WIDTH;
   \                     FRONT_WIDTH:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    108                  int16  ZONG_WIDTH;
   \                     ZONG_WIDTH:
   \   00000000                      DS8 2
    109          
    110          

   \                                 In section .data, align 1
    111                  uint8  key_num=255;
   \                     key_num:
   \   00000000   0xFF               DC8 255

   \                                 In section .data, align 1
    112                  uint8  key_no=255;
   \                     key_no:
   \   00000000   0xFF               DC8 255

   \                                 In section .data, align 1
    113                  uint8  zhming=1;
   \                     zhming:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 1
    114                  uint8  BK=255;
   \                     BK:
   \   00000000   0xFF               DC8 255
    115          extern  int16  g_nMotorPulseSigma;
    116          extern  int32  pulse_count;

   \                                 In section .bss, align 4
    117                  int32  pulse_count_max=0;
   \                     pulse_count_max:
   \   00000000                      DS8 4
    118          

   \                                 In section .data, align 4
    119                  float  Sp=1.7,Si=0.05,Sd=0.3;//至决赛做强速度控制
   \                     `Sp`:
   \   00000000   0x3FD9999A         DC32 3FD9999AH

   \                                 In section .data, align 4
   \                     Si:
   \   00000000   0x3D4CCCCD         DC32 3D4CCCCDH

   \                                 In section .data, align 4
   \                     Sd:
   \   00000000   0x3E99999A         DC32 3E99999AH
    120                 
    121          extern  uint8  CAR_GO;
    122          extern  uint8  rzop;
    123          extern  uint8  qpx_en;
    124          extern  int16  QPX_SET;
    125          
    126          extern  int16  jiao_L,jiao_R;
    127          
    128          extern  uint8  mq,mq_last;
    129          extern  uint8  mq_look1,mq_look2,mq_look3,mq_look4;
    130          
    131          extern  int16  gravity,voltage_gravity;
    132          extern  int16  g_nInputVoltage[5];

   \                                 In section .bss, align 1
    133                  uint8  dazhi=0;
   \                     dazhi:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    134                  uint8  guopo=0;
   \                     guopo:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    135                  int16  po_count=0,PO_ct=39;
   \                     po_count:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     PO_ct:
   \   00000000   0x0027             DC16 39
    136                 

   \                                 In section .bss, align 2
    137                  int16  hongwai_l=0,hongwai_r=0;
   \                     hongwai_l:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     hongwai_r:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    138                  int16  HONGWAI_L=0,HONGWAI_R=0;
   \                     HONGWAI_L:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     HONGWAI_R:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    139                  int16  hongwai_l_count=0,hongwai_r_count=0;
   \                     hongwai_l_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     hongwai_r_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    140                  uint8  hw_l_fg=0,hw_r_fg=0;
   \                     hw_l_fg:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     hw_r_fg:
   \   00000000                      DS8 1
    141                 

   \                                 In section .bss, align 1
    142                  uint8  dir_fg=0;
   \                     dir_fg:
   \   00000000                      DS8 1
    143                 
    144          
    145          extern  int16  OFFSET_keep;
    146          

   \                                 In section .bss, align 1
    147                  uint8  polook=0;
   \                     polook:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    148                  uint8  po_gap=0;
   \                     po_gap:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    149                  int16  po_gap_ct=0;
   \                     po_gap_ct:
   \   00000000                      DS8 2
    150                  
    151          extern  int16  sha_width;
    152          extern  uint8  shapo;
    153          extern  uint8  BLsha;
    154          
    155          extern  uint8   sh_x;
    156          extern  uint8   POshaen;

   \                                 In section .bss, align 1
    157                  uint8   HWPO=0;
   \                     HWPO:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    158                  int16   HWPO_ct=0;
   \                     HWPO_ct:
   \   00000000                      DS8 2
    159                 
    160          //函数声明
    161          void  system_init();
    162          //主函数

   \                                 In section .text, align 4, keep-with-next
    163          void main()
    164          {
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    165             int8   j;
    166             uint8  *pixel_pt;
    167             uint8  send_data_cnt = 0;
   \   00000002   0x2200             MOVS     R2,#+0
    168             int16  LCD_Average_Flag=0,LCD_Average_Flag_Z=0;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2300             MOVS     R3,#+0
    169             
    170             pixel_pt = Pixel_F;
   \   00000008   0xF8DF 0x1770      LDR.W    R1,??main_0+0x8
    171             for(j=0; j<128+10; j++){*pixel_pt++ = 0;}
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0xE003             B.N      ??main_1
   \                     ??main_2: (+1)
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x700A             STRB     R2,[R1, #+0]
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \                     ??main_1: (+1)
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x288A             CMP      R0,#+138
   \   0000001C   0xDBF8             BLT.N    ??main_2
    172             
    173             pixel_pt = Pixel_Z;
   \   0000001E   0xF8DF 0x1760      LDR.W    R1,??main_0+0xC
    174             for(j=0; j<128+10; j++){*pixel_pt++ = 0;}
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xE003             B.N      ??main_3
   \                     ??main_4: (+1)
   \   00000026   0x2200             MOVS     R2,#+0
   \   00000028   0x700A             STRB     R2,[R1, #+0]
   \   0000002A   0x1C49             ADDS     R1,R1,#+1
   \   0000002C   0x1C40             ADDS     R0,R0,#+1
   \                     ??main_3: (+1)
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x288A             CMP      R0,#+138
   \   00000032   0xDBF8             BLT.N    ??main_4
    175             
    176             system_init();
   \   00000034   0x.... 0x....      BL       system_init
    177             /*
    178             serial_choose();
    179             uart_send1(UART3 ,  gravity );//PTC16接串口模块的uart3_RX，PTC17接串口模块的uart3_TX
    180             uart_send1(UART3 , gyro );
    181             */
    182             //-----------------------------------------------------------------
    183             //--------------------------模式 按键调参--------------------------
    184             //-----------------------------------------------------------------
    185             while(1)
    186             { 
    187                
    188                //user GUI
    189                LCD_P8x16Str(0,0,"mode:1");
   \                     ??main_5: (+1)
   \   00000038   0xF8DF 0x2748      LDR.W    R2,??main_0+0x10
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x.... 0x....      BL       LCD_P8x16Str
    190                LCD_P8x16Str(60,0,"s_H:2");
   \   00000044   0xF8DF 0x2740      LDR.W    R2,??main_0+0x14
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x203C             MOVS     R0,#+60
   \   0000004C   0x.... 0x....      BL       LCD_P8x16Str
    191                LCD_P8x16Str(0,2,"s_L:3");
   \   00000050   0xF8DF 0x2738      LDR.W    R2,??main_0+0x18
   \   00000054   0x2102             MOVS     R1,#+2
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x.... 0x....      BL       LCD_P8x16Str
    192                LCD_P8x16Str(60,2,"Kp:4");
   \   0000005C   0xF8DF 0x2730      LDR.W    R2,??main_0+0x1C
   \   00000060   0x2102             MOVS     R1,#+2
   \   00000062   0x203C             MOVS     R0,#+60
   \   00000064   0x.... 0x....      BL       LCD_P8x16Str
    193                LCD_P8x16Str(0,4,"Kd:5");
   \   00000068   0xF8DF 0x2728      LDR.W    R2,??main_0+0x20
   \   0000006C   0x2104             MOVS     R1,#+4
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x.... 0x....      BL       LCD_P8x16Str
    194                LCD_P8x16Str(60,4,"QPX_SET:6");
   \   00000074   0xF8DF 0x2720      LDR.W    R2,??main_0+0x24
   \   00000078   0x2104             MOVS     R1,#+4
   \   0000007A   0x203C             MOVS     R0,#+60
   \   0000007C   0x.... 0x....      BL       LCD_P8x16Str
    195                
    196                matrix_keyboard_init();
   \   00000080   0x.... 0x....      BL       matrix_keyboard_init
    197                key_no=keyboard_scan();
   \   00000084   0x.... 0x....      BL       keyboard_scan
   \   00000088   0xF8DF 0x1E3C      LDR.W    R1,??main_6
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    198                
    199                delay_ms(110);
   \   0000008E   0x206E             MOVS     R0,#+110
   \   00000090   0x.... 0x....      BL       delay_ms
    200          
    201                //1号按键按下的时候调节mode
    202                if(key_no==1)
   \   00000094   0xF8DF 0x0E30      LDR.W    R0,??main_6
   \   00000098   0x7800             LDRB     R0,[R0, #+0]
   \   0000009A   0x2801             CMP      R0,#+1
   \   0000009C   0xF040 0x8086      BNE.W    ??main_7
    203                 {
    204                  key_no=255;
   \   000000A0   0x20FF             MOVS     R0,#+255
   \   000000A2   0xF8DF 0x1E24      LDR.W    R1,??main_6
   \   000000A6   0x7008             STRB     R0,[R1, #+0]
    205                  BK=1;
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0xF8DF 0x16F0      LDR.W    R1,??main_0+0x28
   \   000000AE   0x7008             STRB     R0,[R1, #+0]
    206                  LCD_CLS();
   \   000000B0   0x.... 0x....      BL       LCD_CLS
   \   000000B4   0xE073             B.N      ??main_8
    207                  while(BK==1)
    208                  {
    209                    LCD_P8x16Str(0,0,"mode:");
   \                     ??main_9: (+1)
   \   000000B6   0xF8DF 0x26E8      LDR.W    R2,??main_0+0x2C
   \   000000BA   0x2100             MOVS     R1,#+0
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x.... 0x....      BL       LCD_P8x16Str
    210                    LCD_P8x16_number_4(60,0,mode);
   \   000000C2   0xF8DF 0x06E0      LDR.W    R0,??main_0+0x30
   \   000000C6   0x7802             LDRB     R2,[R0, #+0]
   \   000000C8   0x2100             MOVS     R1,#+0
   \   000000CA   0x203C             MOVS     R0,#+60
   \   000000CC   0x.... 0x....      BL       LCD_P8x16_number_4
    211                    LCD_P8x16Str(0,2,"+:");
   \   000000D0   0xA263             ADR.N    R2,??main_10     ;; 0x2B, 0x3A, 0x00, 0x00
   \   000000D2   0x2102             MOVS     R1,#+2
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x.... 0x....      BL       LCD_P8x16Str
    212                    LCD_P8x16Str(60,2,"Key7");
   \   000000DA   0xF8DF 0x26CC      LDR.W    R2,??main_0+0x34
   \   000000DE   0x2102             MOVS     R1,#+2
   \   000000E0   0x203C             MOVS     R0,#+60
   \   000000E2   0x.... 0x....      BL       LCD_P8x16Str
    213                    LCD_P8x16Str(0,4,"-:");
   \   000000E6   0xA25F             ADR.N    R2,??main_10+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   000000E8   0x2104             MOVS     R1,#+4
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x.... 0x....      BL       LCD_P8x16Str
    214                    LCD_P8x16Str(60,4,"Key8");
   \   000000F0   0xF8DF 0x26B8      LDR.W    R2,??main_0+0x38
   \   000000F4   0x2104             MOVS     R1,#+4
   \   000000F6   0x203C             MOVS     R0,#+60
   \   000000F8   0x.... 0x....      BL       LCD_P8x16Str
    215                    LCD_P8x16Str(0,6,"Re:");
   \   000000FC   0xA25A             ADR.N    R2,??main_10+0x8  ;; "Re:"
   \   000000FE   0x2106             MOVS     R1,#+6
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0x.... 0x....      BL       LCD_P8x16Str
    216                    LCD_P8x16Str(60,6,"Key9");
   \   00000106   0xF8DF 0x26A8      LDR.W    R2,??main_0+0x3C
   \   0000010A   0x2106             MOVS     R1,#+6
   \   0000010C   0x203C             MOVS     R0,#+60
   \   0000010E   0x.... 0x....      BL       LCD_P8x16Str
    217                    
    218                    delay_ms(110);
   \   00000112   0x206E             MOVS     R0,#+110
   \   00000114   0x.... 0x....      BL       delay_ms
    219                    matrix_keyboard_init();
   \   00000118   0x.... 0x....      BL       matrix_keyboard_init
    220                    key_num=keyboard_scan();
   \   0000011C   0x.... 0x....      BL       keyboard_scan
   \   00000120   0xF8DF 0x1DB0      LDR.W    R1,??main_6+0xC
   \   00000124   0x7008             STRB     R0,[R1, #+0]
    221                    if(key_num!=255)
   \   00000126   0xF8DF 0x0DAC      LDR.W    R0,??main_6+0xC
   \   0000012A   0x7800             LDRB     R0,[R0, #+0]
   \   0000012C   0x28FF             CMP      R0,#+255
   \   0000012E   0xD005             BEQ.N    ??main_11
    222                    {
    223                      key_no=key_num;
   \   00000130   0xF8DF 0x0DA0      LDR.W    R0,??main_6+0xC
   \   00000134   0x7800             LDRB     R0,[R0, #+0]
   \   00000136   0xF8DF 0x1D90      LDR.W    R1,??main_6
   \   0000013A   0x7008             STRB     R0,[R1, #+0]
    224                    }          
    225          
    226                    if(key_no==7)
   \                     ??main_11: (+1)
   \   0000013C   0xF8DF 0x0D88      LDR.W    R0,??main_6
   \   00000140   0x7800             LDRB     R0,[R0, #+0]
   \   00000142   0x2807             CMP      R0,#+7
   \   00000144   0xD10A             BNE.N    ??main_12
    227                    {
    228                      mode=mode+1;
   \   00000146   0xF8DF 0x065C      LDR.W    R0,??main_0+0x30
   \   0000014A   0x7800             LDRB     R0,[R0, #+0]
   \   0000014C   0x1C40             ADDS     R0,R0,#+1
   \   0000014E   0xF8DF 0x1654      LDR.W    R1,??main_0+0x30
   \   00000152   0x7008             STRB     R0,[R1, #+0]
    229                      key_no=255;
   \   00000154   0x20FF             MOVS     R0,#+255
   \   00000156   0xF8DF 0x1D70      LDR.W    R1,??main_6
   \   0000015A   0x7008             STRB     R0,[R1, #+0]
    230                    }
    231                  
    232                    if(key_no==8)
   \                     ??main_12: (+1)
   \   0000015C   0xF8DF 0x0D68      LDR.W    R0,??main_6
   \   00000160   0x7800             LDRB     R0,[R0, #+0]
   \   00000162   0x2808             CMP      R0,#+8
   \   00000164   0xD10A             BNE.N    ??main_13
    233                    {
    234                      mode=mode-1;
   \   00000166   0xF8DF 0x063C      LDR.W    R0,??main_0+0x30
   \   0000016A   0x7800             LDRB     R0,[R0, #+0]
   \   0000016C   0x1E40             SUBS     R0,R0,#+1
   \   0000016E   0xF8DF 0x1634      LDR.W    R1,??main_0+0x30
   \   00000172   0x7008             STRB     R0,[R1, #+0]
    235                      key_no=255;
   \   00000174   0x20FF             MOVS     R0,#+255
   \   00000176   0xF8DF 0x1D50      LDR.W    R1,??main_6
   \   0000017A   0x7008             STRB     R0,[R1, #+0]
    236                    }
    237                  
    238                    if(key_no==9)
   \                     ??main_13: (+1)
   \   0000017C   0xF8DF 0x0D48      LDR.W    R0,??main_6
   \   00000180   0x7800             LDRB     R0,[R0, #+0]
   \   00000182   0x2809             CMP      R0,#+9
   \   00000184   0xD10B             BNE.N    ??main_8
    239                    {
    240                      BK=255;
   \   00000186   0x20FF             MOVS     R0,#+255
   \   00000188   0xF8DF 0x1610      LDR.W    R1,??main_0+0x28
   \   0000018C   0x7008             STRB     R0,[R1, #+0]
    241                      key_no=255;
   \   0000018E   0x20FF             MOVS     R0,#+255
   \   00000190   0xF8DF 0x1D34      LDR.W    R1,??main_6
   \   00000194   0x7008             STRB     R0,[R1, #+0]
    242                      key_num=255;
   \   00000196   0x20FF             MOVS     R0,#+255
   \   00000198   0xF8DF 0x1D38      LDR.W    R1,??main_6+0xC
   \   0000019C   0x7008             STRB     R0,[R1, #+0]
    243                    }
    244                  }
   \                     ??main_8: (+1)
   \   0000019E   0xF8DF 0x05FC      LDR.W    R0,??main_0+0x28
   \   000001A2   0x7800             LDRB     R0,[R0, #+0]
   \   000001A4   0x2801             CMP      R0,#+1
   \   000001A6   0xD086             BEQ.N    ??main_9
    245                  LCD_CLS();
   \   000001A8   0x.... 0x....      BL       LCD_CLS
    246                }
    247                
    248                //模式------------------
    249                if(mode==1)
   \                     ??main_7: (+1)
   \   000001AC   0xF8DF 0x05F4      LDR.W    R0,??main_0+0x30
   \   000001B0   0x7800             LDRB     R0,[R0, #+0]
   \   000001B2   0x2801             CMP      R0,#+1
   \   000001B4   0xD127             BNE.N    ??main_14
    250                {
    251                  speed_H=360;
   \   000001B6   0xF44F 0x70B4      MOV      R0,#+360
   \   000001BA   0xF8DF 0x15F8      LDR.W    R1,??main_0+0x40
   \   000001BE   0x8008             STRH     R0,[R1, #+0]
    252                  speed_L=280;
   \   000001C0   0xF44F 0x708C      MOV      R0,#+280
   \   000001C4   0xF8DF 0x15F0      LDR.W    R1,??main_0+0x44
   \   000001C8   0x8008             STRH     R0,[R1, #+0]
    253                  Kp=19.7;
   \   000001CA   0xF8DF 0x05F0      LDR.W    R0,??main_0+0x48  ;; 0x419d999a
   \   000001CE   0xF8DF 0x15F0      LDR.W    R1,??main_0+0x4C
   \   000001D2   0x6008             STR      R0,[R1, #+0]
    254                  Kd=21.0;
   \   000001D4   0xF8DF 0x05EC      LDR.W    R0,??main_0+0x50  ;; 0x41a80000
   \   000001D8   0xF8DF 0x15EC      LDR.W    R1,??main_0+0x54
   \   000001DC   0x6008             STR      R0,[R1, #+0]
    255                  Psha=60;
   \   000001DE   0x203C             MOVS     R0,#+60
   \   000001E0   0xF8DF 0x1E30      LDR.W    R1,??main_15
   \   000001E4   0x8008             STRH     R0,[R1, #+0]
    256                  Prz=-20;
   \   000001E6   0xF07F 0x0013      MVNS     R0,#+19
   \   000001EA   0xF8DF 0x1E2C      LDR.W    R1,??main_15+0x4
   \   000001EE   0x8008             STRH     R0,[R1, #+0]
    257                  
    258                  Kmax=0.8;
   \   000001F0   0xF8DF 0x05D8      LDR.W    R0,??main_0+0x58  ;; 0x3f4ccccd
   \   000001F4   0xF8DF 0x15D8      LDR.W    R1,??main_0+0x5C
   \   000001F8   0x6008             STR      R0,[R1, #+0]
    259                  Kmin=0.6;
   \   000001FA   0xF8DF 0x05D8      LDR.W    R0,??main_0+0x60  ;; 0x3f19999a
   \   000001FE   0xF8DF 0x15D8      LDR.W    R1,??main_0+0x64
   \   00000202   0x6008             STR      R0,[R1, #+0]
   \   00000204   0xE05D             B.N      ??main_16
    260                  
    261                  
    262                }
    263                else if(mode==2)
   \                     ??main_14: (+1)
   \   00000206   0xF8DF 0x059C      LDR.W    R0,??main_0+0x30
   \   0000020A   0x7800             LDRB     R0,[R0, #+0]
   \   0000020C   0x2802             CMP      R0,#+2
   \   0000020E   0xD12D             BNE.N    ??main_17
    264                {
    265                  speed_H=350;
   \   00000210   0xF44F 0x70AF      MOV      R0,#+350
   \   00000214   0xF8DF 0x159C      LDR.W    R1,??main_0+0x40
   \   00000218   0x8008             STRH     R0,[R1, #+0]
    266                  speed_L=270;
   \   0000021A   0xF44F 0x7087      MOV      R0,#+270
   \   0000021E   0xF8DF 0x1598      LDR.W    R1,??main_0+0x44
   \   00000222   0x8008             STRH     R0,[R1, #+0]
    267                  Kp=18.0;
   \   00000224   0xF8DF 0x05B4      LDR.W    R0,??main_0+0x68  ;; 0x41900000
   \   00000228   0xF8DF 0x1594      LDR.W    R1,??main_0+0x4C
   \   0000022C   0x6008             STR      R0,[R1, #+0]
    268                  Kd=21.0;
   \   0000022E   0xF8DF 0x0594      LDR.W    R0,??main_0+0x50  ;; 0x41a80000
   \   00000232   0xF8DF 0x1594      LDR.W    R1,??main_0+0x54
   \   00000236   0x6008             STR      R0,[R1, #+0]
    269                  Psha=80;
   \   00000238   0x2050             MOVS     R0,#+80
   \   0000023A   0xF8DF 0x1DD8      LDR.W    R1,??main_15
   \   0000023E   0x8008             STRH     R0,[R1, #+0]
    270                  Prz=0;
   \   00000240   0x2000             MOVS     R0,#+0
   \   00000242   0xF8DF 0x1DD4      LDR.W    R1,??main_15+0x4
   \   00000246   0x8008             STRH     R0,[R1, #+0]
    271                  
    272                  Kmax=0.7;
   \   00000248   0xF8DF 0x0594      LDR.W    R0,??main_0+0x6C  ;; 0x3f333333
   \   0000024C   0xF8DF 0x1580      LDR.W    R1,??main_0+0x5C
   \   00000250   0x6008             STR      R0,[R1, #+0]
    273                  Kmin=0.5;
   \   00000252   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   00000256   0xF8DF 0x1580      LDR.W    R1,??main_0+0x64
   \   0000025A   0x6008             STR      R0,[R1, #+0]
   \   0000025C   0xE031             B.N      ??main_16
   \   0000025E   0xBF00             Nop      
   \                     ??main_10:
   \   00000260   0x2B 0x3A          DC8      0x2B, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00000264   0x2D 0x3A          DC8      0x2D, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00000268   0x52 0x65          DC8      "Re:"
   \              0x3A 0x00    
    274                }
    275                else if(mode==3)
   \                     ??main_17: (+1)
   \   0000026C   0xF8DF 0x0534      LDR.W    R0,??main_0+0x30
   \   00000270   0x7800             LDRB     R0,[R0, #+0]
   \   00000272   0x2803             CMP      R0,#+3
   \   00000274   0xD125             BNE.N    ??main_16
    276                {
    277                  speed_H=340;
   \   00000276   0xF44F 0x70AA      MOV      R0,#+340
   \   0000027A   0xF8DF 0x1538      LDR.W    R1,??main_0+0x40
   \   0000027E   0x8008             STRH     R0,[R1, #+0]
    278                  speed_L=260;
   \   00000280   0xF44F 0x7082      MOV      R0,#+260
   \   00000284   0xF8DF 0x1530      LDR.W    R1,??main_0+0x44
   \   00000288   0x8008             STRH     R0,[R1, #+0]
    279                  Kp=17.0;
   \   0000028A   0xF8DF 0x0DAC      LDR.W    R0,??main_18     ;; 0x41880000
   \   0000028E   0xF8DF 0x1530      LDR.W    R1,??main_0+0x4C
   \   00000292   0x6008             STR      R0,[R1, #+0]
    280                  Kd=21.0;
   \   00000294   0xF8DF 0x052C      LDR.W    R0,??main_0+0x50  ;; 0x41a80000
   \   00000298   0xF8DF 0x152C      LDR.W    R1,??main_0+0x54
   \   0000029C   0x6008             STR      R0,[R1, #+0]
    281                  Psha=90;
   \   0000029E   0x205A             MOVS     R0,#+90
   \   000002A0   0xF8DF 0x1D70      LDR.W    R1,??main_15
   \   000002A4   0x8008             STRH     R0,[R1, #+0]
    282                  Prz=0;
   \   000002A6   0x2000             MOVS     R0,#+0
   \   000002A8   0xF8DF 0x1D6C      LDR.W    R1,??main_15+0x4
   \   000002AC   0x8008             STRH     R0,[R1, #+0]
    283                  
    284                  Kmax=0.6;
   \   000002AE   0xF8DF 0x0524      LDR.W    R0,??main_0+0x60  ;; 0x3f19999a
   \   000002B2   0xF8DF 0x151C      LDR.W    R1,??main_0+0x5C
   \   000002B6   0x6008             STR      R0,[R1, #+0]
    285                  Kmin=0.4;
   \   000002B8   0xF8DF 0x0D80      LDR.W    R0,??main_18+0x4  ;; 0x3ecccccd
   \   000002BC   0xF8DF 0x1518      LDR.W    R1,??main_0+0x64
   \   000002C0   0x6008             STR      R0,[R1, #+0]
    286                }
    287                //------------------
    288                
    289                //2号按键按下的时候调节Speed_H
    290                if(key_no==2)
   \                     ??main_16: (+1)
   \   000002C2   0xF8DF 0x0C04      LDR.W    R0,??main_6
   \   000002C6   0x7800             LDRB     R0,[R0, #+0]
   \   000002C8   0x2802             CMP      R0,#+2
   \   000002CA   0xF040 0x8083      BNE.W    ??main_19
    291                 {
    292                  key_no=255;
   \   000002CE   0x20FF             MOVS     R0,#+255
   \   000002D0   0xF8DF 0x1BF4      LDR.W    R1,??main_6
   \   000002D4   0x7008             STRB     R0,[R1, #+0]
    293                  BK=2;
   \   000002D6   0x2002             MOVS     R0,#+2
   \   000002D8   0xF8DF 0x14C0      LDR.W    R1,??main_0+0x28
   \   000002DC   0x7008             STRB     R0,[R1, #+0]
    294                  LCD_CLS();
   \   000002DE   0x.... 0x....      BL       LCD_CLS
   \   000002E2   0xE070             B.N      ??main_20
    295                  while(BK==2)
    296                  {
    297                    delay_ms(110);
   \                     ??main_21: (+1)
   \   000002E4   0x206E             MOVS     R0,#+110
   \   000002E6   0x.... 0x....      BL       delay_ms
    298                    matrix_keyboard_init();
   \   000002EA   0x.... 0x....      BL       matrix_keyboard_init
    299                    key_num=keyboard_scan();
   \   000002EE   0x.... 0x....      BL       keyboard_scan
   \   000002F2   0xF8DF 0x1BE0      LDR.W    R1,??main_6+0xC
   \   000002F6   0x7008             STRB     R0,[R1, #+0]
    300                    if(key_num!=255)
   \   000002F8   0xF8DF 0x0BD8      LDR.W    R0,??main_6+0xC
   \   000002FC   0x7800             LDRB     R0,[R0, #+0]
   \   000002FE   0x28FF             CMP      R0,#+255
   \   00000300   0xD005             BEQ.N    ??main_22
    301                    {
    302                      key_no=key_num;
   \   00000302   0xF8DF 0x0BD0      LDR.W    R0,??main_6+0xC
   \   00000306   0x7800             LDRB     R0,[R0, #+0]
   \   00000308   0xF8DF 0x1BBC      LDR.W    R1,??main_6
   \   0000030C   0x7008             STRB     R0,[R1, #+0]
    303                    }          
    304                    LCD_P8x16Str(0,0,"Speed_H:");
   \                     ??main_22: (+1)
   \   0000030E   0xF8DF 0x2D30      LDR.W    R2,??main_18+0x8
   \   00000312   0x2100             MOVS     R1,#+0
   \   00000314   0x2000             MOVS     R0,#+0
   \   00000316   0x.... 0x....      BL       LCD_P8x16Str
    305                    LCD_P8x16_num3wei(60,0,speed_H);
   \   0000031A   0xF8DF 0x0498      LDR.W    R0,??main_0+0x40
   \   0000031E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000322   0x2100             MOVS     R1,#+0
   \   00000324   0x203C             MOVS     R0,#+60
   \   00000326   0x.... 0x....      BL       LCD_P8x16_num3wei
    306                    LCD_P8x16Str(0,2,"+:");
   \   0000032A   0xA2DB             ADR.N    R2,??main_23     ;; 0x2B, 0x3A, 0x00, 0x00
   \   0000032C   0x2102             MOVS     R1,#+2
   \   0000032E   0x2000             MOVS     R0,#+0
   \   00000330   0x.... 0x....      BL       LCD_P8x16Str
    307                    LCD_P8x16Str(60,2,"Key4");
   \   00000334   0xF8DF 0x2D0C      LDR.W    R2,??main_18+0xC
   \   00000338   0x2102             MOVS     R1,#+2
   \   0000033A   0x203C             MOVS     R0,#+60
   \   0000033C   0x.... 0x....      BL       LCD_P8x16Str
    308                    LCD_P8x16Str(0,4,"-:");
   \   00000340   0xA2DC             ADR.N    R2,??main_24     ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000342   0x2104             MOVS     R1,#+4
   \   00000344   0x2000             MOVS     R0,#+0
   \   00000346   0x.... 0x....      BL       LCD_P8x16Str
    309                    LCD_P8x16Str(60,4,"Key5");
   \   0000034A   0xF8DF 0x2CFC      LDR.W    R2,??main_18+0x10
   \   0000034E   0x2104             MOVS     R1,#+4
   \   00000350   0x203C             MOVS     R0,#+60
   \   00000352   0x.... 0x....      BL       LCD_P8x16Str
    310                    LCD_P8x16Str(0,6,"Re:");
   \   00000356   0xA2D8             ADR.N    R2,??main_24+0x4  ;; "Re:"
   \   00000358   0x2106             MOVS     R1,#+6
   \   0000035A   0x2000             MOVS     R0,#+0
   \   0000035C   0x.... 0x....      BL       LCD_P8x16Str
    311                    LCD_P8x16Str(60,6,"Key6");
   \   00000360   0xF8DF 0x2CE8      LDR.W    R2,??main_18+0x14
   \   00000364   0x2106             MOVS     R1,#+6
   \   00000366   0x203C             MOVS     R0,#+60
   \   00000368   0x.... 0x....      BL       LCD_P8x16Str
    312                    
    313                    if(key_no==7)
   \   0000036C   0xF8DF 0x0B58      LDR.W    R0,??main_6
   \   00000370   0x7800             LDRB     R0,[R0, #+0]
   \   00000372   0x2807             CMP      R0,#+7
   \   00000374   0xD10A             BNE.N    ??main_25
    314                    {
    315                      speed_H=speed_H+5;
   \   00000376   0xF8DF 0x043C      LDR.W    R0,??main_0+0x40
   \   0000037A   0x8800             LDRH     R0,[R0, #+0]
   \   0000037C   0x1D40             ADDS     R0,R0,#+5
   \   0000037E   0xF8DF 0x1434      LDR.W    R1,??main_0+0x40
   \   00000382   0x8008             STRH     R0,[R1, #+0]
    316                      key_no=255;
   \   00000384   0x20FF             MOVS     R0,#+255
   \   00000386   0xF8DF 0x1B40      LDR.W    R1,??main_6
   \   0000038A   0x7008             STRB     R0,[R1, #+0]
    317                    }
    318                  
    319                    if(key_no==8)
   \                     ??main_25: (+1)
   \   0000038C   0xF8DF 0x0B38      LDR.W    R0,??main_6
   \   00000390   0x7800             LDRB     R0,[R0, #+0]
   \   00000392   0x2808             CMP      R0,#+8
   \   00000394   0xD10A             BNE.N    ??main_26
    320                    {
    321                      speed_H=speed_H-5;
   \   00000396   0xF8DF 0x041C      LDR.W    R0,??main_0+0x40
   \   0000039A   0x8800             LDRH     R0,[R0, #+0]
   \   0000039C   0x1F40             SUBS     R0,R0,#+5
   \   0000039E   0xF8DF 0x1414      LDR.W    R1,??main_0+0x40
   \   000003A2   0x8008             STRH     R0,[R1, #+0]
    322                      key_no=255;
   \   000003A4   0x20FF             MOVS     R0,#+255
   \   000003A6   0xF8DF 0x1B20      LDR.W    R1,??main_6
   \   000003AA   0x7008             STRB     R0,[R1, #+0]
    323                    }
    324                  
    325                    if(key_no==9)
   \                     ??main_26: (+1)
   \   000003AC   0xF8DF 0x0B18      LDR.W    R0,??main_6
   \   000003B0   0x7800             LDRB     R0,[R0, #+0]
   \   000003B2   0x2809             CMP      R0,#+9
   \   000003B4   0xD107             BNE.N    ??main_20
    326                    {
    327                      BK=255;
   \   000003B6   0x20FF             MOVS     R0,#+255
   \   000003B8   0xF8DF 0x13E0      LDR.W    R1,??main_0+0x28
   \   000003BC   0x7008             STRB     R0,[R1, #+0]
    328                      key_no=255;
   \   000003BE   0x20FF             MOVS     R0,#+255
   \   000003C0   0xF8DF 0x1B04      LDR.W    R1,??main_6
   \   000003C4   0x7008             STRB     R0,[R1, #+0]
    329                    }
    330                  }
   \                     ??main_20: (+1)
   \   000003C6   0xF8DF 0x03D4      LDR.W    R0,??main_0+0x28
   \   000003CA   0x7800             LDRB     R0,[R0, #+0]
   \   000003CC   0x2802             CMP      R0,#+2
   \   000003CE   0xD089             BEQ.N    ??main_21
    331                  LCD_CLS();
   \   000003D0   0x.... 0x....      BL       LCD_CLS
    332                 }
    333                //3号按键按下的时候调节Speed_L
    334                if(key_no==3)
   \                     ??main_19: (+1)
   \   000003D4   0xF8DF 0x0AF0      LDR.W    R0,??main_6
   \   000003D8   0x7800             LDRB     R0,[R0, #+0]
   \   000003DA   0x2803             CMP      R0,#+3
   \   000003DC   0xD17C             BNE.N    ??main_27
    335                 {
    336                  key_no=255;
   \   000003DE   0x20FF             MOVS     R0,#+255
   \   000003E0   0xF8DF 0x1AE4      LDR.W    R1,??main_6
   \   000003E4   0x7008             STRB     R0,[R1, #+0]
    337                  BK=3;
   \   000003E6   0x2003             MOVS     R0,#+3
   \   000003E8   0xF8DF 0x13B0      LDR.W    R1,??main_0+0x28
   \   000003EC   0x7008             STRB     R0,[R1, #+0]
    338                  LCD_CLS();
   \   000003EE   0x.... 0x....      BL       LCD_CLS
   \   000003F2   0xE06B             B.N      ??main_28
    339                  while(BK==3)
    340                  {
    341                    delay_ms(110);
   \                     ??main_29: (+1)
   \   000003F4   0x206E             MOVS     R0,#+110
   \   000003F6   0x.... 0x....      BL       delay_ms
    342                    matrix_keyboard_init();
   \   000003FA   0x.... 0x....      BL       matrix_keyboard_init
    343                    key_num=keyboard_scan();
   \   000003FE   0x.... 0x....      BL       keyboard_scan
   \   00000402   0xF8DF 0x1AD0      LDR.W    R1,??main_6+0xC
   \   00000406   0x7008             STRB     R0,[R1, #+0]
    344                    if(key_num!=255)
   \   00000408   0xF8DF 0x0AC8      LDR.W    R0,??main_6+0xC
   \   0000040C   0x7800             LDRB     R0,[R0, #+0]
   \   0000040E   0x28FF             CMP      R0,#+255
   \   00000410   0xD005             BEQ.N    ??main_30
    345                    {
    346                      key_no=key_num;
   \   00000412   0xF8DF 0x0AC0      LDR.W    R0,??main_6+0xC
   \   00000416   0x7800             LDRB     R0,[R0, #+0]
   \   00000418   0xF8DF 0x1AAC      LDR.W    R1,??main_6
   \   0000041C   0x7008             STRB     R0,[R1, #+0]
    347                    }          
    348                    LCD_P8x16Str(0,0,"Speed_L:");
   \                     ??main_30: (+1)
   \   0000041E   0xF8DF 0x2C30      LDR.W    R2,??main_18+0x18
   \   00000422   0x2100             MOVS     R1,#+0
   \   00000424   0x2000             MOVS     R0,#+0
   \   00000426   0x.... 0x....      BL       LCD_P8x16Str
    349                    LCD_P8x16_num3wei(60,0,speed_L);
   \   0000042A   0xF8DF 0x038C      LDR.W    R0,??main_0+0x44
   \   0000042E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000432   0x2100             MOVS     R1,#+0
   \   00000434   0x203C             MOVS     R0,#+60
   \   00000436   0x.... 0x....      BL       LCD_P8x16_num3wei
    350                    LCD_P8x16Str(0,2,"+:");
   \   0000043A   0xA297             ADR.N    R2,??main_23     ;; 0x2B, 0x3A, 0x00, 0x00
   \   0000043C   0x2102             MOVS     R1,#+2
   \   0000043E   0x2000             MOVS     R0,#+0
   \   00000440   0x.... 0x....      BL       LCD_P8x16Str
    351                    LCD_P8x16Str(60,2,"Key4");
   \   00000444   0xF8DF 0x2BFC      LDR.W    R2,??main_18+0xC
   \   00000448   0x2102             MOVS     R1,#+2
   \   0000044A   0x203C             MOVS     R0,#+60
   \   0000044C   0x.... 0x....      BL       LCD_P8x16Str
    352                    LCD_P8x16Str(0,4,"-:");
   \   00000450   0xA298             ADR.N    R2,??main_24     ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000452   0x2104             MOVS     R1,#+4
   \   00000454   0x2000             MOVS     R0,#+0
   \   00000456   0x.... 0x....      BL       LCD_P8x16Str
    353                    LCD_P8x16Str(60,4,"Key5");
   \   0000045A   0xF8DF 0x2BEC      LDR.W    R2,??main_18+0x10
   \   0000045E   0x2104             MOVS     R1,#+4
   \   00000460   0x203C             MOVS     R0,#+60
   \   00000462   0x.... 0x....      BL       LCD_P8x16Str
    354                    LCD_P8x16Str(0,6,"Re:");
   \   00000466   0xA294             ADR.N    R2,??main_24+0x4  ;; "Re:"
   \   00000468   0x2106             MOVS     R1,#+6
   \   0000046A   0x2000             MOVS     R0,#+0
   \   0000046C   0x.... 0x....      BL       LCD_P8x16Str
    355                    LCD_P8x16Str(60,6,"Key6");
   \   00000470   0xF8DF 0x2BD8      LDR.W    R2,??main_18+0x14
   \   00000474   0x2106             MOVS     R1,#+6
   \   00000476   0x203C             MOVS     R0,#+60
   \   00000478   0x.... 0x....      BL       LCD_P8x16Str
    356                    
    357                    if(key_no==7)
   \   0000047C   0xF8DF 0x0A48      LDR.W    R0,??main_6
   \   00000480   0x7800             LDRB     R0,[R0, #+0]
   \   00000482   0x2807             CMP      R0,#+7
   \   00000484   0xD108             BNE.N    ??main_31
    358                    {
    359                      speed_L=speed_L+5;
   \   00000486   0x48CC             LDR.N    R0,??main_0+0x44
   \   00000488   0x8800             LDRH     R0,[R0, #+0]
   \   0000048A   0x1D40             ADDS     R0,R0,#+5
   \   0000048C   0x49CA             LDR.N    R1,??main_0+0x44
   \   0000048E   0x8008             STRH     R0,[R1, #+0]
    360                      key_no=255;
   \   00000490   0x20FF             MOVS     R0,#+255
   \   00000492   0xF8DF 0x1A34      LDR.W    R1,??main_6
   \   00000496   0x7008             STRB     R0,[R1, #+0]
    361                    }
    362                  
    363                    if(key_no==8)
   \                     ??main_31: (+1)
   \   00000498   0xF8DF 0x0A2C      LDR.W    R0,??main_6
   \   0000049C   0x7800             LDRB     R0,[R0, #+0]
   \   0000049E   0x2808             CMP      R0,#+8
   \   000004A0   0xD108             BNE.N    ??main_32
    364                    {
    365                      speed_L=speed_L-5;
   \   000004A2   0x48C5             LDR.N    R0,??main_0+0x44
   \   000004A4   0x8800             LDRH     R0,[R0, #+0]
   \   000004A6   0x1F40             SUBS     R0,R0,#+5
   \   000004A8   0x49C3             LDR.N    R1,??main_0+0x44
   \   000004AA   0x8008             STRH     R0,[R1, #+0]
    366                      key_no=255;
   \   000004AC   0x20FF             MOVS     R0,#+255
   \   000004AE   0xF8DF 0x1A18      LDR.W    R1,??main_6
   \   000004B2   0x7008             STRB     R0,[R1, #+0]
    367                    }
    368                  
    369                    if(key_no==9)
   \                     ??main_32: (+1)
   \   000004B4   0xF8DF 0x0A10      LDR.W    R0,??main_6
   \   000004B8   0x7800             LDRB     R0,[R0, #+0]
   \   000004BA   0x2809             CMP      R0,#+9
   \   000004BC   0xD106             BNE.N    ??main_28
    370                    {
    371                      BK=255;
   \   000004BE   0x20FF             MOVS     R0,#+255
   \   000004C0   0x49B6             LDR.N    R1,??main_0+0x28
   \   000004C2   0x7008             STRB     R0,[R1, #+0]
    372                      key_no=255;
   \   000004C4   0x20FF             MOVS     R0,#+255
   \   000004C6   0xF8DF 0x1A00      LDR.W    R1,??main_6
   \   000004CA   0x7008             STRB     R0,[R1, #+0]
    373                    }
    374                  }
   \                     ??main_28: (+1)
   \   000004CC   0x48B3             LDR.N    R0,??main_0+0x28
   \   000004CE   0x7800             LDRB     R0,[R0, #+0]
   \   000004D0   0x2803             CMP      R0,#+3
   \   000004D2   0xD08F             BEQ.N    ??main_29
    375                  LCD_CLS();
   \   000004D4   0x.... 0x....      BL       LCD_CLS
    376                 }
    377                
    378                //4号按键按下的时候调节Kp
    379                if(key_no==4)
   \                     ??main_27: (+1)
   \   000004D8   0xF8DF 0x09EC      LDR.W    R0,??main_6
   \   000004DC   0x7800             LDRB     R0,[R0, #+0]
   \   000004DE   0x2804             CMP      R0,#+4
   \   000004E0   0xF040 0x8095      BNE.W    ??main_33
    380                 {
    381                  key_no=255;
   \   000004E4   0x20FF             MOVS     R0,#+255
   \   000004E6   0xF8DF 0x19E0      LDR.W    R1,??main_6
   \   000004EA   0x7008             STRB     R0,[R1, #+0]
    382                  BK=4;
   \   000004EC   0x2004             MOVS     R0,#+4
   \   000004EE   0x49AB             LDR.N    R1,??main_0+0x28
   \   000004F0   0x7008             STRB     R0,[R1, #+0]
    383                  LCD_CLS();
   \   000004F2   0x.... 0x....      BL       LCD_CLS
   \   000004F6   0xE083             B.N      ??main_34
    384                  while(BK==4)
    385                  {
    386                    LCD_P8x16Str(0,0,"Kp:");
   \                     ??main_35: (+1)
   \   000004F8   0xA29E             ADR.N    R2,??main_0      ;; "Kp:"
   \   000004FA   0x2100             MOVS     R1,#+0
   \   000004FC   0x2000             MOVS     R0,#+0
   \   000004FE   0x.... 0x....      BL       LCD_P8x16Str
    387                    LCD_P8x16_num3wei(60,0,(uint16)(Kp*10));
   \   00000502   0x48AF             LDR.N    R0,??main_0+0x4C
   \   00000504   0x6800             LDR      R0,[R0, #+0]
   \   00000506   0xF8DF 0x1B4C      LDR.W    R1,??main_18+0x1C  ;; 0x41200000
   \   0000050A   0x.... 0x....      BL       __aeabi_fmul
   \   0000050E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000512   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000514   0x0002             MOVS     R2,R0
   \   00000516   0x2100             MOVS     R1,#+0
   \   00000518   0x203C             MOVS     R0,#+60
   \   0000051A   0x.... 0x....      BL       LCD_P8x16_num3wei
    388                    LCD_P8x16Str(0,2,"+:");
   \   0000051E   0xA25E             ADR.N    R2,??main_23     ;; 0x2B, 0x3A, 0x00, 0x00
   \   00000520   0x2102             MOVS     R1,#+2
   \   00000522   0x2000             MOVS     R0,#+0
   \   00000524   0x.... 0x....      BL       LCD_P8x16Str
    389                    LCD_P8x16Str(60,2,"Key7");
   \   00000528   0x4A9F             LDR.N    R2,??main_0+0x34
   \   0000052A   0x2102             MOVS     R1,#+2
   \   0000052C   0x203C             MOVS     R0,#+60
   \   0000052E   0x.... 0x....      BL       LCD_P8x16Str
    390                    LCD_P8x16Str(0,4,"-:");
   \   00000532   0xA260             ADR.N    R2,??main_24     ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000534   0x2104             MOVS     R1,#+4
   \   00000536   0x2000             MOVS     R0,#+0
   \   00000538   0x.... 0x....      BL       LCD_P8x16Str
    391                    LCD_P8x16Str(60,4,"Key8");
   \   0000053C   0x4A9B             LDR.N    R2,??main_0+0x38
   \   0000053E   0x2104             MOVS     R1,#+4
   \   00000540   0x203C             MOVS     R0,#+60
   \   00000542   0x.... 0x....      BL       LCD_P8x16Str
    392                    LCD_P8x16Str(0,6,"Re:");
   \   00000546   0xA25C             ADR.N    R2,??main_24+0x4  ;; "Re:"
   \   00000548   0x2106             MOVS     R1,#+6
   \   0000054A   0x2000             MOVS     R0,#+0
   \   0000054C   0x.... 0x....      BL       LCD_P8x16Str
    393                    LCD_P8x16Str(60,6,"Key9");
   \   00000550   0x4A97             LDR.N    R2,??main_0+0x3C
   \   00000552   0x2106             MOVS     R1,#+6
   \   00000554   0x203C             MOVS     R0,#+60
   \   00000556   0x.... 0x....      BL       LCD_P8x16Str
    394                    
    395                    delay_ms(110);
   \   0000055A   0x206E             MOVS     R0,#+110
   \   0000055C   0x.... 0x....      BL       delay_ms
    396                    matrix_keyboard_init();
   \   00000560   0x.... 0x....      BL       matrix_keyboard_init
    397                    key_num=keyboard_scan();
   \   00000564   0x.... 0x....      BL       keyboard_scan
   \   00000568   0xF8DF 0x1968      LDR.W    R1,??main_6+0xC
   \   0000056C   0x7008             STRB     R0,[R1, #+0]
    398                    if(key_num!=255)
   \   0000056E   0xF8DF 0x0964      LDR.W    R0,??main_6+0xC
   \   00000572   0x7800             LDRB     R0,[R0, #+0]
   \   00000574   0x28FF             CMP      R0,#+255
   \   00000576   0xD005             BEQ.N    ??main_36
    399                    {
    400                      key_no=key_num;
   \   00000578   0xF8DF 0x0958      LDR.W    R0,??main_6+0xC
   \   0000057C   0x7800             LDRB     R0,[R0, #+0]
   \   0000057E   0xF8DF 0x1948      LDR.W    R1,??main_6
   \   00000582   0x7008             STRB     R0,[R1, #+0]
    401                    }          
    402          
    403                    if(key_no==7)
   \                     ??main_36: (+1)
   \   00000584   0xF8DF 0x0940      LDR.W    R0,??main_6
   \   00000588   0x7800             LDRB     R0,[R0, #+0]
   \   0000058A   0x2807             CMP      R0,#+7
   \   0000058C   0xD111             BNE.N    ??main_37
    404                    {
    405                      Kp=Kp+0.1;
   \   0000058E   0x488C             LDR.N    R0,??main_0+0x4C
   \   00000590   0x6800             LDR      R0,[R0, #+0]
   \   00000592   0x.... 0x....      BL       __aeabi_f2d
   \   00000596   0xF8DF 0x2AC0      LDR.W    R2,??main_18+0x20  ;; 0x9999999a
   \   0000059A   0xF8DF 0x3E20      LDR.W    R3,??main_38     ;; 0x3fb99999
   \   0000059E   0x.... 0x....      BL       __aeabi_dadd
   \   000005A2   0x.... 0x....      BL       __aeabi_d2f
   \   000005A6   0x4986             LDR.N    R1,??main_0+0x4C
   \   000005A8   0x6008             STR      R0,[R1, #+0]
    406                      key_no=255;
   \   000005AA   0x20FF             MOVS     R0,#+255
   \   000005AC   0xF8DF 0x1918      LDR.W    R1,??main_6
   \   000005B0   0x7008             STRB     R0,[R1, #+0]
    407                    }
    408                  
    409                    if(key_no==8)
   \                     ??main_37: (+1)
   \   000005B2   0xF8DF 0x0914      LDR.W    R0,??main_6
   \   000005B6   0x7800             LDRB     R0,[R0, #+0]
   \   000005B8   0x2808             CMP      R0,#+8
   \   000005BA   0xD111             BNE.N    ??main_39
    410                    {
    411                      Kp=Kp-0.1;
   \   000005BC   0x4880             LDR.N    R0,??main_0+0x4C
   \   000005BE   0x6800             LDR      R0,[R0, #+0]
   \   000005C0   0x.... 0x....      BL       __aeabi_f2d
   \   000005C4   0xF8DF 0x2A90      LDR.W    R2,??main_18+0x20  ;; 0x9999999a
   \   000005C8   0xF8DF 0x3DF4      LDR.W    R3,??main_38+0x4  ;; 0xbfb99999
   \   000005CC   0x.... 0x....      BL       __aeabi_dadd
   \   000005D0   0x.... 0x....      BL       __aeabi_d2f
   \   000005D4   0x497A             LDR.N    R1,??main_0+0x4C
   \   000005D6   0x6008             STR      R0,[R1, #+0]
    412                      key_no=255;
   \   000005D8   0x20FF             MOVS     R0,#+255
   \   000005DA   0xF8DF 0x18EC      LDR.W    R1,??main_6
   \   000005DE   0x7008             STRB     R0,[R1, #+0]
    413                    }
    414                  
    415                    if(key_no==9)
   \                     ??main_39: (+1)
   \   000005E0   0xF8DF 0x08E4      LDR.W    R0,??main_6
   \   000005E4   0x7800             LDRB     R0,[R0, #+0]
   \   000005E6   0x2809             CMP      R0,#+9
   \   000005E8   0xD10A             BNE.N    ??main_34
    416                    {
    417                      BK=255;
   \   000005EA   0x20FF             MOVS     R0,#+255
   \   000005EC   0x496B             LDR.N    R1,??main_0+0x28
   \   000005EE   0x7008             STRB     R0,[R1, #+0]
    418                      key_no=255;
   \   000005F0   0x20FF             MOVS     R0,#+255
   \   000005F2   0xF8DF 0x18D4      LDR.W    R1,??main_6
   \   000005F6   0x7008             STRB     R0,[R1, #+0]
    419                      key_num=255;//注意控制条件
   \   000005F8   0x20FF             MOVS     R0,#+255
   \   000005FA   0xF8DF 0x18D8      LDR.W    R1,??main_6+0xC
   \   000005FE   0x7008             STRB     R0,[R1, #+0]
    420                    }
    421                  }
   \                     ??main_34: (+1)
   \   00000600   0x4866             LDR.N    R0,??main_0+0x28
   \   00000602   0x7800             LDRB     R0,[R0, #+0]
   \   00000604   0x2804             CMP      R0,#+4
   \   00000606   0xF43F 0xAF77      BEQ.W    ??main_35
    422                  LCD_CLS();
   \   0000060A   0x.... 0x....      BL       LCD_CLS
    423                }
    424                //5号按键按下的时候调节Kd
    425                if(key_no==5)
   \                     ??main_33: (+1)
   \   0000060E   0xF8DF 0x08B8      LDR.W    R0,??main_6
   \   00000612   0x7800             LDRB     R0,[R0, #+0]
   \   00000614   0x2805             CMP      R0,#+5
   \   00000616   0xF040 0x809C      BNE.W    ??main_40
    426                 {
    427                  key_no=255;
   \   0000061A   0x20FF             MOVS     R0,#+255
   \   0000061C   0xF8DF 0x18A8      LDR.W    R1,??main_6
   \   00000620   0x7008             STRB     R0,[R1, #+0]
    428                  BK=5;
   \   00000622   0x2005             MOVS     R0,#+5
   \   00000624   0x495D             LDR.N    R1,??main_0+0x28
   \   00000626   0x7008             STRB     R0,[R1, #+0]
    429                  LCD_CLS();
   \   00000628   0x.... 0x....      BL       LCD_CLS
   \   0000062C   0xE08A             B.N      ??main_41
    430                  while(BK==5)
    431                  {
    432                    delay_ms(110);
   \                     ??main_42: (+1)
   \   0000062E   0x206E             MOVS     R0,#+110
   \   00000630   0x.... 0x....      BL       delay_ms
    433                    matrix_keyboard_init();
   \   00000634   0x.... 0x....      BL       matrix_keyboard_init
    434                    key_num=keyboard_scan();
   \   00000638   0x.... 0x....      BL       keyboard_scan
   \   0000063C   0xF8DF 0x1894      LDR.W    R1,??main_6+0xC
   \   00000640   0x7008             STRB     R0,[R1, #+0]
    435                    if(key_num!=255)
   \   00000642   0xF8DF 0x0890      LDR.W    R0,??main_6+0xC
   \   00000646   0x7800             LDRB     R0,[R0, #+0]
   \   00000648   0x28FF             CMP      R0,#+255
   \   0000064A   0xD005             BEQ.N    ??main_43
    436                    {
    437                      key_no=key_num;
   \   0000064C   0xF8DF 0x0884      LDR.W    R0,??main_6+0xC
   \   00000650   0x7800             LDRB     R0,[R0, #+0]
   \   00000652   0xF8DF 0x1874      LDR.W    R1,??main_6
   \   00000656   0x7008             STRB     R0,[R1, #+0]
    438                    }          
    439                    LCD_P8x16Str(0,0,"Kd:");
   \                     ??main_43: (+1)
   \   00000658   0xA247             ADR.N    R2,??main_0+0x4  ;; "Kd:"
   \   0000065A   0x2100             MOVS     R1,#+0
   \   0000065C   0x2000             MOVS     R0,#+0
   \   0000065E   0x.... 0x....      BL       LCD_P8x16Str
    440                    LCD_P8x16_num3wei(60,0,(uint16)(Kd*10));
   \   00000662   0x4859             LDR.N    R0,??main_0+0x54
   \   00000664   0x6800             LDR      R0,[R0, #+0]
   \   00000666   0xF8DF 0x19EC      LDR.W    R1,??main_18+0x1C  ;; 0x41200000
   \   0000066A   0x.... 0x....      BL       __aeabi_fmul
   \   0000066E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000672   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000674   0x0002             MOVS     R2,R0
   \   00000676   0x2100             MOVS     R1,#+0
   \   00000678   0x203C             MOVS     R0,#+60
   \   0000067A   0x.... 0x....      BL       LCD_P8x16_num3wei
    441                    LCD_P8x16Str(0,2,"+:");
   \   0000067E   0xA206             ADR.N    R2,??main_23     ;; 0x2B, 0x3A, 0x00, 0x00
   \   00000680   0x2102             MOVS     R1,#+2
   \   00000682   0x2000             MOVS     R0,#+0
   \   00000684   0x.... 0x....      BL       LCD_P8x16Str
    442                    LCD_P8x16Str(60,2,"Key4");
   \   00000688   0xF8DF 0x29B8      LDR.W    R2,??main_18+0xC
   \   0000068C   0x2102             MOVS     R1,#+2
   \   0000068E   0x203C             MOVS     R0,#+60
   \   00000690   0x.... 0x....      BL       LCD_P8x16Str
    443                    LCD_P8x16Str(0,4,"-:");
   \   00000694   0xA207             ADR.N    R2,??main_24     ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000696   0xE001             B.N      ??main_44
   \                     ??main_23:
   \   00000698   0x2B 0x3A          DC8      0x2B, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \                     ??main_44: (+1)
   \   0000069C   0x2104             MOVS     R1,#+4
   \   0000069E   0x2000             MOVS     R0,#+0
   \   000006A0   0x.... 0x....      BL       LCD_P8x16Str
    444                    LCD_P8x16Str(60,4,"Key5");
   \   000006A4   0xF8DF 0x29A0      LDR.W    R2,??main_18+0x10
   \   000006A8   0x2104             MOVS     R1,#+4
   \   000006AA   0x203C             MOVS     R0,#+60
   \   000006AC   0x.... 0x....      BL       LCD_P8x16Str
    445                    LCD_P8x16Str(0,6,"Re:");
   \   000006B0   0xA201             ADR.N    R2,??main_24+0x4  ;; "Re:"
   \   000006B2   0xE003             B.N      ??main_45
   \                     ??main_24:
   \   000006B4   0x2D 0x3A          DC8      0x2D, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   000006B8   0x52 0x65          DC8      "Re:"
   \              0x3A 0x00    
   \                     ??main_45: (+1)
   \   000006BC   0x2106             MOVS     R1,#+6
   \   000006BE   0x2000             MOVS     R0,#+0
   \   000006C0   0x.... 0x....      BL       LCD_P8x16Str
    446                    LCD_P8x16Str(60,6,"Key6");
   \   000006C4   0xF8DF 0x2984      LDR.W    R2,??main_18+0x14
   \   000006C8   0x2106             MOVS     R1,#+6
   \   000006CA   0x203C             MOVS     R0,#+60
   \   000006CC   0x.... 0x....      BL       LCD_P8x16Str
    447                    
    448                    if(key_no==7)
   \   000006D0   0xF8DF 0x07F4      LDR.W    R0,??main_6
   \   000006D4   0x7800             LDRB     R0,[R0, #+0]
   \   000006D6   0x2807             CMP      R0,#+7
   \   000006D8   0xD111             BNE.N    ??main_46
    449                    {
    450                      Kd=Kd+0.1;
   \   000006DA   0x483B             LDR.N    R0,??main_0+0x54
   \   000006DC   0x6800             LDR      R0,[R0, #+0]
   \   000006DE   0x.... 0x....      BL       __aeabi_f2d
   \   000006E2   0xF8DF 0x2974      LDR.W    R2,??main_18+0x20  ;; 0x9999999a
   \   000006E6   0xF8DF 0x3CD4      LDR.W    R3,??main_38     ;; 0x3fb99999
   \   000006EA   0x.... 0x....      BL       __aeabi_dadd
   \   000006EE   0x.... 0x....      BL       __aeabi_d2f
   \   000006F2   0x4935             LDR.N    R1,??main_0+0x54
   \   000006F4   0x6008             STR      R0,[R1, #+0]
    451                      key_no=255;
   \   000006F6   0x20FF             MOVS     R0,#+255
   \   000006F8   0xF8DF 0x17CC      LDR.W    R1,??main_6
   \   000006FC   0x7008             STRB     R0,[R1, #+0]
    452                    }
    453                  
    454                    if(key_no==8)
   \                     ??main_46: (+1)
   \   000006FE   0xF8DF 0x07C8      LDR.W    R0,??main_6
   \   00000702   0x7800             LDRB     R0,[R0, #+0]
   \   00000704   0x2808             CMP      R0,#+8
   \   00000706   0xD111             BNE.N    ??main_47
    455                    {
    456                      Kd=Kd-0.1;
   \   00000708   0x482F             LDR.N    R0,??main_0+0x54
   \   0000070A   0x6800             LDR      R0,[R0, #+0]
   \   0000070C   0x.... 0x....      BL       __aeabi_f2d
   \   00000710   0xF8DF 0x2944      LDR.W    R2,??main_18+0x20  ;; 0x9999999a
   \   00000714   0xF8DF 0x3CA8      LDR.W    R3,??main_38+0x4  ;; 0xbfb99999
   \   00000718   0x.... 0x....      BL       __aeabi_dadd
   \   0000071C   0x.... 0x....      BL       __aeabi_d2f
   \   00000720   0x4929             LDR.N    R1,??main_0+0x54
   \   00000722   0x6008             STR      R0,[R1, #+0]
    457                      key_no=255;
   \   00000724   0x20FF             MOVS     R0,#+255
   \   00000726   0xF8DF 0x17A0      LDR.W    R1,??main_6
   \   0000072A   0x7008             STRB     R0,[R1, #+0]
    458                    }
    459                  
    460                    if(key_no==9)
   \                     ??main_47: (+1)
   \   0000072C   0xF8DF 0x0798      LDR.W    R0,??main_6
   \   00000730   0x7800             LDRB     R0,[R0, #+0]
   \   00000732   0x2809             CMP      R0,#+9
   \   00000734   0xD106             BNE.N    ??main_41
    461                    {
    462                      BK=255;
   \   00000736   0x20FF             MOVS     R0,#+255
   \   00000738   0x4918             LDR.N    R1,??main_0+0x28
   \   0000073A   0x7008             STRB     R0,[R1, #+0]
    463                      key_no=255;
   \   0000073C   0x20FF             MOVS     R0,#+255
   \   0000073E   0xF8DF 0x1788      LDR.W    R1,??main_6
   \   00000742   0x7008             STRB     R0,[R1, #+0]
    464                    }
    465                  }
   \                     ??main_41: (+1)
   \   00000744   0x4815             LDR.N    R0,??main_0+0x28
   \   00000746   0x7800             LDRB     R0,[R0, #+0]
   \   00000748   0x2805             CMP      R0,#+5
   \   0000074A   0xF43F 0xAF70      BEQ.W    ??main_42
    466                  LCD_CLS();
   \   0000074E   0x.... 0x....      BL       LCD_CLS
    467                 }
    468                //6号按键按下的时候调节QPX_SET
    469                if(key_no==6)
   \                     ??main_40: (+1)
   \   00000752   0xF8DF 0x0774      LDR.W    R0,??main_6
   \   00000756   0x7800             LDRB     R0,[R0, #+0]
   \   00000758   0x2806             CMP      R0,#+6
   \   0000075A   0xF040 0x80BB      BNE.W    ??main_48
    470                 {
    471                  key_no=255;
   \   0000075E   0x20FF             MOVS     R0,#+255
   \   00000760   0xF8DF 0x1764      LDR.W    R1,??main_6
   \   00000764   0x7008             STRB     R0,[R1, #+0]
    472                  BK=6;
   \   00000766   0x2006             MOVS     R0,#+6
   \   00000768   0x490C             LDR.N    R1,??main_0+0x28
   \   0000076A   0x7008             STRB     R0,[R1, #+0]
    473                  LCD_CLS();
   \   0000076C   0x.... 0x....      BL       LCD_CLS
   \   00000770   0xE0A9             B.N      ??main_49
   \   00000772   0xBF00             Nop      
   \                     ??main_0:
   \   00000774   0x4B 0x70          DC8      "Kp:"
   \              0x3A 0x00    
   \   00000778   0x4B 0x64          DC8      "Kd:"
   \              0x3A 0x00    
   \   0000077C   0x........         DC32     Pixel_F
   \   00000780   0x........         DC32     Pixel_Z
   \   00000784   0x........         DC32     `?<Constant "mode:1">`
   \   00000788   0x........         DC32     `?<Constant "s_H:2">`
   \   0000078C   0x........         DC32     `?<Constant "s_L:3">`
   \   00000790   0x........         DC32     `?<Constant "Kp:4">`
   \   00000794   0x........         DC32     `?<Constant "Kd:5">`
   \   00000798   0x........         DC32     `?<Constant "QPX_SET:6">`
   \   0000079C   0x........         DC32     BK
   \   000007A0   0x........         DC32     `?<Constant "mode:">`
   \   000007A4   0x........         DC32     mode
   \   000007A8   0x........         DC32     `?<Constant "Key7">`
   \   000007AC   0x........         DC32     `?<Constant "Key8">`
   \   000007B0   0x........         DC32     `?<Constant "Key9">`
   \   000007B4   0x........         DC32     speed_H
   \   000007B8   0x........         DC32     speed_L
   \   000007BC   0x419D999A         DC32     0x419d999a
   \   000007C0   0x........         DC32     Kp
   \   000007C4   0x41A80000         DC32     0x41a80000
   \   000007C8   0x........         DC32     Kd
   \   000007CC   0x3F4CCCCD         DC32     0x3f4ccccd
   \   000007D0   0x........         DC32     Kmax
   \   000007D4   0x3F19999A         DC32     0x3f19999a
   \   000007D8   0x........         DC32     Kmin
   \   000007DC   0x41900000         DC32     0x41900000
   \   000007E0   0x3F333333         DC32     0x3f333333
    474                  while(BK==6)
    475                  {
    476                    delay_ms(110);
   \                     ??main_50: (+1)
   \   000007E4   0x206E             MOVS     R0,#+110
   \   000007E6   0x.... 0x....      BL       delay_ms
    477                    matrix_keyboard_init();
   \   000007EA   0x.... 0x....      BL       matrix_keyboard_init
    478                    key_num=keyboard_scan();
   \   000007EE   0x.... 0x....      BL       keyboard_scan
   \   000007F2   0xF8DF 0x16E0      LDR.W    R1,??main_6+0xC
   \   000007F6   0x7008             STRB     R0,[R1, #+0]
    479                    if(key_num!=255)
   \   000007F8   0xF8DF 0x06D8      LDR.W    R0,??main_6+0xC
   \   000007FC   0x7800             LDRB     R0,[R0, #+0]
   \   000007FE   0x28FF             CMP      R0,#+255
   \   00000800   0xD005             BEQ.N    ??main_51
    480                    {
    481                      key_no=key_num;
   \   00000802   0xF8DF 0x06D0      LDR.W    R0,??main_6+0xC
   \   00000806   0x7800             LDRB     R0,[R0, #+0]
   \   00000808   0xF8DF 0x16BC      LDR.W    R1,??main_6
   \   0000080C   0x7008             STRB     R0,[R1, #+0]
    482                    }          
    483                    LCD_P8x16Str(0,0,"QPX_S:");
   \                     ??main_51: (+1)
   \   0000080E   0xF8DF 0x284C      LDR.W    R2,??main_18+0x24
   \   00000812   0x2100             MOVS     R1,#+0
   \   00000814   0x2000             MOVS     R0,#+0
   \   00000816   0x.... 0x....      BL       LCD_P8x16Str
    484                    LCD_P8x16_num3wei(60,0,QPX_SET);
   \   0000081A   0xF8DF 0x0844      LDR.W    R0,??main_18+0x28
   \   0000081E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000822   0x2100             MOVS     R1,#+0
   \   00000824   0x203C             MOVS     R0,#+60
   \   00000826   0x.... 0x....      BL       LCD_P8x16_num3wei
    485                    LCD_P8x16Str(0,2,"+:");
   \   0000082A   0xA2CD             ADR.N    R2,??main_52     ;; 0x2B, 0x3A, 0x00, 0x00
   \   0000082C   0x2102             MOVS     R1,#+2
   \   0000082E   0x2000             MOVS     R0,#+0
   \   00000830   0x.... 0x....      BL       LCD_P8x16Str
    486                    LCD_P8x16Str(60,2,"Key4");
   \   00000834   0xF8DF 0x280C      LDR.W    R2,??main_18+0xC
   \   00000838   0x2102             MOVS     R1,#+2
   \   0000083A   0x203C             MOVS     R0,#+60
   \   0000083C   0x.... 0x....      BL       LCD_P8x16Str
    487                    LCD_P8x16Str(0,4,"-:");
   \   00000840   0xA2E6             ADR.N    R2,??main_53     ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000842   0x2104             MOVS     R1,#+4
   \   00000844   0x2000             MOVS     R0,#+0
   \   00000846   0x.... 0x....      BL       LCD_P8x16Str
    488                    LCD_P8x16Str(60,4,"Key5");
   \   0000084A   0xF8DF 0x27FC      LDR.W    R2,??main_18+0x10
   \   0000084E   0x2104             MOVS     R1,#+4
   \   00000850   0x203C             MOVS     R0,#+60
   \   00000852   0x.... 0x....      BL       LCD_P8x16Str
    489                    LCD_P8x16Str(0,6,"Re:");
   \   00000856   0xA2E2             ADR.N    R2,??main_53+0x4  ;; "Re:"
   \   00000858   0x2106             MOVS     R1,#+6
   \   0000085A   0x2000             MOVS     R0,#+0
   \   0000085C   0x.... 0x....      BL       LCD_P8x16Str
    490                    LCD_P8x16Str(60,6,"Key6");
   \   00000860   0xF8DF 0x27E8      LDR.W    R2,??main_18+0x14
   \   00000864   0x2106             MOVS     R1,#+6
   \   00000866   0x203C             MOVS     R0,#+60
   \   00000868   0x.... 0x....      BL       LCD_P8x16Str
    491                    
    492                    if(key_no==7)
   \   0000086C   0xF8DF 0x0658      LDR.W    R0,??main_6
   \   00000870   0x7800             LDRB     R0,[R0, #+0]
   \   00000872   0x2807             CMP      R0,#+7
   \   00000874   0xD10A             BNE.N    ??main_54
    493                    {
    494                      QPX_SET=QPX_SET+1;
   \   00000876   0xF8DF 0x07E8      LDR.W    R0,??main_18+0x28
   \   0000087A   0x8800             LDRH     R0,[R0, #+0]
   \   0000087C   0x1C40             ADDS     R0,R0,#+1
   \   0000087E   0xF8DF 0x17E0      LDR.W    R1,??main_18+0x28
   \   00000882   0x8008             STRH     R0,[R1, #+0]
    495                      key_no=255;
   \   00000884   0x20FF             MOVS     R0,#+255
   \   00000886   0xF8DF 0x1640      LDR.W    R1,??main_6
   \   0000088A   0x7008             STRB     R0,[R1, #+0]
    496                    }
    497                  
    498                    if(key_no==8)
   \                     ??main_54: (+1)
   \   0000088C   0xF8DF 0x0638      LDR.W    R0,??main_6
   \   00000890   0x7800             LDRB     R0,[R0, #+0]
   \   00000892   0x2808             CMP      R0,#+8
   \   00000894   0xD10A             BNE.N    ??main_55
    499                    {
    500                      QPX_SET=QPX_SET-1;
   \   00000896   0xF8DF 0x07C8      LDR.W    R0,??main_18+0x28
   \   0000089A   0x8800             LDRH     R0,[R0, #+0]
   \   0000089C   0x1E40             SUBS     R0,R0,#+1
   \   0000089E   0xF8DF 0x17C0      LDR.W    R1,??main_18+0x28
   \   000008A2   0x8008             STRH     R0,[R1, #+0]
    501                      key_no=255;
   \   000008A4   0x20FF             MOVS     R0,#+255
   \   000008A6   0xF8DF 0x1620      LDR.W    R1,??main_6
   \   000008AA   0x7008             STRB     R0,[R1, #+0]
    502                    }
    503                  
    504                    if(key_no==9)
   \                     ??main_55: (+1)
   \   000008AC   0xF8DF 0x0618      LDR.W    R0,??main_6
   \   000008B0   0x7800             LDRB     R0,[R0, #+0]
   \   000008B2   0x2809             CMP      R0,#+9
   \   000008B4   0xD107             BNE.N    ??main_49
    505                    {
    506                      BK=255;
   \   000008B6   0x20FF             MOVS     R0,#+255
   \   000008B8   0xF8DF 0x17A8      LDR.W    R1,??main_18+0x2C
   \   000008BC   0x7008             STRB     R0,[R1, #+0]
    507                      key_no=255;
   \   000008BE   0x20FF             MOVS     R0,#+255
   \   000008C0   0xF8DF 0x1604      LDR.W    R1,??main_6
   \   000008C4   0x7008             STRB     R0,[R1, #+0]
    508                    }
    509                  }
   \                     ??main_49: (+1)
   \   000008C6   0xF8DF 0x079C      LDR.W    R0,??main_18+0x2C
   \   000008CA   0x7800             LDRB     R0,[R0, #+0]
   \   000008CC   0x2806             CMP      R0,#+6
   \   000008CE   0xD089             BEQ.N    ??main_50
    510                  LCD_CLS();
   \   000008D0   0x.... 0x....      BL       LCD_CLS
    511                 }
    512               //10号按键按下 采集数据
    513               if(key_no==10)
   \                     ??main_48: (+1)
   \   000008D4   0xF8DF 0x05F0      LDR.W    R0,??main_6
   \   000008D8   0x7800             LDRB     R0,[R0, #+0]
   \   000008DA   0x280A             CMP      R0,#+10
   \   000008DC   0xF47F 0xABAC      BNE.W    ??main_5
    514               {
    515                 key_no=255;
   \   000008E0   0x20FF             MOVS     R0,#+255
   \   000008E2   0xF8DF 0x15E4      LDR.W    R1,??main_6
   \   000008E6   0x7008             STRB     R0,[R1, #+0]
    516                 LCD_CLS();
   \   000008E8   0x.... 0x....      BL       LCD_CLS
    517                 break;
    518               }
    519             }   
    520             
    521             PID_SetKpid(Sp,Si,Sd);
   \   000008EC   0xF8DF 0x0778      LDR.W    R0,??main_18+0x30
   \   000008F0   0x6802             LDR      R2,[R0, #+0]
   \   000008F2   0xF8DF 0x0778      LDR.W    R0,??main_18+0x34
   \   000008F6   0x6801             LDR      R1,[R0, #+0]
   \   000008F8   0xF8DF 0x0774      LDR.W    R0,??main_18+0x38
   \   000008FC   0x6800             LDR      R0,[R0, #+0]
   \   000008FE   0x.... 0x....      BL       PID_SetKpid
    522             
    523             //-----------------------------------------------------------------
    524             //--------------------------一轮 按键调参--------------------------
    525             //-----------------------------------------------------------------
    526             while(1)
    527             { 
    528                //防止跳一轮调参
    529                delay_ms(250);
   \                     ??main_56: (+1)
   \   00000902   0x20FA             MOVS     R0,#+250
   \   00000904   0x.... 0x....      BL       delay_ms
    530                //user GUI
    531                LCD_P8x16Str(0,0,"Psha:1");
   \   00000908   0xF8DF 0x2768      LDR.W    R2,??main_18+0x3C
   \   0000090C   0x2100             MOVS     R1,#+0
   \   0000090E   0x2000             MOVS     R0,#+0
   \   00000910   0x.... 0x....      BL       LCD_P8x16Str
    532                LCD_P8x16Str(60,0,"Prz:2");
   \   00000914   0xF8DF 0x2760      LDR.W    R2,??main_18+0x40
   \   00000918   0x2100             MOVS     R1,#+0
   \   0000091A   0x203C             MOVS     R0,#+60
   \   0000091C   0x.... 0x....      BL       LCD_P8x16Str
    533                LCD_P8x16Str(0,2,"PMAX:3");
   \   00000920   0xF8DF 0x2758      LDR.W    R2,??main_18+0x44
   \   00000924   0x2102             MOVS     R1,#+2
   \   00000926   0x2000             MOVS     R0,#+0
   \   00000928   0x.... 0x....      BL       LCD_P8x16Str
    534                LCD_P8x16Str(0,4,"ZHONG:4");
   \   0000092C   0xF8DF 0x2750      LDR.W    R2,??main_18+0x48
   \   00000930   0x2104             MOVS     R1,#+4
   \   00000932   0x2000             MOVS     R0,#+0
   \   00000934   0x.... 0x....      BL       LCD_P8x16Str
    535                LCD_P8x16Str(60,4,"xianfu:5");
   \   00000938   0xF8DF 0x2748      LDR.W    R2,??main_18+0x4C
   \   0000093C   0x2104             MOVS     R1,#+4
   \   0000093E   0x203C             MOVS     R0,#+60
   \   00000940   0x.... 0x....      BL       LCD_P8x16Str
    536                LCD_P8x16Str(0,6,"PO_ct:6");
   \   00000944   0xF8DF 0x2740      LDR.W    R2,??main_18+0x50
   \   00000948   0x2106             MOVS     R1,#+6
   \   0000094A   0x2000             MOVS     R0,#+0
   \   0000094C   0x.... 0x....      BL       LCD_P8x16Str
    537                
    538                matrix_keyboard_init();
   \   00000950   0x.... 0x....      BL       matrix_keyboard_init
    539                key_no=keyboard_scan();
   \   00000954   0x.... 0x....      BL       keyboard_scan
   \   00000958   0xF8DF 0x156C      LDR.W    R1,??main_6
   \   0000095C   0x7008             STRB     R0,[R1, #+0]
    540                
    541                delay_ms(110);
   \   0000095E   0x206E             MOVS     R0,#+110
   \   00000960   0x.... 0x....      BL       delay_ms
    542          
    543                //1号按键按下的时候调节Psha
    544                if(key_no==1)
   \   00000964   0xF8DF 0x0560      LDR.W    R0,??main_6
   \   00000968   0x7800             LDRB     R0,[R0, #+0]
   \   0000096A   0x2801             CMP      R0,#+1
   \   0000096C   0xF040 0x8083      BNE.W    ??main_57
    545                 {
    546                  key_no=255;
   \   00000970   0x20FF             MOVS     R0,#+255
   \   00000972   0xF8DF 0x1554      LDR.W    R1,??main_6
   \   00000976   0x7008             STRB     R0,[R1, #+0]
    547                  BK=1;
   \   00000978   0x2001             MOVS     R0,#+1
   \   0000097A   0xF8DF 0x16E8      LDR.W    R1,??main_18+0x2C
   \   0000097E   0x7008             STRB     R0,[R1, #+0]
    548                  LCD_CLS();
   \   00000980   0x.... 0x....      BL       LCD_CLS
   \   00000984   0xE070             B.N      ??main_58
    549                  while(BK==1)
    550                  {
    551                    delay_ms(110);
   \                     ??main_59: (+1)
   \   00000986   0x206E             MOVS     R0,#+110
   \   00000988   0x.... 0x....      BL       delay_ms
    552                    matrix_keyboard_init();
   \   0000098C   0x.... 0x....      BL       matrix_keyboard_init
    553                    key_num=keyboard_scan();
   \   00000990   0x.... 0x....      BL       keyboard_scan
   \   00000994   0xF8DF 0x153C      LDR.W    R1,??main_6+0xC
   \   00000998   0x7008             STRB     R0,[R1, #+0]
    554                    if(key_num!=255)
   \   0000099A   0xF8DF 0x0538      LDR.W    R0,??main_6+0xC
   \   0000099E   0x7800             LDRB     R0,[R0, #+0]
   \   000009A0   0x28FF             CMP      R0,#+255
   \   000009A2   0xD005             BEQ.N    ??main_60
    555                    {
    556                      key_no=key_num;
   \   000009A4   0xF8DF 0x052C      LDR.W    R0,??main_6+0xC
   \   000009A8   0x7800             LDRB     R0,[R0, #+0]
   \   000009AA   0xF8DF 0x151C      LDR.W    R1,??main_6
   \   000009AE   0x7008             STRB     R0,[R1, #+0]
    557                    }          
    558                    LCD_P8x16Str(0,0,"Psha:");
   \                     ??main_60: (+1)
   \   000009B0   0xF8DF 0x26D8      LDR.W    R2,??main_18+0x54
   \   000009B4   0x2100             MOVS     R1,#+0
   \   000009B6   0x2000             MOVS     R0,#+0
   \   000009B8   0x.... 0x....      BL       LCD_P8x16Str
    559                    LCD_P8x16_num3wei(60,0,Psha);
   \   000009BC   0xF8DF 0x0654      LDR.W    R0,??main_15
   \   000009C0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000009C4   0x2100             MOVS     R1,#+0
   \   000009C6   0x203C             MOVS     R0,#+60
   \   000009C8   0x.... 0x....      BL       LCD_P8x16_num3wei
    560                    LCD_P8x16Str(0,2,"+:");
   \   000009CC   0xA264             ADR.N    R2,??main_52     ;; 0x2B, 0x3A, 0x00, 0x00
   \   000009CE   0x2102             MOVS     R1,#+2
   \   000009D0   0x2000             MOVS     R0,#+0
   \   000009D2   0x.... 0x....      BL       LCD_P8x16Str
    561                    LCD_P8x16Str(60,2,"Key4");
   \   000009D6   0xF8DF 0x266C      LDR.W    R2,??main_18+0xC
   \   000009DA   0x2102             MOVS     R1,#+2
   \   000009DC   0x203C             MOVS     R0,#+60
   \   000009DE   0x.... 0x....      BL       LCD_P8x16Str
    562                    LCD_P8x16Str(0,4,"-:");
   \   000009E2   0xA27E             ADR.N    R2,??main_53     ;; 0x2D, 0x3A, 0x00, 0x00
   \   000009E4   0x2104             MOVS     R1,#+4
   \   000009E6   0x2000             MOVS     R0,#+0
   \   000009E8   0x.... 0x....      BL       LCD_P8x16Str
    563                    LCD_P8x16Str(60,4,"Key5");
   \   000009EC   0xF8DF 0x2658      LDR.W    R2,??main_18+0x10
   \   000009F0   0x2104             MOVS     R1,#+4
   \   000009F2   0x203C             MOVS     R0,#+60
   \   000009F4   0x.... 0x....      BL       LCD_P8x16Str
    564                    LCD_P8x16Str(0,6,"Re:");
   \   000009F8   0xA279             ADR.N    R2,??main_53+0x4  ;; "Re:"
   \   000009FA   0x2106             MOVS     R1,#+6
   \   000009FC   0x2000             MOVS     R0,#+0
   \   000009FE   0x.... 0x....      BL       LCD_P8x16Str
    565                    LCD_P8x16Str(60,6,"Key6");
   \   00000A02   0xF8DF 0x2648      LDR.W    R2,??main_18+0x14
   \   00000A06   0x2106             MOVS     R1,#+6
   \   00000A08   0x203C             MOVS     R0,#+60
   \   00000A0A   0x.... 0x....      BL       LCD_P8x16Str
    566                    
    567                    if(key_no==7)
   \   00000A0E   0xF8DF 0x04B8      LDR.W    R0,??main_6
   \   00000A12   0x7800             LDRB     R0,[R0, #+0]
   \   00000A14   0x2807             CMP      R0,#+7
   \   00000A16   0xD10A             BNE.N    ??main_61
    568                    {
    569                      Psha=Psha+5;
   \   00000A18   0xF8DF 0x05F8      LDR.W    R0,??main_15
   \   00000A1C   0x8800             LDRH     R0,[R0, #+0]
   \   00000A1E   0x1D40             ADDS     R0,R0,#+5
   \   00000A20   0xF8DF 0x15F0      LDR.W    R1,??main_15
   \   00000A24   0x8008             STRH     R0,[R1, #+0]
    570                      key_no=255;
   \   00000A26   0x20FF             MOVS     R0,#+255
   \   00000A28   0xF8DF 0x149C      LDR.W    R1,??main_6
   \   00000A2C   0x7008             STRB     R0,[R1, #+0]
    571                    }
    572                  
    573                    if(key_no==8)
   \                     ??main_61: (+1)
   \   00000A2E   0xF8DF 0x0498      LDR.W    R0,??main_6
   \   00000A32   0x7800             LDRB     R0,[R0, #+0]
   \   00000A34   0x2808             CMP      R0,#+8
   \   00000A36   0xD10A             BNE.N    ??main_62
    574                    {
    575                      Psha=Psha-5;
   \   00000A38   0xF8DF 0x05D8      LDR.W    R0,??main_15
   \   00000A3C   0x8800             LDRH     R0,[R0, #+0]
   \   00000A3E   0x1F40             SUBS     R0,R0,#+5
   \   00000A40   0xF8DF 0x15D0      LDR.W    R1,??main_15
   \   00000A44   0x8008             STRH     R0,[R1, #+0]
    576                      key_no=255;
   \   00000A46   0x20FF             MOVS     R0,#+255
   \   00000A48   0xF8DF 0x147C      LDR.W    R1,??main_6
   \   00000A4C   0x7008             STRB     R0,[R1, #+0]
    577                    }
    578                  
    579                    if(key_no==9)
   \                     ??main_62: (+1)
   \   00000A4E   0xF8DF 0x0478      LDR.W    R0,??main_6
   \   00000A52   0x7800             LDRB     R0,[R0, #+0]
   \   00000A54   0x2809             CMP      R0,#+9
   \   00000A56   0xD107             BNE.N    ??main_58
    580                    {
    581                      BK=255;
   \   00000A58   0x20FF             MOVS     R0,#+255
   \   00000A5A   0xF8DF 0x1608      LDR.W    R1,??main_18+0x2C
   \   00000A5E   0x7008             STRB     R0,[R1, #+0]
    582                      key_no=255;
   \   00000A60   0x20FF             MOVS     R0,#+255
   \   00000A62   0xF8DF 0x1464      LDR.W    R1,??main_6
   \   00000A66   0x7008             STRB     R0,[R1, #+0]
    583                    }
    584                  }
   \                     ??main_58: (+1)
   \   00000A68   0xF8DF 0x05F8      LDR.W    R0,??main_18+0x2C
   \   00000A6C   0x7800             LDRB     R0,[R0, #+0]
   \   00000A6E   0x2801             CMP      R0,#+1
   \   00000A70   0xD089             BEQ.N    ??main_59
    585                  LCD_CLS();
   \   00000A72   0x.... 0x....      BL       LCD_CLS
    586                 }
    587                
    588                //2号按键按下的时候调节Prz
    589                if(key_no==2)
   \                     ??main_57: (+1)
   \   00000A76   0xF8DF 0x0450      LDR.W    R0,??main_6
   \   00000A7A   0x7800             LDRB     R0,[R0, #+0]
   \   00000A7C   0x2802             CMP      R0,#+2
   \   00000A7E   0xF040 0x8089      BNE.W    ??main_63
    590                 {
    591                  key_no=255;
   \   00000A82   0x20FF             MOVS     R0,#+255
   \   00000A84   0xF8DF 0x1440      LDR.W    R1,??main_6
   \   00000A88   0x7008             STRB     R0,[R1, #+0]
    592                  BK=2;
   \   00000A8A   0x2002             MOVS     R0,#+2
   \   00000A8C   0xF8DF 0x15D4      LDR.W    R1,??main_18+0x2C
   \   00000A90   0x7008             STRB     R0,[R1, #+0]
    593                  LCD_CLS();
   \   00000A92   0x.... 0x....      BL       LCD_CLS
   \   00000A96   0xE076             B.N      ??main_64
    594                  while(BK==2)
    595                  {
    596                    delay_ms(110);
   \                     ??main_65: (+1)
   \   00000A98   0x206E             MOVS     R0,#+110
   \   00000A9A   0x.... 0x....      BL       delay_ms
    597                    matrix_keyboard_init();
   \   00000A9E   0x.... 0x....      BL       matrix_keyboard_init
    598                    key_num=keyboard_scan();
   \   00000AA2   0x.... 0x....      BL       keyboard_scan
   \   00000AA6   0xF8DF 0x142C      LDR.W    R1,??main_6+0xC
   \   00000AAA   0x7008             STRB     R0,[R1, #+0]
    599                    if(key_num!=255)
   \   00000AAC   0xF8DF 0x0424      LDR.W    R0,??main_6+0xC
   \   00000AB0   0x7800             LDRB     R0,[R0, #+0]
   \   00000AB2   0x28FF             CMP      R0,#+255
   \   00000AB4   0xD005             BEQ.N    ??main_66
    600                    {
    601                      key_no=key_num;
   \   00000AB6   0xF8DF 0x041C      LDR.W    R0,??main_6+0xC
   \   00000ABA   0x7800             LDRB     R0,[R0, #+0]
   \   00000ABC   0xF8DF 0x1408      LDR.W    R1,??main_6
   \   00000AC0   0x7008             STRB     R0,[R1, #+0]
    602                    }          
    603                    LCD_P8x16Str(0,0,"Prz:");
   \                     ??main_66: (+1)
   \   00000AC2   0xF8DF 0x25CC      LDR.W    R2,??main_18+0x58
   \   00000AC6   0x2100             MOVS     R1,#+0
   \   00000AC8   0x2000             MOVS     R0,#+0
   \   00000ACA   0x.... 0x....      BL       LCD_P8x16Str
    604                    LCD_P8x16_num3wei(60,0,Abs(Prz));
   \   00000ACE   0xF8DF 0x0548      LDR.W    R0,??main_15+0x4
   \   00000AD2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000AD6   0x.... 0x....      BL       Abs
   \   00000ADA   0x0002             MOVS     R2,R0
   \   00000ADC   0x2100             MOVS     R1,#+0
   \   00000ADE   0x203C             MOVS     R0,#+60
   \   00000AE0   0x.... 0x....      BL       LCD_P8x16_num3wei
    605                    LCD_P8x16Str(0,2,"+:");
   \   00000AE4   0xA21E             ADR.N    R2,??main_52     ;; 0x2B, 0x3A, 0x00, 0x00
   \   00000AE6   0x2102             MOVS     R1,#+2
   \   00000AE8   0x2000             MOVS     R0,#+0
   \   00000AEA   0x.... 0x....      BL       LCD_P8x16Str
    606                    LCD_P8x16Str(60,2,"Key4");
   \   00000AEE   0xF8DF 0x2554      LDR.W    R2,??main_18+0xC
   \   00000AF2   0x2102             MOVS     R1,#+2
   \   00000AF4   0x203C             MOVS     R0,#+60
   \   00000AF6   0x.... 0x....      BL       LCD_P8x16Str
    607                    LCD_P8x16Str(0,4,"-:");
   \   00000AFA   0xA238             ADR.N    R2,??main_53     ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000AFC   0x2104             MOVS     R1,#+4
   \   00000AFE   0x2000             MOVS     R0,#+0
   \   00000B00   0x.... 0x....      BL       LCD_P8x16Str
    608                    LCD_P8x16Str(60,4,"Key5");
   \   00000B04   0xF8DF 0x2540      LDR.W    R2,??main_18+0x10
   \   00000B08   0x2104             MOVS     R1,#+4
   \   00000B0A   0x203C             MOVS     R0,#+60
   \   00000B0C   0x.... 0x....      BL       LCD_P8x16Str
    609                    LCD_P8x16Str(0,6,"Re:");
   \   00000B10   0xA233             ADR.N    R2,??main_53+0x4  ;; "Re:"
   \   00000B12   0x2106             MOVS     R1,#+6
   \   00000B14   0x2000             MOVS     R0,#+0
   \   00000B16   0x.... 0x....      BL       LCD_P8x16Str
    610                    LCD_P8x16Str(60,6,"Key6");
   \   00000B1A   0xF8DF 0x2530      LDR.W    R2,??main_18+0x14
   \   00000B1E   0x2106             MOVS     R1,#+6
   \   00000B20   0x203C             MOVS     R0,#+60
   \   00000B22   0x.... 0x....      BL       LCD_P8x16Str
    611                    
    612                    if(key_no==7)
   \   00000B26   0xF8DF 0x03A0      LDR.W    R0,??main_6
   \   00000B2A   0x7800             LDRB     R0,[R0, #+0]
   \   00000B2C   0x2807             CMP      R0,#+7
   \   00000B2E   0xD10A             BNE.N    ??main_67
    613                    {
    614                      Prz=Prz+5;
   \   00000B30   0xF8DF 0x04E4      LDR.W    R0,??main_15+0x4
   \   00000B34   0x8800             LDRH     R0,[R0, #+0]
   \   00000B36   0x1D40             ADDS     R0,R0,#+5
   \   00000B38   0xF8DF 0x14DC      LDR.W    R1,??main_15+0x4
   \   00000B3C   0x8008             STRH     R0,[R1, #+0]
    615                      key_no=255;
   \   00000B3E   0x20FF             MOVS     R0,#+255
   \   00000B40   0xF8DF 0x1384      LDR.W    R1,??main_6
   \   00000B44   0x7008             STRB     R0,[R1, #+0]
    616                    }
    617                  
    618                    if(key_no==8)
   \                     ??main_67: (+1)
   \   00000B46   0xF8DF 0x0380      LDR.W    R0,??main_6
   \   00000B4A   0x7800             LDRB     R0,[R0, #+0]
   \   00000B4C   0x2808             CMP      R0,#+8
   \   00000B4E   0xD10E             BNE.N    ??main_68
    619                    {
    620                      Prz=Prz-5;
   \   00000B50   0xF8DF 0x04C4      LDR.W    R0,??main_15+0x4
   \   00000B54   0x8800             LDRH     R0,[R0, #+0]
   \   00000B56   0x1F40             SUBS     R0,R0,#+5
   \   00000B58   0xF8DF 0x14BC      LDR.W    R1,??main_15+0x4
   \   00000B5C   0xE002             B.N      ??main_69
   \   00000B5E   0xBF00             Nop      
   \                     ??main_52:
   \   00000B60   0x2B 0x3A          DC8      0x2B, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \                     ??main_69: (+1)
   \   00000B64   0x8008             STRH     R0,[R1, #+0]
    621                      key_no=255;
   \   00000B66   0x20FF             MOVS     R0,#+255
   \   00000B68   0xF8DF 0x135C      LDR.W    R1,??main_6
   \   00000B6C   0x7008             STRB     R0,[R1, #+0]
    622                    }
    623                  
    624                    if(key_no==9)
   \                     ??main_68: (+1)
   \   00000B6E   0xF8DF 0x0358      LDR.W    R0,??main_6
   \   00000B72   0x7800             LDRB     R0,[R0, #+0]
   \   00000B74   0x2809             CMP      R0,#+9
   \   00000B76   0xD106             BNE.N    ??main_64
    625                    {
    626                      BK=255;
   \   00000B78   0x20FF             MOVS     R0,#+255
   \   00000B7A   0xF8DF 0x14E8      LDR.W    R1,??main_18+0x2C
   \   00000B7E   0x7008             STRB     R0,[R1, #+0]
    627                      key_no=255;
   \   00000B80   0x20FF             MOVS     R0,#+255
   \   00000B82   0x49D1             LDR.N    R1,??main_6
   \   00000B84   0x7008             STRB     R0,[R1, #+0]
    628                    }
    629                  }
   \                     ??main_64: (+1)
   \   00000B86   0xF8DF 0x04DC      LDR.W    R0,??main_18+0x2C
   \   00000B8A   0x7800             LDRB     R0,[R0, #+0]
   \   00000B8C   0x2802             CMP      R0,#+2
   \   00000B8E   0xD083             BEQ.N    ??main_65
    630                  LCD_CLS();
   \   00000B90   0x.... 0x....      BL       LCD_CLS
    631                 }
    632                
    633                //3号按键按下的时候调节PMAX
    634                if(key_no==3)
   \                     ??main_63: (+1)
   \   00000B94   0x48CC             LDR.N    R0,??main_6
   \   00000B96   0x7800             LDRB     R0,[R0, #+0]
   \   00000B98   0x2803             CMP      R0,#+3
   \   00000B9A   0xF040 0x807E      BNE.W    ??main_70
    635                 {
    636                  key_no=255;
   \   00000B9E   0x20FF             MOVS     R0,#+255
   \   00000BA0   0x49C9             LDR.N    R1,??main_6
   \   00000BA2   0x7008             STRB     R0,[R1, #+0]
    637                  BK=3;
   \   00000BA4   0x2003             MOVS     R0,#+3
   \   00000BA6   0xF8DF 0x14BC      LDR.W    R1,??main_18+0x2C
   \   00000BAA   0x7008             STRB     R0,[R1, #+0]
    638                  LCD_CLS();
   \   00000BAC   0x.... 0x....      BL       LCD_CLS
   \   00000BB0   0xE06C             B.N      ??main_71
    639                  while(BK==3)
    640                  {
    641                    delay_ms(110);
   \                     ??main_72: (+1)
   \   00000BB2   0x206E             MOVS     R0,#+110
   \   00000BB4   0x.... 0x....      BL       delay_ms
    642                    matrix_keyboard_init();
   \   00000BB8   0x.... 0x....      BL       matrix_keyboard_init
    643                    key_num=keyboard_scan();
   \   00000BBC   0x.... 0x....      BL       keyboard_scan
   \   00000BC0   0x49C4             LDR.N    R1,??main_6+0xC
   \   00000BC2   0x7008             STRB     R0,[R1, #+0]
    644                    if(key_num!=255)
   \   00000BC4   0x48C3             LDR.N    R0,??main_6+0xC
   \   00000BC6   0x7800             LDRB     R0,[R0, #+0]
   \   00000BC8   0x28FF             CMP      R0,#+255
   \   00000BCA   0xD003             BEQ.N    ??main_73
    645                    {
    646                      key_no=key_num;
   \   00000BCC   0x48C1             LDR.N    R0,??main_6+0xC
   \   00000BCE   0x7800             LDRB     R0,[R0, #+0]
   \   00000BD0   0x49BD             LDR.N    R1,??main_6
   \   00000BD2   0x7008             STRB     R0,[R1, #+0]
    647                    }          
    648                    LCD_P8x16Str(0,0,"PMAX:");
   \                     ??main_73: (+1)
   \   00000BD4   0xF8DF 0x2D40      LDR.W    R2,??main_74
   \   00000BD8   0xE004             B.N      ??main_75
   \   00000BDA   0xBF00             Nop      
   \                     ??main_53:
   \   00000BDC   0x2D 0x3A          DC8      0x2D, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00000BE0   0x52 0x65          DC8      "Re:"
   \              0x3A 0x00    
   \                     ??main_75: (+1)
   \   00000BE4   0x2100             MOVS     R1,#+0
   \   00000BE6   0x2000             MOVS     R0,#+0
   \   00000BE8   0x.... 0x....      BL       LCD_P8x16Str
    649                    LCD_P8x16_num3wei(60,0,PMAX);
   \   00000BEC   0xF8DF 0x0D2C      LDR.W    R0,??main_74+0x4
   \   00000BF0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000BF4   0x2100             MOVS     R1,#+0
   \   00000BF6   0x203C             MOVS     R0,#+60
   \   00000BF8   0x.... 0x....      BL       LCD_P8x16_num3wei
    650                    LCD_P8x16Str(0,2,"+:");
   \   00000BFC   0xA2B3             ADR.N    R2,??main_6+0x4  ;; 0x2B, 0x3A, 0x00, 0x00
   \   00000BFE   0x2102             MOVS     R1,#+2
   \   00000C00   0x2000             MOVS     R0,#+0
   \   00000C02   0x.... 0x....      BL       LCD_P8x16Str
    651                    LCD_P8x16Str(60,2,"Key4");
   \   00000C06   0xF8DF 0x243C      LDR.W    R2,??main_18+0xC
   \   00000C0A   0x2102             MOVS     R1,#+2
   \   00000C0C   0x203C             MOVS     R0,#+60
   \   00000C0E   0x.... 0x....      BL       LCD_P8x16Str
    652                    LCD_P8x16Str(0,4,"-:");
   \   00000C12   0xA2AF             ADR.N    R2,??main_6+0x8  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000C14   0x2104             MOVS     R1,#+4
   \   00000C16   0x2000             MOVS     R0,#+0
   \   00000C18   0x.... 0x....      BL       LCD_P8x16Str
    653                    LCD_P8x16Str(60,4,"Key5");
   \   00000C1C   0xF8DF 0x2428      LDR.W    R2,??main_18+0x10
   \   00000C20   0x2104             MOVS     R1,#+4
   \   00000C22   0x203C             MOVS     R0,#+60
   \   00000C24   0x.... 0x....      BL       LCD_P8x16Str
    654                    LCD_P8x16Str(0,6,"Re:");
   \   00000C28   0xA2AB             ADR.N    R2,??main_6+0x10  ;; "Re:"
   \   00000C2A   0x2106             MOVS     R1,#+6
   \   00000C2C   0x2000             MOVS     R0,#+0
   \   00000C2E   0x.... 0x....      BL       LCD_P8x16Str
    655                    LCD_P8x16Str(60,6,"Key6");
   \   00000C32   0xF8DF 0x2418      LDR.W    R2,??main_18+0x14
   \   00000C36   0x2106             MOVS     R1,#+6
   \   00000C38   0x203C             MOVS     R0,#+60
   \   00000C3A   0x.... 0x....      BL       LCD_P8x16Str
    656                    
    657                    if(key_no==7)
   \   00000C3E   0x48A2             LDR.N    R0,??main_6
   \   00000C40   0x7800             LDRB     R0,[R0, #+0]
   \   00000C42   0x2807             CMP      R0,#+7
   \   00000C44   0xD109             BNE.N    ??main_76
    658                    {
    659                      PMAX=PMAX+5;
   \   00000C46   0xF8DF 0x0CD4      LDR.W    R0,??main_74+0x4
   \   00000C4A   0x8800             LDRH     R0,[R0, #+0]
   \   00000C4C   0x1D40             ADDS     R0,R0,#+5
   \   00000C4E   0xF8DF 0x1CCC      LDR.W    R1,??main_74+0x4
   \   00000C52   0x8008             STRH     R0,[R1, #+0]
    660                      key_no=255;
   \   00000C54   0x20FF             MOVS     R0,#+255
   \   00000C56   0x499C             LDR.N    R1,??main_6
   \   00000C58   0x7008             STRB     R0,[R1, #+0]
    661                    }
    662                  
    663                    if(key_no==8)
   \                     ??main_76: (+1)
   \   00000C5A   0x489B             LDR.N    R0,??main_6
   \   00000C5C   0x7800             LDRB     R0,[R0, #+0]
   \   00000C5E   0x2808             CMP      R0,#+8
   \   00000C60   0xD109             BNE.N    ??main_77
    664                    {
    665                      PMAX=PMAX-5;
   \   00000C62   0xF8DF 0x0CB8      LDR.W    R0,??main_74+0x4
   \   00000C66   0x8800             LDRH     R0,[R0, #+0]
   \   00000C68   0x1F40             SUBS     R0,R0,#+5
   \   00000C6A   0xF8DF 0x1CB0      LDR.W    R1,??main_74+0x4
   \   00000C6E   0x8008             STRH     R0,[R1, #+0]
    666                      key_no=255;
   \   00000C70   0x20FF             MOVS     R0,#+255
   \   00000C72   0x4995             LDR.N    R1,??main_6
   \   00000C74   0x7008             STRB     R0,[R1, #+0]
    667                    }
    668                  
    669                    if(key_no==9)
   \                     ??main_77: (+1)
   \   00000C76   0x4894             LDR.N    R0,??main_6
   \   00000C78   0x7800             LDRB     R0,[R0, #+0]
   \   00000C7A   0x2809             CMP      R0,#+9
   \   00000C7C   0xD106             BNE.N    ??main_71
    670                    {
    671                      BK=255;
   \   00000C7E   0x20FF             MOVS     R0,#+255
   \   00000C80   0xF8DF 0x13E0      LDR.W    R1,??main_18+0x2C
   \   00000C84   0x7008             STRB     R0,[R1, #+0]
    672                      key_no=255;
   \   00000C86   0x20FF             MOVS     R0,#+255
   \   00000C88   0x498F             LDR.N    R1,??main_6
   \   00000C8A   0x7008             STRB     R0,[R1, #+0]
    673                    }
    674                  }
   \                     ??main_71: (+1)
   \   00000C8C   0xF8DF 0x03D4      LDR.W    R0,??main_18+0x2C
   \   00000C90   0x7800             LDRB     R0,[R0, #+0]
   \   00000C92   0x2803             CMP      R0,#+3
   \   00000C94   0xD08D             BEQ.N    ??main_72
    675                  LCD_CLS();
   \   00000C96   0x.... 0x....      BL       LCD_CLS
    676                 }
    677                //4号按键按下的时候调节ZHONG
    678                if(key_no==4)
   \                     ??main_70: (+1)
   \   00000C9A   0x488B             LDR.N    R0,??main_6
   \   00000C9C   0x7800             LDRB     R0,[R0, #+0]
   \   00000C9E   0x2804             CMP      R0,#+4
   \   00000CA0   0xD179             BNE.N    ??main_78
    679                 {
    680                  key_no=255;
   \   00000CA2   0x20FF             MOVS     R0,#+255
   \   00000CA4   0x4988             LDR.N    R1,??main_6
   \   00000CA6   0x7008             STRB     R0,[R1, #+0]
    681                  BK=4;
   \   00000CA8   0x2004             MOVS     R0,#+4
   \   00000CAA   0xF8DF 0x13B8      LDR.W    R1,??main_18+0x2C
   \   00000CAE   0x7008             STRB     R0,[R1, #+0]
    682                  LCD_CLS();
   \   00000CB0   0x.... 0x....      BL       LCD_CLS
   \   00000CB4   0xE069             B.N      ??main_79
    683                  while(BK==4)
    684                  {
    685                    LCD_P8x16Str(0,0,"ZHONG:");
   \                     ??main_80: (+1)
   \   00000CB6   0xF8DF 0x2DCC      LDR.W    R2,??main_81
   \   00000CBA   0x2100             MOVS     R1,#+0
   \   00000CBC   0x2000             MOVS     R0,#+0
   \   00000CBE   0x.... 0x....      BL       LCD_P8x16Str
    686                    LCD_P8x16_number_4(60,0,(uint16)ZHONG);
   \   00000CC2   0xF8DF 0x0DC4      LDR.W    R0,??main_81+0x4
   \   00000CC6   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000CCA   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000CCC   0x2100             MOVS     R1,#+0
   \   00000CCE   0x203C             MOVS     R0,#+60
   \   00000CD0   0x.... 0x....      BL       LCD_P8x16_number_4
    687                    LCD_P8x16Str(0,2,"+:");
   \   00000CD4   0xA27D             ADR.N    R2,??main_6+0x4  ;; 0x2B, 0x3A, 0x00, 0x00
   \   00000CD6   0x2102             MOVS     R1,#+2
   \   00000CD8   0x2000             MOVS     R0,#+0
   \   00000CDA   0x.... 0x....      BL       LCD_P8x16Str
    688                    LCD_P8x16Str(60,2,"Key7");
   \   00000CDE   0xF8DF 0x2DAC      LDR.W    R2,??main_81+0x8
   \   00000CE2   0x2102             MOVS     R1,#+2
   \   00000CE4   0x203C             MOVS     R0,#+60
   \   00000CE6   0x.... 0x....      BL       LCD_P8x16Str
    689                    LCD_P8x16Str(0,4,"-:");
   \   00000CEA   0xA279             ADR.N    R2,??main_6+0x8  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000CEC   0x2104             MOVS     R1,#+4
   \   00000CEE   0x2000             MOVS     R0,#+0
   \   00000CF0   0x.... 0x....      BL       LCD_P8x16Str
    690                    LCD_P8x16Str(60,4,"Key8");
   \   00000CF4   0xF8DF 0x2D98      LDR.W    R2,??main_81+0xC
   \   00000CF8   0x2104             MOVS     R1,#+4
   \   00000CFA   0x203C             MOVS     R0,#+60
   \   00000CFC   0x.... 0x....      BL       LCD_P8x16Str
    691                    LCD_P8x16Str(0,6,"Re:");
   \   00000D00   0xA275             ADR.N    R2,??main_6+0x10  ;; "Re:"
   \   00000D02   0x2106             MOVS     R1,#+6
   \   00000D04   0x2000             MOVS     R0,#+0
   \   00000D06   0x.... 0x....      BL       LCD_P8x16Str
    692                    LCD_P8x16Str(60,6,"Key9");
   \   00000D0A   0xF8DF 0x2D88      LDR.W    R2,??main_81+0x10
   \   00000D0E   0x2106             MOVS     R1,#+6
   \   00000D10   0x203C             MOVS     R0,#+60
   \   00000D12   0x.... 0x....      BL       LCD_P8x16Str
    693                    
    694                    delay_ms(110);
   \   00000D16   0x206E             MOVS     R0,#+110
   \   00000D18   0x.... 0x....      BL       delay_ms
    695                    matrix_keyboard_init();
   \   00000D1C   0x.... 0x....      BL       matrix_keyboard_init
    696                    key_num=keyboard_scan();
   \   00000D20   0x.... 0x....      BL       keyboard_scan
   \   00000D24   0x496B             LDR.N    R1,??main_6+0xC
   \   00000D26   0x7008             STRB     R0,[R1, #+0]
    697                    if(key_num!=255)
   \   00000D28   0x486A             LDR.N    R0,??main_6+0xC
   \   00000D2A   0x7800             LDRB     R0,[R0, #+0]
   \   00000D2C   0x28FF             CMP      R0,#+255
   \   00000D2E   0xD003             BEQ.N    ??main_82
    698                    {
    699                      key_no=key_num;
   \   00000D30   0x4868             LDR.N    R0,??main_6+0xC
   \   00000D32   0x7800             LDRB     R0,[R0, #+0]
   \   00000D34   0x4964             LDR.N    R1,??main_6
   \   00000D36   0x7008             STRB     R0,[R1, #+0]
    700                    }          
    701          
    702                    if(key_no==7)
   \                     ??main_82: (+1)
   \   00000D38   0x4863             LDR.N    R0,??main_6
   \   00000D3A   0x7800             LDRB     R0,[R0, #+0]
   \   00000D3C   0x2807             CMP      R0,#+7
   \   00000D3E   0xD109             BNE.N    ??main_83
    703                    {
    704                      ZHONG=ZHONG+5;
   \   00000D40   0xF8DF 0x0D44      LDR.W    R0,??main_81+0x4
   \   00000D44   0x8800             LDRH     R0,[R0, #+0]
   \   00000D46   0x1D40             ADDS     R0,R0,#+5
   \   00000D48   0xF8DF 0x1D3C      LDR.W    R1,??main_81+0x4
   \   00000D4C   0x8008             STRH     R0,[R1, #+0]
    705                      key_no=255;
   \   00000D4E   0x20FF             MOVS     R0,#+255
   \   00000D50   0x495D             LDR.N    R1,??main_6
   \   00000D52   0x7008             STRB     R0,[R1, #+0]
    706                    }
    707                  
    708                    if(key_no==8)
   \                     ??main_83: (+1)
   \   00000D54   0x485C             LDR.N    R0,??main_6
   \   00000D56   0x7800             LDRB     R0,[R0, #+0]
   \   00000D58   0x2808             CMP      R0,#+8
   \   00000D5A   0xD109             BNE.N    ??main_84
    709                    {
    710                      ZHONG=ZHONG-5;
   \   00000D5C   0xF8DF 0x0D28      LDR.W    R0,??main_81+0x4
   \   00000D60   0x8800             LDRH     R0,[R0, #+0]
   \   00000D62   0x1F40             SUBS     R0,R0,#+5
   \   00000D64   0xF8DF 0x1D20      LDR.W    R1,??main_81+0x4
   \   00000D68   0x8008             STRH     R0,[R1, #+0]
    711                      key_no=255;
   \   00000D6A   0x20FF             MOVS     R0,#+255
   \   00000D6C   0x4956             LDR.N    R1,??main_6
   \   00000D6E   0x7008             STRB     R0,[R1, #+0]
    712                    }
    713                  
    714                    if(key_no==9)
   \                     ??main_84: (+1)
   \   00000D70   0x4855             LDR.N    R0,??main_6
   \   00000D72   0x7800             LDRB     R0,[R0, #+0]
   \   00000D74   0x2809             CMP      R0,#+9
   \   00000D76   0xD108             BNE.N    ??main_79
    715                    {
    716                      BK=255;
   \   00000D78   0x20FF             MOVS     R0,#+255
   \   00000D7A   0x49BA             LDR.N    R1,??main_18+0x2C
   \   00000D7C   0x7008             STRB     R0,[R1, #+0]
    717                      key_no=255;
   \   00000D7E   0x20FF             MOVS     R0,#+255
   \   00000D80   0x4951             LDR.N    R1,??main_6
   \   00000D82   0x7008             STRB     R0,[R1, #+0]
    718                      key_num=255;//注意控制条件
   \   00000D84   0x20FF             MOVS     R0,#+255
   \   00000D86   0x4953             LDR.N    R1,??main_6+0xC
   \   00000D88   0x7008             STRB     R0,[R1, #+0]
    719                    }
    720                  }
   \                     ??main_79: (+1)
   \   00000D8A   0x48B6             LDR.N    R0,??main_18+0x2C
   \   00000D8C   0x7800             LDRB     R0,[R0, #+0]
   \   00000D8E   0x2804             CMP      R0,#+4
   \   00000D90   0xD091             BEQ.N    ??main_80
    721                  LCD_CLS();
   \   00000D92   0x.... 0x....      BL       LCD_CLS
    722                }
    723                //5号按键按下的时候调节xianfu
    724                if(key_no==5)
   \                     ??main_78: (+1)
   \   00000D96   0x484C             LDR.N    R0,??main_6
   \   00000D98   0x7800             LDRB     R0,[R0, #+0]
   \   00000D9A   0x2805             CMP      R0,#+5
   \   00000D9C   0xD171             BNE.N    ??main_85
    725                 {
    726                  key_no=255;
   \   00000D9E   0x20FF             MOVS     R0,#+255
   \   00000DA0   0x4949             LDR.N    R1,??main_6
   \   00000DA2   0x7008             STRB     R0,[R1, #+0]
    727                  BK=5;
   \   00000DA4   0x2005             MOVS     R0,#+5
   \   00000DA6   0x49AF             LDR.N    R1,??main_18+0x2C
   \   00000DA8   0x7008             STRB     R0,[R1, #+0]
    728                  LCD_CLS();
   \   00000DAA   0x.... 0x....      BL       LCD_CLS
   \   00000DAE   0xE062             B.N      ??main_86
    729                  while(BK==5)
    730                  {
    731                    delay_ms(110);
   \                     ??main_87: (+1)
   \   00000DB0   0x206E             MOVS     R0,#+110
   \   00000DB2   0x.... 0x....      BL       delay_ms
    732                    matrix_keyboard_init();
   \   00000DB6   0x.... 0x....      BL       matrix_keyboard_init
    733                    key_num=keyboard_scan();
   \   00000DBA   0x.... 0x....      BL       keyboard_scan
   \   00000DBE   0x4945             LDR.N    R1,??main_6+0xC
   \   00000DC0   0x7008             STRB     R0,[R1, #+0]
    734                    if(key_num!=255)
   \   00000DC2   0x4844             LDR.N    R0,??main_6+0xC
   \   00000DC4   0x7800             LDRB     R0,[R0, #+0]
   \   00000DC6   0x28FF             CMP      R0,#+255
   \   00000DC8   0xD003             BEQ.N    ??main_88
    735                    {
    736                      key_no=key_num;
   \   00000DCA   0x4842             LDR.N    R0,??main_6+0xC
   \   00000DCC   0x7800             LDRB     R0,[R0, #+0]
   \   00000DCE   0x493E             LDR.N    R1,??main_6
   \   00000DD0   0x7008             STRB     R0,[R1, #+0]
    737                    }          
    738                    LCD_P8x16Str(0,0,"xianfu:");
   \                     ??main_88: (+1)
   \   00000DD2   0xF8DF 0x2CC4      LDR.W    R2,??main_81+0x14
   \   00000DD6   0x2100             MOVS     R1,#+0
   \   00000DD8   0x2000             MOVS     R0,#+0
   \   00000DDA   0x.... 0x....      BL       LCD_P8x16Str
    739                    LCD_P8x16_number_4(60,0,xianfu);
   \   00000DDE   0xF8DF 0x0CBC      LDR.W    R0,??main_81+0x18
   \   00000DE2   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000DE6   0x2100             MOVS     R1,#+0
   \   00000DE8   0x203C             MOVS     R0,#+60
   \   00000DEA   0x.... 0x....      BL       LCD_P8x16_number_4
    740                    LCD_P8x16Str(0,2,"+:");
   \   00000DEE   0xA237             ADR.N    R2,??main_6+0x4  ;; 0x2B, 0x3A, 0x00, 0x00
   \   00000DF0   0x2102             MOVS     R1,#+2
   \   00000DF2   0x2000             MOVS     R0,#+0
   \   00000DF4   0x.... 0x....      BL       LCD_P8x16Str
    741                    LCD_P8x16Str(60,2,"Key4");
   \   00000DF8   0x4A92             LDR.N    R2,??main_18+0xC
   \   00000DFA   0x2102             MOVS     R1,#+2
   \   00000DFC   0x203C             MOVS     R0,#+60
   \   00000DFE   0x.... 0x....      BL       LCD_P8x16Str
    742                    LCD_P8x16Str(0,4,"-:");
   \   00000E02   0xA233             ADR.N    R2,??main_6+0x8  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000E04   0x2104             MOVS     R1,#+4
   \   00000E06   0x2000             MOVS     R0,#+0
   \   00000E08   0x.... 0x....      BL       LCD_P8x16Str
    743                    LCD_P8x16Str(60,4,"Key5");
   \   00000E0C   0x4A8E             LDR.N    R2,??main_18+0x10
   \   00000E0E   0x2104             MOVS     R1,#+4
   \   00000E10   0x203C             MOVS     R0,#+60
   \   00000E12   0x.... 0x....      BL       LCD_P8x16Str
    744                    LCD_P8x16Str(0,6,"Re:");
   \   00000E16   0xA230             ADR.N    R2,??main_6+0x10  ;; "Re:"
   \   00000E18   0x2106             MOVS     R1,#+6
   \   00000E1A   0x2000             MOVS     R0,#+0
   \   00000E1C   0x.... 0x....      BL       LCD_P8x16Str
    745                    LCD_P8x16Str(60,6,"Key6");
   \   00000E20   0x4A8A             LDR.N    R2,??main_18+0x14
   \   00000E22   0x2106             MOVS     R1,#+6
   \   00000E24   0x203C             MOVS     R0,#+60
   \   00000E26   0x.... 0x....      BL       LCD_P8x16Str
    746                    
    747                    if(key_no==7)
   \   00000E2A   0x4827             LDR.N    R0,??main_6
   \   00000E2C   0x7800             LDRB     R0,[R0, #+0]
   \   00000E2E   0x2807             CMP      R0,#+7
   \   00000E30   0xD109             BNE.N    ??main_89
    748                    {
    749                      xianfu=xianfu+5;
   \   00000E32   0xF8DF 0x0C68      LDR.W    R0,??main_81+0x18
   \   00000E36   0x8800             LDRH     R0,[R0, #+0]
   \   00000E38   0x1D40             ADDS     R0,R0,#+5
   \   00000E3A   0xF8DF 0x1C60      LDR.W    R1,??main_81+0x18
   \   00000E3E   0x8008             STRH     R0,[R1, #+0]
    750                      key_no=255;
   \   00000E40   0x20FF             MOVS     R0,#+255
   \   00000E42   0x4921             LDR.N    R1,??main_6
   \   00000E44   0x7008             STRB     R0,[R1, #+0]
    751                    }
    752                  
    753                    if(key_no==8)
   \                     ??main_89: (+1)
   \   00000E46   0x4820             LDR.N    R0,??main_6
   \   00000E48   0x7800             LDRB     R0,[R0, #+0]
   \   00000E4A   0x2808             CMP      R0,#+8
   \   00000E4C   0xD109             BNE.N    ??main_90
    754                    {
    755                      xianfu=xianfu-5;
   \   00000E4E   0xF8DF 0x0C4C      LDR.W    R0,??main_81+0x18
   \   00000E52   0x8800             LDRH     R0,[R0, #+0]
   \   00000E54   0x1F40             SUBS     R0,R0,#+5
   \   00000E56   0xF8DF 0x1C44      LDR.W    R1,??main_81+0x18
   \   00000E5A   0x8008             STRH     R0,[R1, #+0]
    756                      key_no=255;
   \   00000E5C   0x20FF             MOVS     R0,#+255
   \   00000E5E   0x491A             LDR.N    R1,??main_6
   \   00000E60   0x7008             STRB     R0,[R1, #+0]
    757                    }
    758                  
    759                    if(key_no==9)
   \                     ??main_90: (+1)
   \   00000E62   0x4819             LDR.N    R0,??main_6
   \   00000E64   0x7800             LDRB     R0,[R0, #+0]
   \   00000E66   0x2809             CMP      R0,#+9
   \   00000E68   0xD105             BNE.N    ??main_86
    760                    {
    761                      BK=255;
   \   00000E6A   0x20FF             MOVS     R0,#+255
   \   00000E6C   0x497D             LDR.N    R1,??main_18+0x2C
   \   00000E6E   0x7008             STRB     R0,[R1, #+0]
    762                      key_no=255;
   \   00000E70   0x20FF             MOVS     R0,#+255
   \   00000E72   0x4915             LDR.N    R1,??main_6
   \   00000E74   0x7008             STRB     R0,[R1, #+0]
    763                    }
    764                  }
   \                     ??main_86: (+1)
   \   00000E76   0x487B             LDR.N    R0,??main_18+0x2C
   \   00000E78   0x7800             LDRB     R0,[R0, #+0]
   \   00000E7A   0x2805             CMP      R0,#+5
   \   00000E7C   0xD098             BEQ.N    ??main_87
    765                  LCD_CLS();
   \   00000E7E   0x.... 0x....      BL       LCD_CLS
    766                 }
    767                //6号按键按下的时候调节PO_ct
    768                if(key_no==6)
   \                     ??main_85: (+1)
   \   00000E82   0x4811             LDR.N    R0,??main_6
   \   00000E84   0x7800             LDRB     R0,[R0, #+0]
   \   00000E86   0x2806             CMP      R0,#+6
   \   00000E88   0xF040 0x8084      BNE.W    ??main_91
    769                 {
    770                  key_no=255;
   \   00000E8C   0x20FF             MOVS     R0,#+255
   \   00000E8E   0x490E             LDR.N    R1,??main_6
   \   00000E90   0x7008             STRB     R0,[R1, #+0]
    771                  BK=6;
   \   00000E92   0x2006             MOVS     R0,#+6
   \   00000E94   0x4973             LDR.N    R1,??main_18+0x2C
   \   00000E96   0x7008             STRB     R0,[R1, #+0]
    772                  LCD_CLS();
   \   00000E98   0x.... 0x....      BL       LCD_CLS
   \   00000E9C   0xE074             B.N      ??main_92
    773                  while(BK==6)
    774                  {
    775                    delay_ms(110);
   \                     ??main_93: (+1)
   \   00000E9E   0x206E             MOVS     R0,#+110
   \   00000EA0   0x.... 0x....      BL       delay_ms
    776                    matrix_keyboard_init();
   \   00000EA4   0x.... 0x....      BL       matrix_keyboard_init
    777                    key_num=keyboard_scan();
   \   00000EA8   0x.... 0x....      BL       keyboard_scan
   \   00000EAC   0x4909             LDR.N    R1,??main_6+0xC
   \   00000EAE   0x7008             STRB     R0,[R1, #+0]
    778                    if(key_num!=255)
   \   00000EB0   0x4808             LDR.N    R0,??main_6+0xC
   \   00000EB2   0x7800             LDRB     R0,[R0, #+0]
   \   00000EB4   0x28FF             CMP      R0,#+255
   \   00000EB6   0xD003             BEQ.N    ??main_94
    779                    {
    780                      key_no=key_num;
   \   00000EB8   0x4806             LDR.N    R0,??main_6+0xC
   \   00000EBA   0x7800             LDRB     R0,[R0, #+0]
   \   00000EBC   0x4902             LDR.N    R1,??main_6
   \   00000EBE   0x7008             STRB     R0,[R1, #+0]
    781                    }          
    782                    LCD_P8x16Str(0,0,"PO_ct:");
   \                     ??main_94: (+1)
   \   00000EC0   0xF8DF 0x2BDC      LDR.W    R2,??main_81+0x1C
   \   00000EC4   0xE00A             B.N      ??main_95
   \   00000EC6   0xBF00             Nop      
   \                     ??main_6:
   \   00000EC8   0x........         DC32     key_no
   \   00000ECC   0x2B 0x3A          DC8      0x2B, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00000ED0   0x2D 0x3A          DC8      0x2D, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00000ED4   0x........         DC32     key_num
   \   00000ED8   0x52 0x65          DC8      "Re:"
   \              0x3A 0x00    
   \                     ??main_95: (+1)
   \   00000EDC   0x2100             MOVS     R1,#+0
   \   00000EDE   0x2000             MOVS     R0,#+0
   \   00000EE0   0x.... 0x....      BL       LCD_P8x16Str
    783                    LCD_P8x16_num3wei(60,0,PO_ct);
   \   00000EE4   0xF8DF 0x0BBC      LDR.W    R0,??main_81+0x20
   \   00000EE8   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000EEC   0x2100             MOVS     R1,#+0
   \   00000EEE   0x203C             MOVS     R0,#+60
   \   00000EF0   0x.... 0x....      BL       LCD_P8x16_num3wei
    784                    LCD_P8x16Str(0,2,"+:");
   \   00000EF4   0xA2E6             ADR.N    R2,??main_96     ;; 0x2B, 0x3A, 0x00, 0x00
   \   00000EF6   0x2102             MOVS     R1,#+2
   \   00000EF8   0x2000             MOVS     R0,#+0
   \   00000EFA   0x.... 0x....      BL       LCD_P8x16Str
    785                    LCD_P8x16Str(60,2,"Key4");
   \   00000EFE   0x4A51             LDR.N    R2,??main_18+0xC
   \   00000F00   0x2102             MOVS     R1,#+2
   \   00000F02   0x203C             MOVS     R0,#+60
   \   00000F04   0x.... 0x....      BL       LCD_P8x16Str
    786                    LCD_P8x16Str(0,4,"-:");
   \   00000F08   0xA2E2             ADR.N    R2,??main_96+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00000F0A   0x2104             MOVS     R1,#+4
   \   00000F0C   0x2000             MOVS     R0,#+0
   \   00000F0E   0x.... 0x....      BL       LCD_P8x16Str
    787                    LCD_P8x16Str(60,4,"Key5");
   \   00000F12   0x4A4D             LDR.N    R2,??main_18+0x10
   \   00000F14   0x2104             MOVS     R1,#+4
   \   00000F16   0x203C             MOVS     R0,#+60
   \   00000F18   0x.... 0x....      BL       LCD_P8x16Str
    788                    LCD_P8x16Str(0,6,"Re:");
   \   00000F1C   0xA2DE             ADR.N    R2,??main_96+0x8  ;; "Re:"
   \   00000F1E   0x2106             MOVS     R1,#+6
   \   00000F20   0x2000             MOVS     R0,#+0
   \   00000F22   0x.... 0x....      BL       LCD_P8x16Str
    789                    LCD_P8x16Str(60,6,"Key6");
   \   00000F26   0x4A49             LDR.N    R2,??main_18+0x14
   \   00000F28   0x2106             MOVS     R1,#+6
   \   00000F2A   0x203C             MOVS     R0,#+60
   \   00000F2C   0x.... 0x....      BL       LCD_P8x16Str
    790                    
    791                    if(key_no==7)
   \   00000F30   0xF8DF 0x0B74      LDR.W    R0,??main_81+0x24
   \   00000F34   0x7800             LDRB     R0,[R0, #+0]
   \   00000F36   0x2807             CMP      R0,#+7
   \   00000F38   0xD10A             BNE.N    ??main_97
    792                    {
    793                      PO_ct=PO_ct+5;
   \   00000F3A   0xF8DF 0x0B68      LDR.W    R0,??main_81+0x20
   \   00000F3E   0x8800             LDRH     R0,[R0, #+0]
   \   00000F40   0x1D40             ADDS     R0,R0,#+5
   \   00000F42   0xF8DF 0x1B60      LDR.W    R1,??main_81+0x20
   \   00000F46   0x8008             STRH     R0,[R1, #+0]
    794                      key_no=255;
   \   00000F48   0x20FF             MOVS     R0,#+255
   \   00000F4A   0xF8DF 0x1B5C      LDR.W    R1,??main_81+0x24
   \   00000F4E   0x7008             STRB     R0,[R1, #+0]
    795                    }
    796                  
    797                    if(key_no==8)
   \                     ??main_97: (+1)
   \   00000F50   0xF8DF 0x0B54      LDR.W    R0,??main_81+0x24
   \   00000F54   0x7800             LDRB     R0,[R0, #+0]
   \   00000F56   0x2808             CMP      R0,#+8
   \   00000F58   0xD10A             BNE.N    ??main_98
    798                    {
    799                      PO_ct=PO_ct-5;
   \   00000F5A   0xF8DF 0x0B48      LDR.W    R0,??main_81+0x20
   \   00000F5E   0x8800             LDRH     R0,[R0, #+0]
   \   00000F60   0x1F40             SUBS     R0,R0,#+5
   \   00000F62   0xF8DF 0x1B40      LDR.W    R1,??main_81+0x20
   \   00000F66   0x8008             STRH     R0,[R1, #+0]
    800                      key_no=255;
   \   00000F68   0x20FF             MOVS     R0,#+255
   \   00000F6A   0xF8DF 0x1B3C      LDR.W    R1,??main_81+0x24
   \   00000F6E   0x7008             STRB     R0,[R1, #+0]
    801                    }
    802                  
    803                    if(key_no==9)
   \                     ??main_98: (+1)
   \   00000F70   0xF8DF 0x0B34      LDR.W    R0,??main_81+0x24
   \   00000F74   0x7800             LDRB     R0,[R0, #+0]
   \   00000F76   0x2809             CMP      R0,#+9
   \   00000F78   0xD106             BNE.N    ??main_92
    804                    {
    805                      BK=255;
   \   00000F7A   0x20FF             MOVS     R0,#+255
   \   00000F7C   0x4939             LDR.N    R1,??main_18+0x2C
   \   00000F7E   0x7008             STRB     R0,[R1, #+0]
    806                      key_no=255;
   \   00000F80   0x20FF             MOVS     R0,#+255
   \   00000F82   0xF8DF 0x1B24      LDR.W    R1,??main_81+0x24
   \   00000F86   0x7008             STRB     R0,[R1, #+0]
    807                    }
    808                  }
   \                     ??main_92: (+1)
   \   00000F88   0x4836             LDR.N    R0,??main_18+0x2C
   \   00000F8A   0x7800             LDRB     R0,[R0, #+0]
   \   00000F8C   0x2806             CMP      R0,#+6
   \   00000F8E   0xD086             BEQ.N    ??main_93
    809                  LCD_CLS();
   \   00000F90   0x.... 0x....      BL       LCD_CLS
    810                 }
    811               //10号按键按下 采集数据
    812               if(key_no==10)
   \                     ??main_91: (+1)
   \   00000F94   0xF8DF 0x0B10      LDR.W    R0,??main_81+0x24
   \   00000F98   0x7800             LDRB     R0,[R0, #+0]
   \   00000F9A   0x280A             CMP      R0,#+10
   \   00000F9C   0xF47F 0xACB1      BNE.W    ??main_56
    813               {
    814                 key_no=255;
   \   00000FA0   0x20FF             MOVS     R0,#+255
   \   00000FA2   0xF8DF 0x1B04      LDR.W    R1,??main_81+0x24
   \   00000FA6   0x7008             STRB     R0,[R1, #+0]
    815                 LCD_CLS();
   \   00000FA8   0x.... 0x....      BL       LCD_CLS
    816                 break;
    817               }
    818             }
    819             
    820             
    821             //-----------------------------------------------------------------
    822             //--------------------------第二轮 按键调参--------------------------
    823             //-----------------------------------------------------------------
    824             while(1)
    825             { 
    826               //防止跳二轮调参
    827                delay_ms(250);
   \                     ??main_99: (+1)
   \   00000FAC   0x20FA             MOVS     R0,#+250
   \   00000FAE   0x.... 0x....      BL       delay_ms
    828                
    829                //user GUI
    830                LCD_P8x16Str(0,0,"d_p:1");
   \   00000FB2   0xF8DF 0x2AF8      LDR.W    R2,??main_81+0x28
   \   00000FB6   0x2100             MOVS     R1,#+0
   \   00000FB8   0x2000             MOVS     R0,#+0
   \   00000FBA   0x.... 0x....      BL       LCD_P8x16Str
    831                LCD_P8x16Str(60,0,"chu:2");
   \   00000FBE   0xF8DF 0x2AF0      LDR.W    R2,??main_81+0x2C
   \   00000FC2   0x2100             MOVS     R1,#+0
   \   00000FC4   0x203C             MOVS     R0,#+60
   \   00000FC6   0x.... 0x....      BL       LCD_P8x16Str
    832                LCD_P8x16Str(0,2,"BLsha:3");
   \   00000FCA   0xF8DF 0x2AE8      LDR.W    R2,??main_81+0x30
   \   00000FCE   0x2102             MOVS     R1,#+2
   \   00000FD0   0x2000             MOVS     R0,#+0
   \   00000FD2   0x.... 0x....      BL       LCD_P8x16Str
    833                LCD_P8x16Str(60,2,"Kmax");
   \   00000FD6   0xF8DF 0x2AE0      LDR.W    R2,??main_81+0x34
   \   00000FDA   0x2102             MOVS     R1,#+2
   \   00000FDC   0x203C             MOVS     R0,#+60
   \   00000FDE   0x.... 0x....      BL       LCD_P8x16Str
    834                LCD_P8x16Str(0,4,"Kmin");
   \   00000FE2   0xF8DF 0x2AD8      LDR.W    R2,??main_81+0x38
   \   00000FE6   0x2104             MOVS     R1,#+4
   \   00000FE8   0x2000             MOVS     R0,#+0
   \   00000FEA   0x.... 0x....      BL       LCD_P8x16Str
    835                LCD_P8x16Str(60,4,"Pmax:6");
   \   00000FEE   0xF8DF 0x2AD0      LDR.W    R2,??main_81+0x3C
   \   00000FF2   0x2104             MOVS     R1,#+4
   \   00000FF4   0x203C             MOVS     R0,#+60
   \   00000FF6   0x.... 0x....      BL       LCD_P8x16Str
    836                
    837                matrix_keyboard_init();
   \   00000FFA   0x.... 0x....      BL       matrix_keyboard_init
    838                key_no=keyboard_scan();
   \   00000FFE   0x.... 0x....      BL       keyboard_scan
   \   00001002   0xF8DF 0x1AA4      LDR.W    R1,??main_81+0x24
   \   00001006   0x7008             STRB     R0,[R1, #+0]
    839                
    840                delay_ms(110);
   \   00001008   0x206E             MOVS     R0,#+110
   \   0000100A   0x.... 0x....      BL       delay_ms
    841          
    842                //1号按键按下的时候调节d_p
    843                if(key_no==1)
   \   0000100E   0xF8DF 0x0A98      LDR.W    R0,??main_81+0x24
   \   00001012   0xE003             B.N      ??main_100
   \                     ??main_15:
   \   00001014   0x........         DC32     Psha
   \   00001018   0x........         DC32     Prz
   \                     ??main_100: (+1)
   \   0000101C   0x7800             LDRB     R0,[R0, #+0]
   \   0000101E   0x2801             CMP      R0,#+1
   \   00001020   0xF040 0x80B3      BNE.W    ??main_101
    844                 {
    845                  key_no=255;
   \   00001024   0x20FF             MOVS     R0,#+255
   \   00001026   0xF8DF 0x1A80      LDR.W    R1,??main_81+0x24
   \   0000102A   0x7008             STRB     R0,[R1, #+0]
    846                  BK=1;
   \   0000102C   0x2001             MOVS     R0,#+1
   \   0000102E   0x490D             LDR.N    R1,??main_18+0x2C
   \   00001030   0x7008             STRB     R0,[R1, #+0]
    847                  LCD_CLS();
   \   00001032   0x.... 0x....      BL       LCD_CLS
   \   00001036   0xE0A1             B.N      ??main_102
   \                     ??main_18:
   \   00001038   0x41880000         DC32     0x41880000
   \   0000103C   0x3ECCCCCD         DC32     0x3ecccccd
   \   00001040   0x........         DC32     `?<Constant "Speed_H:">`
   \   00001044   0x........         DC32     `?<Constant "Key4">`
   \   00001048   0x........         DC32     `?<Constant "Key5">`
   \   0000104C   0x........         DC32     `?<Constant "Key6">`
   \   00001050   0x........         DC32     `?<Constant "Speed_L:">`
   \   00001054   0x41200000         DC32     0x41200000
   \   00001058   0x9999999A         DC32     0x9999999a
   \   0000105C   0x........         DC32     `?<Constant "QPX_S:">`
   \   00001060   0x........         DC32     QPX_SET
   \   00001064   0x........         DC32     BK
   \   00001068   0x........         DC32     Sd
   \   0000106C   0x........         DC32     Si
   \   00001070   0x........         DC32     `Sp`
   \   00001074   0x........         DC32     `?<Constant "Psha:1">`
   \   00001078   0x........         DC32     `?<Constant "Prz:2">`
   \   0000107C   0x........         DC32     `?<Constant "PMAX:3">`
   \   00001080   0x........         DC32     `?<Constant "ZHONG:4">`
   \   00001084   0x........         DC32     `?<Constant "xianfu:5">`
   \   00001088   0x........         DC32     `?<Constant "PO_ct:6">`
   \   0000108C   0x........         DC32     `?<Constant "Psha:">`
   \   00001090   0x........         DC32     `?<Constant "Prz:">`
    848                  while(BK==1)
    849                  {
    850                    LCD_P8x16Str(0,0,"d_p:");
   \                     ??main_103: (+1)
   \   00001094   0xF8DF 0x2A2C      LDR.W    R2,??main_81+0x40
   \   00001098   0x2100             MOVS     R1,#+0
   \   0000109A   0x2000             MOVS     R0,#+0
   \   0000109C   0x.... 0x....      BL       LCD_P8x16Str
    851                    LCD_P8x16_number_4(60,0,d_p);
   \   000010A0   0xF8DF 0x0A24      LDR.W    R0,??main_81+0x44
   \   000010A4   0x7802             LDRB     R2,[R0, #+0]
   \   000010A6   0x2100             MOVS     R1,#+0
   \   000010A8   0x203C             MOVS     R0,#+60
   \   000010AA   0x.... 0x....      BL       LCD_P8x16_number_4
    852                    LCD_P8x16Str(0,2,"+:");
   \   000010AE   0xA278             ADR.N    R2,??main_96     ;; 0x2B, 0x3A, 0x00, 0x00
   \   000010B0   0x2102             MOVS     R1,#+2
   \   000010B2   0x2000             MOVS     R0,#+0
   \   000010B4   0x.... 0x....      BL       LCD_P8x16Str
    853                    LCD_P8x16Str(60,2,"Key7");
   \   000010B8   0xF8DF 0x29D0      LDR.W    R2,??main_81+0x8
   \   000010BC   0x2102             MOVS     R1,#+2
   \   000010BE   0x203C             MOVS     R0,#+60
   \   000010C0   0x.... 0x....      BL       LCD_P8x16Str
    854                    LCD_P8x16Str(0,4,"-:");
   \   000010C4   0xA273             ADR.N    R2,??main_96+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   000010C6   0x2104             MOVS     R1,#+4
   \   000010C8   0x2000             MOVS     R0,#+0
   \   000010CA   0x.... 0x....      BL       LCD_P8x16Str
    855                    LCD_P8x16Str(60,4,"Key8");
   \   000010CE   0xF8DF 0x29C0      LDR.W    R2,??main_81+0xC
   \   000010D2   0x2104             MOVS     R1,#+4
   \   000010D4   0x203C             MOVS     R0,#+60
   \   000010D6   0x.... 0x....      BL       LCD_P8x16Str
    856                    LCD_P8x16Str(0,6,"Re:");
   \   000010DA   0xA26F             ADR.N    R2,??main_96+0x8  ;; "Re:"
   \   000010DC   0x2106             MOVS     R1,#+6
   \   000010DE   0x2000             MOVS     R0,#+0
   \   000010E0   0x.... 0x....      BL       LCD_P8x16Str
    857                    LCD_P8x16Str(60,6,"Key9");
   \   000010E4   0xF8DF 0x29AC      LDR.W    R2,??main_81+0x10
   \   000010E8   0x2106             MOVS     R1,#+6
   \   000010EA   0x203C             MOVS     R0,#+60
   \   000010EC   0x.... 0x....      BL       LCD_P8x16Str
    858                    
    859                    delay_ms(110);
   \   000010F0   0x206E             MOVS     R0,#+110
   \   000010F2   0x.... 0x....      BL       delay_ms
    860                    matrix_keyboard_init();
   \   000010F6   0x.... 0x....      BL       matrix_keyboard_init
    861                    key_num=keyboard_scan();
   \   000010FA   0x.... 0x....      BL       keyboard_scan
   \   000010FE   0xF8DF 0x1E18      LDR.W    R1,??main_104
   \   00001102   0x7008             STRB     R0,[R1, #+0]
    862                    if(key_num!=255)
   \   00001104   0xF8DF 0x0E10      LDR.W    R0,??main_104
   \   00001108   0x7800             LDRB     R0,[R0, #+0]
   \   0000110A   0x28FF             CMP      R0,#+255
   \   0000110C   0xD005             BEQ.N    ??main_105
    863                    {
    864                      key_no=key_num;
   \   0000110E   0xF8DF 0x0E08      LDR.W    R0,??main_104
   \   00001112   0x7800             LDRB     R0,[R0, #+0]
   \   00001114   0xF8DF 0x1990      LDR.W    R1,??main_81+0x24
   \   00001118   0x7008             STRB     R0,[R1, #+0]
    865                    }          
    866          
    867                    if(key_no==7)
   \                     ??main_105: (+1)
   \   0000111A   0xF8DF 0x098C      LDR.W    R0,??main_81+0x24
   \   0000111E   0x7800             LDRB     R0,[R0, #+0]
   \   00001120   0x2807             CMP      R0,#+7
   \   00001122   0xD10A             BNE.N    ??main_106
    868                    {
    869                      d_p=d_p+1;
   \   00001124   0xF8DF 0x09A0      LDR.W    R0,??main_81+0x44
   \   00001128   0x7800             LDRB     R0,[R0, #+0]
   \   0000112A   0x1C40             ADDS     R0,R0,#+1
   \   0000112C   0xF8DF 0x1998      LDR.W    R1,??main_81+0x44
   \   00001130   0x7008             STRB     R0,[R1, #+0]
    870                      key_no=255;
   \   00001132   0x20FF             MOVS     R0,#+255
   \   00001134   0xF8DF 0x1970      LDR.W    R1,??main_81+0x24
   \   00001138   0x7008             STRB     R0,[R1, #+0]
    871                    }
    872                  
    873                    if(key_no==8)
   \                     ??main_106: (+1)
   \   0000113A   0xF8DF 0x096C      LDR.W    R0,??main_81+0x24
   \   0000113E   0x7800             LDRB     R0,[R0, #+0]
   \   00001140   0x2808             CMP      R0,#+8
   \   00001142   0xD10A             BNE.N    ??main_107
    874                    {
    875                      d_p=d_p-1;
   \   00001144   0xF8DF 0x0980      LDR.W    R0,??main_81+0x44
   \   00001148   0x7800             LDRB     R0,[R0, #+0]
   \   0000114A   0x1E40             SUBS     R0,R0,#+1
   \   0000114C   0xF8DF 0x1978      LDR.W    R1,??main_81+0x44
   \   00001150   0x7008             STRB     R0,[R1, #+0]
    876                      key_no=255;
   \   00001152   0x20FF             MOVS     R0,#+255
   \   00001154   0xF8DF 0x1950      LDR.W    R1,??main_81+0x24
   \   00001158   0x7008             STRB     R0,[R1, #+0]
    877                    }
    878                  
    879                    if(key_no==9)
   \                     ??main_107: (+1)
   \   0000115A   0xF8DF 0x094C      LDR.W    R0,??main_81+0x24
   \   0000115E   0x7800             LDRB     R0,[R0, #+0]
   \   00001160   0x2809             CMP      R0,#+9
   \   00001162   0xD10B             BNE.N    ??main_102
    880                    {
    881                      BK=255;
   \   00001164   0x20FF             MOVS     R0,#+255
   \   00001166   0xF8DF 0x1DB4      LDR.W    R1,??main_104+0x4
   \   0000116A   0x7008             STRB     R0,[R1, #+0]
    882                      key_no=255;
   \   0000116C   0x20FF             MOVS     R0,#+255
   \   0000116E   0xF8DF 0x1938      LDR.W    R1,??main_81+0x24
   \   00001172   0x7008             STRB     R0,[R1, #+0]
    883                      key_num=255;
   \   00001174   0x20FF             MOVS     R0,#+255
   \   00001176   0xF8DF 0x1DA0      LDR.W    R1,??main_104
   \   0000117A   0x7008             STRB     R0,[R1, #+0]
    884                    }
    885                  }
   \                     ??main_102: (+1)
   \   0000117C   0xF8DF 0x0D9C      LDR.W    R0,??main_104+0x4
   \   00001180   0x7800             LDRB     R0,[R0, #+0]
   \   00001182   0x2801             CMP      R0,#+1
   \   00001184   0xD086             BEQ.N    ??main_103
    886                  LCD_CLS();
   \   00001186   0x.... 0x....      BL       LCD_CLS
    887                }
    888                
    889                //2号按键按下的时候调节chu
    890                if(key_no==2)
   \                     ??main_101: (+1)
   \   0000118A   0xF8DF 0x091C      LDR.W    R0,??main_81+0x24
   \   0000118E   0x7800             LDRB     R0,[R0, #+0]
   \   00001190   0x2802             CMP      R0,#+2
   \   00001192   0xF040 0x80A3      BNE.W    ??main_108
    891                 {
    892                  key_no=255;
   \   00001196   0x20FF             MOVS     R0,#+255
   \   00001198   0xF8DF 0x190C      LDR.W    R1,??main_81+0x24
   \   0000119C   0x7008             STRB     R0,[R1, #+0]
    893                  BK=2;
   \   0000119E   0x2002             MOVS     R0,#+2
   \   000011A0   0xF8DF 0x1D78      LDR.W    R1,??main_104+0x4
   \   000011A4   0x7008             STRB     R0,[R1, #+0]
    894                  LCD_CLS();
   \   000011A6   0x.... 0x....      BL       LCD_CLS
   \   000011AA   0xE08F             B.N      ??main_109
    895                  while(BK==2)
    896                  {
    897                    delay_ms(110);
   \                     ??main_110: (+1)
   \   000011AC   0x206E             MOVS     R0,#+110
   \   000011AE   0x.... 0x....      BL       delay_ms
    898                    matrix_keyboard_init();
   \   000011B2   0x.... 0x....      BL       matrix_keyboard_init
    899                    key_num=keyboard_scan();
   \   000011B6   0x.... 0x....      BL       keyboard_scan
   \   000011BA   0xF8DF 0x1D5C      LDR.W    R1,??main_104
   \   000011BE   0x7008             STRB     R0,[R1, #+0]
    900                    if(key_num!=255)
   \   000011C0   0xF8DF 0x0D54      LDR.W    R0,??main_104
   \   000011C4   0x7800             LDRB     R0,[R0, #+0]
   \   000011C6   0x28FF             CMP      R0,#+255
   \   000011C8   0xD005             BEQ.N    ??main_111
    901                    {
    902                      key_no=key_num;
   \   000011CA   0xF8DF 0x0D4C      LDR.W    R0,??main_104
   \   000011CE   0x7800             LDRB     R0,[R0, #+0]
   \   000011D0   0xF8DF 0x18D4      LDR.W    R1,??main_81+0x24
   \   000011D4   0x7008             STRB     R0,[R1, #+0]
    903                    }          
    904                    LCD_P8x16Str(0,0,"chu:");
   \                     ??main_111: (+1)
   \   000011D6   0xF8DF 0x2D48      LDR.W    R2,??main_104+0x8
   \   000011DA   0x2100             MOVS     R1,#+0
   \   000011DC   0x2000             MOVS     R0,#+0
   \   000011DE   0x.... 0x....      BL       LCD_P8x16Str
    905                    LCD_P8x16_num3wei(60,0,(uint16)(chu*10));
   \   000011E2   0xF8DF 0x0D40      LDR.W    R0,??main_104+0xC
   \   000011E6   0x6800             LDR      R0,[R0, #+0]
   \   000011E8   0xF8DF 0x1D3C      LDR.W    R1,??main_104+0x10  ;; 0x41200000
   \   000011EC   0x.... 0x....      BL       __aeabi_fmul
   \   000011F0   0x.... 0x....      BL       __aeabi_f2iz
   \   000011F4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000011F6   0x0002             MOVS     R2,R0
   \   000011F8   0x2100             MOVS     R1,#+0
   \   000011FA   0x203C             MOVS     R0,#+60
   \   000011FC   0x.... 0x....      BL       LCD_P8x16_num3wei
    906                    LCD_P8x16Str(0,2,"+:");
   \   00001200   0xA223             ADR.N    R2,??main_96     ;; 0x2B, 0x3A, 0x00, 0x00
   \   00001202   0x2102             MOVS     R1,#+2
   \   00001204   0x2000             MOVS     R0,#+0
   \   00001206   0x.... 0x....      BL       LCD_P8x16Str
    907                    LCD_P8x16Str(60,2,"Key4");
   \   0000120A   0xF8DF 0x2D20      LDR.W    R2,??main_104+0x14
   \   0000120E   0x2102             MOVS     R1,#+2
   \   00001210   0x203C             MOVS     R0,#+60
   \   00001212   0x.... 0x....      BL       LCD_P8x16Str
    908                    LCD_P8x16Str(0,4,"-:");
   \   00001216   0xA21F             ADR.N    R2,??main_96+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00001218   0x2104             MOVS     R1,#+4
   \   0000121A   0x2000             MOVS     R0,#+0
   \   0000121C   0x.... 0x....      BL       LCD_P8x16Str
    909                    LCD_P8x16Str(60,4,"Key5");
   \   00001220   0xF8DF 0x2D0C      LDR.W    R2,??main_104+0x18
   \   00001224   0x2104             MOVS     R1,#+4
   \   00001226   0x203C             MOVS     R0,#+60
   \   00001228   0x.... 0x....      BL       LCD_P8x16Str
    910                    LCD_P8x16Str(0,6,"Re:");
   \   0000122C   0xA21A             ADR.N    R2,??main_96+0x8  ;; "Re:"
   \   0000122E   0x2106             MOVS     R1,#+6
   \   00001230   0x2000             MOVS     R0,#+0
   \   00001232   0x.... 0x....      BL       LCD_P8x16Str
    911                    LCD_P8x16Str(60,6,"Key6");
   \   00001236   0xF8DF 0x2CFC      LDR.W    R2,??main_104+0x1C
   \   0000123A   0x2106             MOVS     R1,#+6
   \   0000123C   0x203C             MOVS     R0,#+60
   \   0000123E   0x.... 0x....      BL       LCD_P8x16Str
    912                    
    913                    if(key_no==7)
   \   00001242   0xF8DF 0x0864      LDR.W    R0,??main_81+0x24
   \   00001246   0x7800             LDRB     R0,[R0, #+0]
   \   00001248   0x2807             CMP      R0,#+7
   \   0000124A   0xD112             BNE.N    ??main_112
    914                    {
    915                      chu=chu+0.1;
   \   0000124C   0xF8DF 0x0CD4      LDR.W    R0,??main_104+0xC
   \   00001250   0x6800             LDR      R0,[R0, #+0]
   \   00001252   0x.... 0x....      BL       __aeabi_f2d
   \   00001256   0xF8DF 0x2CE4      LDR.W    R2,??main_104+0x24  ;; 0x9999999a
   \   0000125A   0x4B58             LDR.N    R3,??main_38     ;; 0x3fb99999
   \   0000125C   0x.... 0x....      BL       __aeabi_dadd
   \   00001260   0x.... 0x....      BL       __aeabi_d2f
   \   00001264   0xF8DF 0x1CBC      LDR.W    R1,??main_104+0xC
   \   00001268   0x6008             STR      R0,[R1, #+0]
    916                      key_no=255;
   \   0000126A   0x20FF             MOVS     R0,#+255
   \   0000126C   0xF8DF 0x1838      LDR.W    R1,??main_81+0x24
   \   00001270   0x7008             STRB     R0,[R1, #+0]
    917                    }
    918                  
    919                    if(key_no==8)
   \                     ??main_112: (+1)
   \   00001272   0xF8DF 0x0834      LDR.W    R0,??main_81+0x24
   \   00001276   0x7800             LDRB     R0,[R0, #+0]
   \   00001278   0x2808             CMP      R0,#+8
   \   0000127A   0xD11A             BNE.N    ??main_113
    920                    {
    921                      chu=chu-0.1;
   \   0000127C   0xF8DF 0x0CA4      LDR.W    R0,??main_104+0xC
   \   00001280   0x6800             LDR      R0,[R0, #+0]
   \   00001282   0x.... 0x....      BL       __aeabi_f2d
   \   00001286   0xF8DF 0x2CB4      LDR.W    R2,??main_104+0x24  ;; 0x9999999a
   \   0000128A   0x4B4D             LDR.N    R3,??main_38+0x4  ;; 0xbfb99999
   \   0000128C   0xE006             B.N      ??main_114
   \   0000128E   0xBF00             Nop      
   \                     ??main_96:
   \   00001290   0x2B 0x3A          DC8      0x2B, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00001294   0x2D 0x3A          DC8      0x2D, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00001298   0x52 0x65          DC8      "Re:"
   \              0x3A 0x00    
   \                     ??main_114: (+1)
   \   0000129C   0x.... 0x....      BL       __aeabi_dadd
   \   000012A0   0x.... 0x....      BL       __aeabi_d2f
   \   000012A4   0xF8DF 0x1C7C      LDR.W    R1,??main_104+0xC
   \   000012A8   0x6008             STR      R0,[R1, #+0]
    922                      key_no=255;
   \   000012AA   0x20FF             MOVS     R0,#+255
   \   000012AC   0xF8DF 0x17F8      LDR.W    R1,??main_81+0x24
   \   000012B0   0x7008             STRB     R0,[R1, #+0]
    923                    }
    924                  
    925                    if(key_no==9)
   \                     ??main_113: (+1)
   \   000012B2   0xF8DF 0x07F4      LDR.W    R0,??main_81+0x24
   \   000012B6   0x7800             LDRB     R0,[R0, #+0]
   \   000012B8   0x2809             CMP      R0,#+9
   \   000012BA   0xD107             BNE.N    ??main_109
    926                    {
    927                      BK=255;
   \   000012BC   0x20FF             MOVS     R0,#+255
   \   000012BE   0xF8DF 0x1C5C      LDR.W    R1,??main_104+0x4
   \   000012C2   0x7008             STRB     R0,[R1, #+0]
    928                      key_no=255;
   \   000012C4   0x20FF             MOVS     R0,#+255
   \   000012C6   0xF8DF 0x17E0      LDR.W    R1,??main_81+0x24
   \   000012CA   0x7008             STRB     R0,[R1, #+0]
    929                    }
    930                  }
   \                     ??main_109: (+1)
   \   000012CC   0xF8DF 0x0C4C      LDR.W    R0,??main_104+0x4
   \   000012D0   0x7800             LDRB     R0,[R0, #+0]
   \   000012D2   0x2802             CMP      R0,#+2
   \   000012D4   0xF43F 0xAF6A      BEQ.W    ??main_110
    931                  LCD_CLS();
   \   000012D8   0x.... 0x....      BL       LCD_CLS
    932                 }
    933                //3号按键按下的时候调节BLsha
    934                if(key_no==3)
   \                     ??main_108: (+1)
   \   000012DC   0xF8DF 0x07C8      LDR.W    R0,??main_81+0x24
   \   000012E0   0x7800             LDRB     R0,[R0, #+0]
   \   000012E2   0x2803             CMP      R0,#+3
   \   000012E4   0xF040 0x8087      BNE.W    ??main_115
    935                 {
    936                  key_no=255;
   \   000012E8   0x20FF             MOVS     R0,#+255
   \   000012EA   0xF8DF 0x17BC      LDR.W    R1,??main_81+0x24
   \   000012EE   0x7008             STRB     R0,[R1, #+0]
    937                  BK=3;
   \   000012F0   0x2003             MOVS     R0,#+3
   \   000012F2   0xF8DF 0x1C28      LDR.W    R1,??main_104+0x4
   \   000012F6   0x7008             STRB     R0,[R1, #+0]
    938                  LCD_CLS();
   \   000012F8   0x.... 0x....      BL       LCD_CLS
   \   000012FC   0xE074             B.N      ??main_116
    939                  while(BK==3)
    940                  {
    941                    delay_ms(110);
   \                     ??main_117: (+1)
   \   000012FE   0x206E             MOVS     R0,#+110
   \   00001300   0x.... 0x....      BL       delay_ms
    942                    matrix_keyboard_init();
   \   00001304   0x.... 0x....      BL       matrix_keyboard_init
    943                    key_num=keyboard_scan();
   \   00001308   0x.... 0x....      BL       keyboard_scan
   \   0000130C   0xF8DF 0x1C08      LDR.W    R1,??main_104
   \   00001310   0x7008             STRB     R0,[R1, #+0]
    944                    if(key_num!=255)
   \   00001312   0xF8DF 0x0C04      LDR.W    R0,??main_104
   \   00001316   0x7800             LDRB     R0,[R0, #+0]
   \   00001318   0x28FF             CMP      R0,#+255
   \   0000131A   0xD005             BEQ.N    ??main_118
    945                    {
    946                      key_no=key_num;
   \   0000131C   0xF8DF 0x0BF8      LDR.W    R0,??main_104
   \   00001320   0x7800             LDRB     R0,[R0, #+0]
   \   00001322   0xF8DF 0x1784      LDR.W    R1,??main_81+0x24
   \   00001326   0x7008             STRB     R0,[R1, #+0]
    947                    }          
    948                    LCD_P8x16Str(0,0,"BLsha:");
   \                     ??main_118: (+1)
   \   00001328   0x.... 0x....      LDR.W    R2,??DataTable0
   \   0000132C   0x2100             MOVS     R1,#+0
   \   0000132E   0x2000             MOVS     R0,#+0
   \   00001330   0x.... 0x....      BL       LCD_P8x16Str
    949                    LCD_P8x16_num3wei(60,0,BLsha);
   \   00001334   0x.... 0x....      LDR.W    R0,??DataTable0_1
   \   00001338   0x7802             LDRB     R2,[R0, #+0]
   \   0000133A   0x2100             MOVS     R1,#+0
   \   0000133C   0x203C             MOVS     R0,#+60
   \   0000133E   0x.... 0x....      BL       LCD_P8x16_num3wei
    950                    LCD_P8x16Str(0,2,"+:");
   \   00001342   0xA2E6             ADR.N    R2,??main_119    ;; 0x2B, 0x3A, 0x00, 0x00
   \   00001344   0x2102             MOVS     R1,#+2
   \   00001346   0x2000             MOVS     R0,#+0
   \   00001348   0x.... 0x....      BL       LCD_P8x16Str
    951                    LCD_P8x16Str(60,2,"Key4");
   \   0000134C   0xF8DF 0x2BDC      LDR.W    R2,??main_104+0x14
   \   00001350   0x2102             MOVS     R1,#+2
   \   00001352   0x203C             MOVS     R0,#+60
   \   00001354   0x.... 0x....      BL       LCD_P8x16Str
    952                    LCD_P8x16Str(0,4,"-:");
   \   00001358   0xA2E1             ADR.N    R2,??main_119+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   0000135A   0x2104             MOVS     R1,#+4
   \   0000135C   0x2000             MOVS     R0,#+0
   \   0000135E   0x.... 0x....      BL       LCD_P8x16Str
    953                    LCD_P8x16Str(60,4,"Key5");
   \   00001362   0xF8DF 0x2BCC      LDR.W    R2,??main_104+0x18
   \   00001366   0x2104             MOVS     R1,#+4
   \   00001368   0x203C             MOVS     R0,#+60
   \   0000136A   0x.... 0x....      BL       LCD_P8x16Str
    954                    LCD_P8x16Str(0,6,"Re:");
   \   0000136E   0xA2DD             ADR.N    R2,??main_119+0x8  ;; "Re:"
   \   00001370   0x2106             MOVS     R1,#+6
   \   00001372   0x2000             MOVS     R0,#+0
   \   00001374   0x.... 0x....      BL       LCD_P8x16Str
    955                    LCD_P8x16Str(60,6,"Key6");
   \   00001378   0xF8DF 0x2BB8      LDR.W    R2,??main_104+0x1C
   \   0000137C   0x2106             MOVS     R1,#+6
   \   0000137E   0x203C             MOVS     R0,#+60
   \   00001380   0x.... 0x....      BL       LCD_P8x16Str
    956                    
    957                    if(key_no==7)
   \   00001384   0xF8DF 0x0720      LDR.W    R0,??main_81+0x24
   \   00001388   0x7800             LDRB     R0,[R0, #+0]
   \   0000138A   0x2807             CMP      R0,#+7
   \   0000138C   0xD10A             BNE.N    ??main_120
    958                    {
    959                      BLsha=BLsha+1;
   \   0000138E   0x.... 0x....      LDR.W    R0,??DataTable0_1
   \   00001392   0x7800             LDRB     R0,[R0, #+0]
   \   00001394   0x1C40             ADDS     R0,R0,#+1
   \   00001396   0x.... 0x....      LDR.W    R1,??DataTable0_1
   \   0000139A   0x7008             STRB     R0,[R1, #+0]
    960                      key_no=255;
   \   0000139C   0x20FF             MOVS     R0,#+255
   \   0000139E   0xF8DF 0x1708      LDR.W    R1,??main_81+0x24
   \   000013A2   0x7008             STRB     R0,[R1, #+0]
    961                    }
    962                  
    963                    if(key_no==8)
   \                     ??main_120: (+1)
   \   000013A4   0xF8DF 0x0700      LDR.W    R0,??main_81+0x24
   \   000013A8   0x7800             LDRB     R0,[R0, #+0]
   \   000013AA   0x2808             CMP      R0,#+8
   \   000013AC   0xD10F             BNE.N    ??main_121
    964                    {
    965                      BLsha=BLsha-1;
   \   000013AE   0x.... 0x....      LDR.W    R0,??DataTable0_1
   \   000013B2   0x7800             LDRB     R0,[R0, #+0]
   \   000013B4   0x1E40             SUBS     R0,R0,#+1
   \   000013B6   0x.... 0x....      LDR.W    R1,??DataTable0_1
   \   000013BA   0xE003             B.N      ??main_122
   \                     ??main_38:
   \   000013BC   0x3FB99999         DC32     0x3fb99999
   \   000013C0   0xBFB99999         DC32     0xbfb99999
   \                     ??main_122: (+1)
   \   000013C4   0x7008             STRB     R0,[R1, #+0]
    966                      key_no=255;
   \   000013C6   0x20FF             MOVS     R0,#+255
   \   000013C8   0xF8DF 0x16DC      LDR.W    R1,??main_81+0x24
   \   000013CC   0x7008             STRB     R0,[R1, #+0]
    967                    }
    968                  
    969                    if(key_no==9)
   \                     ??main_121: (+1)
   \   000013CE   0xF8DF 0x06D8      LDR.W    R0,??main_81+0x24
   \   000013D2   0x7800             LDRB     R0,[R0, #+0]
   \   000013D4   0x2809             CMP      R0,#+9
   \   000013D6   0xD107             BNE.N    ??main_116
    970                    {
    971                      BK=255;
   \   000013D8   0x20FF             MOVS     R0,#+255
   \   000013DA   0xF8DF 0x1B40      LDR.W    R1,??main_104+0x4
   \   000013DE   0x7008             STRB     R0,[R1, #+0]
    972                      key_no=255;
   \   000013E0   0x20FF             MOVS     R0,#+255
   \   000013E2   0xF8DF 0x16C4      LDR.W    R1,??main_81+0x24
   \   000013E6   0x7008             STRB     R0,[R1, #+0]
    973                    }
    974                  }
   \                     ??main_116: (+1)
   \   000013E8   0xF8DF 0x0B30      LDR.W    R0,??main_104+0x4
   \   000013EC   0x7800             LDRB     R0,[R0, #+0]
   \   000013EE   0x2803             CMP      R0,#+3
   \   000013F0   0xD085             BEQ.N    ??main_117
    975                  LCD_CLS();
   \   000013F2   0x.... 0x....      BL       LCD_CLS
    976                 }
    977                
    978                //4号按键按下的时候调节Kmax
    979                if(key_no==4)
   \                     ??main_115: (+1)
   \   000013F6   0xF8DF 0x06B0      LDR.W    R0,??main_81+0x24
   \   000013FA   0x7800             LDRB     R0,[R0, #+0]
   \   000013FC   0x2804             CMP      R0,#+4
   \   000013FE   0xF040 0x80A1      BNE.W    ??main_123
    980                 {
    981                  key_no=255;
   \   00001402   0x20FF             MOVS     R0,#+255
   \   00001404   0xF8DF 0x16A0      LDR.W    R1,??main_81+0x24
   \   00001408   0x7008             STRB     R0,[R1, #+0]
    982                  BK=4;
   \   0000140A   0x2004             MOVS     R0,#+4
   \   0000140C   0xF8DF 0x1B0C      LDR.W    R1,??main_104+0x4
   \   00001410   0x7008             STRB     R0,[R1, #+0]
    983                  LCD_CLS();
   \   00001412   0x.... 0x....      BL       LCD_CLS
   \   00001416   0xE08D             B.N      ??main_124
    984                  while(BK==4)
    985                  {
    986                    LCD_P8x16Str(0,0,"Kmax:");
   \                     ??main_125: (+1)
   \   00001418   0x.... 0x....      LDR.W    R2,??DataTable0_2
   \   0000141C   0x2100             MOVS     R1,#+0
   \   0000141E   0x2000             MOVS     R0,#+0
   \   00001420   0x.... 0x....      BL       LCD_P8x16Str
    987                    LCD_P8x16_num3wei(60,0,(uint16)(Kmax*100));
   \   00001424   0x.... 0x....      LDR.W    R0,??DataTable0_3
   \   00001428   0x6800             LDR      R0,[R0, #+0]
   \   0000142A   0x.... 0x....      LDR.W    R1,??DataTable0_4  ;; 0x42c80000
   \   0000142E   0x.... 0x....      BL       __aeabi_fmul
   \   00001432   0x.... 0x....      BL       __aeabi_f2iz
   \   00001436   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00001438   0x0002             MOVS     R2,R0
   \   0000143A   0x2100             MOVS     R1,#+0
   \   0000143C   0x203C             MOVS     R0,#+60
   \   0000143E   0x.... 0x....      BL       LCD_P8x16_num3wei
    988                    LCD_P8x16Str(0,2,"+:");
   \   00001442   0xA2A6             ADR.N    R2,??main_119    ;; 0x2B, 0x3A, 0x00, 0x00
   \   00001444   0x2102             MOVS     R1,#+2
   \   00001446   0x2000             MOVS     R0,#+0
   \   00001448   0x.... 0x....      BL       LCD_P8x16Str
    989                    LCD_P8x16Str(60,2,"Key7");
   \   0000144C   0xF8DF 0x263C      LDR.W    R2,??main_81+0x8
   \   00001450   0x2102             MOVS     R1,#+2
   \   00001452   0x203C             MOVS     R0,#+60
   \   00001454   0x.... 0x....      BL       LCD_P8x16Str
    990                    LCD_P8x16Str(0,4,"-:");
   \   00001458   0xA2A1             ADR.N    R2,??main_119+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   0000145A   0x2104             MOVS     R1,#+4
   \   0000145C   0x2000             MOVS     R0,#+0
   \   0000145E   0x.... 0x....      BL       LCD_P8x16Str
    991                    LCD_P8x16Str(60,4,"Key8");
   \   00001462   0xF8DF 0x262C      LDR.W    R2,??main_81+0xC
   \   00001466   0x2104             MOVS     R1,#+4
   \   00001468   0x203C             MOVS     R0,#+60
   \   0000146A   0x.... 0x....      BL       LCD_P8x16Str
    992                    LCD_P8x16Str(0,6,"Re:");
   \   0000146E   0xA29D             ADR.N    R2,??main_119+0x8  ;; "Re:"
   \   00001470   0x2106             MOVS     R1,#+6
   \   00001472   0x2000             MOVS     R0,#+0
   \   00001474   0x.... 0x....      BL       LCD_P8x16Str
    993                    LCD_P8x16Str(60,6,"Key9");
   \   00001478   0xF8DF 0x2618      LDR.W    R2,??main_81+0x10
   \   0000147C   0x2106             MOVS     R1,#+6
   \   0000147E   0x203C             MOVS     R0,#+60
   \   00001480   0x.... 0x....      BL       LCD_P8x16Str
    994                    
    995                    delay_ms(110);
   \   00001484   0x206E             MOVS     R0,#+110
   \   00001486   0x.... 0x....      BL       delay_ms
    996                    matrix_keyboard_init();
   \   0000148A   0x.... 0x....      BL       matrix_keyboard_init
    997                    key_num=keyboard_scan();
   \   0000148E   0x.... 0x....      BL       keyboard_scan
   \   00001492   0xF8DF 0x1A84      LDR.W    R1,??main_104
   \   00001496   0x7008             STRB     R0,[R1, #+0]
    998                    if(key_num!=255)
   \   00001498   0xF8DF 0x0A7C      LDR.W    R0,??main_104
   \   0000149C   0x7800             LDRB     R0,[R0, #+0]
   \   0000149E   0x28FF             CMP      R0,#+255
   \   000014A0   0xD005             BEQ.N    ??main_126
    999                    {
   1000                      key_no=key_num;
   \   000014A2   0xF8DF 0x0A74      LDR.W    R0,??main_104
   \   000014A6   0x7800             LDRB     R0,[R0, #+0]
   \   000014A8   0xF8DF 0x15FC      LDR.W    R1,??main_81+0x24
   \   000014AC   0x7008             STRB     R0,[R1, #+0]
   1001                    }          
   1002          
   1003                    if(key_no==7)
   \                     ??main_126: (+1)
   \   000014AE   0xF8DF 0x05F8      LDR.W    R0,??main_81+0x24
   \   000014B2   0x7800             LDRB     R0,[R0, #+0]
   \   000014B4   0x2807             CMP      R0,#+7
   \   000014B6   0xD113             BNE.N    ??main_127
   1004                    {
   1005                      Kmax=Kmax+0.01;
   \   000014B8   0x.... 0x....      LDR.W    R0,??DataTable0_3
   \   000014BC   0x6800             LDR      R0,[R0, #+0]
   \   000014BE   0x.... 0x....      BL       __aeabi_f2d
   \   000014C2   0x.... 0x....      LDR.W    R2,??DataTable0_5  ;; 0x47ae147b
   \   000014C6   0x.... 0x....      LDR.W    R3,??DataTable0_6  ;; 0x3f847ae1
   \   000014CA   0x.... 0x....      BL       __aeabi_dadd
   \   000014CE   0x.... 0x....      BL       __aeabi_d2f
   \   000014D2   0x.... 0x....      LDR.W    R1,??DataTable0_3
   \   000014D6   0x6008             STR      R0,[R1, #+0]
   1006                      key_no=255;
   \   000014D8   0x20FF             MOVS     R0,#+255
   \   000014DA   0xF8DF 0x15CC      LDR.W    R1,??main_81+0x24
   \   000014DE   0x7008             STRB     R0,[R1, #+0]
   1007                    }
   1008                  
   1009                    if(key_no==8)
   \                     ??main_127: (+1)
   \   000014E0   0xF8DF 0x05C4      LDR.W    R0,??main_81+0x24
   \   000014E4   0x7800             LDRB     R0,[R0, #+0]
   \   000014E6   0x2808             CMP      R0,#+8
   \   000014E8   0xD113             BNE.N    ??main_128
   1010                    {
   1011                      Kmax=Kmax-0.01;
   \   000014EA   0x.... 0x....      LDR.W    R0,??DataTable0_3
   \   000014EE   0x6800             LDR      R0,[R0, #+0]
   \   000014F0   0x.... 0x....      BL       __aeabi_f2d
   \   000014F4   0x.... 0x....      LDR.W    R2,??DataTable0_5  ;; 0x47ae147b
   \   000014F8   0x.... 0x....      LDR.W    R3,??DataTable0_7  ;; 0xbf847ae1
   \   000014FC   0x.... 0x....      BL       __aeabi_dadd
   \   00001500   0x.... 0x....      BL       __aeabi_d2f
   \   00001504   0x.... 0x....      LDR.W    R1,??DataTable0_3
   \   00001508   0x6008             STR      R0,[R1, #+0]
   1012                      key_no=255;
   \   0000150A   0x20FF             MOVS     R0,#+255
   \   0000150C   0xF8DF 0x1598      LDR.W    R1,??main_81+0x24
   \   00001510   0x7008             STRB     R0,[R1, #+0]
   1013                    }
   1014                  
   1015                    if(key_no==9)
   \                     ??main_128: (+1)
   \   00001512   0xF8DF 0x0594      LDR.W    R0,??main_81+0x24
   \   00001516   0x7800             LDRB     R0,[R0, #+0]
   \   00001518   0x2809             CMP      R0,#+9
   \   0000151A   0xD10B             BNE.N    ??main_124
   1016                    {
   1017                      BK=255;
   \   0000151C   0x20FF             MOVS     R0,#+255
   \   0000151E   0xF8DF 0x19FC      LDR.W    R1,??main_104+0x4
   \   00001522   0x7008             STRB     R0,[R1, #+0]
   1018                      key_no=255;
   \   00001524   0x20FF             MOVS     R0,#+255
   \   00001526   0xF8DF 0x1580      LDR.W    R1,??main_81+0x24
   \   0000152A   0x7008             STRB     R0,[R1, #+0]
   1019                      key_num=255;//注意控制条件
   \   0000152C   0x20FF             MOVS     R0,#+255
   \   0000152E   0xF8DF 0x19E8      LDR.W    R1,??main_104
   \   00001532   0x7008             STRB     R0,[R1, #+0]
   1020                    }
   1021                  }
   \                     ??main_124: (+1)
   \   00001534   0xF8DF 0x09E4      LDR.W    R0,??main_104+0x4
   \   00001538   0x7800             LDRB     R0,[R0, #+0]
   \   0000153A   0x2804             CMP      R0,#+4
   \   0000153C   0xF43F 0xAF6C      BEQ.W    ??main_125
   1022                  LCD_CLS();
   \   00001540   0x.... 0x....      BL       LCD_CLS
   1023                }
   1024                //5号按键按下的时候调节Kmin
   1025                if(key_no==5)
   \                     ??main_123: (+1)
   \   00001544   0xF8DF 0x0560      LDR.W    R0,??main_81+0x24
   \   00001548   0x7800             LDRB     R0,[R0, #+0]
   \   0000154A   0x2805             CMP      R0,#+5
   \   0000154C   0xF040 0x809D      BNE.W    ??main_129
   1026                 {
   1027                  key_no=255;
   \   00001550   0x20FF             MOVS     R0,#+255
   \   00001552   0xF8DF 0x1554      LDR.W    R1,??main_81+0x24
   \   00001556   0x7008             STRB     R0,[R1, #+0]
   1028                  BK=5;
   \   00001558   0x2005             MOVS     R0,#+5
   \   0000155A   0xF8DF 0x19C0      LDR.W    R1,??main_104+0x4
   \   0000155E   0x7008             STRB     R0,[R1, #+0]
   1029                  LCD_CLS();
   \   00001560   0x.... 0x....      BL       LCD_CLS
   \   00001564   0xE089             B.N      ??main_130
   1030                  while(BK==5)
   1031                  {
   1032                    delay_ms(110);
   \                     ??main_131: (+1)
   \   00001566   0x206E             MOVS     R0,#+110
   \   00001568   0x.... 0x....      BL       delay_ms
   1033                    matrix_keyboard_init();
   \   0000156C   0x.... 0x....      BL       matrix_keyboard_init
   1034                    key_num=keyboard_scan();
   \   00001570   0x.... 0x....      BL       keyboard_scan
   \   00001574   0xF8DF 0x19A0      LDR.W    R1,??main_104
   \   00001578   0x7008             STRB     R0,[R1, #+0]
   1035                    if(key_num!=255)
   \   0000157A   0xF8DF 0x099C      LDR.W    R0,??main_104
   \   0000157E   0x7800             LDRB     R0,[R0, #+0]
   \   00001580   0x28FF             CMP      R0,#+255
   \   00001582   0xD005             BEQ.N    ??main_132
   1036                    {
   1037                      key_no=key_num;
   \   00001584   0xF8DF 0x0990      LDR.W    R0,??main_104
   \   00001588   0x7800             LDRB     R0,[R0, #+0]
   \   0000158A   0xF8DF 0x151C      LDR.W    R1,??main_81+0x24
   \   0000158E   0x7008             STRB     R0,[R1, #+0]
   1038                    }          
   1039                    LCD_P8x16Str(0,0,"Kmin:");
   \                     ??main_132: (+1)
   \   00001590   0x.... 0x....      LDR.W    R2,??DataTable1
   \   00001594   0x2100             MOVS     R1,#+0
   \   00001596   0x2000             MOVS     R0,#+0
   \   00001598   0x.... 0x....      BL       LCD_P8x16Str
   1040                    LCD_P8x16_num3wei(60,0,(uint16)(Kmin*100));
   \   0000159C   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   000015A0   0x6800             LDR      R0,[R0, #+0]
   \   000015A2   0x.... 0x....      LDR.W    R1,??DataTable0_4  ;; 0x42c80000
   \   000015A6   0x.... 0x....      BL       __aeabi_fmul
   \   000015AA   0x.... 0x....      BL       __aeabi_f2iz
   \   000015AE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000015B0   0x0002             MOVS     R2,R0
   \   000015B2   0x2100             MOVS     R1,#+0
   \   000015B4   0x203C             MOVS     R0,#+60
   \   000015B6   0x.... 0x....      BL       LCD_P8x16_num3wei
   1041                    LCD_P8x16Str(0,2,"+:");
   \   000015BA   0xA248             ADR.N    R2,??main_119    ;; 0x2B, 0x3A, 0x00, 0x00
   \   000015BC   0x2102             MOVS     R1,#+2
   \   000015BE   0x2000             MOVS     R0,#+0
   \   000015C0   0x.... 0x....      BL       LCD_P8x16Str
   1042                    LCD_P8x16Str(60,2,"Key4");
   \   000015C4   0xF8DF 0x2964      LDR.W    R2,??main_104+0x14
   \   000015C8   0x2102             MOVS     R1,#+2
   \   000015CA   0x203C             MOVS     R0,#+60
   \   000015CC   0x.... 0x....      BL       LCD_P8x16Str
   1043                    LCD_P8x16Str(0,4,"-:");
   \   000015D0   0xA243             ADR.N    R2,??main_119+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   000015D2   0x2104             MOVS     R1,#+4
   \   000015D4   0x2000             MOVS     R0,#+0
   \   000015D6   0x.... 0x....      BL       LCD_P8x16Str
   1044                    LCD_P8x16Str(60,4,"Key5");
   \   000015DA   0xF8DF 0x2954      LDR.W    R2,??main_104+0x18
   \   000015DE   0x2104             MOVS     R1,#+4
   \   000015E0   0x203C             MOVS     R0,#+60
   \   000015E2   0x.... 0x....      BL       LCD_P8x16Str
   1045                    LCD_P8x16Str(0,6,"Re:");
   \   000015E6   0xA23F             ADR.N    R2,??main_119+0x8  ;; "Re:"
   \   000015E8   0x2106             MOVS     R1,#+6
   \   000015EA   0x2000             MOVS     R0,#+0
   \   000015EC   0x.... 0x....      BL       LCD_P8x16Str
   1046                    LCD_P8x16Str(60,6,"Key6");
   \   000015F0   0xF8DF 0x2940      LDR.W    R2,??main_104+0x1C
   \   000015F4   0x2106             MOVS     R1,#+6
   \   000015F6   0x203C             MOVS     R0,#+60
   \   000015F8   0x.... 0x....      BL       LCD_P8x16Str
   1047                    
   1048                    if(key_no==7)
   \   000015FC   0xF8DF 0x04A8      LDR.W    R0,??main_81+0x24
   \   00001600   0x7800             LDRB     R0,[R0, #+0]
   \   00001602   0x2807             CMP      R0,#+7
   \   00001604   0xD113             BNE.N    ??main_133
   1049                    {
   1050                      Kmin=Kmin+0.01;
   \   00001606   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000160A   0x6800             LDR      R0,[R0, #+0]
   \   0000160C   0x.... 0x....      BL       __aeabi_f2d
   \   00001610   0x.... 0x....      LDR.W    R2,??DataTable0_5  ;; 0x47ae147b
   \   00001614   0x.... 0x....      LDR.W    R3,??DataTable0_6  ;; 0x3f847ae1
   \   00001618   0x.... 0x....      BL       __aeabi_dadd
   \   0000161C   0x.... 0x....      BL       __aeabi_d2f
   \   00001620   0x.... 0x....      LDR.W    R1,??DataTable1_2
   \   00001624   0x6008             STR      R0,[R1, #+0]
   1051                      key_no=255;
   \   00001626   0x20FF             MOVS     R0,#+255
   \   00001628   0xF8DF 0x147C      LDR.W    R1,??main_81+0x24
   \   0000162C   0x7008             STRB     R0,[R1, #+0]
   1052                    }
   1053                  
   1054                    if(key_no==8)
   \                     ??main_133: (+1)
   \   0000162E   0xF8DF 0x0478      LDR.W    R0,??main_81+0x24
   \   00001632   0x7800             LDRB     R0,[R0, #+0]
   \   00001634   0x2808             CMP      R0,#+8
   \   00001636   0xD113             BNE.N    ??main_134
   1055                    {
   1056                      Kmin=Kmin-0.01;
   \   00001638   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000163C   0x6800             LDR      R0,[R0, #+0]
   \   0000163E   0x.... 0x....      BL       __aeabi_f2d
   \   00001642   0x.... 0x....      LDR.W    R2,??DataTable0_5  ;; 0x47ae147b
   \   00001646   0x.... 0x....      LDR.W    R3,??DataTable0_7  ;; 0xbf847ae1
   \   0000164A   0x.... 0x....      BL       __aeabi_dadd
   \   0000164E   0x.... 0x....      BL       __aeabi_d2f
   \   00001652   0x.... 0x....      LDR.W    R1,??DataTable1_2
   \   00001656   0x6008             STR      R0,[R1, #+0]
   1057                      key_no=255;
   \   00001658   0x20FF             MOVS     R0,#+255
   \   0000165A   0xF8DF 0x144C      LDR.W    R1,??main_81+0x24
   \   0000165E   0x7008             STRB     R0,[R1, #+0]
   1058                    }
   1059                  
   1060                    if(key_no==9)
   \                     ??main_134: (+1)
   \   00001660   0xF8DF 0x0444      LDR.W    R0,??main_81+0x24
   \   00001664   0x7800             LDRB     R0,[R0, #+0]
   \   00001666   0x2809             CMP      R0,#+9
   \   00001668   0xD107             BNE.N    ??main_130
   1061                    {
   1062                      BK=255;
   \   0000166A   0x20FF             MOVS     R0,#+255
   \   0000166C   0xF8DF 0x18AC      LDR.W    R1,??main_104+0x4
   \   00001670   0x7008             STRB     R0,[R1, #+0]
   1063                      key_no=255;
   \   00001672   0x20FF             MOVS     R0,#+255
   \   00001674   0xF8DF 0x1430      LDR.W    R1,??main_81+0x24
   \   00001678   0x7008             STRB     R0,[R1, #+0]
   1064                    }
   1065                  }
   \                     ??main_130: (+1)
   \   0000167A   0xF8DF 0x08A0      LDR.W    R0,??main_104+0x4
   \   0000167E   0x7800             LDRB     R0,[R0, #+0]
   \   00001680   0x2805             CMP      R0,#+5
   \   00001682   0xF43F 0xAF70      BEQ.W    ??main_131
   1066                  LCD_CLS();
   \   00001686   0x.... 0x....      BL       LCD_CLS
   1067                 }
   1068                //6号按键按下的时候调节Pmax
   1069                if(key_no==6)
   \                     ??main_129: (+1)
   \   0000168A   0xF8DF 0x041C      LDR.W    R0,??main_81+0x24
   \   0000168E   0x7800             LDRB     R0,[R0, #+0]
   \   00001690   0x2806             CMP      R0,#+6
   \   00001692   0xF040 0x8084      BNE.W    ??main_135
   1070                 {
   1071                  key_no=255;
   \   00001696   0x20FF             MOVS     R0,#+255
   \   00001698   0xF8DF 0x140C      LDR.W    R1,??main_81+0x24
   \   0000169C   0x7008             STRB     R0,[R1, #+0]
   1072                  BK=6;
   \   0000169E   0x2006             MOVS     R0,#+6
   \   000016A0   0xF8DF 0x1878      LDR.W    R1,??main_104+0x4
   \   000016A4   0x7008             STRB     R0,[R1, #+0]
   1073                  LCD_CLS();
   \   000016A6   0x.... 0x....      BL       LCD_CLS
   \   000016AA   0xE071             B.N      ??main_136
   1074                  while(BK==6)
   1075                  {
   1076                    delay_ms(110);
   \                     ??main_137: (+1)
   \   000016AC   0x206E             MOVS     R0,#+110
   \   000016AE   0x.... 0x....      BL       delay_ms
   1077                    matrix_keyboard_init();
   \   000016B2   0x.... 0x....      BL       matrix_keyboard_init
   1078                    key_num=keyboard_scan();
   \   000016B6   0x.... 0x....      BL       keyboard_scan
   \   000016BA   0xF8DF 0x185C      LDR.W    R1,??main_104
   \   000016BE   0x7008             STRB     R0,[R1, #+0]
   1079                    if(key_num!=255)
   \   000016C0   0xF8DF 0x0854      LDR.W    R0,??main_104
   \   000016C4   0x7800             LDRB     R0,[R0, #+0]
   \   000016C6   0x28FF             CMP      R0,#+255
   \   000016C8   0xD005             BEQ.N    ??main_138
   1080                    {
   1081                      key_no=key_num;
   \   000016CA   0xF8DF 0x084C      LDR.W    R0,??main_104
   \   000016CE   0x7800             LDRB     R0,[R0, #+0]
   \   000016D0   0xF8DF 0x13D4      LDR.W    R1,??main_81+0x24
   \   000016D4   0x7008             STRB     R0,[R1, #+0]
   1082                    }          
   1083                    LCD_P8x16Str(0,0,"Pmax:");
   \                     ??main_138: (+1)
   \   000016D6   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   000016DA   0xE005             B.N      ??main_139
   \                     ??main_119:
   \   000016DC   0x2B 0x3A          DC8      0x2B, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   000016E0   0x2D 0x3A          DC8      0x2D, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   000016E4   0x52 0x65          DC8      "Re:"
   \              0x3A 0x00    
   \                     ??main_139: (+1)
   \   000016E8   0x2100             MOVS     R1,#+0
   \   000016EA   0x2000             MOVS     R0,#+0
   \   000016EC   0x.... 0x....      BL       LCD_P8x16Str
   1084                    LCD_P8x16_num3wei(60,0,Pmax);
   \   000016F0   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   000016F4   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000016F8   0x2100             MOVS     R1,#+0
   \   000016FA   0x203C             MOVS     R0,#+60
   \   000016FC   0x.... 0x....      BL       LCD_P8x16_num3wei
   1085                    LCD_P8x16Str(0,2,"+:");
   \   00001700   0xA287             ADR.N    R2,??main_74+0x8  ;; 0x2B, 0x3A, 0x00, 0x00
   \   00001702   0x2102             MOVS     R1,#+2
   \   00001704   0x2000             MOVS     R0,#+0
   \   00001706   0x.... 0x....      BL       LCD_P8x16Str
   1086                    LCD_P8x16Str(60,2,"Key4");
   \   0000170A   0xF8DF 0x2820      LDR.W    R2,??main_104+0x14
   \   0000170E   0x2102             MOVS     R1,#+2
   \   00001710   0x203C             MOVS     R0,#+60
   \   00001712   0x.... 0x....      BL       LCD_P8x16Str
   1087                    LCD_P8x16Str(0,4,"-:");
   \   00001716   0xA283             ADR.N    R2,??main_74+0xC  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00001718   0x2104             MOVS     R1,#+4
   \   0000171A   0x2000             MOVS     R0,#+0
   \   0000171C   0x.... 0x....      BL       LCD_P8x16Str
   1088                    LCD_P8x16Str(60,4,"Key5");
   \   00001720   0xF8DF 0x280C      LDR.W    R2,??main_104+0x18
   \   00001724   0x2104             MOVS     R1,#+4
   \   00001726   0x203C             MOVS     R0,#+60
   \   00001728   0x.... 0x....      BL       LCD_P8x16Str
   1089                    LCD_P8x16Str(0,6,"Re:");
   \   0000172C   0xA27E             ADR.N    R2,??main_74+0x10  ;; "Re:"
   \   0000172E   0x2106             MOVS     R1,#+6
   \   00001730   0x2000             MOVS     R0,#+0
   \   00001732   0x.... 0x....      BL       LCD_P8x16Str
   1090                    LCD_P8x16Str(60,6,"Key6");
   \   00001736   0xF8DF 0x27FC      LDR.W    R2,??main_104+0x1C
   \   0000173A   0x2106             MOVS     R1,#+6
   \   0000173C   0x203C             MOVS     R0,#+60
   \   0000173E   0x.... 0x....      BL       LCD_P8x16Str
   1091                    
   1092                    if(key_no==7)
   \   00001742   0x48D9             LDR.N    R0,??main_81+0x24
   \   00001744   0x7800             LDRB     R0,[R0, #+0]
   \   00001746   0x2807             CMP      R0,#+7
   \   00001748   0xD109             BNE.N    ??main_140
   1093                    {
   1094                      Pmax=Pmax+5;
   \   0000174A   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   0000174E   0x8800             LDRH     R0,[R0, #+0]
   \   00001750   0x1D40             ADDS     R0,R0,#+5
   \   00001752   0x.... 0x....      LDR.W    R1,??DataTable1_4
   \   00001756   0x8008             STRH     R0,[R1, #+0]
   1095                      key_no=255;
   \   00001758   0x20FF             MOVS     R0,#+255
   \   0000175A   0x49D3             LDR.N    R1,??main_81+0x24
   \   0000175C   0x7008             STRB     R0,[R1, #+0]
   1096                    }
   1097                  
   1098                    if(key_no==8)
   \                     ??main_140: (+1)
   \   0000175E   0x48D2             LDR.N    R0,??main_81+0x24
   \   00001760   0x7800             LDRB     R0,[R0, #+0]
   \   00001762   0x2808             CMP      R0,#+8
   \   00001764   0xD109             BNE.N    ??main_141
   1099                    {
   1100                      Pmax=Pmax-5;
   \   00001766   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   0000176A   0x8800             LDRH     R0,[R0, #+0]
   \   0000176C   0x1F40             SUBS     R0,R0,#+5
   \   0000176E   0x.... 0x....      LDR.W    R1,??DataTable1_4
   \   00001772   0x8008             STRH     R0,[R1, #+0]
   1101                      key_no=255;
   \   00001774   0x20FF             MOVS     R0,#+255
   \   00001776   0x49CC             LDR.N    R1,??main_81+0x24
   \   00001778   0x7008             STRB     R0,[R1, #+0]
   1102                    }
   1103                  
   1104                    if(key_no==9)
   \                     ??main_141: (+1)
   \   0000177A   0x48CB             LDR.N    R0,??main_81+0x24
   \   0000177C   0x7800             LDRB     R0,[R0, #+0]
   \   0000177E   0x2809             CMP      R0,#+9
   \   00001780   0xD106             BNE.N    ??main_136
   1105                    {
   1106                      BK=255;
   \   00001782   0x20FF             MOVS     R0,#+255
   \   00001784   0xF8DF 0x1794      LDR.W    R1,??main_104+0x4
   \   00001788   0x7008             STRB     R0,[R1, #+0]
   1107                      key_no=255;
   \   0000178A   0x20FF             MOVS     R0,#+255
   \   0000178C   0x49C6             LDR.N    R1,??main_81+0x24
   \   0000178E   0x7008             STRB     R0,[R1, #+0]
   1108                    }
   1109                  }
   \                     ??main_136: (+1)
   \   00001790   0xF8DF 0x0788      LDR.W    R0,??main_104+0x4
   \   00001794   0x7800             LDRB     R0,[R0, #+0]
   \   00001796   0x2806             CMP      R0,#+6
   \   00001798   0xD088             BEQ.N    ??main_137
   1110                  LCD_CLS();
   \   0000179A   0x.... 0x....      BL       LCD_CLS
   1111                 }
   1112               //10号按键按下 采集数据
   1113               if(key_no==10)
   \                     ??main_135: (+1)
   \   0000179E   0x48C2             LDR.N    R0,??main_81+0x24
   \   000017A0   0x7800             LDRB     R0,[R0, #+0]
   \   000017A2   0x280A             CMP      R0,#+10
   \   000017A4   0xF47F 0xAC02      BNE.W    ??main_99
   1114               {
   1115                 key_no=255;
   \   000017A8   0x20FF             MOVS     R0,#+255
   \   000017AA   0x49BF             LDR.N    R1,??main_81+0x24
   \   000017AC   0x7008             STRB     R0,[R1, #+0]
   1116                 LCD_CLS();
   \   000017AE   0x.... 0x....      BL       LCD_CLS
   1117                 break;
   1118               }
   1119             }   
   1120             //-----------------------------------------------------------------
   1121             //--------------------------第三轮 按键调参--------------------------
   1122             //-----------------------------------------------------------------
   1123             while(1)
   1124             { 
   1125               //防止跳二轮调参
   1126                delay_ms(250);
   \                     ??main_142: (+1)
   \   000017B2   0x20FA             MOVS     R0,#+250
   \   000017B4   0x.... 0x....      BL       delay_ms
   1127                
   1128                //user GUI
   1129                LCD_P8x16Str(0,0,"sh_x:1");
   \   000017B8   0x.... 0x....      LDR.W    R2,??DataTable1_5
   \   000017BC   0x2100             MOVS     R1,#+0
   \   000017BE   0x2000             MOVS     R0,#+0
   \   000017C0   0x.... 0x....      BL       LCD_P8x16Str
   1130                LCD_P8x16Str(60,0,"fch_mo:2");
   \   000017C4   0x.... 0x....      LDR.W    R2,??DataTable1_6
   \   000017C8   0x2100             MOVS     R1,#+0
   \   000017CA   0x203C             MOVS     R0,#+60
   \   000017CC   0x.... 0x....      BL       LCD_P8x16Str
   1131                LCD_P8x16Str(0,2,"POshen:3");
   \   000017D0   0x.... 0x....      LDR.W    R2,??DataTable1_7
   \   000017D4   0x2102             MOVS     R1,#+2
   \   000017D6   0x2000             MOVS     R0,#+0
   \   000017D8   0x.... 0x....      BL       LCD_P8x16Str
   1132                LCD_P8x16Str(60,2,"shmode:4");
   \   000017DC   0x.... 0x....      LDR.W    R2,??DataTable1_8
   \   000017E0   0x2102             MOVS     R1,#+2
   \   000017E2   0x203C             MOVS     R0,#+60
   \   000017E4   0x.... 0x....      BL       LCD_P8x16Str
   1133                //LCD_P8x16Str(0,4,"Kmin");
   1134                //LCD_P8x16Str(60,4,"Pmax:6");
   1135                
   1136                matrix_keyboard_init();
   \   000017E8   0x.... 0x....      BL       matrix_keyboard_init
   1137                key_no=keyboard_scan();
   \   000017EC   0x.... 0x....      BL       keyboard_scan
   \   000017F0   0x49AD             LDR.N    R1,??main_81+0x24
   \   000017F2   0x7008             STRB     R0,[R1, #+0]
   1138                
   1139                delay_ms(110);
   \   000017F4   0x206E             MOVS     R0,#+110
   \   000017F6   0x.... 0x....      BL       delay_ms
   1140          
   1141                //1号按键按下的时候调节sh_x
   1142                if(key_no==1)
   \   000017FA   0x48AB             LDR.N    R0,??main_81+0x24
   \   000017FC   0x7800             LDRB     R0,[R0, #+0]
   \   000017FE   0x2801             CMP      R0,#+1
   \   00001800   0xD17A             BNE.N    ??main_143
   1143                 {
   1144                  key_no=255;
   \   00001802   0x20FF             MOVS     R0,#+255
   \   00001804   0x49A8             LDR.N    R1,??main_81+0x24
   \   00001806   0x7008             STRB     R0,[R1, #+0]
   1145                  BK=1;
   \   00001808   0x2001             MOVS     R0,#+1
   \   0000180A   0xF8DF 0x1710      LDR.W    R1,??main_104+0x4
   \   0000180E   0x7008             STRB     R0,[R1, #+0]
   1146                  LCD_CLS();
   \   00001810   0x.... 0x....      BL       LCD_CLS
   \   00001814   0xE069             B.N      ??main_144
   1147                  while(BK==1)
   1148                  {
   1149                    LCD_P8x16Str(0,0,"sh_x:");
   \                     ??main_145: (+1)
   \   00001816   0x.... 0x....      LDR.W    R2,??DataTable1_9
   \   0000181A   0x2100             MOVS     R1,#+0
   \   0000181C   0x2000             MOVS     R0,#+0
   \   0000181E   0x.... 0x....      BL       LCD_P8x16Str
   1150                    LCD_P8x16_number_4(60,0,sh_x);
   \   00001822   0x.... 0x....      LDR.W    R0,??DataTable1_10
   \   00001826   0x7802             LDRB     R2,[R0, #+0]
   \   00001828   0x2100             MOVS     R1,#+0
   \   0000182A   0x203C             MOVS     R0,#+60
   \   0000182C   0x.... 0x....      BL       LCD_P8x16_number_4
   1151                    LCD_P8x16Str(0,2,"+:");
   \   00001830   0xA23B             ADR.N    R2,??main_74+0x8  ;; 0x2B, 0x3A, 0x00, 0x00
   \   00001832   0x2102             MOVS     R1,#+2
   \   00001834   0x2000             MOVS     R0,#+0
   \   00001836   0x.... 0x....      BL       LCD_P8x16Str
   1152                    LCD_P8x16Str(60,2,"Key7");
   \   0000183A   0x4A94             LDR.N    R2,??main_81+0x8
   \   0000183C   0x2102             MOVS     R1,#+2
   \   0000183E   0x203C             MOVS     R0,#+60
   \   00001840   0x.... 0x....      BL       LCD_P8x16Str
   1153                    LCD_P8x16Str(0,4,"-:");
   \   00001844   0xA237             ADR.N    R2,??main_74+0xC  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00001846   0x2104             MOVS     R1,#+4
   \   00001848   0x2000             MOVS     R0,#+0
   \   0000184A   0x.... 0x....      BL       LCD_P8x16Str
   1154                    LCD_P8x16Str(60,4,"Key8");
   \   0000184E   0x4A90             LDR.N    R2,??main_81+0xC
   \   00001850   0x2104             MOVS     R1,#+4
   \   00001852   0x203C             MOVS     R0,#+60
   \   00001854   0x.... 0x....      BL       LCD_P8x16Str
   1155                    LCD_P8x16Str(0,6,"Re:");
   \   00001858   0xA233             ADR.N    R2,??main_74+0x10  ;; "Re:"
   \   0000185A   0x2106             MOVS     R1,#+6
   \   0000185C   0x2000             MOVS     R0,#+0
   \   0000185E   0x.... 0x....      BL       LCD_P8x16Str
   1156                    LCD_P8x16Str(60,6,"Key9");
   \   00001862   0x4A8C             LDR.N    R2,??main_81+0x10
   \   00001864   0x2106             MOVS     R1,#+6
   \   00001866   0x203C             MOVS     R0,#+60
   \   00001868   0x.... 0x....      BL       LCD_P8x16Str
   1157                    
   1158                    delay_ms(110);
   \   0000186C   0x206E             MOVS     R0,#+110
   \   0000186E   0x.... 0x....      BL       delay_ms
   1159                    matrix_keyboard_init();
   \   00001872   0x.... 0x....      BL       matrix_keyboard_init
   1160                    key_num=keyboard_scan();
   \   00001876   0x.... 0x....      BL       keyboard_scan
   \   0000187A   0xF8DF 0x169C      LDR.W    R1,??main_104
   \   0000187E   0x7008             STRB     R0,[R1, #+0]
   1161                    if(key_num!=255)
   \   00001880   0xF8DF 0x0694      LDR.W    R0,??main_104
   \   00001884   0x7800             LDRB     R0,[R0, #+0]
   \   00001886   0x28FF             CMP      R0,#+255
   \   00001888   0xD004             BEQ.N    ??main_146
   1162                    {
   1163                      key_no=key_num;
   \   0000188A   0xF8DF 0x068C      LDR.W    R0,??main_104
   \   0000188E   0x7800             LDRB     R0,[R0, #+0]
   \   00001890   0x4985             LDR.N    R1,??main_81+0x24
   \   00001892   0x7008             STRB     R0,[R1, #+0]
   1164                    }          
   1165          
   1166                    if(key_no==7)
   \                     ??main_146: (+1)
   \   00001894   0x4884             LDR.N    R0,??main_81+0x24
   \   00001896   0x7800             LDRB     R0,[R0, #+0]
   \   00001898   0x2807             CMP      R0,#+7
   \   0000189A   0xD109             BNE.N    ??main_147
   1167                    {
   1168                      sh_x=sh_x+1;
   \   0000189C   0x.... 0x....      LDR.W    R0,??DataTable1_10
   \   000018A0   0x7800             LDRB     R0,[R0, #+0]
   \   000018A2   0x1C40             ADDS     R0,R0,#+1
   \   000018A4   0x.... 0x....      LDR.W    R1,??DataTable1_10
   \   000018A8   0x7008             STRB     R0,[R1, #+0]
   1169                      key_no=255;
   \   000018AA   0x20FF             MOVS     R0,#+255
   \   000018AC   0x497E             LDR.N    R1,??main_81+0x24
   \   000018AE   0x7008             STRB     R0,[R1, #+0]
   1170                    }
   1171                  
   1172                    if(key_no==8)
   \                     ??main_147: (+1)
   \   000018B0   0x487D             LDR.N    R0,??main_81+0x24
   \   000018B2   0x7800             LDRB     R0,[R0, #+0]
   \   000018B4   0x2808             CMP      R0,#+8
   \   000018B6   0xD109             BNE.N    ??main_148
   1173                    {
   1174                      sh_x=sh_x-1;
   \   000018B8   0x.... 0x....      LDR.W    R0,??DataTable1_10
   \   000018BC   0x7800             LDRB     R0,[R0, #+0]
   \   000018BE   0x1E40             SUBS     R0,R0,#+1
   \   000018C0   0x.... 0x....      LDR.W    R1,??DataTable1_10
   \   000018C4   0x7008             STRB     R0,[R1, #+0]
   1175                      key_no=255;
   \   000018C6   0x20FF             MOVS     R0,#+255
   \   000018C8   0x4977             LDR.N    R1,??main_81+0x24
   \   000018CA   0x7008             STRB     R0,[R1, #+0]
   1176                    }
   1177                  
   1178                    if(key_no==9)
   \                     ??main_148: (+1)
   \   000018CC   0x4876             LDR.N    R0,??main_81+0x24
   \   000018CE   0x7800             LDRB     R0,[R0, #+0]
   \   000018D0   0x2809             CMP      R0,#+9
   \   000018D2   0xD10A             BNE.N    ??main_144
   1179                    {
   1180                      BK=255;
   \   000018D4   0x20FF             MOVS     R0,#+255
   \   000018D6   0xF8DF 0x1644      LDR.W    R1,??main_104+0x4
   \   000018DA   0x7008             STRB     R0,[R1, #+0]
   1181                      key_no=255;
   \   000018DC   0x20FF             MOVS     R0,#+255
   \   000018DE   0x4972             LDR.N    R1,??main_81+0x24
   \   000018E0   0x7008             STRB     R0,[R1, #+0]
   1182                      key_num=255;
   \   000018E2   0x20FF             MOVS     R0,#+255
   \   000018E4   0xF8DF 0x1630      LDR.W    R1,??main_104
   \   000018E8   0x7008             STRB     R0,[R1, #+0]
   1183                    }
   1184                  }
   \                     ??main_144: (+1)
   \   000018EA   0xF8DF 0x0630      LDR.W    R0,??main_104+0x4
   \   000018EE   0x7800             LDRB     R0,[R0, #+0]
   \   000018F0   0x2801             CMP      R0,#+1
   \   000018F2   0xD090             BEQ.N    ??main_145
   1185                  LCD_CLS();
   \   000018F4   0x.... 0x....      BL       LCD_CLS
   1186                }
   1187                
   1188                //2号按键按下的时候调节fch_mo
   1189                if(key_no==2)
   \                     ??main_143: (+1)
   \   000018F8   0x486B             LDR.N    R0,??main_81+0x24
   \   000018FA   0x7800             LDRB     R0,[R0, #+0]
   \   000018FC   0x2802             CMP      R0,#+2
   \   000018FE   0xF040 0x8085      BNE.W    ??main_149
   1190                 {
   1191                  key_no=255;
   \   00001902   0x20FF             MOVS     R0,#+255
   \   00001904   0x4968             LDR.N    R1,??main_81+0x24
   \   00001906   0x7008             STRB     R0,[R1, #+0]
   1192                  BK=2;
   \   00001908   0x2002             MOVS     R0,#+2
   \   0000190A   0xF8DF 0x1610      LDR.W    R1,??main_104+0x4
   \   0000190E   0x7008             STRB     R0,[R1, #+0]
   1193                  LCD_CLS();
   \   00001910   0x.... 0x....      BL       LCD_CLS
   \   00001914   0xE073             B.N      ??main_150
   \   00001916   0xBF00             Nop      
   \                     ??main_74:
   \   00001918   0x........         DC32     `?<Constant "PMAX:">`
   \   0000191C   0x........         DC32     PMAX
   \   00001920   0x2B 0x3A          DC8      0x2B, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00001924   0x2D 0x3A          DC8      0x2D, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00001928   0x52 0x65          DC8      "Re:"
   \              0x3A 0x00    
   1194                  while(BK==2)
   1195                  {
   1196                    delay_ms(110);
   \                     ??main_151: (+1)
   \   0000192C   0x206E             MOVS     R0,#+110
   \   0000192E   0x.... 0x....      BL       delay_ms
   1197                    matrix_keyboard_init();
   \   00001932   0x.... 0x....      BL       matrix_keyboard_init
   1198                    key_num=keyboard_scan();
   \   00001936   0x.... 0x....      BL       keyboard_scan
   \   0000193A   0xF8DF 0x15DC      LDR.W    R1,??main_104
   \   0000193E   0x7008             STRB     R0,[R1, #+0]
   1199                    if(key_num!=255)
   \   00001940   0xF8DF 0x05D4      LDR.W    R0,??main_104
   \   00001944   0x7800             LDRB     R0,[R0, #+0]
   \   00001946   0x28FF             CMP      R0,#+255
   \   00001948   0xD004             BEQ.N    ??main_152
   1200                    {
   1201                      key_no=key_num;
   \   0000194A   0xF8DF 0x05CC      LDR.W    R0,??main_104
   \   0000194E   0x7800             LDRB     R0,[R0, #+0]
   \   00001950   0x4955             LDR.N    R1,??main_81+0x24
   \   00001952   0x7008             STRB     R0,[R1, #+0]
   1202                    }          
   1203                    LCD_P8x16Str(0,0,"fch_mo:");
   \                     ??main_152: (+1)
   \   00001954   0x.... 0x....      LDR.W    R2,??DataTable1_11
   \   00001958   0x2100             MOVS     R1,#+0
   \   0000195A   0x2000             MOVS     R0,#+0
   \   0000195C   0x.... 0x....      BL       LCD_P8x16Str
   1204                    LCD_P8x16_num3wei(60,0,fch_mo);
   \   00001960   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   00001964   0x7802             LDRB     R2,[R0, #+0]
   \   00001966   0x2100             MOVS     R1,#+0
   \   00001968   0x203C             MOVS     R0,#+60
   \   0000196A   0x.... 0x....      BL       LCD_P8x16_num3wei
   1205                    LCD_P8x16Str(0,2,"+:");
   \   0000196E   0xA2D5             ADR.N    R2,??main_153    ;; 0x2B, 0x3A, 0x00, 0x00
   \   00001970   0x2102             MOVS     R1,#+2
   \   00001972   0x2000             MOVS     R0,#+0
   \   00001974   0x.... 0x....      BL       LCD_P8x16Str
   1206                    LCD_P8x16Str(60,2,"Key4");
   \   00001978   0xF8DF 0x25B0      LDR.W    R2,??main_104+0x14
   \   0000197C   0x2102             MOVS     R1,#+2
   \   0000197E   0x203C             MOVS     R0,#+60
   \   00001980   0x.... 0x....      BL       LCD_P8x16Str
   1207                    LCD_P8x16Str(0,4,"-:");
   \   00001984   0xA2D0             ADR.N    R2,??main_153+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00001986   0x2104             MOVS     R1,#+4
   \   00001988   0x2000             MOVS     R0,#+0
   \   0000198A   0x.... 0x....      BL       LCD_P8x16Str
   1208                    LCD_P8x16Str(60,4,"Key5");
   \   0000198E   0xF8DF 0x25A0      LDR.W    R2,??main_104+0x18
   \   00001992   0x2104             MOVS     R1,#+4
   \   00001994   0x203C             MOVS     R0,#+60
   \   00001996   0x.... 0x....      BL       LCD_P8x16Str
   1209                    LCD_P8x16Str(0,6,"Re:");
   \   0000199A   0xA2CC             ADR.N    R2,??main_153+0x8  ;; "Re:"
   \   0000199C   0x2106             MOVS     R1,#+6
   \   0000199E   0x2000             MOVS     R0,#+0
   \   000019A0   0x.... 0x....      BL       LCD_P8x16Str
   1210                    LCD_P8x16Str(60,6,"Key6");
   \   000019A4   0xF8DF 0x258C      LDR.W    R2,??main_104+0x1C
   \   000019A8   0x2106             MOVS     R1,#+6
   \   000019AA   0x203C             MOVS     R0,#+60
   \   000019AC   0x.... 0x....      BL       LCD_P8x16Str
   1211                    
   1212                    if(key_no==7)
   \   000019B0   0x483D             LDR.N    R0,??main_81+0x24
   \   000019B2   0x7800             LDRB     R0,[R0, #+0]
   \   000019B4   0x2807             CMP      R0,#+7
   \   000019B6   0xD109             BNE.N    ??main_154
   1213                    {
   1214                      fch_mo=fch_mo+1;
   \   000019B8   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   000019BC   0x7800             LDRB     R0,[R0, #+0]
   \   000019BE   0x1C40             ADDS     R0,R0,#+1
   \   000019C0   0x.... 0x....      LDR.W    R1,??DataTable1_12
   \   000019C4   0x7008             STRB     R0,[R1, #+0]
   1215                      key_no=255;
   \   000019C6   0x20FF             MOVS     R0,#+255
   \   000019C8   0x4937             LDR.N    R1,??main_81+0x24
   \   000019CA   0x7008             STRB     R0,[R1, #+0]
   1216                    }
   1217                  
   1218                    if(key_no==8)
   \                     ??main_154: (+1)
   \   000019CC   0x4836             LDR.N    R0,??main_81+0x24
   \   000019CE   0x7800             LDRB     R0,[R0, #+0]
   \   000019D0   0x2808             CMP      R0,#+8
   \   000019D2   0xD109             BNE.N    ??main_155
   1219                    {
   1220                      fch_mo=fch_mo-1;
   \   000019D4   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   000019D8   0x7800             LDRB     R0,[R0, #+0]
   \   000019DA   0x1E40             SUBS     R0,R0,#+1
   \   000019DC   0x.... 0x....      LDR.W    R1,??DataTable1_12
   \   000019E0   0x7008             STRB     R0,[R1, #+0]
   1221                      key_no=255;
   \   000019E2   0x20FF             MOVS     R0,#+255
   \   000019E4   0x4930             LDR.N    R1,??main_81+0x24
   \   000019E6   0x7008             STRB     R0,[R1, #+0]
   1222                    }
   1223                  
   1224                    if(key_no==9)
   \                     ??main_155: (+1)
   \   000019E8   0x482F             LDR.N    R0,??main_81+0x24
   \   000019EA   0x7800             LDRB     R0,[R0, #+0]
   \   000019EC   0x2809             CMP      R0,#+9
   \   000019EE   0xD106             BNE.N    ??main_150
   1225                    {
   1226                      BK=255;
   \   000019F0   0x20FF             MOVS     R0,#+255
   \   000019F2   0xF8DF 0x1528      LDR.W    R1,??main_104+0x4
   \   000019F6   0x7008             STRB     R0,[R1, #+0]
   1227                      key_no=255;
   \   000019F8   0x20FF             MOVS     R0,#+255
   \   000019FA   0x492B             LDR.N    R1,??main_81+0x24
   \   000019FC   0x7008             STRB     R0,[R1, #+0]
   1228                    }
   1229                  }
   \                     ??main_150: (+1)
   \   000019FE   0xF8DF 0x051C      LDR.W    R0,??main_104+0x4
   \   00001A02   0x7800             LDRB     R0,[R0, #+0]
   \   00001A04   0x2802             CMP      R0,#+2
   \   00001A06   0xD091             BEQ.N    ??main_151
   1230                  LCD_CLS();
   \   00001A08   0x.... 0x....      BL       LCD_CLS
   1231                 }
   1232                
   1233                if(fch_mo==1)
   \                     ??main_149: (+1)
   \   00001A0C   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   00001A10   0x7800             LDRB     R0,[R0, #+0]
   \   00001A12   0x2801             CMP      R0,#+1
   \   00001A14   0xD104             BNE.N    ??main_156
   1234                  fch_dp2=81;
   \   00001A16   0x2051             MOVS     R0,#+81
   \   00001A18   0x.... 0x....      LDR.W    R1,??DataTable1_13
   \   00001A1C   0x8008             STRH     R0,[R1, #+0]
   \   00001A1E   0xE05E             B.N      ??main_157
   1235                else if(fch_mo==2)
   \                     ??main_156: (+1)
   \   00001A20   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   00001A24   0x7800             LDRB     R0,[R0, #+0]
   \   00001A26   0x2802             CMP      R0,#+2
   \   00001A28   0xD104             BNE.N    ??main_158
   1236                  fch_dp2=100;
   \   00001A2A   0x2064             MOVS     R0,#+100
   \   00001A2C   0x.... 0x....      LDR.W    R1,??DataTable1_13
   \   00001A30   0x8008             STRH     R0,[R1, #+0]
   \   00001A32   0xE054             B.N      ??main_157
   1237                else if(fch_mo==3)
   \                     ??main_158: (+1)
   \   00001A34   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   00001A38   0x7800             LDRB     R0,[R0, #+0]
   \   00001A3A   0x2803             CMP      R0,#+3
   \   00001A3C   0xD104             BNE.N    ??main_159
   1238                  fch_dp2=121;
   \   00001A3E   0x2079             MOVS     R0,#+121
   \   00001A40   0x.... 0x....      LDR.W    R1,??DataTable1_13
   \   00001A44   0x8008             STRH     R0,[R1, #+0]
   \   00001A46   0xE04A             B.N      ??main_157
   1239                else if(fch_mo==4)
   \                     ??main_159: (+1)
   \   00001A48   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   00001A4C   0x7800             LDRB     R0,[R0, #+0]
   \   00001A4E   0x2804             CMP      R0,#+4
   \   00001A50   0xD104             BNE.N    ??main_160
   1240                  fch_dp2=144;
   \   00001A52   0x2090             MOVS     R0,#+144
   \   00001A54   0x.... 0x....      LDR.W    R1,??DataTable1_13
   \   00001A58   0x8008             STRH     R0,[R1, #+0]
   \   00001A5A   0xE040             B.N      ??main_157
   1241                else if(fch_mo==5)
   \                     ??main_160: (+1)
   \   00001A5C   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   00001A60   0x7800             LDRB     R0,[R0, #+0]
   \   00001A62   0x2805             CMP      R0,#+5
   \   00001A64   0xD104             BNE.N    ??main_161
   1242                  fch_dp2=169;
   \   00001A66   0x20A9             MOVS     R0,#+169
   \   00001A68   0x.... 0x....      LDR.W    R1,??DataTable1_13
   \   00001A6C   0x8008             STRH     R0,[R1, #+0]
   \   00001A6E   0xE036             B.N      ??main_157
   1243                else if(fch_mo==6)
   \                     ??main_161: (+1)
   \   00001A70   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   00001A74   0x7800             LDRB     R0,[R0, #+0]
   \   00001A76   0x2806             CMP      R0,#+6
   \   00001A78   0xD128             BNE.N    ??main_162
   1244                  fch_dp2=196;
   \   00001A7A   0x20C4             MOVS     R0,#+196
   \   00001A7C   0x.... 0x....      LDR.W    R1,??DataTable1_13
   \   00001A80   0x8008             STRH     R0,[R1, #+0]
   \   00001A82   0xE02C             B.N      ??main_157
   \                     ??main_81:
   \   00001A84   0x........         DC32     `?<Constant "ZHONG:">`
   \   00001A88   0x........         DC32     ZHONG
   \   00001A8C   0x........         DC32     `?<Constant "Key7">`
   \   00001A90   0x........         DC32     `?<Constant "Key8">`
   \   00001A94   0x........         DC32     `?<Constant "Key9">`
   \   00001A98   0x........         DC32     `?<Constant "xianfu:">`
   \   00001A9C   0x........         DC32     xianfu
   \   00001AA0   0x........         DC32     `?<Constant "PO_ct:">`
   \   00001AA4   0x........         DC32     PO_ct
   \   00001AA8   0x........         DC32     key_no
   \   00001AAC   0x........         DC32     `?<Constant "d_p:1">`
   \   00001AB0   0x........         DC32     `?<Constant "chu:2">`
   \   00001AB4   0x........         DC32     `?<Constant "BLsha:3">`
   \   00001AB8   0x........         DC32     `?<Constant "Kmax">`
   \   00001ABC   0x........         DC32     `?<Constant "Kmin">`
   \   00001AC0   0x........         DC32     `?<Constant "Pmax:6">`
   \   00001AC4   0x........         DC32     `?<Constant "d_p:">`
   \   00001AC8   0x........         DC32     d_p
   1245                else if(fch_mo==7)
   \                     ??main_162: (+1)
   \   00001ACC   0x.... 0x....      LDR.W    R0,??DataTable1_12
   \   00001AD0   0x7800             LDRB     R0,[R0, #+0]
   \   00001AD2   0x2807             CMP      R0,#+7
   \   00001AD4   0xD103             BNE.N    ??main_157
   1246                  fch_dp2=225;
   \   00001AD6   0x20E1             MOVS     R0,#+225
   \   00001AD8   0x.... 0x....      LDR.W    R1,??DataTable1_13
   \   00001ADC   0x8008             STRH     R0,[R1, #+0]
   1247                
   1248                //3号按键按下的时候调节POshaen
   1249                if(key_no==3)
   \                     ??main_157: (+1)
   \   00001ADE   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001AE2   0x7800             LDRB     R0,[R0, #+0]
   \   00001AE4   0x2803             CMP      R0,#+3
   \   00001AE6   0xF040 0x8080      BNE.W    ??main_163
   1250                 {
   1251                  key_no=255;
   \   00001AEA   0x20FF             MOVS     R0,#+255
   \   00001AEC   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001AF0   0x7008             STRB     R0,[R1, #+0]
   1252                  BK=3;
   \   00001AF2   0x2003             MOVS     R0,#+3
   \   00001AF4   0xF8DF 0x1424      LDR.W    R1,??main_104+0x4
   \   00001AF8   0x7008             STRB     R0,[R1, #+0]
   1253                  LCD_CLS();
   \   00001AFA   0x.... 0x....      BL       LCD_CLS
   \   00001AFE   0xE06E             B.N      ??main_164
   1254                  while(BK==3)
   1255                  {
   1256                    delay_ms(110);
   \                     ??main_165: (+1)
   \   00001B00   0x206E             MOVS     R0,#+110
   \   00001B02   0x.... 0x....      BL       delay_ms
   1257                    matrix_keyboard_init();
   \   00001B06   0x.... 0x....      BL       matrix_keyboard_init
   1258                    key_num=keyboard_scan();
   \   00001B0A   0x.... 0x....      BL       keyboard_scan
   \   00001B0E   0xF8DF 0x1408      LDR.W    R1,??main_104
   \   00001B12   0x7008             STRB     R0,[R1, #+0]
   1259                    if(key_num!=255)
   \   00001B14   0xF8DF 0x0400      LDR.W    R0,??main_104
   \   00001B18   0x7800             LDRB     R0,[R0, #+0]
   \   00001B1A   0x28FF             CMP      R0,#+255
   \   00001B1C   0xD005             BEQ.N    ??main_166
   1260                    {
   1261                      key_no=key_num;
   \   00001B1E   0xF8DF 0x03F8      LDR.W    R0,??main_104
   \   00001B22   0x7800             LDRB     R0,[R0, #+0]
   \   00001B24   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001B28   0x7008             STRB     R0,[R1, #+0]
   1262                    }          
   1263                    LCD_P8x16Str(0,0,"POshaen:");
   \                     ??main_166: (+1)
   \   00001B2A   0x.... 0x....      LDR.W    R2,??DataTable1_15
   \   00001B2E   0x2100             MOVS     R1,#+0
   \   00001B30   0x2000             MOVS     R0,#+0
   \   00001B32   0x.... 0x....      BL       LCD_P8x16Str
   1264                    LCD_P8x16_num3wei(60,0,POshaen);
   \   00001B36   0x.... 0x....      LDR.W    R0,??DataTable1_16
   \   00001B3A   0x7802             LDRB     R2,[R0, #+0]
   \   00001B3C   0x2100             MOVS     R1,#+0
   \   00001B3E   0x203C             MOVS     R0,#+60
   \   00001B40   0x.... 0x....      BL       LCD_P8x16_num3wei
   1265                    LCD_P8x16Str(0,2,"+:");
   \   00001B44   0xA25F             ADR.N    R2,??main_153    ;; 0x2B, 0x3A, 0x00, 0x00
   \   00001B46   0x2102             MOVS     R1,#+2
   \   00001B48   0x2000             MOVS     R0,#+0
   \   00001B4A   0x.... 0x....      BL       LCD_P8x16Str
   1266                    LCD_P8x16Str(60,2,"Key4");
   \   00001B4E   0xF8DF 0x23DC      LDR.W    R2,??main_104+0x14
   \   00001B52   0x2102             MOVS     R1,#+2
   \   00001B54   0x203C             MOVS     R0,#+60
   \   00001B56   0x.... 0x....      BL       LCD_P8x16Str
   1267                    LCD_P8x16Str(0,4,"-:");
   \   00001B5A   0xA25B             ADR.N    R2,??main_153+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00001B5C   0x2104             MOVS     R1,#+4
   \   00001B5E   0x2000             MOVS     R0,#+0
   \   00001B60   0x.... 0x....      BL       LCD_P8x16Str
   1268                    LCD_P8x16Str(60,4,"Key5");
   \   00001B64   0xF8DF 0x23C8      LDR.W    R2,??main_104+0x18
   \   00001B68   0x2104             MOVS     R1,#+4
   \   00001B6A   0x203C             MOVS     R0,#+60
   \   00001B6C   0x.... 0x....      BL       LCD_P8x16Str
   1269                    LCD_P8x16Str(0,6,"Re:");
   \   00001B70   0xA256             ADR.N    R2,??main_153+0x8  ;; "Re:"
   \   00001B72   0x2106             MOVS     R1,#+6
   \   00001B74   0x2000             MOVS     R0,#+0
   \   00001B76   0x.... 0x....      BL       LCD_P8x16Str
   1270                    LCD_P8x16Str(60,6,"Key6");
   \   00001B7A   0xF8DF 0x23B8      LDR.W    R2,??main_104+0x1C
   \   00001B7E   0x2106             MOVS     R1,#+6
   \   00001B80   0x203C             MOVS     R0,#+60
   \   00001B82   0x.... 0x....      BL       LCD_P8x16Str
   1271                    
   1272                    if(key_no==7)
   \   00001B86   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001B8A   0x7800             LDRB     R0,[R0, #+0]
   \   00001B8C   0x2807             CMP      R0,#+7
   \   00001B8E   0xD10A             BNE.N    ??main_167
   1273                    {
   1274                      POshaen=POshaen+1;
   \   00001B90   0x.... 0x....      LDR.W    R0,??DataTable1_16
   \   00001B94   0x7800             LDRB     R0,[R0, #+0]
   \   00001B96   0x1C40             ADDS     R0,R0,#+1
   \   00001B98   0x.... 0x....      LDR.W    R1,??DataTable1_16
   \   00001B9C   0x7008             STRB     R0,[R1, #+0]
   1275                      key_no=255;
   \   00001B9E   0x20FF             MOVS     R0,#+255
   \   00001BA0   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001BA4   0x7008             STRB     R0,[R1, #+0]
   1276                    }
   1277                  
   1278                    if(key_no==8)
   \                     ??main_167: (+1)
   \   00001BA6   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001BAA   0x7800             LDRB     R0,[R0, #+0]
   \   00001BAC   0x2808             CMP      R0,#+8
   \   00001BAE   0xD10A             BNE.N    ??main_168
   1279                    {
   1280                      POshaen=POshaen-1;
   \   00001BB0   0x.... 0x....      LDR.W    R0,??DataTable1_16
   \   00001BB4   0x7800             LDRB     R0,[R0, #+0]
   \   00001BB6   0x1E40             SUBS     R0,R0,#+1
   \   00001BB8   0x.... 0x....      LDR.W    R1,??DataTable1_16
   \   00001BBC   0x7008             STRB     R0,[R1, #+0]
   1281                      key_no=255;
   \   00001BBE   0x20FF             MOVS     R0,#+255
   \   00001BC0   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001BC4   0x7008             STRB     R0,[R1, #+0]
   1282                    }
   1283                  
   1284                    if(key_no==9)
   \                     ??main_168: (+1)
   \   00001BC6   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001BCA   0x7800             LDRB     R0,[R0, #+0]
   \   00001BCC   0x2809             CMP      R0,#+9
   \   00001BCE   0xD106             BNE.N    ??main_164
   1285                    {
   1286                      BK=255;
   \   00001BD0   0x20FF             MOVS     R0,#+255
   \   00001BD2   0x49D2             LDR.N    R1,??main_104+0x4
   \   00001BD4   0x7008             STRB     R0,[R1, #+0]
   1287                      key_no=255;
   \   00001BD6   0x20FF             MOVS     R0,#+255
   \   00001BD8   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001BDC   0x7008             STRB     R0,[R1, #+0]
   1288                    }
   1289                  }
   \                     ??main_164: (+1)
   \   00001BDE   0x48CF             LDR.N    R0,??main_104+0x4
   \   00001BE0   0x7800             LDRB     R0,[R0, #+0]
   \   00001BE2   0x2803             CMP      R0,#+3
   \   00001BE4   0xD08C             BEQ.N    ??main_165
   1290                  LCD_CLS();
   \   00001BE6   0x.... 0x....      BL       LCD_CLS
   1291                 }
   1292                
   1293                //4号按键按下的时候调节shmode
   1294                if(key_no==4)
   \                     ??main_163: (+1)
   \   00001BEA   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001BEE   0x7800             LDRB     R0,[R0, #+0]
   \   00001BF0   0x2804             CMP      R0,#+4
   \   00001BF2   0xF040 0x8087      BNE.W    ??main_169
   1295                 {
   1296                  key_no=255;
   \   00001BF6   0x20FF             MOVS     R0,#+255
   \   00001BF8   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001BFC   0x7008             STRB     R0,[R1, #+0]
   1297                  BK=4;
   \   00001BFE   0x2004             MOVS     R0,#+4
   \   00001C00   0x49C6             LDR.N    R1,??main_104+0x4
   \   00001C02   0x7008             STRB     R0,[R1, #+0]
   1298                  LCD_CLS();
   \   00001C04   0x.... 0x....      BL       LCD_CLS
   \   00001C08   0xE076             B.N      ??main_170
   1299                  while(BK==4)
   1300                  {
   1301                    LCD_P8x16Str(0,0,"shmode:");
   \                     ??main_171: (+1)
   \   00001C0A   0x.... 0x....      LDR.W    R2,??DataTable1_17
   \   00001C0E   0x2100             MOVS     R1,#+0
   \   00001C10   0x2000             MOVS     R0,#+0
   \   00001C12   0x.... 0x....      BL       LCD_P8x16Str
   1302                    LCD_P8x16_num3wei(60,0,shmode);
   \   00001C16   0x.... 0x....      LDR.W    R0,??DataTable1_18
   \   00001C1A   0x7802             LDRB     R2,[R0, #+0]
   \   00001C1C   0x2100             MOVS     R1,#+0
   \   00001C1E   0x203C             MOVS     R0,#+60
   \   00001C20   0x.... 0x....      BL       LCD_P8x16_num3wei
   1303                    LCD_P8x16Str(0,2,"+:");
   \   00001C24   0xA227             ADR.N    R2,??main_153    ;; 0x2B, 0x3A, 0x00, 0x00
   \   00001C26   0x2102             MOVS     R1,#+2
   \   00001C28   0x2000             MOVS     R0,#+0
   \   00001C2A   0x.... 0x....      BL       LCD_P8x16Str
   1304                    LCD_P8x16Str(60,2,"Key7");
   \   00001C2E   0x.... 0x....      LDR.W    R2,??DataTable1_19
   \   00001C32   0x2102             MOVS     R1,#+2
   \   00001C34   0x203C             MOVS     R0,#+60
   \   00001C36   0x.... 0x....      BL       LCD_P8x16Str
   1305                    LCD_P8x16Str(0,4,"-:");
   \   00001C3A   0xA223             ADR.N    R2,??main_153+0x4  ;; 0x2D, 0x3A, 0x00, 0x00
   \   00001C3C   0x2104             MOVS     R1,#+4
   \   00001C3E   0x2000             MOVS     R0,#+0
   \   00001C40   0x.... 0x....      BL       LCD_P8x16Str
   1306                    LCD_P8x16Str(60,4,"Key8");
   \   00001C44   0x.... 0x....      LDR.W    R2,??DataTable1_20
   \   00001C48   0x2104             MOVS     R1,#+4
   \   00001C4A   0x203C             MOVS     R0,#+60
   \   00001C4C   0x.... 0x....      BL       LCD_P8x16Str
   1307                    LCD_P8x16Str(0,6,"Re:");
   \   00001C50   0xA21E             ADR.N    R2,??main_153+0x8  ;; "Re:"
   \   00001C52   0x2106             MOVS     R1,#+6
   \   00001C54   0x2000             MOVS     R0,#+0
   \   00001C56   0x.... 0x....      BL       LCD_P8x16Str
   1308                    LCD_P8x16Str(60,6,"Key9");
   \   00001C5A   0x.... 0x....      LDR.W    R2,??DataTable1_21
   \   00001C5E   0x2106             MOVS     R1,#+6
   \   00001C60   0x203C             MOVS     R0,#+60
   \   00001C62   0x.... 0x....      BL       LCD_P8x16Str
   1309                    
   1310                    delay_ms(110);
   \   00001C66   0x206E             MOVS     R0,#+110
   \   00001C68   0x.... 0x....      BL       delay_ms
   1311                    matrix_keyboard_init();
   \   00001C6C   0x.... 0x....      BL       matrix_keyboard_init
   1312                    key_num=keyboard_scan();
   \   00001C70   0x.... 0x....      BL       keyboard_scan
   \   00001C74   0x49A8             LDR.N    R1,??main_104
   \   00001C76   0x7008             STRB     R0,[R1, #+0]
   1313                    if(key_num!=255)
   \   00001C78   0x48A7             LDR.N    R0,??main_104
   \   00001C7A   0x7800             LDRB     R0,[R0, #+0]
   \   00001C7C   0x28FF             CMP      R0,#+255
   \   00001C7E   0xD004             BEQ.N    ??main_172
   1314                    {
   1315                      key_no=key_num;
   \   00001C80   0x48A5             LDR.N    R0,??main_104
   \   00001C82   0x7800             LDRB     R0,[R0, #+0]
   \   00001C84   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001C88   0x7008             STRB     R0,[R1, #+0]
   1316                    }          
   1317          
   1318                    if(key_no==7)
   \                     ??main_172: (+1)
   \   00001C8A   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001C8E   0x7800             LDRB     R0,[R0, #+0]
   \   00001C90   0x2807             CMP      R0,#+7
   \   00001C92   0xD10A             BNE.N    ??main_173
   1319                    {
   1320                      shmode=shmode+1;
   \   00001C94   0x.... 0x....      LDR.W    R0,??DataTable1_18
   \   00001C98   0x7800             LDRB     R0,[R0, #+0]
   \   00001C9A   0x1C40             ADDS     R0,R0,#+1
   \   00001C9C   0x.... 0x....      LDR.W    R1,??DataTable1_18
   \   00001CA0   0x7008             STRB     R0,[R1, #+0]
   1321                      key_no=255;
   \   00001CA2   0x20FF             MOVS     R0,#+255
   \   00001CA4   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001CA8   0x7008             STRB     R0,[R1, #+0]
   1322                    }
   1323                  
   1324                    if(key_no==8)
   \                     ??main_173: (+1)
   \   00001CAA   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001CAE   0x7800             LDRB     R0,[R0, #+0]
   \   00001CB0   0x2808             CMP      R0,#+8
   \   00001CB2   0xD112             BNE.N    ??main_174
   1325                    {
   1326                      shmode=shmode-1;
   \   00001CB4   0x.... 0x....      LDR.W    R0,??DataTable1_18
   \   00001CB8   0x7800             LDRB     R0,[R0, #+0]
   \   00001CBA   0x1E40             SUBS     R0,R0,#+1
   \   00001CBC   0x.... 0x....      LDR.W    R1,??DataTable1_18
   \   00001CC0   0xE006             B.N      ??main_175
   \   00001CC2   0xBF00             Nop      
   \                     ??main_153:
   \   00001CC4   0x2B 0x3A          DC8      0x2B, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00001CC8   0x2D 0x3A          DC8      0x2D, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   00001CCC   0x52 0x65          DC8      "Re:"
   \              0x3A 0x00    
   \                     ??main_175: (+1)
   \   00001CD0   0x7008             STRB     R0,[R1, #+0]
   1327                      key_no=255;
   \   00001CD2   0x20FF             MOVS     R0,#+255
   \   00001CD4   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001CD8   0x7008             STRB     R0,[R1, #+0]
   1328                    }
   1329                  
   1330                    if(key_no==9)
   \                     ??main_174: (+1)
   \   00001CDA   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001CDE   0x7800             LDRB     R0,[R0, #+0]
   \   00001CE0   0x2809             CMP      R0,#+9
   \   00001CE2   0xD109             BNE.N    ??main_170
   1331                    {
   1332                      BK=255;
   \   00001CE4   0x20FF             MOVS     R0,#+255
   \   00001CE6   0x498D             LDR.N    R1,??main_104+0x4
   \   00001CE8   0x7008             STRB     R0,[R1, #+0]
   1333                      key_no=255;
   \   00001CEA   0x20FF             MOVS     R0,#+255
   \   00001CEC   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001CF0   0x7008             STRB     R0,[R1, #+0]
   1334                      key_num=255;//注意控制条件
   \   00001CF2   0x20FF             MOVS     R0,#+255
   \   00001CF4   0x4988             LDR.N    R1,??main_104
   \   00001CF6   0x7008             STRB     R0,[R1, #+0]
   1335                    }
   1336                  }
   \                     ??main_170: (+1)
   \   00001CF8   0x4888             LDR.N    R0,??main_104+0x4
   \   00001CFA   0x7800             LDRB     R0,[R0, #+0]
   \   00001CFC   0x2804             CMP      R0,#+4
   \   00001CFE   0xD084             BEQ.N    ??main_171
   1337                  LCD_CLS();
   \   00001D00   0x.... 0x....      BL       LCD_CLS
   1338                }
   1339                //5号按键按下的时候调节Kmin
   1340                /*if(key_no==5)
   1341                 {
   1342                  key_no=255;
   1343                  BK=5;
   1344                  LCD_CLS();
   1345                  while(BK==5)
   1346                  {
   1347                    delay_ms(110);
   1348                    matrix_keyboard_init();
   1349                    key_num=keyboard_scan();
   1350                    if(key_num!=255)
   1351                    {
   1352                      key_no=key_num;
   1353                    }          
   1354                    LCD_P8x16Str(0,0,"Kmin:");
   1355                    LCD_P8x16_num3wei(60,0,(uint16)(Kmin*100));
   1356                    LCD_P8x16Str(0,2,"+:");
   1357                    LCD_P8x16Str(60,2,"Key4");
   1358                    LCD_P8x16Str(0,4,"-:");
   1359                    LCD_P8x16Str(60,4,"Key5");
   1360                    LCD_P8x16Str(0,6,"Re:");
   1361                    LCD_P8x16Str(60,6,"Key6");
   1362                    
   1363                    if(key_no==7)
   1364                    {
   1365                      Kmin=Kmin+0.01;
   1366                      key_no=255;
   1367                    }
   1368                  
   1369                    if(key_no==8)
   1370                    {
   1371                      Kmin=Kmin-0.01;
   1372                      key_no=255;
   1373                    }
   1374                  
   1375                    if(key_no==9)
   1376                    {
   1377                      BK=255;
   1378                      key_no=255;
   1379                    }
   1380                  }
   1381                  LCD_CLS();
   1382                 }
   1383                //6号按键按下的时候调节Pmax
   1384                if(key_no==6)
   1385                 {
   1386                  key_no=255;
   1387                  BK=6;
   1388                  LCD_CLS();
   1389                  while(BK==6)
   1390                  {
   1391                    delay_ms(110);
   1392                    matrix_keyboard_init();
   1393                    key_num=keyboard_scan();
   1394                    if(key_num!=255)
   1395                    {
   1396                      key_no=key_num;
   1397                    }          
   1398                    LCD_P8x16Str(0,0,"Pmax:");
   1399                    LCD_P8x16_num3wei(60,0,Pmax);
   1400                    LCD_P8x16Str(0,2,"+:");
   1401                    LCD_P8x16Str(60,2,"Key4");
   1402                    LCD_P8x16Str(0,4,"-:");
   1403                    LCD_P8x16Str(60,4,"Key5");
   1404                    LCD_P8x16Str(0,6,"Re:");
   1405                    LCD_P8x16Str(60,6,"Key6");
   1406                    
   1407                    if(key_no==7)
   1408                    {
   1409                      Pmax=Pmax+5;
   1410                      key_no=255;
   1411                    }
   1412                  
   1413                    if(key_no==8)
   1414                    {
   1415                      Pmax=Pmax-5;
   1416                      key_no=255;
   1417                    }
   1418                  
   1419                    if(key_no==9)
   1420                    {
   1421                      BK=255;
   1422                      key_no=255;
   1423                    }
   1424                  }
   1425                  LCD_CLS();
   1426                 }*/
   1427               //10号按键按下 采集数据
   1428               if(key_no==10)
   \                     ??main_169: (+1)
   \   00001D04   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001D08   0x7800             LDRB     R0,[R0, #+0]
   \   00001D0A   0x280A             CMP      R0,#+10
   \   00001D0C   0xF47F 0xAD51      BNE.W    ??main_142
   1429               {
   1430                 key_no=255;
   \   00001D10   0x20FF             MOVS     R0,#+255
   \   00001D12   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001D16   0x7008             STRB     R0,[R1, #+0]
   1431                 LCD_CLS();
   \   00001D18   0x.... 0x....      BL       LCD_CLS
   1432                 break;
   1433               }
   1434             }   
   1435          
   1436             //------------------------------------------------------------
   1437             //-------------------初始采集循环，等待1ms中断------------------
   1438             //------------------------------------------------------------
   1439             while(1)
   1440             {  
   1441               if(zhming==1)
   \                     ??main_176: (+1)
   \   00001D1C   0x.... 0x....      LDR.W    R0,??DataTable1_22
   \   00001D20   0x7800             LDRB     R0,[R0, #+0]
   \   00001D22   0x2801             CMP      R0,#+1
   \   00001D24   0xD109             BNE.N    ??main_177
   1442               {
   1443                LCD_P8x16Str(0,0,"cj");
   \   00001D26   0xA284             ADR.N    R2,??main_104+0x20  ;; 0x63, 0x6A, 0x00, 0x00
   \   00001D28   0x2100             MOVS     R1,#+0
   \   00001D2A   0x2000             MOVS     R0,#+0
   \   00001D2C   0x.... 0x....      BL       LCD_P8x16Str
   1444                delay_ms(250);
   \   00001D30   0x20FA             MOVS     R0,#+250
   \   00001D32   0x.... 0x....      BL       delay_ms
   1445                LCD_CLS();
   \   00001D36   0x.... 0x....      BL       LCD_CLS
   1446               }
   1447               zhming=2;
   \                     ??main_177: (+1)
   \   00001D3A   0x2002             MOVS     R0,#+2
   \   00001D3C   0x.... 0x....      LDR.W    R1,??DataTable1_22
   \   00001D40   0x7008             STRB     R0,[R1, #+0]
   1448          
   1449              Motor_Lock = 1;
   \   00001D42   0x2001             MOVS     R0,#+1
   \   00001D44   0x.... 0x....      LDR.W    R1,??DataTable1_23
   \   00001D48   0x8008             STRH     R0,[R1, #+0]
   1450              Servo_Lock = 1;
   \   00001D4A   0x2001             MOVS     R0,#+1
   \   00001D4C   0x.... 0x....      LDR.W    R1,??DataTable1_24
   \   00001D50   0x8008             STRH     R0,[R1, #+0]
   1451              
   1452              if(TIME1flag_20ms == 1)
   \   00001D52   0x.... 0x....      LDR.W    R0,??DataTable1_25
   \   00001D56   0x7800             LDRB     R0,[R0, #+0]
   \   00001D58   0x2801             CMP      R0,#+1
   \   00001D5A   0xF040 0x8098      BNE.W    ??main_178
   1453              {
   1454                 TIME1flag_20ms = 0;
   \   00001D5E   0x2000             MOVS     R0,#+0
   \   00001D60   0x.... 0x....      LDR.W    R1,??DataTable1_25
   \   00001D64   0x7008             STRB     R0,[R1, #+0]
   1455          
   1456                 binaryzation_F(Pixel_F);
   \   00001D66   0x.... 0x....      LDR.W    R0,??DataTable1_26
   \   00001D6A   0x.... 0x....      BL       binaryzation_F
   1457                 get_front();
   \   00001D6E   0x.... 0x....      BL       get_front
   1458                 
   1459                 cl_f_long += cl_f;
   \   00001D72   0x.... 0x....      LDR.W    R0,??DataTable1_27
   \   00001D76   0x8800             LDRH     R0,[R0, #+0]
   \   00001D78   0x.... 0x....      LDR.W    R1,??DataTable1_28
   \   00001D7C   0x8809             LDRH     R1,[R1, #+0]
   \   00001D7E   0x1808             ADDS     R0,R1,R0
   \   00001D80   0x.... 0x....      LDR.W    R1,??DataTable1_27
   \   00001D84   0x8008             STRH     R0,[R1, #+0]
   1460                 front_l_long += front_l;
   \   00001D86   0x.... 0x....      LDR.W    R0,??DataTable1_29
   \   00001D8A   0x8800             LDRH     R0,[R0, #+0]
   \   00001D8C   0x.... 0x....      LDR.W    R1,??DataTable1_30
   \   00001D90   0x8809             LDRH     R1,[R1, #+0]
   \   00001D92   0x1808             ADDS     R0,R1,R0
   \   00001D94   0x.... 0x....      LDR.W    R1,??DataTable1_29
   \   00001D98   0x8008             STRH     R0,[R1, #+0]
   1461                 front_r_long += front_r;
   \   00001D9A   0x.... 0x....      LDR.W    R0,??DataTable1_31
   \   00001D9E   0x8800             LDRH     R0,[R0, #+0]
   \   00001DA0   0x.... 0x....      LDR.W    R1,??DataTable1_32
   \   00001DA4   0x8809             LDRH     R1,[R1, #+0]
   \   00001DA6   0x1808             ADDS     R0,R1,R0
   \   00001DA8   0x.... 0x....      LDR.W    R1,??DataTable1_31
   \   00001DAC   0x8008             STRH     R0,[R1, #+0]
   1462                 IT_long += IntegrationTime_Front;
   \   00001DAE   0x.... 0x....      LDR.W    R0,??DataTable1_33
   \   00001DB2   0x8800             LDRH     R0,[R0, #+0]
   \   00001DB4   0x.... 0x....      LDR.W    R1,??DataTable1_34
   \   00001DB8   0x7809             LDRB     R1,[R1, #+0]
   \   00001DBA   0x1840             ADDS     R0,R0,R1
   \   00001DBC   0x.... 0x....      LDR.W    R1,??DataTable1_33
   \   00001DC0   0x8008             STRH     R0,[R1, #+0]
   1463                 /*
   1464                 if(++send_data_cnt >= 5)//每100ms给CCDview发送数据
   1465                 {
   1466                    send_data_cnt = 0;
   1467                    //SendImageData(Pixel_F);
   1468                    SendImageData(Pixel_Z); 
   1469                 }*/
   1470                 if(++LCD_Average_Flag>9)
   \   00001DC2   0x1C64             ADDS     R4,R4,#+1
   \   00001DC4   0x0020             MOVS     R0,R4
   \   00001DC6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00001DC8   0x280A             CMP      R0,#+10
   \   00001DCA   0xDB60             BLT.N    ??main_178
   1471                 {
   1472                   LCD_Average_Flag = 0;
   \   00001DCC   0x2400             MOVS     R4,#+0
   1473                   front_reference = (int16)(cl_f_long/10);
   \   00001DCE   0x.... 0x....      LDR.W    R0,??DataTable1_27
   \   00001DD2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00001DD6   0x210A             MOVS     R1,#+10
   \   00001DD8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00001DDC   0x.... 0x....      LDR.W    R1,??DataTable1_35
   \   00001DE0   0x8008             STRH     R0,[R1, #+0]
   1474                   front_l_reference = (int16)(front_l_long/10);
   \   00001DE2   0x.... 0x....      LDR.W    R0,??DataTable1_29
   \   00001DE6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00001DEA   0x210A             MOVS     R1,#+10
   \   00001DEC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00001DF0   0x.... 0x....      LDR.W    R1,??DataTable1_36
   \   00001DF4   0x8008             STRH     R0,[R1, #+0]
   1475                   front_r_reference = (int16)(front_r_long/10);
   \   00001DF6   0x.... 0x....      LDR.W    R0,??DataTable1_31
   \   00001DFA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00001DFE   0x210A             MOVS     R1,#+10
   \   00001E00   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00001E04   0x.... 0x....      LDR.W    R1,??DataTable1_37
   \   00001E08   0x8008             STRH     R0,[R1, #+0]
   1476                   IT_ref = (int16)(IT_long/10);
   \   00001E0A   0x.... 0x....      LDR.W    R0,??DataTable1_33
   \   00001E0E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00001E12   0x210A             MOVS     R1,#+10
   \   00001E14   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00001E18   0x.... 0x....      LDR.W    R1,??DataTable1_38
   \   00001E1C   0x7008             STRB     R0,[R1, #+0]
   1477                   IT_long = 0;
   \   00001E1E   0x2000             MOVS     R0,#+0
   \   00001E20   0x.... 0x....      LDR.W    R1,??DataTable1_33
   \   00001E24   0x8008             STRH     R0,[R1, #+0]
   1478                   cl_f_long = 0;
   \   00001E26   0x2000             MOVS     R0,#+0
   \   00001E28   0x.... 0x....      LDR.W    R1,??DataTable1_27
   \   00001E2C   0x8008             STRH     R0,[R1, #+0]
   1479                   front_l_long = 0;
   \   00001E2E   0x2000             MOVS     R0,#+0
   \   00001E30   0x.... 0x....      LDR.W    R1,??DataTable1_29
   \   00001E34   0x8008             STRH     R0,[R1, #+0]
   1480                   front_r_long = 0; 
   \   00001E36   0x2000             MOVS     R0,#+0
   \   00001E38   0x.... 0x....      LDR.W    R1,??DataTable1_31
   \   00001E3C   0x8008             STRH     R0,[R1, #+0]
   1481                   FRONT_WIDTH = front_r_reference-front_l_reference;
   \   00001E3E   0x.... 0x....      LDR.W    R0,??DataTable1_37
   \   00001E42   0x8800             LDRH     R0,[R0, #+0]
   \   00001E44   0x.... 0x....      LDR.W    R1,??DataTable1_36
   \   00001E48   0x8809             LDRH     R1,[R1, #+0]
   \   00001E4A   0x1A40             SUBS     R0,R0,R1
   \   00001E4C   0x.... 0x....      LDR.W    R1,??DataTable1_39
   \   00001E50   0x8008             STRH     R0,[R1, #+0]
   1482                   front_width = FRONT_WIDTH;
   \   00001E52   0x.... 0x....      LDR.W    R0,??DataTable1_39
   \   00001E56   0x8800             LDRH     R0,[R0, #+0]
   \   00001E58   0x.... 0x....      LDR.W    R1,??DataTable1_40
   \   00001E5C   0x8008             STRH     R0,[R1, #+0]
   1483          
   1484                   LCD_P8x16_number(10,0,front_reference);
   \   00001E5E   0x.... 0x....      LDR.W    R0,??DataTable1_35
   \   00001E62   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001E66   0x2100             MOVS     R1,#+0
   \   00001E68   0x200A             MOVS     R0,#+10
   \   00001E6A   0x.... 0x....      BL       LCD_P8x16_number
   1485                   LCD_P8x16_number(10,2,front_l_reference);
   \   00001E6E   0x.... 0x....      LDR.W    R0,??DataTable1_36
   \   00001E72   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001E76   0x2102             MOVS     R1,#+2
   \   00001E78   0x200A             MOVS     R0,#+10
   \   00001E7A   0x.... 0x....      BL       LCD_P8x16_number
   1486                   LCD_P8x16_number(70,2,front_r_reference);
   \   00001E7E   0x.... 0x....      LDR.W    R0,??DataTable1_37
   \   00001E82   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001E86   0x2102             MOVS     R1,#+2
   \   00001E88   0x2046             MOVS     R0,#+70
   \   00001E8A   0x.... 0x....      BL       LCD_P8x16_number
   1487                 }
   1488              }
   1489              /*
   1490              if(TIME1flag_20ms_Z == 1)
   1491              {
   1492                 TIME1flag_20ms_Z = 0;
   1493                 binaryzation_Z(Pixel_Z);
   1494                 get_zong();
   1495                 cl_z_long += cl_z;
   1496                 zong_l_long += zong_l;
   1497                 zong_r_long += zong_r;
   1498                 if(++LCD_Average_Flag_Z>9)
   1499                 {
   1500                   LCD_Average_Flag_Z = 0;
   1501                   
   1502                   zong_reference = (int16)(cl_z_long/10);
   1503                   zong_l_reference = (int16)(zong_l_long/10);
   1504                   zong_r_reference = (int16)(zong_r_long/10);
   1505                   cl_z_long = 0;
   1506                   zong_l_long = 0;
   1507                   zong_r_long = 0; 
   1508                   ZONG_WIDTH = zong_r_reference-zong_l_reference;
   1509                   zong_width = ZONG_WIDTH;
   1510                  
   1511                   LCD_P8x16_number(10,4,zong_reference);
   1512                   LCD_P8x16_number(10,6,zong_l_reference);
   1513                   LCD_P8x16_number(70,6,zong_r_reference);     
   1514                 }
   1515              }*/
   1516                 //按键跳出初始化循环
   1517                 matrix_keyboard_init();
   \                     ??main_178: (+1)
   \   00001E8E   0x.... 0x....      BL       matrix_keyboard_init
   1518                 key_num=keyboard_scan();
   \   00001E92   0x.... 0x....      BL       keyboard_scan
   \   00001E96   0x4920             LDR.N    R1,??main_104
   \   00001E98   0x7008             STRB     R0,[R1, #+0]
   1519                 if(key_num!=255)
   \   00001E9A   0x481F             LDR.N    R0,??main_104
   \   00001E9C   0x7800             LDRB     R0,[R0, #+0]
   \   00001E9E   0x28FF             CMP      R0,#+255
   \   00001EA0   0xD004             BEQ.N    ??main_179
   1520                 {
   1521                   key_no=key_num;
   \   00001EA2   0x481D             LDR.N    R0,??main_104
   \   00001EA4   0x7800             LDRB     R0,[R0, #+0]
   \   00001EA6   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001EAA   0x7008             STRB     R0,[R1, #+0]
   1522                 }
   1523                 //12号按键按下的时候进主循环
   1524                 if(key_no==12)
   \                     ??main_179: (+1)
   \   00001EAC   0x.... 0x....      LDR.W    R0,??DataTable1_14
   \   00001EB0   0x7800             LDRB     R0,[R0, #+0]
   \   00001EB2   0x280C             CMP      R0,#+12
   \   00001EB4   0xF47F 0xAF32      BNE.W    ??main_176
   1525                 { 
   1526                   key_no=255;
   \   00001EB8   0x20FF             MOVS     R0,#+255
   \   00001EBA   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00001EBE   0x7008             STRB     R0,[R1, #+0]
   1527                   BK=12;
   \   00001EC0   0x200C             MOVS     R0,#+12
   \   00001EC2   0x4916             LDR.N    R1,??main_104+0x4
   \   00001EC4   0x7008             STRB     R0,[R1, #+0]
   1528                   LCD_CLS();
   \   00001EC6   0x.... 0x....      BL       LCD_CLS
   \   00001ECA   0xE01C             B.N      ??main_180
   1529                   while(BK==12)
   1530                   {
   1531                     delay_ms(110);
   \                     ??main_181: (+1)
   \   00001ECC   0x206E             MOVS     R0,#+110
   \   00001ECE   0x.... 0x....      BL       delay_ms
   1532                     matrix_keyboard_init();
   \   00001ED2   0x.... 0x....      BL       matrix_keyboard_init
   1533                     key_num=keyboard_scan();
   \   00001ED6   0x.... 0x....      BL       keyboard_scan
   \   00001EDA   0x490F             LDR.N    R1,??main_104
   \   00001EDC   0x7008             STRB     R0,[R1, #+0]
   1534                     if(key_num!=255)
   \   00001EDE   0x480E             LDR.N    R0,??main_104
   \   00001EE0   0x7800             LDRB     R0,[R0, #+0]
   \   00001EE2   0x28FF             CMP      R0,#+255
   \   00001EE4   0xD003             BEQ.N    ??main_182
   1535                     {
   1536                       key_no=key_num;
   \   00001EE6   0x480C             LDR.N    R0,??main_104
   \   00001EE8   0x7800             LDRB     R0,[R0, #+0]
   \   00001EEA   0x....             LDR.N    R1,??DataTable1_14
   \   00001EEC   0x7008             STRB     R0,[R1, #+0]
   1537                     }   
   1538                     if(key_no==12)
   \                     ??main_182: (+1)
   \   00001EEE   0x....             LDR.N    R0,??DataTable1_14
   \   00001EF0   0x7800             LDRB     R0,[R0, #+0]
   \   00001EF2   0x280C             CMP      R0,#+12
   \   00001EF4   0xD105             BNE.N    ??main_183
   1539                     {
   1540                       BK=255;
   \   00001EF6   0x20FF             MOVS     R0,#+255
   \   00001EF8   0x4908             LDR.N    R1,??main_104+0x4
   \   00001EFA   0x7008             STRB     R0,[R1, #+0]
   1541                       key_no=255;
   \   00001EFC   0x20FF             MOVS     R0,#+255
   \   00001EFE   0x....             LDR.N    R1,??DataTable1_14
   \   00001F00   0x7008             STRB     R0,[R1, #+0]
   1542                     }
   1543                     LCD_CLS();
   \                     ??main_183: (+1)
   \   00001F02   0x.... 0x....      BL       LCD_CLS
   1544                   }
   \                     ??main_180: (+1)
   \   00001F06   0x4805             LDR.N    R0,??main_104+0x4
   \   00001F08   0x7800             LDRB     R0,[R0, #+0]
   \   00001F0A   0x280C             CMP      R0,#+12
   \   00001F0C   0xD0DE             BEQ.N    ??main_181
   1545                   zhming=1;   
   \   00001F0E   0x2001             MOVS     R0,#+1
   \   00001F10   0x....             LDR.N    R1,??DataTable1_22
   \   00001F12   0x7008             STRB     R0,[R1, #+0]
   1546                   break;
   \   00001F14   0xE085             B.N      ??main_184
   \   00001F16   0xBF00             Nop      
   \                     ??main_104:
   \   00001F18   0x........         DC32     key_num
   \   00001F1C   0x........         DC32     BK
   \   00001F20   0x........         DC32     `?<Constant "chu:">`
   \   00001F24   0x........         DC32     chu
   \   00001F28   0x41200000         DC32     0x41200000
   \   00001F2C   0x........         DC32     `?<Constant "Key4">`
   \   00001F30   0x........         DC32     `?<Constant "Key5">`
   \   00001F34   0x........         DC32     `?<Constant "Key6">`
   \   00001F38   0x63 0x6A          DC8      0x63, 0x6A, 0x00, 0x00
   \              0x00 0x00    
   \   00001F3C   0x9999999A         DC32     0x9999999a
   1547                 }
   1548             }
   1549             //------------------------------------------------------------------
   1550             //-----------------------主循环，等待1ms中断------------------------
   1551             //------------------------------------------------------------------
   1552             while(1)
   1553             { 
   1554              if(zhming==1)
   1555              {
   1556                LCD_P8x16Str(60,6,"go");
   1557                delay_ms(1000);
   1558                LCD_CLS();
   1559                
   1560                
   1561                Motor_Lock = 0;
   1562                Servo_Lock = 0;
   1563                CAR_GO=1;
   1564              }
   1565              zhming =2;
   1566          
   1567              //图像采集
   1568              if(TIME1flag_20ms == 1)//20ms内该条件里的程序是可以执行完的！
   1569              {
   1570                 TIME1flag_20ms = 0;
   1571           
   1572                 binaryzation_F(Pixel_F);
   1573                 get_front();
   1574                 route_type_F();
   1575                 dir_fg=1;
   1576                 
   1577                 //坡道--------------提高后轮利于过坡
   1578                 if((front_l_flag == 1)&&(front_r_flag == 1)&&(front_r-front_l)>front_width+22)
   1579                 {
   1580                   if(guopo==0) 
   1581                   {
   1582                     dazhi=1;
   1583                     guopo=1;
   1584                     po_gap=1;
   1585                     shapo=1;
   1586                     HWPO=1;
   1587                   } 
   1588                 }
   1589                   
   1590                 if(dazhi==1)
   1591                 { 
   1592                   if(po_count++<PO_ct)
   1593                   {
   1594                     if(Abs(front_OFFSET-front_OFFSET_pre)<20)
   1595                     {}
   1596                     else
   1597                       front_OFFSET=front_OFFSET_pre;//front_OFFSET_pre;未测试
   1598                   }
   1599                   else
   1600                     dazhi=0;
   \                     ??main_185: (+1)
   \   00001F40   0x2000             MOVS     R0,#+0
   \   00001F42   0x....             LDR.N    R1,??DataTable1_41
   \   00001F44   0x7008             STRB     R0,[R1, #+0]
   1601                 }
   1602                 
   1603                 if(po_gap==1)
   \                     ??main_186: (+1)
   \   00001F46   0x....             LDR.N    R0,??DataTable1_42
   \   00001F48   0x7800             LDRB     R0,[R0, #+0]
   \   00001F4A   0x2801             CMP      R0,#+1
   \   00001F4C   0xD115             BNE.N    ??main_187
   1604                 {
   1605                   po_gap_ct++;
   \   00001F4E   0x....             LDR.N    R0,??DataTable1_43
   \   00001F50   0x8800             LDRH     R0,[R0, #+0]
   \   00001F52   0x1C40             ADDS     R0,R0,#+1
   \   00001F54   0x....             LDR.N    R1,??DataTable1_43
   \   00001F56   0x8008             STRH     R0,[R1, #+0]
   1606                   if(po_gap_ct>150)
   \   00001F58   0x....             LDR.N    R0,??DataTable1_43
   \   00001F5A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00001F5E   0x2897             CMP      R0,#+151
   \   00001F60   0xDB0B             BLT.N    ??main_187
   1607                   {
   1608                     po_gap=0;
   \   00001F62   0x2000             MOVS     R0,#+0
   \   00001F64   0x....             LDR.N    R1,??DataTable1_42
   \   00001F66   0x7008             STRB     R0,[R1, #+0]
   1609                     po_gap_ct=0;
   \   00001F68   0x2000             MOVS     R0,#+0
   \   00001F6A   0x....             LDR.N    R1,??DataTable1_43
   \   00001F6C   0x8008             STRH     R0,[R1, #+0]
   1610                     po_count=0;
   \   00001F6E   0x2000             MOVS     R0,#+0
   \   00001F70   0x....             LDR.N    R1,??DataTable1_44
   \   00001F72   0x8008             STRH     R0,[R1, #+0]
   1611                     guopo=0;
   \   00001F74   0x2000             MOVS     R0,#+0
   \   00001F76   0x....             LDR.N    R1,??DataTable1_45
   \   00001F78   0x7008             STRB     R0,[R1, #+0]
   1612                   }
   1613                 }
   1614                 
   1615                 if(HWPO==1)
   \                     ??main_187: (+1)
   \   00001F7A   0x....             LDR.N    R0,??DataTable1_46
   \   00001F7C   0x7800             LDRB     R0,[R0, #+0]
   \   00001F7E   0x2801             CMP      R0,#+1
   \   00001F80   0xD10C             BNE.N    ??main_188
   1616                 {
   1617                   HWPO_ct++;
   \   00001F82   0x....             LDR.N    R0,??DataTable1_47
   \   00001F84   0x8800             LDRH     R0,[R0, #+0]
   \   00001F86   0x1C40             ADDS     R0,R0,#+1
   \   00001F88   0x....             LDR.N    R1,??DataTable1_47
   \   00001F8A   0x8008             STRH     R0,[R1, #+0]
   1618                   if(HWPO_ct>35)  HWPO=0;
   \   00001F8C   0x....             LDR.N    R0,??DataTable1_47
   \   00001F8E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00001F92   0x2824             CMP      R0,#+36
   \   00001F94   0xDB02             BLT.N    ??main_188
   \   00001F96   0x2000             MOVS     R0,#+0
   \   00001F98   0x....             LDR.N    R1,??DataTable1_46
   \   00001F9A   0x7008             STRB     R0,[R1, #+0]
   1619                 }
   1620                 //--------------------------------------------------------
   1621                 //方向控制
   1622                 SetServoVoltage();
   \                     ??main_188: (+1)
   \   00001F9C   0x.... 0x....      BL       SetServoVoltage
   1623          
   1624                 //LCD_CLS();
   1625                 //太快舵机来不及响应，不是计数的问题，这里的问题
   1626                 //delay_ms(20);//在此做了延时，就不会错误清零！！把图像采集放到主函数后不需此处的延时
   1627                 LCD_P8x16_number(10,0,front_l_flag);
   \   00001FA0   0x....             LDR.N    R0,??DataTable1_48
   \   00001FA2   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001FA6   0x2100             MOVS     R1,#+0
   \   00001FA8   0x200A             MOVS     R0,#+10
   \   00001FAA   0x.... 0x....      BL       LCD_P8x16_number
   1628                 LCD_P8x16_number(70,0,front_r_flag);
   \   00001FAE   0x....             LDR.N    R0,??DataTable1_49
   \   00001FB0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001FB4   0x2100             MOVS     R1,#+0
   \   00001FB6   0x2046             MOVS     R0,#+70
   \   00001FB8   0x.... 0x....      BL       LCD_P8x16_number
   1629                 LCD_P8x16_number(10,2,front_l);
   \   00001FBC   0x....             LDR.N    R0,??DataTable1_30
   \   00001FBE   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001FC2   0x2102             MOVS     R1,#+2
   \   00001FC4   0x200A             MOVS     R0,#+10
   \   00001FC6   0x.... 0x....      BL       LCD_P8x16_number
   1630                 LCD_P8x16_number(70,2,front_r);
   \   00001FCA   0x....             LDR.N    R0,??DataTable1_32
   \   00001FCC   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001FD0   0x2102             MOVS     R1,#+2
   \   00001FD2   0x2046             MOVS     R0,#+70
   \   00001FD4   0x.... 0x....      BL       LCD_P8x16_number
   1631                 //LCD_P8x16_number_4(0,4,hongwai_l);//LCD_P8x16_number(0,4,IT_ref);//LCD_P8x16_number(0,4,cl_f_pre);
   1632                 LCD_P8x16_number_4(70,4,fangcha_qian_f);//LCD_P8x16_number_4(70,4,hongwai_r);//LCD_P8x16_number(70,4,sha_width); //LCD_P8x16_number(70,4,IntegrationTime_Front);//LCD_P8x16_number(70,4,(front_l+front_r)/2);//LCD_P8x16_number(70,4,polook);//LCD_P8x16_number(70,4,mq_look1+mq_look2);
   \   00001FD8   0x....             LDR.N    R0,??DataTable1_50
   \   00001FDA   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001FDE   0x2104             MOVS     R1,#+4
   \   00001FE0   0x2046             MOVS     R0,#+70
   \   00001FE2   0x.... 0x....      BL       LCD_P8x16_number_4
   1633                 LCD_P8x16_number(0,6,front_width);//LCD_P8x16_number_4(0,6,HONGWAI_L);//
   \   00001FE6   0x....             LDR.N    R0,??DataTable1_40
   \   00001FE8   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00001FEC   0x2106             MOVS     R1,#+6
   \   00001FEE   0x2000             MOVS     R0,#+0
   \   00001FF0   0x.... 0x....      BL       LCD_P8x16_number
   1634                 LCD_P8x16_number(70,6,front_r-front_l);//LCD_P8x16_number_4(70,6,HONGWAI_R);//
   \   00001FF4   0x....             LDR.N    R0,??DataTable1_32
   \   00001FF6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00001FFA   0x....             LDR.N    R1,??DataTable1_30
   \   00001FFC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00002000   0x1A42             SUBS     R2,R0,R1
   \   00002002   0x2106             MOVS     R1,#+6
   \   00002004   0x2046             MOVS     R0,#+70
   \   00002006   0x.... 0x....      BL       LCD_P8x16_number
   1635              } 
   1636              
   1637              //速度控制
   1638              if(speedflag==1)
   \                     ??main_189: (+1)
   \   0000200A   0x....             LDR.N    R0,??DataTable1_51
   \   0000200C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00002010   0x2801             CMP      R0,#+1
   \   00002012   0xD106             BNE.N    ??main_184
   1639              {
   1640                speedflag=0;
   \   00002014   0x2000             MOVS     R0,#+0
   \   00002016   0x....             LDR.N    R1,??DataTable1_51
   \   00002018   0x8008             STRH     R0,[R1, #+0]
   1641                GetMotorPulse();
   \   0000201A   0x.... 0x....      BL       GetMotorPulse
   1642                Speed_PID();
   \   0000201E   0x.... 0x....      BL       Speed_PID
   1643              }
   \                     ??main_184: (+1)
   \   00002022   0x....             LDR.N    R0,??DataTable1_22
   \   00002024   0x7800             LDRB     R0,[R0, #+0]
   \   00002026   0x2801             CMP      R0,#+1
   \   00002028   0xD113             BNE.N    ??main_190
   \   0000202A   0x....             ADR.N    R2,??DataTable1_1  ;; 0x67, 0x6F, 0x00, 0x00
   \   0000202C   0x2106             MOVS     R1,#+6
   \   0000202E   0x203C             MOVS     R0,#+60
   \   00002030   0x.... 0x....      BL       LCD_P8x16Str
   \   00002034   0xF44F 0x707A      MOV      R0,#+1000
   \   00002038   0x.... 0x....      BL       delay_ms
   \   0000203C   0x.... 0x....      BL       LCD_CLS
   \   00002040   0x2000             MOVS     R0,#+0
   \   00002042   0x....             LDR.N    R1,??DataTable1_23
   \   00002044   0x8008             STRH     R0,[R1, #+0]
   \   00002046   0x2000             MOVS     R0,#+0
   \   00002048   0x....             LDR.N    R1,??DataTable1_24
   \   0000204A   0x8008             STRH     R0,[R1, #+0]
   \   0000204C   0x2001             MOVS     R0,#+1
   \   0000204E   0x....             LDR.N    R1,??DataTable1_52
   \   00002050   0x7008             STRB     R0,[R1, #+0]
   \                     ??main_190: (+1)
   \   00002052   0x2002             MOVS     R0,#+2
   \   00002054   0x....             LDR.N    R1,??DataTable1_22
   \   00002056   0x7008             STRB     R0,[R1, #+0]
   \   00002058   0x....             LDR.N    R0,??DataTable1_25
   \   0000205A   0x7800             LDRB     R0,[R0, #+0]
   \   0000205C   0x2801             CMP      R0,#+1
   \   0000205E   0xD1D4             BNE.N    ??main_189
   \   00002060   0x2000             MOVS     R0,#+0
   \   00002062   0x....             LDR.N    R1,??DataTable1_25
   \   00002064   0x7008             STRB     R0,[R1, #+0]
   \   00002066   0x....             LDR.N    R0,??DataTable1_26
   \   00002068   0x.... 0x....      BL       binaryzation_F
   \   0000206C   0x.... 0x....      BL       get_front
   \   00002070   0x.... 0x....      BL       route_type_F
   \   00002074   0x2001             MOVS     R0,#+1
   \   00002076   0x....             LDR.N    R1,??DataTable1_53
   \   00002078   0x7008             STRB     R0,[R1, #+0]
   \   0000207A   0x....             LDR.N    R0,??DataTable1_48
   \   0000207C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00002080   0x2801             CMP      R0,#+1
   \   00002082   0xD124             BNE.N    ??main_191
   \   00002084   0x....             LDR.N    R0,??DataTable1_49
   \   00002086   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000208A   0x2801             CMP      R0,#+1
   \   0000208C   0xD11F             BNE.N    ??main_191
   \   0000208E   0x....             LDR.N    R0,??DataTable1_40
   \   00002090   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00002094   0x3016             ADDS     R0,R0,#+22
   \   00002096   0x....             LDR.N    R1,??DataTable1_32
   \   00002098   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000209C   0x....             LDR.N    R2,??DataTable1_30
   \   0000209E   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000020A2   0x1A89             SUBS     R1,R1,R2
   \   000020A4   0x4288             CMP      R0,R1
   \   000020A6   0xDA12             BGE.N    ??main_191
   \   000020A8   0x....             LDR.N    R0,??DataTable1_45
   \   000020AA   0x7800             LDRB     R0,[R0, #+0]
   \   000020AC   0x2800             CMP      R0,#+0
   \   000020AE   0xD10E             BNE.N    ??main_191
   \   000020B0   0x2001             MOVS     R0,#+1
   \   000020B2   0x....             LDR.N    R1,??DataTable1_41
   \   000020B4   0x7008             STRB     R0,[R1, #+0]
   \   000020B6   0x2001             MOVS     R0,#+1
   \   000020B8   0x....             LDR.N    R1,??DataTable1_45
   \   000020BA   0x7008             STRB     R0,[R1, #+0]
   \   000020BC   0x2001             MOVS     R0,#+1
   \   000020BE   0x....             LDR.N    R1,??DataTable1_42
   \   000020C0   0x7008             STRB     R0,[R1, #+0]
   \   000020C2   0x2001             MOVS     R0,#+1
   \   000020C4   0x....             LDR.N    R1,??DataTable1_54
   \   000020C6   0x7008             STRB     R0,[R1, #+0]
   \   000020C8   0x2001             MOVS     R0,#+1
   \   000020CA   0x....             LDR.N    R1,??DataTable1_46
   \   000020CC   0x7008             STRB     R0,[R1, #+0]
   \                     ??main_191: (+1)
   \   000020CE   0x....             LDR.N    R0,??DataTable1_41
   \   000020D0   0x7800             LDRB     R0,[R0, #+0]
   \   000020D2   0x2801             CMP      R0,#+1
   \   000020D4   0xF47F 0xAF37      BNE.W    ??main_186
   \   000020D8   0x....             LDR.N    R0,??DataTable1_44
   \   000020DA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000020DE   0x1C41             ADDS     R1,R0,#+1
   \   000020E0   0x....             LDR.N    R2,??DataTable1_44
   \   000020E2   0x8011             STRH     R1,[R2, #+0]
   \   000020E4   0x....             LDR.N    R1,??DataTable1_55
   \   000020E6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000020EA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000020EC   0x4288             CMP      R0,R1
   \   000020EE   0xF6BF 0xAF27      BGE.W    ??main_185
   \   000020F2   0x....             LDR.N    R0,??DataTable1_56
   \   000020F4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000020F8   0x....             LDR.N    R1,??DataTable1_57
   \   000020FA   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000020FE   0x1A40             SUBS     R0,R0,R1
   \   00002100   0x.... 0x....      BL       Abs
   \   00002104   0x2814             CMP      R0,#+20
   \   00002106   0xF6FF 0xAF1E      BLT.W    ??main_186
   \   0000210A   0x....             LDR.N    R0,??DataTable1_57
   \   0000210C   0x8800             LDRH     R0,[R0, #+0]
   \   0000210E   0x....             LDR.N    R1,??DataTable1_56
   \   00002110   0x8008             STRH     R0,[R1, #+0]
   \   00002112   0xE718             B.N      ??main_186
   1644              
   1645              //无线停车
   1646              /*if(gpio_read(PORTC,8)==1) 
   1647              {
   1648                stop_flag=1;
   1649                LCD_P8x16Str(0,4,"stop");
   1650              }*/
   1651             } 
   1652          }
   1653          

   \                                 In section .text, align 4, keep-with-next
   1654          void system_init()
   1655          {   
   \                     system_init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1656              int i;
   1657              //关闭总中断
   1658              DisableInterrupts;                          
   \   00000002   0xB672             CPSID i
   1659              //串口初始化
   1660              uart_init(UART3,periph_clk_khz,115200);     
   \   00000004   0xF45F 0x32E1      MOVS     R2,#+115200
   \   00000008   0x....             LDR.N    R0,??DataTable1_58
   \   0000000A   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \   0000000E   0x....             LDR.N    R0,??DataTable1_59  ;; 0x4006d000
   \   00000010   0x.... 0x....      BL       uart_init
   1661              //UART_C2_REG(UART3)|=UART_C2_RIE_MASK;     //开放UART接收中断
   1662              //enable_irq(51);			        //开接收引脚的IRQ中断 
   1663              //set_irq_priority (51, 0);
   1664              
   1665              //gpio_init (PORTC,8,0,0);                    //无线接收
   1666              
   1667              
   1668              //舵机频率初始化
   1669              FTM_PWM_Init(0,300);                         //舵机频率初始化 pwm频率为300Hz，周期3.3ms
   \   00000014   0xF44F 0x7196      MOV      R1,#+300
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       FTM_PWM_Init
   1670              FTM_PWM_Open(0,2,ZHONG);
   \   0000001E   0x....             LDR.N    R0,??DataTable1_60
   \   00000020   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000024   0x2102             MOVS     R1,#+2
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       FTM_PWM_Open
   1671              
   1672              //电机初始化 
   1673              FTM_PWM_Init(1,10000);                       //电机频率初始化 pwm频率为10kHz，周期0.1ms
   \   0000002C   0xF242 0x7110      MOVW     R1,#+10000
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x.... 0x....      BL       FTM_PWM_Init
   1674              Motor_init();                                
   \   00000036   0x.... 0x....      BL       Motor_init
   1675              
   1676              //正交解码测速初始化
   1677              FTM2_QUAD_Iint();                           
   \   0000003A   0x.... 0x....      BL       FTM2_QUAD_Iint
   1678              
   1679              //CCD初始化
   1680              CCD_init();
   \   0000003E   0x.... 0x....      BL       CCD_init
   1681              
   1682              //OLED液晶初始化
   1683              LCD_Init();                                 
   \   00000042   0x.... 0x....      BL       LCD_Init
   1684              
   1685              PID_SetKpid(1.7,0.05,0.3);                   //速度PID初始化参数设置
   \   00000046   0x....             LDR.N    R2,??DataTable1_61  ;; 0x3e99999a
   \   00000048   0x....             LDR.N    R1,??DataTable1_62  ;; 0x3d4ccccd
   \   0000004A   0x....             LDR.N    R0,??DataTable1_63  ;; 0x3fd9999a
   \   0000004C   0x.... 0x....      BL       PID_SetKpid
   1686              PID_SetPoint(1000);                          //初始速度设定
   \   00000050   0xF44F 0x707A      MOV      R0,#+1000
   \   00000054   0x.... 0x....      BL       PID_SetPoint
   1687              
   1688              hw_adc_init(0);
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      BL       hw_adc_init
   1689              hw_adc_init(1);
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x.... 0x....      BL       hw_adc_init
   1690              for(i=0;i<200;i++)
   \   00000064   0x2400             MOVS     R4,#+0
   \   00000066   0xE002             B.N      ??system_init_0
   1691              {
   1692                GetSamplezhi();                           //采样电压值
   \                     ??system_init_1: (+1)
   \   00000068   0x.... 0x....      BL       GetSamplezhi
   1693              }
   \   0000006C   0x1C64             ADDS     R4,R4,#+1
   \                     ??system_init_0: (+1)
   \   0000006E   0x2CC8             CMP      R4,#+200
   \   00000070   0xDBFA             BLT.N    ??system_init_1
   1694              GetOFFSET();                                //得到零偏值
   \   00000072   0x.... 0x....      BL       GetOFFSET
   1695              delay_ms(50);
   \   00000076   0x2032             MOVS     R0,#+50
   \   00000078   0x.... 0x....      BL       delay_ms
   1696              
   1697              hw_pit_init(0,60000);                       //配置pit定时器0,1ms中断(60000)
   \   0000007C   0xF64E 0x2160      MOVW     R1,#+60000
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       hw_pit_init
   1698              enable_pit_interrupt(0);                    //开pit中断0通道
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      BL       enable_pit_interrupt
   1699              EnableInterrupts;                           //开启总中断,中断开启后，此刻就进行1ms的定时吗？
   \   0000008C   0xB662             CPSIE i
   1700          }
   \   0000008E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     `?<Constant "BLsha:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     BLsha

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     `?<Constant "Kmax:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     Kmax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_6:
   \   00000000   0x3F847AE1         DC32     0x3f847ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_7:
   \   00000000   0xBF847AE1         DC32     0xbf847ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     `?<Constant "Kmin:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x67 0x6F          DC8      0x67, 0x6F, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     Kmin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     `?<Constant "Pmax:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     Pmax

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     `?<Constant "sh_x:1">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     `?<Constant "fch_mo:2">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     `?<Constant "POshen:3">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     `?<Constant "shmode:4">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     `?<Constant "sh_x:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     sh_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     `?<Constant "fch_mo:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     fch_mo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     fch_dp2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x........         DC32     key_no

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x........         DC32     `?<Constant "POshaen:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x........         DC32     POshaen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x........         DC32     `?<Constant "shmode:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0x........         DC32     shmode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   0x........         DC32     `?<Constant "Key7">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_20:
   \   00000000   0x........         DC32     `?<Constant "Key8">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_21:
   \   00000000   0x........         DC32     `?<Constant "Key9">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_22:
   \   00000000   0x........         DC32     zhming

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_23:
   \   00000000   0x........         DC32     Motor_Lock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_24:
   \   00000000   0x........         DC32     Servo_Lock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_25:
   \   00000000   0x........         DC32     TIME1flag_20ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_26:
   \   00000000   0x........         DC32     Pixel_F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_27:
   \   00000000   0x........         DC32     cl_f_long

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_28:
   \   00000000   0x........         DC32     cl_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_29:
   \   00000000   0x........         DC32     front_l_long

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_30:
   \   00000000   0x........         DC32     front_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_31:
   \   00000000   0x........         DC32     front_r_long

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_32:
   \   00000000   0x........         DC32     front_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_33:
   \   00000000   0x........         DC32     IT_long

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_34:
   \   00000000   0x........         DC32     IntegrationTime_Front

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_35:
   \   00000000   0x........         DC32     front_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_36:
   \   00000000   0x........         DC32     front_l_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_37:
   \   00000000   0x........         DC32     front_r_reference

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_38:
   \   00000000   0x........         DC32     IT_ref

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_39:
   \   00000000   0x........         DC32     FRONT_WIDTH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_40:
   \   00000000   0x........         DC32     front_width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_41:
   \   00000000   0x........         DC32     dazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_42:
   \   00000000   0x........         DC32     po_gap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_43:
   \   00000000   0x........         DC32     po_gap_ct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_44:
   \   00000000   0x........         DC32     po_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_45:
   \   00000000   0x........         DC32     guopo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_46:
   \   00000000   0x........         DC32     HWPO

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_47:
   \   00000000   0x........         DC32     HWPO_ct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_48:
   \   00000000   0x........         DC32     front_l_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_49:
   \   00000000   0x........         DC32     front_r_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_50:
   \   00000000   0x........         DC32     fangcha_qian_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_51:
   \   00000000   0x........         DC32     speedflag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_52:
   \   00000000   0x........         DC32     CAR_GO

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_53:
   \   00000000   0x........         DC32     dir_fg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_54:
   \   00000000   0x........         DC32     shapo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_55:
   \   00000000   0x........         DC32     PO_ct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_56:
   \   00000000   0x........         DC32     front_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_57:
   \   00000000   0x........         DC32     front_OFFSET_pre

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_58:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_59:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_60:
   \   00000000   0x........         DC32     ZHONG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_61:
   \   00000000   0x3E99999A         DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_62:
   \   00000000   0x3D4CCCCD         DC32     0x3d4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_63:
   \   00000000   0x3FD9999A         DC32     0x3fd9999a

   \                                 In section .rodata, align 4
   \                     `?<Constant "mode:1">`:
   \   00000000   0x6D 0x6F          DC8 "mode:1"
   \              0x64 0x65    
   \              0x3A 0x31    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "s_H:2">`:
   \   00000000   0x73 0x5F          DC8 "s_H:2"
   \              0x48 0x3A    
   \              0x32 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "s_L:3">`:
   \   00000000   0x73 0x5F          DC8 "s_L:3"
   \              0x4C 0x3A    
   \              0x33 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Kp:4">`:
   \   00000000   0x4B 0x70          DC8 "Kp:4"
   \              0x3A 0x34    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Kd:5">`:
   \   00000000   0x4B 0x64          DC8 "Kd:5"
   \              0x3A 0x35    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "QPX_SET:6">`:
   \   00000000   0x51 0x50          DC8 "QPX_SET:6"
   \              0x58 0x5F    
   \              0x53 0x45    
   \              0x54 0x3A    
   \              0x36 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "mode:">`:
   \   00000000   0x6D 0x6F          DC8 "mode:"
   \              0x64 0x65    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x2B 0x3A          DC8 "+:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Key7">`:
   \   00000000   0x4B 0x65          DC8 "Key7"
   \              0x79 0x37    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x2D 0x3A          DC8 "-:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Key8">`:
   \   00000000   0x4B 0x65          DC8 "Key8"
   \              0x79 0x38    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x52 0x65          DC8 "Re:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Key9">`:
   \   00000000   0x4B 0x65          DC8 "Key9"
   \              0x79 0x39    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Speed_H:">`:
   \   00000000   0x53 0x70          DC8 "Speed_H:"
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x48 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Key4">`:
   \   00000000   0x4B 0x65          DC8 "Key4"
   \              0x79 0x34    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Key5">`:
   \   00000000   0x4B 0x65          DC8 "Key5"
   \              0x79 0x35    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Key6">`:
   \   00000000   0x4B 0x65          DC8 "Key6"
   \              0x79 0x36    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Speed_L:">`:
   \   00000000   0x53 0x70          DC8 "Speed_L:"
   \              0x65 0x65    
   \              0x64 0x5F    
   \              0x4C 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x70          DC8 "Kp:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x4B 0x64          DC8 "Kd:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "QPX_S:">`:
   \   00000000   0x51 0x50          DC8 "QPX_S:"
   \              0x58 0x5F    
   \              0x53 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Psha:1">`:
   \   00000000   0x50 0x73          DC8 "Psha:1"
   \              0x68 0x61    
   \              0x3A 0x31    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Prz:2">`:
   \   00000000   0x50 0x72          DC8 "Prz:2"
   \              0x7A 0x3A    
   \              0x32 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "PMAX:3">`:
   \   00000000   0x50 0x4D          DC8 "PMAX:3"
   \              0x41 0x58    
   \              0x3A 0x33    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ZHONG:4">`:
   \   00000000   0x5A 0x48          DC8 "ZHONG:4"
   \              0x4F 0x4E    
   \              0x47 0x3A    
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "xianfu:5">`:
   \   00000000   0x78 0x69          DC8 "xianfu:5"
   \              0x61 0x6E    
   \              0x66 0x75    
   \              0x3A 0x35    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "PO_ct:6">`:
   \   00000000   0x50 0x4F          DC8 "PO_ct:6"
   \              0x5F 0x63    
   \              0x74 0x3A    
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Psha:">`:
   \   00000000   0x50 0x73          DC8 "Psha:"
   \              0x68 0x61    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Prz:">`:
   \   00000000   0x50 0x72          DC8 "Prz:"
   \              0x7A 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "PMAX:">`:
   \   00000000   0x50 0x4D          DC8 "PMAX:"
   \              0x41 0x58    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ZHONG:">`:
   \   00000000   0x5A 0x48          DC8 "ZHONG:"
   \              0x4F 0x4E    
   \              0x47 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "xianfu:">`:
   \   00000000   0x78 0x69          DC8 "xianfu:"
   \              0x61 0x6E    
   \              0x66 0x75    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "PO_ct:">`:
   \   00000000   0x50 0x4F          DC8 "PO_ct:"
   \              0x5F 0x63    
   \              0x74 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "d_p:1">`:
   \   00000000   0x64 0x5F          DC8 "d_p:1"
   \              0x70 0x3A    
   \              0x31 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "chu:2">`:
   \   00000000   0x63 0x68          DC8 "chu:2"
   \              0x75 0x3A    
   \              0x32 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "BLsha:3">`:
   \   00000000   0x42 0x4C          DC8 "BLsha:3"
   \              0x73 0x68    
   \              0x61 0x3A    
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Kmax">`:
   \   00000000   0x4B 0x6D          DC8 "Kmax"
   \              0x61 0x78    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Kmin">`:
   \   00000000   0x4B 0x6D          DC8 "Kmin"
   \              0x69 0x6E    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Pmax:6">`:
   \   00000000   0x50 0x6D          DC8 "Pmax:6"
   \              0x61 0x78    
   \              0x3A 0x36    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "d_p:">`:
   \   00000000   0x64 0x5F          DC8 "d_p:"
   \              0x70 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "chu:">`:
   \   00000000   0x63 0x68          DC8 "chu:"
   \              0x75 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "BLsha:">`:
   \   00000000   0x42 0x4C          DC8 "BLsha:"
   \              0x73 0x68    
   \              0x61 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Kmax:">`:
   \   00000000   0x4B 0x6D          DC8 "Kmax:"
   \              0x61 0x78    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Kmin:">`:
   \   00000000   0x4B 0x6D          DC8 "Kmin:"
   \              0x69 0x6E    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Pmax:">`:
   \   00000000   0x50 0x6D          DC8 "Pmax:"
   \              0x61 0x78    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "sh_x:1">`:
   \   00000000   0x73 0x68          DC8 "sh_x:1"
   \              0x5F 0x78    
   \              0x3A 0x31    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "fch_mo:2">`:
   \   00000000   0x66 0x63          DC8 "fch_mo:2"
   \              0x68 0x5F    
   \              0x6D 0x6F    
   \              0x3A 0x32    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "POshen:3">`:
   \   00000000   0x50 0x4F          DC8 "POshen:3"
   \              0x73 0x68    
   \              0x65 0x6E    
   \              0x3A 0x33    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "shmode:4">`:
   \   00000000   0x73 0x68          DC8 "shmode:4"
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x3A 0x34    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "sh_x:">`:
   \   00000000   0x73 0x68          DC8 "sh_x:"
   \              0x5F 0x78    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "fch_mo:">`:
   \   00000000   0x66 0x63          DC8 "fch_mo:"
   \              0x68 0x5F    
   \              0x6D 0x6F    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "POshaen:">`:
   \   00000000   0x50 0x4F          DC8 "POshaen:"
   \              0x73 0x68    
   \              0x61 0x65    
   \              0x6E 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "shmode:">`:
   \   00000000   0x73 0x68          DC8 "shmode:"
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x6A          DC8 "cj"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x67 0x6F          DC8 "go"
   \              0x00         
   \   00000003   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -> Abs
         8   -> GetMotorPulse
         8   -> LCD_CLS
         8   -> LCD_P8x16Str
         8   -> LCD_P8x16_num3wei
         8   -> LCD_P8x16_number
         8   -> LCD_P8x16_number_4
         8   -> PID_SetKpid
         8   -> SetServoVoltage
         8   -> Speed_PID
         8   -> __aeabi_d2f
         8   -> __aeabi_dadd
         8   -> __aeabi_f2d
         8   -> __aeabi_f2iz
         8   -> __aeabi_fmul
         8   -> binaryzation_F
         8   -> delay_ms
         8   -> get_front
         8   -> keyboard_scan
         8   -> matrix_keyboard_init
         8   -> route_type_F
         8   -> system_init
       8   system_init
         8   -> CCD_init
         8   -> FTM2_QUAD_Iint
         8   -> FTM_PWM_Init
         8   -> FTM_PWM_Open
         8   -> GetOFFSET
         8   -> GetSamplezhi
         8   -> LCD_Init
         8   -> Motor_init
         8   -> PID_SetKpid
         8   -> PID_SetPoint
         8   -> delay_ms
         8   -> enable_pit_interrupt
         8   -> hw_adc_init
         8   -> hw_pit_init
         8   -> uart_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "+:">
       4  ?<Constant "-:">
       8  ?<Constant "BLsha:">
       8  ?<Constant "BLsha:3">
       4  ?<Constant "Kd:">
       8  ?<Constant "Kd:5">
       8  ?<Constant "Key4">
       8  ?<Constant "Key5">
       8  ?<Constant "Key6">
       8  ?<Constant "Key7">
       8  ?<Constant "Key8">
       8  ?<Constant "Key9">
       8  ?<Constant "Kmax">
       8  ?<Constant "Kmax:">
       8  ?<Constant "Kmin">
       8  ?<Constant "Kmin:">
       4  ?<Constant "Kp:">
       8  ?<Constant "Kp:4">
       8  ?<Constant "PMAX:">
       8  ?<Constant "PMAX:3">
       8  ?<Constant "PO_ct:">
       8  ?<Constant "PO_ct:6">
      12  ?<Constant "POshaen:">
      12  ?<Constant "POshen:3">
       8  ?<Constant "Pmax:">
       8  ?<Constant "Pmax:6">
       8  ?<Constant "Prz:">
       8  ?<Constant "Prz:2">
       8  ?<Constant "Psha:">
       8  ?<Constant "Psha:1">
       8  ?<Constant "QPX_S:">
      12  ?<Constant "QPX_SET:6">
       4  ?<Constant "Re:">
      12  ?<Constant "Speed_H:">
      12  ?<Constant "Speed_L:">
       8  ?<Constant "ZHONG:">
       8  ?<Constant "ZHONG:4">
       8  ?<Constant "chu:">
       8  ?<Constant "chu:2">
       4  ?<Constant "cj">
       8  ?<Constant "d_p:">
       8  ?<Constant "d_p:1">
       8  ?<Constant "fch_mo:">
      12  ?<Constant "fch_mo:2">
       4  ?<Constant "go">
       8  ?<Constant "mode:">
       8  ?<Constant "mode:1">
       8  ?<Constant "s_H:2">
       8  ?<Constant "s_L:3">
       8  ?<Constant "sh_x:">
       8  ?<Constant "sh_x:1">
       8  ?<Constant "shmode:">
      12  ?<Constant "shmode:4">
       8  ?<Constant "xianfu:">
      12  ?<Constant "xianfu:5">
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable0_6
       4  ??DataTable0_7
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_19
       4  ??DataTable1_2
       4  ??DataTable1_20
       4  ??DataTable1_21
       4  ??DataTable1_22
       4  ??DataTable1_23
       4  ??DataTable1_24
       4  ??DataTable1_25
       4  ??DataTable1_26
       4  ??DataTable1_27
       4  ??DataTable1_28
       4  ??DataTable1_29
       4  ??DataTable1_3
       4  ??DataTable1_30
       4  ??DataTable1_31
       4  ??DataTable1_32
       4  ??DataTable1_33
       4  ??DataTable1_34
       4  ??DataTable1_35
       4  ??DataTable1_36
       4  ??DataTable1_37
       4  ??DataTable1_38
       4  ??DataTable1_39
       4  ??DataTable1_4
       4  ??DataTable1_40
       4  ??DataTable1_41
       4  ??DataTable1_42
       4  ??DataTable1_43
       4  ??DataTable1_44
       4  ??DataTable1_45
       4  ??DataTable1_46
       4  ??DataTable1_47
       4  ??DataTable1_48
       4  ??DataTable1_49
       4  ??DataTable1_5
       4  ??DataTable1_50
       4  ??DataTable1_51
       4  ??DataTable1_52
       4  ??DataTable1_53
       4  ??DataTable1_54
       4  ??DataTable1_55
       4  ??DataTable1_56
       4  ??DataTable1_57
       4  ??DataTable1_58
       4  ??DataTable1_59
       4  ??DataTable1_6
       4  ??DataTable1_60
       4  ??DataTable1_61
       4  ??DataTable1_62
       4  ??DataTable1_63
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       1  BK
       2  FRONT_WIDTH
       2  HONGWAI_L
       2  HONGWAI_R
       1  HWPO
       2  HWPO_ct
       2  IT_long
       1  IT_ref
       4  Kd
       4  Kd_BL
       4  Kd_WW
       4  Kd_WZ
       4  Kd_ZW
       4  Kd_ZZ
       4  Kd_hold
       4  Ki
       4  Ki_hold
       4  Kmax
       4  Kmin
       4  Kp
       4  Kp_BL
       4  Kp_WW
       4  Kp_WZ
       4  Kp_ZW
       4  Kp_ZZ
       4  Kp_hold
       2  Motor_Lock
       2  PMAX
       2  PO_ct
       2  POsha
       2  Prz
       4  Sd
       2  Servo_Lock
       4  Si
       4  Sp
       2  ZONG_WIDTH
       2  ZZ_count_max
       1  a
       2  cl_f_long
       2  cl_z_long
       2  d_err1_max
       1  d_p
       1  dazhi
       1  dir_fg
       2  fch_dp1
       2  fch_dp2
       2  fch_dp3
       1  fch_mo
       2  front_l_long
       2  front_r_long
       1  guopo
       2  hongwai_l
       2  hongwai_l_count
       2  hongwai_r
       2  hongwai_r_count
       1  hw_l_fg
       1  hw_r_fg
       4  k_B
       4  k_out
       1  key_no
       1  key_num
       2  lost_all_count_max
    8468  main
       1  mode
       2  po_count
       1  po_gap
       2  po_gap_ct
       1  polook
       4  pulse_count_max
       2  shache_time
       1  showcnt
       2  speed
       2  speed_B
       2  speed_H
       2  speed_L
       2  speed_jian
     144  system_init
       1  zhming
       2  zong_l_long
       2  zong_r_long

 
    67 bytes in section .bss
   119 bytes in section .data
   444 bytes in section .rodata
 8 900 bytes in section .text
 
 8 900 bytes of CODE  memory
   444 bytes of CONST memory
   186 bytes of DATA  memory

Errors: none
Warnings: 2
