###############################################################################
#                                                                             #
#                                                       01/Jun/2014  12:01:21 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4        #
#                    2014.05.29 renzi\src\Sources\C\Component_C\pwm.c         #
#    Command line =  "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4       #
#                    2014.05.29 renzi\src\Sources\C\Component_C\pwm.c" -D     #
#                    IAR -D TWR_K60N512 -lCN "D:\FREESCALE智能车竞赛\freescal #
#                    e(九)\程序\PE V1.4 2014.05.29 renzi\bin\Flash\List\"     #
#                    -lB "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4   #
#                    2014.05.29 renzi\bin\Flash\List\" -o                     #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4       #
#                    2014.05.29 renzi\bin\Flash\Obj\" --no_cse --no_unroll    #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files            #
#                    (x86)\IAREW6.3\arm\INC\c\DLib_Config_Normal.h" -I        #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4       #
#                    2014.05.29 renzi\src\Sources\H\" -I                      #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4       #
#                    2014.05.29 renzi\src\Sources\H\Component_H\" -I          #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4       #
#                    2014.05.29 renzi\src\Sources\H\Frame_H\" -Ol             #
#                    --use_c++_inline                                         #
#    List file    =  D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4        #
#                    2014.05.29 renzi\bin\Flash\List\pwm.lst                  #
#    Object file  =  D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4        #
#                    2014.05.29 renzi\bin\Flash\Obj\pwm.o                     #
#                                                                             #
#                                                                             #
###############################################################################

D:\FREESCALE智能车竞赛\freescale(九)\程序\PE V1.4 2014.05.29 renzi\src\Sources\C\Component_C\pwm.c
      1          #include<pwm.h>
      2          #include<gpio.h>    
      3          
      4          extern int periph_clk_khz;

   \                                 In section .bss, align 4
      5          uint32 FTM_MOD0=0;
   \                     FTM_MOD0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      6          uint32 FTM_MOD1=0;
   \                     FTM_MOD1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      7          uint32 FTM_MOD2=0;
   \                     FTM_MOD2:
   \   00000000                      DS8 4
      8           
      9          
     10          /***************************************************************
     11          *函数名：uint8 FTM_PWM_Init(uint8 FTMx,uint32 freq)
     12          *功能：  将特定的FTMx初始化为pwm输出，并且设置频率
     13          *入口参数：(1)FTMx : 0
     14                               1
     15                               2
     16                     
     17                    (2)fre  :  Hz
     18          *出口参数：无
     19          *说明：无
     20          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
     21          uint8 FTM_PWM_Init(uint8 FTMx,uint32 freq)
     22          {
   \                     FTM_PWM_Init:
   \   00000000   0xB430             PUSH     {R4,R5}
     23            uint32 bus_clk_hz;
     24            uint32 mod;
     25            uint8  ps=0;
   \   00000002   0x2300             MOVS     R3,#+0
     26            bus_clk_hz = periph_clk_khz*1000;
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable4
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0xF44F 0x747A      MOV      R4,#+1000
   \   0000000E   0x4362             MULS     R2,R4,R2
     27              
     28            if(freq>bus_clk_hz) return 0;
   \   00000010   0x428A             CMP      R2,R1
   \   00000012   0xD201             BCS.N    ??FTM_PWM_Init_0
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xE09E             B.N      ??FTM_PWM_Init_1
     29            
     30            if((mod=bus_clk_hz/(freq*128)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_0:
   \   00000018   0x2380             MOVS     R3,#+128
   \   0000001A   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000001E   0xFBB2 0xF4F3      UDIV     R4,R2,R3
   \   00000022   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000026   0x429C             CMP      R4,R3
   \   00000028   0xF080 0x8117      BCS.W    ??FTM_PWM_Init_2
     31            {
     32              ps = 7;
   \   0000002C   0x2307             MOVS     R3,#+7
     33              if(FTMx==0)
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xF040 0x8092      BNE.W    ??FTM_PWM_Init_3
     34              {
     35                FTM_MOD0=mod;
   \   00000036   0x.... 0x....      LDR.W    R5,??DataTable4_1
   \   0000003A   0x602C             STR      R4,[R5, #+0]
     36              }
     37              else if(FTMx==1)
     38              {
     39                FTM_MOD1=mod;
     40              }
     41              else if(FTMx==2)
     42              {
     43                FTM_MOD2=mod;  
     44              }
     45              else
     46                return 0;
     47              
     48              if((mod=bus_clk_hz/(freq*64)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_4:
   \   0000003C   0x2440             MOVS     R4,#+64
   \   0000003E   0xFB04 0xF401      MUL      R4,R4,R1
   \   00000042   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000046   0xF64F 0x75FF      MOVW     R5,#+65535
   \   0000004A   0x42AC             CMP      R4,R5
   \   0000004C   0xD260             BCS.N    ??FTM_PWM_Init_5
     49              {
     50                ps = 6;   
   \   0000004E   0x2306             MOVS     R3,#+6
     51                if(FTMx==0)
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xF040 0x8091      BNE.W    ??FTM_PWM_Init_6
     52                {
     53                  FTM_MOD0= mod;
   \   00000058   0x.... 0x....      LDR.W    R5,??DataTable4_1
   \   0000005C   0x602C             STR      R4,[R5, #+0]
     54                }
     55                else if(FTMx==1)
     56                {
     57                  FTM_MOD1=mod;
     58                }
     59                else if(FTMx==2)
     60                {
     61                  FTM_MOD2=mod;  
     62                }
     63              else
     64                return 0;
     65                if((mod=bus_clk_hz/(freq*32)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_7:
   \   0000005E   0x014C             LSLS     R4,R1,#+5
   \   00000060   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000064   0xF64F 0x75FF      MOVW     R5,#+65535
   \   00000068   0x42AC             CMP      R4,R5
   \   0000006A   0xD251             BCS.N    ??FTM_PWM_Init_5
     66                {
     67                  ps = 5; 
   \   0000006C   0x2305             MOVS     R3,#+5
     68                  if(FTMx==0)
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xF040 0x8092      BNE.W    ??FTM_PWM_Init_8
     69                  {
     70                    FTM_MOD0= mod;
   \   00000076   0x.... 0x....      LDR.W    R5,??DataTable4_1
   \   0000007A   0x602C             STR      R4,[R5, #+0]
     71                  }
     72                  else if(FTMx==1)
     73                  {
     74                    FTM_MOD1=mod;
     75                  }
     76                  else if(FTMx==2)
     77                  {
     78                    FTM_MOD2=mod;  
     79                  }
     80                  else
     81                    return 0;
     82                  if((mod=bus_clk_hz/(freq*16)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_9:
   \   0000007C   0x010C             LSLS     R4,R1,#+4
   \   0000007E   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   00000082   0xF64F 0x75FF      MOVW     R5,#+65535
   \   00000086   0x42AC             CMP      R4,R5
   \   00000088   0xD242             BCS.N    ??FTM_PWM_Init_5
     83                  {
     84                    ps = 4;  
   \   0000008A   0x2304             MOVS     R3,#+4
     85                    if(FTMx==0)
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xF040 0x8093      BNE.W    ??FTM_PWM_Init_10
     86                    {
     87                      FTM_MOD0= mod;
   \   00000094   0x.... 0x....      LDR.W    R5,??DataTable4_1
   \   00000098   0x602C             STR      R4,[R5, #+0]
     88                    }
     89                    else if(FTMx==1)
     90                    {
     91                      FTM_MOD1=mod;
     92                    }
     93                    else if(FTMx==2)
     94                    {
     95                      FTM_MOD2=mod;  
     96                    }
     97                    else
     98                      return 0;
     99                    if((mod=bus_clk_hz/(freq*8)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_11:
   \   0000009A   0x00CC             LSLS     R4,R1,#+3
   \   0000009C   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000A0   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000A4   0x42AC             CMP      R4,R5
   \   000000A6   0xD233             BCS.N    ??FTM_PWM_Init_5
    100                    {
    101                      ps = 3;
   \   000000A8   0x2303             MOVS     R3,#+3
    102                      if(FTMx==0)
   \   000000AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xF040 0x8094      BNE.W    ??FTM_PWM_Init_12
    103                      {
    104                        FTM_MOD0= mod;
   \   000000B2   0x.... 0x....      LDR.W    R5,??DataTable4_1
   \   000000B6   0x602C             STR      R4,[R5, #+0]
    105                      }
    106                      else if(FTMx==1)
    107                      {
    108                        FTM_MOD1=mod;
    109                      }
    110                      else if(FTMx==2)
    111                      {
    112                        FTM_MOD2=mod;  
    113                      }
    114                      else
    115                        return 0;
    116                      if((mod=bus_clk_hz/(freq*4)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_13:
   \   000000B8   0x008C             LSLS     R4,R1,#+2
   \   000000BA   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000BE   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000C2   0x42AC             CMP      R4,R5
   \   000000C4   0xD224             BCS.N    ??FTM_PWM_Init_5
    117                      {
    118                        ps = 2;
   \   000000C6   0x2302             MOVS     R3,#+2
    119                        if(FTMx==0)
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xF040 0x8095      BNE.W    ??FTM_PWM_Init_14
    120                        {
    121                          FTM_MOD0= mod;
   \   000000D0   0x.... 0x....      LDR.W    R5,??DataTable4_1
   \   000000D4   0x602C             STR      R4,[R5, #+0]
    122                        }
    123                        else if(FTMx==1)
    124                        {
    125                          FTM_MOD1=mod;
    126                        }
    127                        else if(FTMx==2)
    128                        {
    129                          FTM_MOD2=mod;  
    130                        }
    131                        else
    132                          return 0;
    133                        if((mod=bus_clk_hz/(freq*2)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_15:
   \   000000D6   0x004C             LSLS     R4,R1,#+1
   \   000000D8   0xFBB2 0xF4F4      UDIV     R4,R2,R4
   \   000000DC   0xF64F 0x75FF      MOVW     R5,#+65535
   \   000000E0   0x42AC             CMP      R4,R5
   \   000000E2   0xD215             BCS.N    ??FTM_PWM_Init_5
    134                        {
    135                          ps = 1;
   \   000000E4   0x2301             MOVS     R3,#+1
    136                          if(FTMx==0)
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x2800             CMP      R0,#+0
   \   000000EA   0xF040 0x8096      BNE.W    ??FTM_PWM_Init_16
    137                          {
    138                            FTM_MOD0= mod;
   \   000000EE   0x.... 0x....      LDR.W    R5,??DataTable4_1
   \   000000F2   0x602C             STR      R4,[R5, #+0]
    139                          }
    140                          else if(FTMx==1)
    141                          {
    142                            FTM_MOD1=mod;
    143                          }
    144                          else if(FTMx==2)
    145                          {
    146                            FTM_MOD2=mod;  
    147                          }
    148                          else
    149                            return 0;
    150                          if((mod=bus_clk_hz/(freq*1)) < 0xFFFFu)
   \                     ??FTM_PWM_Init_17:
   \   000000F4   0xFBB2 0xF4F1      UDIV     R4,R2,R1
   \   000000F8   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000FC   0x428C             CMP      R4,R1
   \   000000FE   0xD207             BCS.N    ??FTM_PWM_Init_5
    151                          {
    152                            ps = 0;
   \   00000100   0x2300             MOVS     R3,#+0
    153                            if(FTMx==0)
   \   00000102   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000104   0x2800             CMP      R0,#+0
   \   00000106   0xF040 0x8098      BNE.W    ??FTM_PWM_Init_18
    154                            {
    155                              FTM_MOD0= mod;
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   0000010E   0x600C             STR      R4,[R1, #+0]
    156                            }
    157                            else if(FTMx==1)
    158                            {
    159                              FTM_MOD1=mod;
    160                            }
    161                            else if(FTMx==2)
    162                            {
    163                              FTM_MOD2=mod;  
    164                            }
    165                            else
    166                              return 0;
    167                          }
    168                        }
    169                      }
    170                    }
    171                  }  
    172                }
    173              }
    174            }
    175            else
    176            {
    177              return 0;
    178            }
    179            
    180            if(FTMx==0)
   \                     ??FTM_PWM_Init_5:
   \   00000110   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xF040 0x80A3      BNE.W    ??FTM_PWM_Init_19
    181              {
    182                // 使能FTM时钟模块
    183                SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable4_2  ;; 0x4004803c
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable4_2  ;; 0x4004803c
   \   00000126   0x6008             STR      R0,[R1, #+0]
    184            
    185                // 配置FTM控制寄存器
    186                // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    187                // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    188                FTM0_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
   \   00000128   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000012A   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   0000012E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable4_3  ;; 0x40038000
   \   00000136   0x6008             STR      R0,[R1, #+0]
    189            
    190                // 设置PWM周期及占空比
    191                // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    192                // 配置FTM计数初始值
    193                FTM0_CNT = 0;
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable4_4  ;; 0x40038004
   \   0000013C   0x2100             MOVS     R1,#+0
   \   0000013E   0x6001             STR      R1,[R0, #+0]
    194                FTM0_CNTIN = 0;
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable4_5  ;; 0x4003804c
   \   00000144   0x2100             MOVS     R1,#+0
   \   00000146   0x6001             STR      R1,[R0, #+0]
    195                
    196                // 配置FTM计数MOD值
    197                FTM0_MOD = FTM_MOD0;
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable4_6  ;; 0x40038008
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000150   0x6809             LDR      R1,[R1, #+0]
   \   00000152   0x6001             STR      R1,[R0, #+0]
    198              }
    199            else if(FTMx==1)
    200              {
    201                // 使能FTM时钟模块
    202                SIM_SCGC6 |= SIM_SCGC6_FTM1_MASK;
    203            
    204                // 配置FTM控制寄存器
    205                // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    206                // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    207                FTM1_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    208            
    209                // 设置PWM周期及占空比
    210                // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    211                // 配置FTM计数初始值
    212                FTM1_CNT = 0;
    213                FTM1_CNTIN = 0;
    214                
    215                // 配置FTM计数MOD值
    216                FTM1_MOD = FTM_MOD1;
    217              } 
    218            else if(FTMx==2)
    219              {
    220                // 使能FTM时钟模块
    221                SIM_SCGC3 |= SIM_SCGC3_FTM2_MASK;
    222            
    223                // 配置FTM控制寄存器
    224                // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    225                // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    226                FTM2_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    227            
    228                // 设置PWM周期及占空比
    229                // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    230                // 配置FTM计数初始值
    231                FTM2_CNT = 0;
    232                FTM2_CNTIN = 0;
    233                
    234                // 配置FTM计数MOD值
    235                FTM2_MOD = FTM_MOD2;
    236              }  
    237            else
    238              return 0;
    239          
    240            return 1;
   \                     ??FTM_PWM_Init_20:
   \   00000154   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_Init_1:
   \   00000156   0xBC30             POP      {R4,R5}
   \   00000158   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_Init_3:
   \   0000015A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   0x2801             CMP      R0,#+1
   \   0000015E   0xD103             BNE.N    ??FTM_PWM_Init_21
   \   00000160   0x.... 0x....      LDR.W    R5,??DataTable4_7
   \   00000164   0x602C             STR      R4,[R5, #+0]
   \   00000166   0xE769             B.N      ??FTM_PWM_Init_4
   \                     ??FTM_PWM_Init_21:
   \   00000168   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016A   0x2802             CMP      R0,#+2
   \   0000016C   0xD103             BNE.N    ??FTM_PWM_Init_22
   \   0000016E   0x.... 0x....      LDR.W    R5,??DataTable4_8
   \   00000172   0x602C             STR      R4,[R5, #+0]
   \   00000174   0xE762             B.N      ??FTM_PWM_Init_4
   \                     ??FTM_PWM_Init_22:
   \   00000176   0x2000             MOVS     R0,#+0
   \   00000178   0xE7ED             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_6:
   \   0000017A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017C   0x2801             CMP      R0,#+1
   \   0000017E   0xD103             BNE.N    ??FTM_PWM_Init_23
   \   00000180   0x.... 0x....      LDR.W    R5,??DataTable4_7
   \   00000184   0x602C             STR      R4,[R5, #+0]
   \   00000186   0xE76A             B.N      ??FTM_PWM_Init_7
   \                     ??FTM_PWM_Init_23:
   \   00000188   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018A   0x2802             CMP      R0,#+2
   \   0000018C   0xD103             BNE.N    ??FTM_PWM_Init_24
   \   0000018E   0x.... 0x....      LDR.W    R5,??DataTable4_8
   \   00000192   0x602C             STR      R4,[R5, #+0]
   \   00000194   0xE763             B.N      ??FTM_PWM_Init_7
   \                     ??FTM_PWM_Init_24:
   \   00000196   0x2000             MOVS     R0,#+0
   \   00000198   0xE7DD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_8:
   \   0000019A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019C   0x2801             CMP      R0,#+1
   \   0000019E   0xD103             BNE.N    ??FTM_PWM_Init_25
   \   000001A0   0x.... 0x....      LDR.W    R5,??DataTable4_7
   \   000001A4   0x602C             STR      R4,[R5, #+0]
   \   000001A6   0xE769             B.N      ??FTM_PWM_Init_9
   \                     ??FTM_PWM_Init_25:
   \   000001A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001AA   0x2802             CMP      R0,#+2
   \   000001AC   0xD103             BNE.N    ??FTM_PWM_Init_26
   \   000001AE   0x.... 0x....      LDR.W    R5,??DataTable4_8
   \   000001B2   0x602C             STR      R4,[R5, #+0]
   \   000001B4   0xE762             B.N      ??FTM_PWM_Init_9
   \                     ??FTM_PWM_Init_26:
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0xE7CD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_10:
   \   000001BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BC   0x2801             CMP      R0,#+1
   \   000001BE   0xD103             BNE.N    ??FTM_PWM_Init_27
   \   000001C0   0x.... 0x....      LDR.W    R5,??DataTable4_7
   \   000001C4   0x602C             STR      R4,[R5, #+0]
   \   000001C6   0xE768             B.N      ??FTM_PWM_Init_11
   \                     ??FTM_PWM_Init_27:
   \   000001C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CA   0x2802             CMP      R0,#+2
   \   000001CC   0xD103             BNE.N    ??FTM_PWM_Init_28
   \   000001CE   0x.... 0x....      LDR.W    R5,??DataTable4_8
   \   000001D2   0x602C             STR      R4,[R5, #+0]
   \   000001D4   0xE761             B.N      ??FTM_PWM_Init_11
   \                     ??FTM_PWM_Init_28:
   \   000001D6   0x2000             MOVS     R0,#+0
   \   000001D8   0xE7BD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_12:
   \   000001DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001DC   0x2801             CMP      R0,#+1
   \   000001DE   0xD103             BNE.N    ??FTM_PWM_Init_29
   \   000001E0   0x.... 0x....      LDR.W    R5,??DataTable4_7
   \   000001E4   0x602C             STR      R4,[R5, #+0]
   \   000001E6   0xE767             B.N      ??FTM_PWM_Init_13
   \                     ??FTM_PWM_Init_29:
   \   000001E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EA   0x2802             CMP      R0,#+2
   \   000001EC   0xD103             BNE.N    ??FTM_PWM_Init_30
   \   000001EE   0x.... 0x....      LDR.W    R5,??DataTable4_8
   \   000001F2   0x602C             STR      R4,[R5, #+0]
   \   000001F4   0xE760             B.N      ??FTM_PWM_Init_13
   \                     ??FTM_PWM_Init_30:
   \   000001F6   0x2000             MOVS     R0,#+0
   \   000001F8   0xE7AD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_14:
   \   000001FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001FC   0x2801             CMP      R0,#+1
   \   000001FE   0xD103             BNE.N    ??FTM_PWM_Init_31
   \   00000200   0x.... 0x....      LDR.W    R5,??DataTable4_7
   \   00000204   0x602C             STR      R4,[R5, #+0]
   \   00000206   0xE766             B.N      ??FTM_PWM_Init_15
   \                     ??FTM_PWM_Init_31:
   \   00000208   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000020A   0x2802             CMP      R0,#+2
   \   0000020C   0xD103             BNE.N    ??FTM_PWM_Init_32
   \   0000020E   0x.... 0x....      LDR.W    R5,??DataTable4_8
   \   00000212   0x602C             STR      R4,[R5, #+0]
   \   00000214   0xE75F             B.N      ??FTM_PWM_Init_15
   \                     ??FTM_PWM_Init_32:
   \   00000216   0x2000             MOVS     R0,#+0
   \   00000218   0xE79D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_16:
   \   0000021A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000021C   0x2801             CMP      R0,#+1
   \   0000021E   0xD103             BNE.N    ??FTM_PWM_Init_33
   \   00000220   0x.... 0x....      LDR.W    R5,??DataTable4_7
   \   00000224   0x602C             STR      R4,[R5, #+0]
   \   00000226   0xE765             B.N      ??FTM_PWM_Init_17
   \                     ??FTM_PWM_Init_33:
   \   00000228   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000022A   0x2802             CMP      R0,#+2
   \   0000022C   0xD103             BNE.N    ??FTM_PWM_Init_34
   \   0000022E   0x.... 0x....      LDR.W    R5,??DataTable4_8
   \   00000232   0x602C             STR      R4,[R5, #+0]
   \   00000234   0xE75E             B.N      ??FTM_PWM_Init_17
   \                     ??FTM_PWM_Init_34:
   \   00000236   0x2000             MOVS     R0,#+0
   \   00000238   0xE78D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_18:
   \   0000023A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023C   0x2801             CMP      R0,#+1
   \   0000023E   0xD103             BNE.N    ??FTM_PWM_Init_35
   \   00000240   0x.... 0x....      LDR.W    R1,??DataTable4_7
   \   00000244   0x600C             STR      R4,[R1, #+0]
   \   00000246   0xE763             B.N      ??FTM_PWM_Init_5
   \                     ??FTM_PWM_Init_35:
   \   00000248   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000024A   0x2802             CMP      R0,#+2
   \   0000024C   0xD103             BNE.N    ??FTM_PWM_Init_36
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable4_8
   \   00000252   0x600C             STR      R4,[R1, #+0]
   \   00000254   0xE75C             B.N      ??FTM_PWM_Init_5
   \                     ??FTM_PWM_Init_36:
   \   00000256   0x2000             MOVS     R0,#+0
   \   00000258   0xE77D             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_2:
   \   0000025A   0x2000             MOVS     R0,#+0
   \   0000025C   0xE77B             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_19:
   \   0000025E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000260   0x2801             CMP      R0,#+1
   \   00000262   0xD11E             BNE.N    ??FTM_PWM_Init_37
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable4_2  ;; 0x4004803c
   \   00000268   0x6800             LDR      R0,[R0, #+0]
   \   0000026A   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable4_2  ;; 0x4004803c
   \   00000272   0x6008             STR      R0,[R1, #+0]
   \   00000274   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000276   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   0000027A   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable4_9  ;; 0x40039000
   \   00000282   0x6008             STR      R0,[R1, #+0]
   \   00000284   0x.... 0x....      LDR.W    R0,??DataTable4_10  ;; 0x40039004
   \   00000288   0x2100             MOVS     R1,#+0
   \   0000028A   0x6001             STR      R1,[R0, #+0]
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable4_11  ;; 0x4003904c
   \   00000290   0x2100             MOVS     R1,#+0
   \   00000292   0x6001             STR      R1,[R0, #+0]
   \   00000294   0x.... 0x....      LDR.W    R0,??DataTable4_12  ;; 0x40039008
   \   00000298   0x.... 0x....      LDR.W    R1,??DataTable4_7
   \   0000029C   0x6809             LDR      R1,[R1, #+0]
   \   0000029E   0x6001             STR      R1,[R0, #+0]
   \   000002A0   0xE758             B.N      ??FTM_PWM_Init_20
   \                     ??FTM_PWM_Init_37:
   \   000002A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002A4   0x2802             CMP      R0,#+2
   \   000002A6   0xD11E             BNE.N    ??FTM_PWM_Init_38
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable4_13  ;; 0x40048030
   \   000002AC   0x6800             LDR      R0,[R0, #+0]
   \   000002AE   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   000002B2   0x.... 0x....      LDR.W    R1,??DataTable4_13  ;; 0x40048030
   \   000002B6   0x6008             STR      R0,[R1, #+0]
   \   000002B8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002BA   0xF013 0x0007      ANDS     R0,R3,#0x7
   \   000002BE   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000002C2   0x.... 0x....      LDR.W    R1,??DataTable4_14  ;; 0x400b8000
   \   000002C6   0x6008             STR      R0,[R1, #+0]
   \   000002C8   0x.... 0x....      LDR.W    R0,??DataTable4_15  ;; 0x400b8004
   \   000002CC   0x2100             MOVS     R1,#+0
   \   000002CE   0x6001             STR      R1,[R0, #+0]
   \   000002D0   0x.... 0x....      LDR.W    R0,??DataTable4_16  ;; 0x400b804c
   \   000002D4   0x2100             MOVS     R1,#+0
   \   000002D6   0x6001             STR      R1,[R0, #+0]
   \   000002D8   0x.... 0x....      LDR.W    R0,??DataTable4_17  ;; 0x400b8008
   \   000002DC   0x.... 0x....      LDR.W    R1,??DataTable4_8
   \   000002E0   0x6809             LDR      R1,[R1, #+0]
   \   000002E2   0x6001             STR      R1,[R0, #+0]
   \   000002E4   0xE736             B.N      ??FTM_PWM_Init_20
   \                     ??FTM_PWM_Init_38:
   \   000002E6   0x2000             MOVS     R0,#+0
   \   000002E8   0xE735             B.N      ??FTM_PWM_Init_1
    241          }
    242          
    243          
    244          /***************************************************************
    245          *函数名：uint8 FTM_PWM_Open(uint8 FTMx,uint8 channel, uint32 duty)
    246          *功能：  打开PWM通道，设置占空比
    247          *入口参数：(1)FTMx : 0
    248                               1
    249                               2
    250                     
    251                    (2)channel  通道号 
    252          
    253                    (3)duty     占空比
    254          *出口参数：无
    255          *说明：无
    256          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    257          uint8 FTM_PWM_Open(uint8 FTMx,uint8 channel, uint32 duty)
    258          {
   \                     FTM_PWM_Open:
   \   00000000   0xB418             PUSH     {R3,R4}
    259            uint32 cv;
    260            volatile uint32 mod;
    261            
    262            if(duty>10000) return 0;
   \   00000002   0xF242 0x7311      MOVW     R3,#+10001
   \   00000006   0x429A             CMP      R2,R3
   \   00000008   0xD301             BCC.N    ??FTM_PWM_Open_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE066             B.N      ??FTM_PWM_Open_1
    263            //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    264            if(FTMx==0)
   \                     ??FTM_PWM_Open_0:
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD165             BNE.N    ??FTM_PWM_Open_2
    265            {
    266              mod = FTM_MOD0;
   \   00000014   0x.... 0x....      LDR.W    R3,??DataTable4_1
   \   00000018   0x681B             LDR      R3,[R3, #+0]
   \   0000001A   0x9300             STR      R3,[SP, #+0]
    267            }
    268            else if(FTMx==1)
    269            {
    270              mod==FTM_MOD1;
    271            }
    272            else if(FTMx==2)
    273            {
    274              mod==FTM_MOD2;
    275            }
    276            else
    277              return 0;
    278            
    279            cv = (duty*(mod-0+1)+0)/10000;
   \                     ??FTM_PWM_Open_3:
   \   0000001C   0x9B00             LDR      R3,[SP, #+0]
   \   0000001E   0x1C5B             ADDS     R3,R3,#+1
   \   00000020   0x435A             MULS     R2,R3,R2
   \   00000022   0xF242 0x7310      MOVW     R3,#+10000
   \   00000026   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    280            
    281            if(FTMx==0)
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD128             BNE.N    ??FTM_PWM_Open_4
    282            {
    283              //选择并开启通道
    284              switch(channel)
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000032   0x000B             MOVS     R3,R1
   \   00000034   0x2B00             CMP      R3,#+0
   \   00000036   0x2B02             CMP      R3,#+2
   \   00000038   0xD905             BLS.N    ??FTM_PWM_Open_5
   \   0000003A   0x1EDB             SUBS     R3,R3,#+3
   \   0000003C   0xD06C             BEQ.N    ??FTM_PWM_Open_6
   \   0000003E   0x1E5B             SUBS     R3,R3,#+1
   \   00000040   0x2B03             CMP      R3,#+3
   \   00000042   0xD979             BLS.N    ??FTM_PWM_Open_7
   \   00000044   0xE085             B.N      ??FTM_PWM_Open_8
    285                {
    286                  case 0:
    287                  case 1:
    288                  case 2:
    289                    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
   \                     ??FTM_PWM_Open_5:
   \   00000046   0x.... 0x....      LDR.W    R3,??DataTable4_18  ;; 0x40048038
   \   0000004A   0x681B             LDR      R3,[R3, #+0]
   \   0000004C   0xF44F 0x7400      MOV      R4,#+512
   \   00000050   0x4323             ORRS     R3,R4,R3
   \   00000052   0x.... 0x....      LDR.W    R4,??DataTable4_18  ;; 0x40048038
   \   00000056   0x6023             STR      R3,[R4, #+0]
    290                    PORT_PCR_REG(PORTA_BASE_PTR, channel+3) = PORT_PCR_MUX(3);
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x008B             LSLS     R3,R1,#+2
   \   0000005C   0xF103 0x4380      ADD      R3,R3,#+1073741824
   \   00000060   0xF513 0x2392      ADDS     R3,R3,#+299008
   \   00000064   0xF44F 0x7440      MOV      R4,#+768
   \   00000068   0x60DC             STR      R4,[R3, #+12]
    291                    break;
    292                  case 3:
    293                    SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    294                    PORT_PCR_REG(PORTC_BASE_PTR, channel+1) = PORT_PCR_MUX(4);
    295                    break;
    296                  case 4:
    297                  case 5:
    298                  case 6:
    299                  case 7:
    300                    SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    301                    PORT_PCR_REG(PORTD_BASE_PTR, channel) = PORT_PCR_MUX(4);
    302                    break;
    303                  default:
    304                    return 0;
    305                }  
    306            
    307              // 配置FTM通道控制寄存器 
    308              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    309              FTM_CnSC_REG(FTM0_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \                     ??FTM_PWM_Open_9:
   \   0000006A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006C   0x.... 0x....      LDR.W    R3,??DataTable4_19  ;; 0x4003800c
   \   00000070   0x2428             MOVS     R4,#+40
   \   00000072   0xF843 0x4031      STR      R4,[R3, R1, LSL #+3]
    310              // 配置FTM通道值
    311              FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv;
   \   00000076   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000078   0x.... 0x....      LDR.W    R3,??DataTable4_19  ;; 0x4003800c
   \   0000007C   0xEB13 0x03C1      ADDS     R3,R3,R1, LSL #+3
   \   00000080   0x605A             STR      R2,[R3, #+4]
    312            } 
    313            
    314            if(FTMx==1)
   \                     ??FTM_PWM_Open_4:
   \   00000082   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000084   0x2801             CMP      R0,#+1
   \   00000086   0xD118             BNE.N    ??FTM_PWM_Open_10
    315            {
    316              //选择并开启通道
    317              switch(channel)
   \   00000088   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008A   0x2900             CMP      R1,#+0
   \   0000008C   0xD163             BNE.N    ??FTM_PWM_Open_11
    318                {
    319                  case 0:
    320                        SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
   \   0000008E   0x....             LDR.N    R3,??DataTable4_18  ;; 0x40048038
   \   00000090   0x681B             LDR      R3,[R3, #+0]
   \   00000092   0xF453 0x6380      ORRS     R3,R3,#0x400
   \   00000096   0x....             LDR.N    R4,??DataTable4_18  ;; 0x40048038
   \   00000098   0x6023             STR      R3,[R4, #+0]
    321                        PORT_PCR_REG(PORTB_BASE_PTR, channel) = PORT_PCR_MUX(3);
   \   0000009A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009C   0x....             LDR.N    R3,??DataTable4_20  ;; 0x4004a000
   \   0000009E   0xF44F 0x7440      MOV      R4,#+768
   \   000000A2   0xF843 0x4021      STR      R4,[R3, R1, LSL #+2]
    322                         //SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    323                         //PORTB_PCR0= PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK;
    324                         break;
    325                  case 1:
    326                  case 2:
    327                  case 3:
    328                  case 4:
    329                  case 5:
    330                  case 6:
    331                  case 7:
    332                  default:
    333                    return 0;
    334                }  
    335            
    336              // 配置FTM通道控制寄存器 
    337              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    338              FTM_CnSC_REG(FTM1_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   000000A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A8   0x....             LDR.N    R3,??DataTable4_21  ;; 0x4003900c
   \   000000AA   0x2428             MOVS     R4,#+40
   \   000000AC   0xF843 0x4031      STR      R4,[R3, R1, LSL #+3]
    339              // 配置FTM通道值
    340              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
   \   000000B0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B2   0x....             LDR.N    R3,??DataTable4_21  ;; 0x4003900c
   \   000000B4   0xEB13 0x03C1      ADDS     R3,R3,R1, LSL #+3
   \   000000B8   0x605A             STR      R2,[R3, #+4]
    341            } 
    342            
    343            if(FTMx==2)
   \                     ??FTM_PWM_Open_10:
   \   000000BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BC   0x2802             CMP      R0,#+2
   \   000000BE   0xD10C             BNE.N    ??FTM_PWM_Open_12
    344            {
    345              //选择并开启通道
    346              switch(channel)
   \   000000C0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C2   0x2900             CMP      R1,#+0
   \   000000C4   0xD149             BNE.N    ??FTM_PWM_Open_13
    347                {
    348                  case 0:
    349                    break;
    350                  case 1:
    351                  case 2:
    352                  case 3:
    353                  case 4:
    354                  case 5:
    355                  case 6:
    356                  case 7:
    357                  default:
    358                    return 0;
    359                }  
    360            
    361              // 配置FTM通道控制寄存器 
    362              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    363              FTM_CnSC_REG(FTM2_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   000000C6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C8   0x....             LDR.N    R0,??DataTable4_22  ;; 0x400b800c
   \   000000CA   0x2328             MOVS     R3,#+40
   \   000000CC   0xF840 0x3031      STR      R3,[R0, R1, LSL #+3]
    364              // 配置FTM通道值
    365              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
   \   000000D0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D2   0x....             LDR.N    R0,??DataTable4_22  ;; 0x400b800c
   \   000000D4   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000000D8   0x6042             STR      R2,[R0, #+4]
    366            } 
    367            return 1;
   \                     ??FTM_PWM_Open_12:
   \   000000DA   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_Open_1:
   \   000000DC   0xBC12             POP      {R1,R4}
   \   000000DE   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_Open_2:
   \   000000E0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E2   0x2801             CMP      R0,#+1
   \   000000E4   0xD109             BNE.N    ??FTM_PWM_Open_14
   \   000000E6   0x9B00             LDR      R3,[SP, #+0]
   \   000000E8   0x....             LDR.N    R4,??DataTable4_7
   \   000000EA   0x6824             LDR      R4,[R4, #+0]
   \   000000EC   0x42A3             CMP      R3,R4
   \   000000EE   0xD101             BNE.N    ??FTM_PWM_Open_15
   \   000000F0   0x2301             MOVS     R3,#+1
   \   000000F2   0xE000             B.N      ??FTM_PWM_Open_16
   \                     ??FTM_PWM_Open_15:
   \   000000F4   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_Open_16:
   \   000000F6   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000F8   0xE790             B.N      ??FTM_PWM_Open_3
   \                     ??FTM_PWM_Open_14:
   \   000000FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FC   0x2802             CMP      R0,#+2
   \   000000FE   0xD109             BNE.N    ??FTM_PWM_Open_17
   \   00000100   0x9B00             LDR      R3,[SP, #+0]
   \   00000102   0x....             LDR.N    R4,??DataTable4_8
   \   00000104   0x6824             LDR      R4,[R4, #+0]
   \   00000106   0x42A3             CMP      R3,R4
   \   00000108   0xD101             BNE.N    ??FTM_PWM_Open_18
   \   0000010A   0x2301             MOVS     R3,#+1
   \   0000010C   0xE000             B.N      ??FTM_PWM_Open_19
   \                     ??FTM_PWM_Open_18:
   \   0000010E   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_Open_19:
   \   00000110   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000112   0xE783             B.N      ??FTM_PWM_Open_3
   \                     ??FTM_PWM_Open_17:
   \   00000114   0x2000             MOVS     R0,#+0
   \   00000116   0xE7E1             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_6:
   \   00000118   0x....             LDR.N    R3,??DataTable4_18  ;; 0x40048038
   \   0000011A   0x681B             LDR      R3,[R3, #+0]
   \   0000011C   0xF453 0x6300      ORRS     R3,R3,#0x800
   \   00000120   0x....             LDR.N    R4,??DataTable4_18  ;; 0x40048038
   \   00000122   0x6023             STR      R3,[R4, #+0]
   \   00000124   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000126   0x008B             LSLS     R3,R1,#+2
   \   00000128   0xF103 0x4380      ADD      R3,R3,#+1073741824
   \   0000012C   0xF513 0x2396      ADDS     R3,R3,#+307200
   \   00000130   0xF44F 0x6480      MOV      R4,#+1024
   \   00000134   0x605C             STR      R4,[R3, #+4]
   \   00000136   0xE798             B.N      ??FTM_PWM_Open_9
   \                     ??FTM_PWM_Open_7:
   \   00000138   0x....             LDR.N    R3,??DataTable4_18  ;; 0x40048038
   \   0000013A   0x681B             LDR      R3,[R3, #+0]
   \   0000013C   0xF453 0x5380      ORRS     R3,R3,#0x1000
   \   00000140   0x....             LDR.N    R4,??DataTable4_18  ;; 0x40048038
   \   00000142   0x6023             STR      R3,[R4, #+0]
   \   00000144   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000146   0x....             LDR.N    R3,??DataTable4_23  ;; 0x4004c000
   \   00000148   0xF44F 0x6480      MOV      R4,#+1024
   \   0000014C   0xF843 0x4021      STR      R4,[R3, R1, LSL #+2]
   \   00000150   0xE78B             B.N      ??FTM_PWM_Open_9
   \                     ??FTM_PWM_Open_8:
   \   00000152   0x2000             MOVS     R0,#+0
   \   00000154   0xE7C2             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_11:
   \   00000156   0x2000             MOVS     R0,#+0
   \   00000158   0xE7C0             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_13:
   \   0000015A   0x2000             MOVS     R0,#+0
   \   0000015C   0xE7BE             B.N      ??FTM_PWM_Open_1
    368          }
    369          
    370          
    371          /***************************************************************
    372          *函数名：uint8 FTM_PWM_ChangeDuty(uint8 FTMx,uint8 channel, uint32 duty)
    373          *功能：  打开PWM通道，设置占空比
    374          *入口参数：(1)FTMx : 0
    375                               1
    376                               2
    377                     
    378                    (2)channel  通道号 
    379          
    380                    (3)duty     占空比
    381          *出口参数：无
    382          *说明：无
    383          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    384          uint8 FTM_PWM_ChangeDuty(uint8 FTMx,uint8 channel, uint32 duty)
    385          {
   \                     FTM_PWM_ChangeDuty:
   \   00000000   0xB418             PUSH     {R3,R4}
    386            uint32 cv;
    387            volatile uint32 mod;
    388            
    389            if(duty>10000) return 0;
   \   00000002   0xF242 0x7311      MOVW     R3,#+10001
   \   00000006   0x429A             CMP      R2,R3
   \   00000008   0xD301             BCC.N    ??FTM_PWM_ChangeDuty_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE019             B.N      ??FTM_PWM_ChangeDuty_1
    390            //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    391            if(FTMx==0)
   \                     ??FTM_PWM_ChangeDuty_0:
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD118             BNE.N    ??FTM_PWM_ChangeDuty_2
    392            {
    393              mod =FTM_MOD0;
   \   00000014   0x....             LDR.N    R3,??DataTable4_1
   \   00000016   0x681B             LDR      R3,[R3, #+0]
   \   00000018   0x9300             STR      R3,[SP, #+0]
    394            }
    395            else if(FTMx==1)
    396            {
    397              mod==FTM_MOD1;
    398            }
    399            else if(FTMx==2)
    400            {
    401              mod==FTM_MOD2;
    402            }
    403            else
    404              return 0;
    405            
    406            cv = (duty*(mod-0+1)+0)/10000;
   \                     ??FTM_PWM_ChangeDuty_3:
   \   0000001A   0x9B00             LDR      R3,[SP, #+0]
   \   0000001C   0x1C5B             ADDS     R3,R3,#+1
   \   0000001E   0x435A             MULS     R2,R3,R2
   \   00000020   0xF242 0x7310      MOVW     R3,#+10000
   \   00000024   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    407            
    408            if(FTMx==0)
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD12F             BNE.N    ??FTM_PWM_ChangeDuty_4
    409            {
    410              switch(channel)// 配置FTM通道值
   \   0000002E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   0x2900             CMP      R1,#+0
   \   00000032   0xD003             BEQ.N    ??FTM_PWM_ChangeDuty_5
   \   00000034   0x2902             CMP      R1,#+2
   \   00000036   0xD025             BEQ.N    ??FTM_PWM_ChangeDuty_6
   \   00000038   0xD321             BCC.N    ??FTM_PWM_ChangeDuty_7
   \   0000003A   0xE026             B.N      ??FTM_PWM_ChangeDuty_8
    411              {  
    412                case 0:
    413                   FTM_CnV_REG(FTM0_BASE_PTR, 0) = cv;
   \                     ??FTM_PWM_ChangeDuty_5:
   \   0000003C   0x....             LDR.N    R0,??DataTable4_24  ;; 0x40038010
   \   0000003E   0x6002             STR      R2,[R0, #+0]
    414                   break;
    415                case 1:
    416                   FTM_CnV_REG(FTM0_BASE_PTR, 1) = cv;
    417                   break;
    418                case 2:
    419                   FTM_CnV_REG(FTM0_BASE_PTR, 2) = cv;
    420                   break;
    421                default:
    422                return 0;
    423              }
    424            }
    425            else if(FTMx==1)
    426            {
    427              // 配置FTM通道值
    428              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
    429            }
    430            else if(FTMx==2)
    431            {
    432              // 配置FTM通道值
    433              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
    434            }
    435            else
    436              return 0;
    437            return 1;
   \                     ??FTM_PWM_ChangeDuty_9:
   \   00000040   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_ChangeDuty_1:
   \   00000042   0xBC12             POP      {R1,R4}
   \   00000044   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_ChangeDuty_2:
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xD109             BNE.N    ??FTM_PWM_ChangeDuty_10
   \   0000004C   0x9B00             LDR      R3,[SP, #+0]
   \   0000004E   0x....             LDR.N    R4,??DataTable4_7
   \   00000050   0x6824             LDR      R4,[R4, #+0]
   \   00000052   0x42A3             CMP      R3,R4
   \   00000054   0xD101             BNE.N    ??FTM_PWM_ChangeDuty_11
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0xE000             B.N      ??FTM_PWM_ChangeDuty_12
   \                     ??FTM_PWM_ChangeDuty_11:
   \   0000005A   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_ChangeDuty_12:
   \   0000005C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000005E   0xE7DC             B.N      ??FTM_PWM_ChangeDuty_3
   \                     ??FTM_PWM_ChangeDuty_10:
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0x2802             CMP      R0,#+2
   \   00000064   0xD109             BNE.N    ??FTM_PWM_ChangeDuty_13
   \   00000066   0x9B00             LDR      R3,[SP, #+0]
   \   00000068   0x....             LDR.N    R4,??DataTable4_8
   \   0000006A   0x6824             LDR      R4,[R4, #+0]
   \   0000006C   0x42A3             CMP      R3,R4
   \   0000006E   0xD101             BNE.N    ??FTM_PWM_ChangeDuty_14
   \   00000070   0x2301             MOVS     R3,#+1
   \   00000072   0xE000             B.N      ??FTM_PWM_ChangeDuty_15
   \                     ??FTM_PWM_ChangeDuty_14:
   \   00000074   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_ChangeDuty_15:
   \   00000076   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000078   0xE7CF             B.N      ??FTM_PWM_ChangeDuty_3
   \                     ??FTM_PWM_ChangeDuty_13:
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0xE7E1             B.N      ??FTM_PWM_ChangeDuty_1
   \                     ??FTM_PWM_ChangeDuty_7:
   \   0000007E   0x....             LDR.N    R0,??DataTable4_25  ;; 0x40038018
   \   00000080   0x6002             STR      R2,[R0, #+0]
   \   00000082   0xE7DD             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_6:
   \   00000084   0x....             LDR.N    R0,??DataTable4_26  ;; 0x40038020
   \   00000086   0x6002             STR      R2,[R0, #+0]
   \   00000088   0xE7DA             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_8:
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0xE7D9             B.N      ??FTM_PWM_ChangeDuty_1
   \                     ??FTM_PWM_ChangeDuty_4:
   \   0000008E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000090   0x2801             CMP      R0,#+1
   \   00000092   0xD105             BNE.N    ??FTM_PWM_ChangeDuty_16
   \   00000094   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   0x....             LDR.N    R0,??DataTable4_21  ;; 0x4003900c
   \   00000098   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   0000009C   0x6042             STR      R2,[R0, #+4]
   \   0000009E   0xE7CF             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_16:
   \   000000A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A2   0x2802             CMP      R0,#+2
   \   000000A4   0xD105             BNE.N    ??FTM_PWM_ChangeDuty_17
   \   000000A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A8   0x....             LDR.N    R0,??DataTable4_22  ;; 0x400b800c
   \   000000AA   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000000AE   0x6042             STR      R2,[R0, #+4]
   \   000000B0   0xE7C6             B.N      ??FTM_PWM_ChangeDuty_9
   \                     ??FTM_PWM_ChangeDuty_17:
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0xE7C5             B.N      ??FTM_PWM_ChangeDuty_1
    438          }
    439          //---------------------------------
    440          /*
    441          uint8 FTM_PWM_ChangeDuty_0(uint8 FTMx,uint8 channel, uint32 duty)
    442          {
    443            //uint32 cv;
    444            volatile uint32 mod;
    445            
    446            if(duty>10000) return 0;
    447            //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    448            if(FTMx==0)
    449            {
    450              mod =FTM_MOD0;
    451            }
    452            else if(FTMx==1)
    453            {
    454              mod==FTM_MOD1;
    455            }
    456            else if(FTMx==2)
    457            {
    458              mod==FTM_MOD2;
    459            }
    460            else
    461              return 0;
    462            
    463            cv = (duty*(mod-0+1)+0)/10000;
    464            
    465            if(FTMx==0)
    466            {
    467              // 配置FTM通道值
    468              FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv;
    469            }
    470            else if(FTMx==1)
    471            {
    472              // 配置FTM通道值
    473              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
    474            }
    475            else if(FTMx==2)
    476            {
    477              // 配置FTM通道值
    478              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
    479            }
    480            else
    481              return 0;
    482            return 1;
    483          }
    484          */
    485          /***************************************************************
    486          *函数名：void Motor_init(void)   
    487          *功能：  直流电机PWM调速引脚初始化,用FTM1模块
    488          *入口参数：无
    489          *出口参数：无
    490          *说明：无
    491          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    492          void Motor_init(void)    //直流电机
    493              {      	   
   \                     Motor_init:
   \   00000000   0xB580             PUSH     {R7,LR}
    494               // DIR_B;                     //右电机B10  正转
    495                DIL_B;                     //左电机B9   反转
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2109             MOVS     R1,#+9
   \   00000008   0x....             LDR.N    R0,??DataTable4_27  ;; 0x400ff040
   \   0000000A   0x.... 0x....      BL       gpio_init
    496                
    497                /* Turn on all port clocks */
    498                SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
   \   0000000E   0x....             LDR.N    R0,??DataTable4_18  ;; 0x40048038
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000016   0x....             LDR.N    R1,??DataTable4_18  ;; 0x40048038
   \   00000018   0x6008             STR      R0,[R1, #+0]
    499                
    500                /*以前为双电机开的两个端口
    501                PORTC_PCR1= PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin 
    502                PORTC_PCR2= PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin
    503                */
    504                 PORTB_PCR0= PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK; // FTM is alt3 function for this pin PTB0
   \   0000001A   0x....             LDR.N    R0,??DataTable4_20  ;; 0x4004a000
   \   0000001C   0xF44F 0x7150      MOV      R1,#+832
   \   00000020   0x6001             STR      R1,[R0, #+0]
    505                
    506                SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;         //使能FTM1时钟      
   \   00000022   0x....             LDR.N    R0,??DataTable4_2  ;; 0x4004803c
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000002A   0x....             LDR.N    R1,??DataTable4_2  ;; 0x4004803c
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    507                
    508                //change MSnB = 1  
    509                FTM1_C0SC |= FTM_CnSC_ELSB_MASK;
   \   0000002E   0x....             LDR.N    R0,??DataTable4_21  ;; 0x4003900c
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000036   0x....             LDR.N    R1,??DataTable4_21  ;; 0x4003900c
   \   00000038   0x6008             STR      R0,[R1, #+0]
    510                FTM1_C0SC &= ~FTM_CnSC_ELSA_MASK;
   \   0000003A   0x....             LDR.N    R0,??DataTable4_21  ;; 0x4003900c
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000042   0x....             LDR.N    R1,??DataTable4_21  ;; 0x4003900c
   \   00000044   0x6008             STR      R0,[R1, #+0]
    511                FTM1_C0SC |= FTM_CnSC_MSB_MASK;    
   \   00000046   0x....             LDR.N    R0,??DataTable4_21  ;; 0x4003900c
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000004E   0x....             LDR.N    R1,??DataTable4_21  ;; 0x4003900c
   \   00000050   0x6008             STR      R0,[R1, #+0]
    512                /*为另一个电机
    513                FTM1_C1SC |= FTM_CnSC_ELSB_MASK;
    514                FTM1_C1SC &= ~FTM_CnSC_ELSA_MASK;
    515                FTM1_C1SC |= FTM_CnSC_MSB_MASK;   
    516                */
    517                
    518                FTM1_SC = 0x29; //not enable the interrupt mask    0010 1001
   \   00000052   0x....             LDR.N    R0,??DataTable4_9  ;; 0x40039000
   \   00000054   0x2129             MOVS     R1,#+41
   \   00000056   0x6001             STR      R1,[R0, #+0]
    519                //FTM1_SC=0X1F;       //BIT5  0 FTM counter operates in up counting mode.
    520                                      //1 FTM counter operates in up-down counting mode.      
    521                //BIT43 FTM1_SC|=FTM1_SC_CLKS_MASK;
    522                                      //00 No clock selected (This in effect disables the FTM counter.)
    523                                      //01 System clock
    524                                      //10 Fixed frequency clock
    525                                      //11 External clock
    526                //BIT210 FTM1_SC|=FTM1_SC_PS_MASK; 
    527                                      //100M          MOD=2000;    
    528                                      //000 Divide by 1---12KHZ     
    529                                      //001 Divide by 2--- 6KHZ
    530                                      //010 Divide by 4--- 3K
    531                                      //011 Divide by 8--- 1.5K
    532                                      //100 Divide by 16---750
    533                                      //101 Divide by 32---375
    534                                      //110 Divide by 64---187.5HZ
    535                                      //111 Divide by 128--93.75hz             
    536                
    537                FTM1_MODE |= FTM_MODE_WPDIS_MASK;      
   \   00000058   0x....             LDR.N    R0,??DataTable4_28  ;; 0x40039054
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000060   0x....             LDR.N    R1,??DataTable4_28  ;; 0x40039054
   \   00000062   0x6008             STR      R0,[R1, #+0]
    538                 //BIT1   Initialize the Channels Output
    539                //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
    540                FTM1_MODE &= ~1;
   \   00000064   0x....             LDR.N    R0,??DataTable4_28  ;; 0x40039054
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0x0840             LSRS     R0,R0,#+1
   \   0000006A   0x0040             LSLS     R0,R0,#+1
   \   0000006C   0x....             LDR.N    R1,??DataTable4_28  ;; 0x40039054
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    541                 //BIT0   FTM Enable
    542                 //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
    543                 //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
    544                
    545                FTM1_OUTMASK=0XFE;   //0 Channel output is not masked. It continues to operate normally.
   \   00000070   0x....             LDR.N    R0,??DataTable4_29  ;; 0x40039060
   \   00000072   0x21FE             MOVS     R1,#+254
   \   00000074   0x6001             STR      R1,[R0, #+0]
    546                                     //1 Channel output is masked. It is forced to its inactive state.
    547                
    548                FTM1_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
   \   00000076   0x....             LDR.N    R0,??DataTable4_30  ;; 0x40039064
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x6001             STR      R1,[R0, #+0]
    549                FTM1_OUTINIT=0;
   \   0000007C   0x....             LDR.N    R0,??DataTable4_31  ;; 0x4003905c
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0x6001             STR      R1,[R0, #+0]
    550                FTM1_EXTTRIG=0;      //FTM aExternl Trigger (FTMx_EXTTRIG)
   \   00000082   0x....             LDR.N    R0,??DataTable4_32  ;; 0x4003906c
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x6001             STR      R1,[R0, #+0]
    551                FTM1_POL=0;          //Channels Polarity (FTMx_POL)
   \   00000088   0x....             LDR.N    R0,??DataTable4_33  ;; 0x40039070
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0x6001             STR      R1,[R0, #+0]
    552                                     //0 The channel polarity is active high.
    553                                     //1 The channel polarity is active low.     
    554                //Set Edge Aligned PWM
    555                FTM1_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
   \   0000008E   0x....             LDR.N    R0,??DataTable4_34  ;; 0x40039080
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x0840             LSRS     R0,R0,#+1
   \   00000094   0x0040             LSLS     R0,R0,#+1
   \   00000096   0x....             LDR.N    R1,??DataTable4_34  ;; 0x40039080
   \   00000098   0x6008             STR      R0,[R1, #+0]
    556                //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
    557                //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
    558                //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
    559                
    560                FTM1_INVCTRL=0;      //反转控制
   \   0000009A   0x....             LDR.N    R0,??DataTable4_35  ;; 0x40039090
   \   0000009C   0x2100             MOVS     R1,#+0
   \   0000009E   0x6001             STR      R1,[R0, #+0]
    561                FTM1_SWOCTRL=0;      //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
   \   000000A0   0x....             LDR.N    R0,??DataTable4_36  ;; 0x40039094
   \   000000A2   0x2100             MOVS     R1,#+0
   \   000000A4   0x6001             STR      R1,[R0, #+0]
    562                FTM1_PWMLOAD=0;      //FTM PWM Load
   \   000000A6   0x....             LDR.N    R0,??DataTable4_37  ;; 0x40039098
   \   000000A8   0x2100             MOVS     R1,#+0
   \   000000AA   0x6001             STR      R1,[R0, #+0]
    563                                     //BIT9: 0 Loading updated values is disabled.
    564                                     //1 Loading updated values is enabled.
    565                FTM1_CNTIN=0;        //Counter Initial Value      
   \   000000AC   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4003904c
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0x6001             STR      R1,[R0, #+0]
    566                FTM1_MOD=1250;       //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001) 
   \   000000B2   0x....             LDR.N    R0,??DataTable4_12  ;; 0x40039008
   \   000000B4   0xF240 0x41E2      MOVW     R1,#+1250
   \   000000B8   0x6001             STR      R1,[R0, #+0]
    567                                     //PMW频率=系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD   10000=180000000/4/2/2250   
    568                FTM1_C0V=0;          //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).  高电平的时间
   \   000000BA   0x....             LDR.N    R0,??DataTable4_38  ;; 0x40039010
   \   000000BC   0x2100             MOVS     R1,#+0
   \   000000BE   0x6001             STR      R1,[R0, #+0]
    569                //FTM1_C1V=0;          //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).  高电平的时间
    570                FTM1_CNT=0;          //只有低16位可用,寄存器的初值
   \   000000C0   0x....             LDR.N    R0,??DataTable4_10  ;; 0x40039004
   \   000000C2   0x2100             MOVS     R1,#+0
   \   000000C4   0x6001             STR      R1,[R0, #+0]
    571          }
   \   000000C6   0xBD01             POP      {R0,PC}          ;; return
    572          
    573          
    574          //================================================================
    575          //E6A2-CW3C光电编码器引脚：
    576          //         蓝色：GND
    577          //         棕色：VCC
    578          //         黑色：A相
    579          //         白色：B相
    580          
    581          //函数名：void FTM2_QUAD_Iint(void)
    582          //功能：   输入脉冲捕捉
    583          //入口参数：无
    584          //出口参数：无
    585          //说明：    无
    586          //================================================================

   \                                 In section .text, align 2, keep-with-next
    587          void FTM2_QUAD_Iint(void)  
    588          { 
    589            SIM_SCGC3|=SIM_SCGC3_FTM2_MASK;//使能FTM2时钟  
   \                     FTM2_QUAD_Iint:
   \   00000000   0x....             LDR.N    R0,??DataTable4_13  ;; 0x40048030
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000008   0x....             LDR.N    R1,??DataTable4_13  ;; 0x40048030
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    590            //SIM_SCGC5|= SIM_SCGC5_PORTB_MASK; //Turn on PORTB clock
    591            
    592            PORTB_PCR18= PORT_PCR_MUX(6); // 设置引脚B18引脚为FTM2_PHA功
   \   0000000C   0x....             LDR.N    R0,??DataTable4_39  ;; 0x4004a048
   \   0000000E   0xF44F 0x61C0      MOV      R1,#+1536
   \   00000012   0x6001             STR      R1,[R0, #+0]
    593            PORTB_PCR19= PORT_PCR_MUX(6); // 设置引脚B19引脚为FTM2_PHB功能  
   \   00000014   0x....             LDR.N    R0,??DataTable4_40  ;; 0x4004a04c
   \   00000016   0xF44F 0x61C0      MOV      R1,#+1536
   \   0000001A   0x6001             STR      R1,[R0, #+0]
    594           
    595            FTM2_MODE |= FTM_MODE_WPDIS_MASK;//写保护禁止  
   \   0000001C   0x....             LDR.N    R0,??DataTable4_41  ;; 0x400b8054
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000024   0x....             LDR.N    R1,??DataTable4_41  ;; 0x400b8054
   \   00000026   0x6008             STR      R0,[R1, #+0]
    596            FTM2_QDCTRL|=FTM_QDCTRL_QUADMODE_MASK;//AB相同时确定方向和计数值  
   \   00000028   0x....             LDR.N    R0,??DataTable4_42  ;; 0x400b8080
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000030   0x....             LDR.N    R1,??DataTable4_42  ;; 0x400b8080
   \   00000032   0x6008             STR      R0,[R1, #+0]
    597            
    598            //FTM2_FILTER|=(10<<FTM_FILTER_CH3FVAL_SHIFT);//设置输入的滤波 
    599            
    600            FTM2_CNTIN=0;//FTM0计数器初始值为0  
   \   00000034   0x....             LDR.N    R0,??DataTable4_16  ;; 0x400b804c
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x6001             STR      R1,[R0, #+0]
    601            FTM2_MOD=65535;//结束值  
   \   0000003A   0x....             LDR.N    R0,??DataTable4_17  ;; 0x400b8008
   \   0000003C   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000040   0x6001             STR      R1,[R0, #+0]
    602          	
    603            FTM2_QDCTRL|=FTM_QDCTRL_QUADEN_MASK;//启用FTM2正交解码模式  
   \   00000042   0x....             LDR.N    R0,??DataTable4_42  ;; 0x400b8080
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000004A   0x....             LDR.N    R1,??DataTable4_42  ;; 0x400b8080
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    604            FTM2_MODE |= FTM_MODE_FTMEN_MASK;//FTM2EN=1    
   \   0000004E   0x....             LDR.N    R0,??DataTable4_41  ;; 0x400b8054
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000056   0x....             LDR.N    R1,??DataTable4_41  ;; 0x400b8054
   \   00000058   0x6008             STR      R0,[R1, #+0]
    605            FTM2_CNT=0;  
   \   0000005A   0x....             LDR.N    R0,??DataTable4_15  ;; 0x400b8004
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x6001             STR      R1,[R0, #+0]
    606          }  
   \   00000060   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     FTM_MOD0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x40038004         DC32     0x40038004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x4003804C         DC32     0x4003804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x40038008         DC32     0x40038008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     FTM_MOD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     FTM_MOD2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x40039004         DC32     0x40039004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x4003904C         DC32     0x4003904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x40039008         DC32     0x40039008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x400B804C         DC32     0x400b804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x400B8008         DC32     0x400b8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x4003800C         DC32     0x4003800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x4003900C         DC32     0x4003900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x400B800C         DC32     0x400b800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x4004C000         DC32     0x4004c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x40038010         DC32     0x40038010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x40038018         DC32     0x40038018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x40038020         DC32     0x40038020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x40039054         DC32     0x40039054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x40039060         DC32     0x40039060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0x40039064         DC32     0x40039064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0x4003905C         DC32     0x4003905c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_32:
   \   00000000   0x4003906C         DC32     0x4003906c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_33:
   \   00000000   0x40039070         DC32     0x40039070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_34:
   \   00000000   0x40039080         DC32     0x40039080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_35:
   \   00000000   0x40039090         DC32     0x40039090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_36:
   \   00000000   0x40039094         DC32     0x40039094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_37:
   \   00000000   0x40039098         DC32     0x40039098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_38:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_39:
   \   00000000   0x4004A048         DC32     0x4004a048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_40:
   \   00000000   0x4004A04C         DC32     0x4004a04c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_41:
   \   00000000   0x400B8054         DC32     0x400b8054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_42:
   \   00000000   0x400B8080         DC32     0x400b8080

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  FTM2_QUAD_Iint
        8  FTM_PWM_ChangeDuty
        8  FTM_PWM_Init
        8  FTM_PWM_Open
        8  Motor_init
             8 -> gpio_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_32
       4  ??DataTable4_33
       4  ??DataTable4_34
       4  ??DataTable4_35
       4  ??DataTable4_36
       4  ??DataTable4_37
       4  ??DataTable4_38
       4  ??DataTable4_39
       4  ??DataTable4_4
       4  ??DataTable4_40
       4  ??DataTable4_41
       4  ??DataTable4_42
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      98  FTM2_QUAD_Iint
       4  FTM_MOD0
       4  FTM_MOD1
       4  FTM_MOD2
     182  FTM_PWM_ChangeDuty
     746  FTM_PWM_Init
     350  FTM_PWM_Open
     200  Motor_init

 
    12 bytes in section .bss
 1 748 bytes in section .text
 
 1 748 bytes of CODE memory
    12 bytes of DATA memory

Errors: none
Warnings: none
