###############################################################################
#                                                                             #
#                                                       22/Aug/2014  06:00:01 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0        #
#                    2014.08.20 tiaoshi\src\Sources\C\isr.c                   #
#    Command line =  "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0       #
#                    2014.08.20 tiaoshi\src\Sources\C\isr.c" -D IAR -D        #
#                    TWR_K60N512 -lCN "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ #
#                    ÌÐò\PE V2.0 2014.08.20 tiaoshi\bin\Flash\List\" -lB      #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0       #
#                    2014.08.20 tiaoshi\bin\Flash\List\" -o                   #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0       #
#                    2014.08.20 tiaoshi\bin\Flash\Obj\" --no_cse --no_unroll  #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files            #
#                    (x86)\IAREW6.3\arm\INC\c\DLib_Config_Normal.h" -I        #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0       #
#                    2014.08.20 tiaoshi\src\Sources\H\" -I                    #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0       #
#                    2014.08.20 tiaoshi\src\Sources\H\Component_H\" -I        #
#                    "D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0       #
#                    2014.08.20 tiaoshi\src\Sources\H\Frame_H\" -Ol           #
#                    --use_c++_inline                                         #
#    List file    =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0        #
#                    2014.08.20 tiaoshi\bin\Flash\List\isr.lst                #
#    Object file  =  D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0        #
#                    2014.08.20 tiaoshi\bin\Flash\Obj\isr.o                   #
#                                                                             #
#                                                                             #
###############################################################################

D:\FREESCALEÖÇÄÜ³µ¾ºÈü\freescale(¾Å)\³ÌÐò\PE V2.0 2014.08.20 tiaoshi\src\Sources\C\isr.c
      1          //-------------------------------------------------------------------------*
      2          // ÎÄ¼þÃû: isr.c                                                           *
      3          // Ëµ  Ã÷: ÖÐ¶Ï´¦Àí³ÌÐò                                                    *
      4          //-------------------------------------------------------------------------*
      5          
      6          #include "includes.h"
      7          extern uint8  IntegrationTime_Front,IntegrationTime_Zong;

   \                                 In section .bss, align 1
      8                 uint8  integration_piont_Front,integration_piont_Zong;
   \                     integration_piont_Front:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     integration_piont_Zong:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
      9                 uint8  Pixel_F[128]={0},Pixel_Z[128]={0};
   \                     Pixel_F:
   \   00000000                      DS8 128

   \                                 In section .bss, align 4
   \                     Pixel_Z:
   \   00000000                      DS8 128

   \                                 In section .bss, align 1
     10                 uint8  TimerCnt20ms =0,TimerCnt20ms_Z =0;
   \                     TimerCnt20ms:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     TimerCnt20ms_Z:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     11                 uint8  TIME1flag_20ms=0,TIME1flag_20ms_Z=0;
   \                     TIME1flag_20ms:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     TIME1flag_20ms_Z:
   \   00000000                      DS8 1
     12                 

   \                                 In section .bss, align 1
     13                 uint8  g_n1msEventCount =0;
   \                     g_n1msEventCount:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     14                 uint8  g_nSpeedControlCount =0;       
   \                     g_nSpeedControlCount:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     15                 int16  speedflag=0;
   \                     speedflag:
   \   00000000                      DS8 2
     16          
     17          extern int16  Motor_Lock;
     18          extern int16  Servo_Lock;
     19          extern int16  servo_duty;
     20          extern int16  speed_pwm;
     21          extern int16  speed_H;
     22          extern int16  speed_L;
     23          extern int32  pulse_count;
     24          

   \                                 In section .bss, align 4
     25                 int32  qpx_delay=0;
   \                     qpx_delay:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     26                 int16  QPX=0,QPX_SET=12;
   \                     QPX:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     QPX_SET:
   \   00000000   0x000C             DC16 12

   \                                 In section .bss, align 1
     27                 uint8  qpx_en=0,CAR_GO=0;
   \                     qpx_en:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     CAR_GO:
   \   00000000                      DS8 1
     28                 
     29          extern int16  stop_count,stop_flag;   
     30          
     31          extern int16  hongwai_l,hongwai_r;
     32          extern int16  HONGWAI_L,HONGWAI_R;
     33          extern int16  hongwai_l_count,hongwai_r_count;
     34          extern uint8  hw_l_fg,hw_r_fg;
     35          

   \                                 In section .bss, align 2
     36                 int16  hw_l_CT=0,hw_r_CT=0;
   \                     hw_l_CT:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     hw_r_CT:
   \   00000000                      DS8 2
     37          

   \                                 In section .bss, align 2
     38                 int16  ceshi=0;
   \                     ceshi:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     39                 uint8  ceshi_fg=0;
   \                     ceshi_fg:
   \   00000000                      DS8 1
     40          extern uint8  HWPO;
     41          
     42          
     43          //¸ÃÖÐ¶Ïº¯ÊýÖ´ÐÐÊ±¼äÊÇ¶àÉÙ?

   \                                 In section .text, align 4, keep-with-next
     44          void pit0_isr(void)                      //¶¨Ê±Æ÷1msÖÐ¶Ïº¯Êý
     45          {
   \                     pit0_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
     46                   DisableInterrupts;              //¹Ø×ÜÖÐ¶Ï
   \   00000002   0xB672             CPSID i         
     47                   //-----------------
     48                   if(ceshi++>1000)
   \   00000004   0x4876             LDR.N    R0,??pit0_isr_0
   \   00000006   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000000A   0x1C41             ADDS     R1,R0,#+1
   \   0000000C   0x4A74             LDR.N    R2,??pit0_isr_0
   \   0000000E   0x8011             STRH     R1,[R2, #+0]
   \   00000010   0xF240 0x31E9      MOVW     R1,#+1001
   \   00000014   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xDB05             BLT.N    ??pit0_isr_1
     49                   {
     50                     ceshi=0;
   \   0000001A   0x4871             LDR.N    R0,??pit0_isr_0
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x8001             STRH     R1,[R0, #+0]
     51                     ceshi_fg=1;
   \   00000020   0x4870             LDR.N    R0,??pit0_isr_0+0x4
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x7001             STRB     R1,[R0, #+0]
     52                   }
     53                   //-------------------------------------------
     54                   if(CAR_GO==1)
   \                     ??pit0_isr_1:
   \   00000026   0x4870             LDR.N    R0,??pit0_isr_0+0x8
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x2801             CMP      R0,#+1
   \   0000002C   0xD11D             BNE.N    ??pit0_isr_2
     55                   {
     56                     qpx_delay++;
   \   0000002E   0x486F             LDR.N    R0,??pit0_isr_0+0xC
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0x496D             LDR.N    R1,??pit0_isr_0+0xC
   \   00000036   0x6008             STR      R0,[R1, #+0]
     57                     if(qpx_delay==1000) 
   \   00000038   0x486C             LDR.N    R0,??pit0_isr_0+0xC
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF44F 0x717A      MOV      R1,#+1000
   \   00000040   0x4288             CMP      R0,R1
   \   00000042   0xD107             BNE.N    ??pit0_isr_3
     58                     {
     59                       qpx_delay=0;
   \   00000044   0x4869             LDR.N    R0,??pit0_isr_0+0xC
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0x6001             STR      R1,[R0, #+0]
     60                       QPX++;
   \   0000004A   0x4869             LDR.N    R0,??pit0_isr_0+0x10
   \   0000004C   0x8800             LDRH     R0,[R0, #+0]
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \   00000050   0x4967             LDR.N    R1,??pit0_isr_0+0x10
   \   00000052   0x8008             STRH     R0,[R1, #+0]
     61                     }
     62                     if(QPX>=QPX_SET) qpx_en=1;
   \                     ??pit0_isr_3:
   \   00000054   0x4866             LDR.N    R0,??pit0_isr_0+0x10
   \   00000056   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000005A   0x4966             LDR.N    R1,??pit0_isr_0+0x14
   \   0000005C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000060   0x4288             CMP      R0,R1
   \   00000062   0xDB02             BLT.N    ??pit0_isr_2
   \   00000064   0x4864             LDR.N    R0,??pit0_isr_0+0x18
   \   00000066   0x2101             MOVS     R1,#+1
   \   00000068   0x7001             STRB     R1,[R0, #+0]
     63                   }
     64                   if(qpx_en==1&&HWPO==0)
   \                     ??pit0_isr_2:
   \   0000006A   0x4863             LDR.N    R0,??pit0_isr_0+0x18
   \   0000006C   0x7800             LDRB     R0,[R0, #+0]
   \   0000006E   0x2801             CMP      R0,#+1
   \   00000070   0xD164             BNE.N    ??pit0_isr_4
   \   00000072   0x4862             LDR.N    R0,??pit0_isr_0+0x1C
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD160             BNE.N    ??pit0_isr_4
     65                   {
     66                     //-----------------
     67                     get_ad();  
   \   0000007A   0x.... 0x....      BL       get_ad
     68                     //---------------------------------------
     69                     //ÆðÅÜÏß
     70                     if(hongwai_l<HONGWAI_L-800)  hw_l_fg=1;
   \   0000007E   0x4860             LDR.N    R0,??pit0_isr_0+0x20
   \   00000080   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000084   0x495F             LDR.N    R1,??pit0_isr_0+0x24
   \   00000086   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000008A   0xF5B1 0x7148      SUBS     R1,R1,#+800
   \   0000008E   0x4288             CMP      R0,R1
   \   00000090   0xDA02             BGE.N    ??pit0_isr_5
   \   00000092   0x485D             LDR.N    R0,??pit0_isr_0+0x28
   \   00000094   0x2101             MOVS     R1,#+1
   \   00000096   0x7001             STRB     R1,[R0, #+0]
     71                     if(hongwai_r<HONGWAI_R-800)  hw_r_fg=1;
   \                     ??pit0_isr_5:
   \   00000098   0x485C             LDR.N    R0,??pit0_isr_0+0x2C
   \   0000009A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000009E   0x495C             LDR.N    R1,??pit0_isr_0+0x30
   \   000000A0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000A4   0xF5B1 0x7148      SUBS     R1,R1,#+800
   \   000000A8   0x4288             CMP      R0,R1
   \   000000AA   0xDA02             BGE.N    ??pit0_isr_6
   \   000000AC   0x4859             LDR.N    R0,??pit0_isr_0+0x34
   \   000000AE   0x2101             MOVS     R1,#+1
   \   000000B0   0x7001             STRB     R1,[R0, #+0]
     72                     
     73                     if(stop_flag==0)
   \                     ??pit0_isr_6:
   \   000000B2   0x4859             LDR.N    R0,??pit0_isr_0+0x38
   \   000000B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000B8   0x2800             CMP      R0,#+0
   \   000000BA   0xD129             BNE.N    ??pit0_isr_7
     74                     {
     75                       if(hw_l_fg==1)
   \   000000BC   0x4852             LDR.N    R0,??pit0_isr_0+0x28
   \   000000BE   0x7800             LDRB     R0,[R0, #+0]
   \   000000C0   0x2801             CMP      R0,#+1
   \   000000C2   0xD10D             BNE.N    ??pit0_isr_8
     76                       {
     77                         hongwai_l_count++;
   \   000000C4   0x4855             LDR.N    R0,??pit0_isr_0+0x3C
   \   000000C6   0x8800             LDRH     R0,[R0, #+0]
   \   000000C8   0x1C40             ADDS     R0,R0,#+1
   \   000000CA   0x4954             LDR.N    R1,??pit0_isr_0+0x3C
   \   000000CC   0x8008             STRH     R0,[R1, #+0]
     78                         if(hongwai_l_count>15) hw_l_fg=0;//¶¨Ê±±£³Ö
   \   000000CE   0x4853             LDR.N    R0,??pit0_isr_0+0x3C
   \   000000D0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000D4   0x2810             CMP      R0,#+16
   \   000000D6   0xDB06             BLT.N    ??pit0_isr_9
   \   000000D8   0x484B             LDR.N    R0,??pit0_isr_0+0x28
   \   000000DA   0x2100             MOVS     R1,#+0
   \   000000DC   0x7001             STRB     R1,[R0, #+0]
   \   000000DE   0xE002             B.N      ??pit0_isr_9
     79                       }
     80                       else  hongwai_l_count=0;
   \                     ??pit0_isr_8:
   \   000000E0   0x484E             LDR.N    R0,??pit0_isr_0+0x3C
   \   000000E2   0x2100             MOVS     R1,#+0
   \   000000E4   0x8001             STRH     R1,[R0, #+0]
     81                       
     82                       if(hw_r_fg==1)
   \                     ??pit0_isr_9:
   \   000000E6   0x484B             LDR.N    R0,??pit0_isr_0+0x34
   \   000000E8   0x7800             LDRB     R0,[R0, #+0]
   \   000000EA   0x2801             CMP      R0,#+1
   \   000000EC   0xD10D             BNE.N    ??pit0_isr_10
     83                       {
     84                         hongwai_r_count++;
   \   000000EE   0x484C             LDR.N    R0,??pit0_isr_0+0x40
   \   000000F0   0x8800             LDRH     R0,[R0, #+0]
   \   000000F2   0x1C40             ADDS     R0,R0,#+1
   \   000000F4   0x494A             LDR.N    R1,??pit0_isr_0+0x40
   \   000000F6   0x8008             STRH     R0,[R1, #+0]
     85                         if(hongwai_r_count>15) hw_r_fg=0;
   \   000000F8   0x4849             LDR.N    R0,??pit0_isr_0+0x40
   \   000000FA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000FE   0x2810             CMP      R0,#+16
   \   00000100   0xDB06             BLT.N    ??pit0_isr_7
   \   00000102   0x4844             LDR.N    R0,??pit0_isr_0+0x34
   \   00000104   0x2100             MOVS     R1,#+0
   \   00000106   0x7001             STRB     R1,[R0, #+0]
   \   00000108   0xE002             B.N      ??pit0_isr_7
     86                       }
     87                       else  hongwai_r_count=0;
   \                     ??pit0_isr_10:
   \   0000010A   0x4845             LDR.N    R0,??pit0_isr_0+0x40
   \   0000010C   0x2100             MOVS     R1,#+0
   \   0000010E   0x8001             STRH     R1,[R0, #+0]
     88                     }
     89                     
     90                     if((hw_l_fg==1&&hw_r_fg==1)&&Abs(hongwai_l_count-hongwai_r_count)<10)
   \                     ??pit0_isr_7:
   \   00000110   0x483D             LDR.N    R0,??pit0_isr_0+0x28
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x2801             CMP      R0,#+1
   \   00000116   0xD111             BNE.N    ??pit0_isr_4
   \   00000118   0x483E             LDR.N    R0,??pit0_isr_0+0x34
   \   0000011A   0x7800             LDRB     R0,[R0, #+0]
   \   0000011C   0x2801             CMP      R0,#+1
   \   0000011E   0xD10D             BNE.N    ??pit0_isr_4
   \   00000120   0x483E             LDR.N    R0,??pit0_isr_0+0x3C
   \   00000122   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000126   0x493E             LDR.N    R1,??pit0_isr_0+0x40
   \   00000128   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000012C   0x1A40             SUBS     R0,R0,R1
   \   0000012E   0x.... 0x....      BL       Abs
   \   00000132   0x280A             CMP      R0,#+10
   \   00000134   0xDA02             BGE.N    ??pit0_isr_4
     91                       stop_flag=1;
   \   00000136   0x4838             LDR.N    R0,??pit0_isr_0+0x38
   \   00000138   0x2101             MOVS     R1,#+1
   \   0000013A   0x8001             STRH     R1,[R0, #+0]
     92                   }
     93                   
     94                   //-------------------------------------------
     95                   integration_piont_Front = 20 - IntegrationTime_Front;
   \                     ??pit0_isr_4:
   \   0000013C   0x4839             LDR.N    R0,??pit0_isr_0+0x44
   \   0000013E   0x7800             LDRB     R0,[R0, #+0]
   \   00000140   0xF1D0 0x0014      RSBS     R0,R0,#+20
   \   00000144   0x4938             LDR.N    R1,??pit0_isr_0+0x48
   \   00000146   0x7008             STRB     R0,[R1, #+0]
     96                   if(integration_piont_Front >= 2)//ÆØ¹âµãÐ¡ÓÚ2²»½øÐÐÆØ¹â
   \   00000148   0x4837             LDR.N    R0,??pit0_isr_0+0x48
   \   0000014A   0x7800             LDRB     R0,[R0, #+0]
   \   0000014C   0x2802             CMP      R0,#+2
   \   0000014E   0xD307             BCC.N    ??pit0_isr_11
     97                   {
     98                     if(integration_piont_Front == TimerCnt20ms)
   \   00000150   0x4835             LDR.N    R0,??pit0_isr_0+0x48
   \   00000152   0x7800             LDRB     R0,[R0, #+0]
   \   00000154   0x4935             LDR.N    R1,??pit0_isr_0+0x4C
   \   00000156   0x7809             LDRB     R1,[R1, #+0]
   \   00000158   0x4288             CMP      R0,R1
   \   0000015A   0xD101             BNE.N    ??pit0_isr_11
     99                       StartIntegrationFront();
   \   0000015C   0x.... 0x....      BL       StartIntegrationFront
    100                   }
    101                   /*
    102                   integration_piont_Zong = 3 - IntegrationTime_Zong;
    103                   if(integration_piont_Zong >= 1)//ÆØ¹âµãÐ¡ÓÚ2²»½øÐÐÆØ¹â
    104                   {
    105                     if(integration_piont_Zong == TimerCnt20ms)
    106                       StartIntegrationZong();
    107                   }*/
    108                   
    109                   TimerCnt20ms++;
   \                     ??pit0_isr_11:
   \   00000160   0x4832             LDR.N    R0,??pit0_isr_0+0x4C
   \   00000162   0x7800             LDRB     R0,[R0, #+0]
   \   00000164   0x1C40             ADDS     R0,R0,#+1
   \   00000166   0x4931             LDR.N    R1,??pit0_isr_0+0x4C
   \   00000168   0x7008             STRB     R0,[R1, #+0]
    110                   if(TimerCnt20ms>=20)
   \   0000016A   0x4830             LDR.N    R0,??pit0_isr_0+0x4C
   \   0000016C   0x7800             LDRB     R0,[R0, #+0]
   \   0000016E   0x2814             CMP      R0,#+20
   \   00000170   0xD30A             BCC.N    ??pit0_isr_12
    111                   {
    112                     TimerCnt20ms=0;
   \   00000172   0x482E             LDR.N    R0,??pit0_isr_0+0x4C
   \   00000174   0x2100             MOVS     R1,#+0
   \   00000176   0x7001             STRB     R1,[R0, #+0]
    113                     ImageCapture_F(Pixel_F);//£¡£¡£¡ÂòJ-link,ÓÃ¶¨Ê±Æ÷£¬ÑÐ¾¿³ÌÐòÖ´ÐÐÊ±¼ä£¬»òÐí¿ÉÒÔ·Åµ½Ö÷Ñ­»·ÖÐ
   \   00000178   0x482D             LDR.N    R0,??pit0_isr_0+0x50
   \   0000017A   0x.... 0x....      BL       ImageCapture_F
    114                     CalculateIntegrationTimeFront();
   \   0000017E   0x.... 0x....      BL       CalculateIntegrationTimeFront
    115                     TIME1flag_20ms=1;
   \   00000182   0x482C             LDR.N    R0,??pit0_isr_0+0x54
   \   00000184   0x2101             MOVS     R1,#+1
   \   00000186   0x7001             STRB     R1,[R0, #+0]
    116                   }
    117                   /*
    118                   TimerCnt20ms_Z++;
    119                   if(TimerCnt20ms_Z>=3)
    120                   {
    121                     TimerCnt20ms_Z=0;
    122                     ImageCapture_Z(Pixel_Z);
    123                     CalculateIntegrationTimeZong();
    124                     TIME1flag_20ms_Z=1;
    125                   }*/
    126          
    127                   g_n1msEventCount++;
   \                     ??pit0_isr_12:
   \   00000188   0x482B             LDR.N    R0,??pit0_isr_0+0x58
   \   0000018A   0x7800             LDRB     R0,[R0, #+0]
   \   0000018C   0x1C40             ADDS     R0,R0,#+1
   \   0000018E   0x492A             LDR.N    R1,??pit0_isr_0+0x58
   \   00000190   0x7008             STRB     R0,[R1, #+0]
    128                   switch(g_n1msEventCount)
   \   00000192   0x4829             LDR.N    R0,??pit0_isr_0+0x58
   \   00000194   0x7800             LDRB     R0,[R0, #+0]
   \   00000196   0x2801             CMP      R0,#+1
   \   00000198   0xD007             BEQ.N    ??pit0_isr_13
   \   0000019A   0xD315             BCC.N    ??pit0_isr_14
   \   0000019C   0x2803             CMP      R0,#+3
   \   0000019E   0xD00E             BEQ.N    ??pit0_isr_15
   \   000001A0   0xD30C             BCC.N    ??pit0_isr_16
   \   000001A2   0x2805             CMP      R0,#+5
   \   000001A4   0xD00D             BEQ.N    ??pit0_isr_17
   \   000001A6   0xD30B             BCC.N    ??pit0_isr_18
   \   000001A8   0xE00E             B.N      ??pit0_isr_14
    129                   {
    130                     case 1:
    131                       if(Motor_Lock == 0)
   \                     ??pit0_isr_13:
   \   000001AA   0x4824             LDR.N    R0,??pit0_isr_0+0x5C
   \   000001AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001B0   0x2800             CMP      R0,#+0
   \   000001B2   0xD102             BNE.N    ??pit0_isr_19
    132                       {  
    133                         speedflag=1;
   \   000001B4   0x4822             LDR.N    R0,??pit0_isr_0+0x60
   \   000001B6   0x2101             MOVS     R1,#+1
   \   000001B8   0x8001             STRH     R1,[R0, #+0]
    134                       }
    135                       break;
   \                     ??pit0_isr_19:
   \   000001BA   0xE005             B.N      ??pit0_isr_14
    136                     case 2:
    137                       break;
   \                     ??pit0_isr_16:
   \   000001BC   0xE004             B.N      ??pit0_isr_14
    138                     case 3: 
    139                       break;  
   \                     ??pit0_isr_15:
   \   000001BE   0xE003             B.N      ??pit0_isr_14
    140                     case 4:      
    141                       break;
   \                     ??pit0_isr_18:
   \   000001C0   0xE002             B.N      ??pit0_isr_14
    142                     case 5:
    143                       g_n1msEventCount = 0;
   \                     ??pit0_isr_17:
   \   000001C2   0x481D             LDR.N    R0,??pit0_isr_0+0x58
   \   000001C4   0x2100             MOVS     R1,#+0
   \   000001C6   0x7001             STRB     R1,[R0, #+0]
    144                       break;
    145                   }
    146          
    147                   PIT_TFLG(0)|=PIT_TFLG_TIF_MASK;          //ÇåÖÐ¶Ï±êÖ¾Î»
   \                     ??pit0_isr_14:
   \   000001C8   0x481E             LDR.N    R0,??pit0_isr_0+0x64  ;; 0x4003710c
   \   000001CA   0x6800             LDR      R0,[R0, #+0]
   \   000001CC   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000001D0   0x491C             LDR.N    R1,??pit0_isr_0+0x64  ;; 0x4003710c
   \   000001D2   0x6008             STR      R0,[R1, #+0]
    148                   enable_pit_interrupt(0);                 //Ê¹ÄÜPITÖÐ¶Ï
   \   000001D4   0x2000             MOVS     R0,#+0
   \   000001D6   0x.... 0x....      BL       enable_pit_interrupt
    149                   EnableInterrupts;                        //¿ª×ÜÖÐ¶Ï
   \   000001DA   0xB662             CPSIE i         
    150          }
   \   000001DC   0xBD01             POP      {R0,PC}          ;; return
   \   000001DE   0xBF00             Nop      
   \                     ??pit0_isr_0:
   \   000001E0   0x........         DC32     ceshi
   \   000001E4   0x........         DC32     ceshi_fg
   \   000001E8   0x........         DC32     CAR_GO
   \   000001EC   0x........         DC32     qpx_delay
   \   000001F0   0x........         DC32     QPX
   \   000001F4   0x........         DC32     QPX_SET
   \   000001F8   0x........         DC32     qpx_en
   \   000001FC   0x........         DC32     HWPO
   \   00000200   0x........         DC32     hongwai_l
   \   00000204   0x........         DC32     HONGWAI_L
   \   00000208   0x........         DC32     hw_l_fg
   \   0000020C   0x........         DC32     hongwai_r
   \   00000210   0x........         DC32     HONGWAI_R
   \   00000214   0x........         DC32     hw_r_fg
   \   00000218   0x........         DC32     stop_flag
   \   0000021C   0x........         DC32     hongwai_l_count
   \   00000220   0x........         DC32     hongwai_r_count
   \   00000224   0x........         DC32     IntegrationTime_Front
   \   00000228   0x........         DC32     integration_piont_Front
   \   0000022C   0x........         DC32     TimerCnt20ms
   \   00000230   0x........         DC32     Pixel_F
   \   00000234   0x........         DC32     TIME1flag_20ms
   \   00000238   0x........         DC32     g_n1msEventCount
   \   0000023C   0x........         DC32     Motor_Lock
   \   00000240   0x........         DC32     speedflag
   \   00000244   0x4003710C         DC32     0x4003710c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  pit0_isr
             8 -> Abs
             8 -> CalculateIntegrationTimeFront
             8 -> ImageCapture_F
             8 -> StartIntegrationFront
             8 -> enable_pit_interrupt
             8 -> get_ad


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  CAR_GO
     128  Pixel_F
     128  Pixel_Z
       2  QPX
       2  QPX_SET
       1  TIME1flag_20ms
       1  TIME1flag_20ms_Z
       1  TimerCnt20ms
       1  TimerCnt20ms_Z
       2  ceshi
       1  ceshi_fg
       1  g_n1msEventCount
       1  g_nSpeedControlCount
       2  hw_l_CT
       2  hw_r_CT
       1  integration_piont_Front
       1  integration_piont_Zong
     584  pit0_isr
       4  qpx_delay
       1  qpx_en
       2  speedflag

 
 281 bytes in section .bss
   2 bytes in section .data
 584 bytes in section .text
 
 584 bytes of CODE memory
 283 bytes of DATA memory

Errors: none
Warnings: none
