###############################################################################
#                                                                             #
#                                                       16/Nov/2013  13:10:33 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\FREESCALE智能车竞赛\freescale(九)\PhotoelectricCar\sr #
#                    c\Sources\C\Component_C\pwm_servo.c                      #
#    Command line =  "D:\FREESCALE智能车竞赛\freescale(九)\PhotoelectricCar\s #
#                    rc\Sources\C\Component_C\pwm_servo.c" -D IAR -D          #
#                    TWR_K60N512 -lCN "D:\FREESCALE智能车竞赛\freescale(九)\P #
#                    hotoelectricCar\bin\Flash\List\" -lB                     #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\PhotoelectricCar\b #
#                    in\Flash\List\" -o "D:\FREESCALE智能车竞赛\freescale(九) #
#                    \PhotoelectricCar\bin\Flash\Obj\" --no_cse --no_unroll   #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config                              #
#                    E:\IAREW6.3\arm\INC\c\DLib_Config_Normal.h -I            #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\PhotoelectricCar\s #
#                    rc\Sources\H\" -I "D:\FREESCALE智能车竞赛\freescale(九)\ #
#                    PhotoelectricCar\src\Sources\H\Component_H\" -I          #
#                    "D:\FREESCALE智能车竞赛\freescale(九)\PhotoelectricCar\s #
#                    rc\Sources\H\Frame_H\" -Ol --use_c++_inline              #
#    List file    =  D:\FREESCALE智能车竞赛\freescale(九)\PhotoelectricCar\bi #
#                    n\Flash\List\pwm_servo.lst                               #
#    Object file  =  D:\FREESCALE智能车竞赛\freescale(九)\PhotoelectricCar\bi #
#                    n\Flash\Obj\pwm_servo.o                                  #
#                                                                             #
#                                                                             #
###############################################################################

D:\FREESCALE智能车竞赛\freescale(九)\PhotoelectricCar\src\Sources\C\Component_C\pwm_servo.c
      1          #include<pwm.h>
      2          #include<gpio.h>
      3          
      4          #define DIR_B  gpio_init(PORTB,2, 1,0)    
      5          #define DIR_F  gpio_init(PORTB,2, 1,1)    
      6          
      7          extern int periph_clk_khz;

   \                                 In section .bss, align 4
      8          uint32 FTM_MOD0=0;
   \                     FTM_MOD0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      9          uint32 FTM_MOD1=0;
   \                     FTM_MOD1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     10          uint32 FTM_MOD2=0;
   \                     FTM_MOD2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     11          uint8  ps=0;
   \                     ps:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     12          uint32 cv;
   \                     cv:
   \   00000000                      DS8 4
     13          /***************************************************************
     14          *函数名：uint8 FTM_PWM_Init(uint8 FTMx,uint32 freq)
     15          *功能：  将特定的FTMx初始化为pwm输出，并且设置频率
     16          *入口参数：(1)FTMx : 0
     17                               1
     18                               2
     19                     
     20                    (2)fre  :  Hz
     21          *出口参数：无
     22          *说明：无
     23          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
     24          uint8 FTM_PWM_Init(uint8 FTMx,uint32 freq)
     25          {
   \                     FTM_PWM_Init:
   \   00000000   0xB430             PUSH     {R4,R5}
     26            uint32 bus_clk_hz;
     27            uint32 mod;
     28            //uint8  ps=0;
     29            bus_clk_hz = periph_clk_khz*1000;             //设置模块的时钟（总线）为系统的总线时钟，千赫兹化为赫兹要乘以一千，即 X hz=X khz*1000
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF44F 0x737A      MOV      R3,#+1000
   \   0000000C   0x435A             MULS     R2,R3,R2
     30              
     31            if(freq>bus_clk_hz) return 0;                 //如果频率比总线时钟的还要大，返回零（报错）
   \   0000000E   0x428A             CMP      R2,R1
   \   00000010   0xD201             BCS.N    ??FTM_PWM_Init_0
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xE0B8             B.N      ??FTM_PWM_Init_1
     32                                          //D0到D15位     //假设预分频因子为x，PWM周期T1=1/freq，分频后FTM模块周期T=1/(bus/x)=x/bus,所以mod=T1/T=bus/(freq*x)。T1>>T
     33            if((mod=bus_clk_hz/(freq*128)) < 0xFFFFu)     //如果要分频128，即 /128，预分频因子为128               
   \                     ??FTM_PWM_Init_0:
   \   00000016   0x2380             MOVS     R3,#+128
   \   00000018   0xFB03 0xF301      MUL      R3,R3,R1
   \   0000001C   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   00000020   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000024   0x42A3             CMP      R3,R4
   \   00000026   0xF080 0x812B      BCS.W    ??FTM_PWM_Init_2
     34            {                                             //通过设定PWM频率freq及八个预分频因子的if选择语句来轮流判断mod是否符合条件，并且找到一个更接近0xFFFFu的mod值，再赋mod和ps的值
     35              ps = 7;                                     //ps赋为7，111，对应预分频因子128  
   \   0000002A   0x.... 0x....      LDR.W    R4,??DataTable2_1
   \   0000002E   0x2507             MOVS     R5,#+7
   \   00000030   0x7025             STRB     R5,[R4, #+0]
     36              if(FTMx==0)
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xF040 0x80A9      BNE.W    ??FTM_PWM_Init_3
     37              {
     38                FTM_MOD0= mod;
   \   0000003A   0x.... 0x....      LDR.W    R4,??DataTable2_2
   \   0000003E   0x6023             STR      R3,[R4, #+0]
     39              }
     40              else if(FTMx==1)                            //三个FTM模块的if选择语句，把模数值赋给三个FTM的模数值变量，下同
     41              {
     42                FTM_MOD1=mod;
     43              }
     44              else if(FTMx==2)                           
     45              {
     46                FTM_MOD2=mod;  
     47              }
     48              else
     49                return 0;
     50              if((mod=bus_clk_hz/(freq*64)) < 0xFFFFu)     //如果要分频64，即 /64，预分频因子为64
   \                     ??FTM_PWM_Init_4:
   \   00000040   0x2340             MOVS     R3,#+64
   \   00000042   0xFB03 0xF301      MUL      R3,R3,R1
   \   00000046   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   0000004A   0xF64F 0x74FF      MOVW     R4,#+65535
   \   0000004E   0x42A3             CMP      R3,R4
   \   00000050   0xD275             BCS.N    ??FTM_PWM_Init_5
     51              {
     52                ps = 6;                                    //ps赋为6，110，对应预分频因子64     
   \   00000052   0x.... 0x....      LDR.W    R4,??DataTable2_1
   \   00000056   0x2506             MOVS     R5,#+6
   \   00000058   0x7025             STRB     R5,[R4, #+0]
     53                if(FTMx==0)
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xF040 0x80A5      BNE.W    ??FTM_PWM_Init_6
     54                {
     55                  FTM_MOD0= mod;
   \   00000062   0x.... 0x....      LDR.W    R4,??DataTable2_2
   \   00000066   0x6023             STR      R3,[R4, #+0]
     56                }
     57                else if(FTMx==1)
     58                {
     59                  FTM_MOD1=mod;
     60                }
     61                else if(FTMx==2)
     62                {
     63                  FTM_MOD2=mod;  
     64                }
     65              else
     66                return 0;
     67                if((mod=bus_clk_hz/(freq*32)) < 0xFFFFu)     //如果要分频32，即 /32，预分频因子为32
   \                     ??FTM_PWM_Init_7:
   \   00000068   0x014B             LSLS     R3,R1,#+5
   \   0000006A   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   0000006E   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000072   0x42A3             CMP      R3,R4
   \   00000074   0xD263             BCS.N    ??FTM_PWM_Init_5
     68                {
     69                  ps = 5;                                    //ps赋为5，101，对应预分频因子32  
   \   00000076   0x.... 0x....      LDR.W    R4,??DataTable2_1
   \   0000007A   0x2505             MOVS     R5,#+5
   \   0000007C   0x7025             STRB     R5,[R4, #+0]
     70                  if(FTMx==0)
   \   0000007E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xF040 0x80A3      BNE.W    ??FTM_PWM_Init_8
     71                  {
     72                    FTM_MOD0= mod;
   \   00000086   0x.... 0x....      LDR.W    R4,??DataTable2_2
   \   0000008A   0x6023             STR      R3,[R4, #+0]
     73                  }
     74                  else if(FTMx==1)
     75                  {
     76                    FTM_MOD1=mod;
     77                  }
     78                  else if(FTMx==2)
     79                  {
     80                    FTM_MOD2=mod;  
     81                  }
     82                  else
     83                    return 0;
     84                  if((mod=bus_clk_hz/(freq*16)) < 0xFFFFu)     //如果要分频16，即 /16，预分频因子为16
   \                     ??FTM_PWM_Init_9:
   \   0000008C   0x010B             LSLS     R3,R1,#+4
   \   0000008E   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   00000092   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000096   0x42A3             CMP      R3,R4
   \   00000098   0xD251             BCS.N    ??FTM_PWM_Init_5
     85                  {
     86                    ps = 4;                                    //ps赋为4，100，对应预分频因子16  
   \   0000009A   0x.... 0x....      LDR.W    R4,??DataTable2_1
   \   0000009E   0x2504             MOVS     R5,#+4
   \   000000A0   0x7025             STRB     R5,[R4, #+0]
     87                    if(FTMx==0)
   \   000000A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xF040 0x80A1      BNE.W    ??FTM_PWM_Init_10
     88                    {
     89                      FTM_MOD0= mod;
   \   000000AA   0x.... 0x....      LDR.W    R4,??DataTable2_2
   \   000000AE   0x6023             STR      R3,[R4, #+0]
     90                    }
     91                    else if(FTMx==1)
     92                    {
     93                      FTM_MOD1=mod;
     94                    }
     95                    else if(FTMx==2)
     96                    {
     97                      FTM_MOD2=mod;  
     98                    }
     99                    else
    100                      return 0;
    101                    if((mod=bus_clk_hz/(freq*8)) < 0xFFFFu)     //如果要分频8，即 /8，预分频因子为8
   \                     ??FTM_PWM_Init_11:
   \   000000B0   0x00CB             LSLS     R3,R1,#+3
   \   000000B2   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   000000B6   0xF64F 0x74FF      MOVW     R4,#+65535
   \   000000BA   0x42A3             CMP      R3,R4
   \   000000BC   0xD23F             BCS.N    ??FTM_PWM_Init_5
    102                    {
    103                      ps = 3;                                   //ps赋为3，011，对应预分频因子8  
   \   000000BE   0x.... 0x....      LDR.W    R4,??DataTable2_1
   \   000000C2   0x2503             MOVS     R5,#+3
   \   000000C4   0x7025             STRB     R5,[R4, #+0]
    104                      if(FTMx==0)
   \   000000C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xF040 0x809F      BNE.W    ??FTM_PWM_Init_12
    105                      {
    106                        FTM_MOD0= mod;
   \   000000CE   0x.... 0x....      LDR.W    R4,??DataTable2_2
   \   000000D2   0x6023             STR      R3,[R4, #+0]
    107                      }
    108                      else if(FTMx==1)
    109                      {
    110                        FTM_MOD1=mod;
    111                      }
    112                      else if(FTMx==2)
    113                      {
    114                        FTM_MOD2=mod;  
    115                      }
    116                      else
    117                        return 0;
    118                      if((mod=bus_clk_hz/(freq*4)) < 0xFFFFu)     //如果要分频4，即 /4，预分频因子为4
   \                     ??FTM_PWM_Init_13:
   \   000000D4   0x008B             LSLS     R3,R1,#+2
   \   000000D6   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   000000DA   0xF64F 0x74FF      MOVW     R4,#+65535
   \   000000DE   0x42A3             CMP      R3,R4
   \   000000E0   0xD22D             BCS.N    ??FTM_PWM_Init_5
    119                      {
    120                        ps = 2;                                   //ps赋为2，010，对应预分频因子2  
   \   000000E2   0x.... 0x....      LDR.W    R4,??DataTable2_1
   \   000000E6   0x2502             MOVS     R5,#+2
   \   000000E8   0x7025             STRB     R5,[R4, #+0]
    121                        if(FTMx==0)
   \   000000EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EC   0x2800             CMP      R0,#+0
   \   000000EE   0xF040 0x809D      BNE.W    ??FTM_PWM_Init_14
    122                        {
    123                          FTM_MOD0= mod;
   \   000000F2   0x.... 0x....      LDR.W    R4,??DataTable2_2
   \   000000F6   0x6023             STR      R3,[R4, #+0]
    124                        }
    125                        else if(FTMx==1)
    126                        {
    127                          FTM_MOD1=mod;
    128                        }
    129                        else if(FTMx==2)
    130                        {
    131                          FTM_MOD2=mod;  
    132                        }
    133                        else
    134                          return 0;
    135                        if((mod=bus_clk_hz/(freq*2)) < 0xFFFFu)     //如果要分频2，即 /2，预分频因子为2
   \                     ??FTM_PWM_Init_15:
   \   000000F8   0x004B             LSLS     R3,R1,#+1
   \   000000FA   0xFBB2 0xF3F3      UDIV     R3,R2,R3
   \   000000FE   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000102   0x42A3             CMP      R3,R4
   \   00000104   0xD21B             BCS.N    ??FTM_PWM_Init_5
    136                        {
    137                          ps = 1;                                   //ps赋为1，001，对应预分频因子1 
   \   00000106   0x.... 0x....      LDR.W    R4,??DataTable2_1
   \   0000010A   0x2501             MOVS     R5,#+1
   \   0000010C   0x7025             STRB     R5,[R4, #+0]
    138                          if(FTMx==0)
   \   0000010E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000110   0x2800             CMP      R0,#+0
   \   00000112   0xF040 0x8099      BNE.W    ??FTM_PWM_Init_16
    139                          {
    140                            FTM_MOD0= mod;
   \   00000116   0x.... 0x....      LDR.W    R4,??DataTable2_2
   \   0000011A   0x6023             STR      R3,[R4, #+0]
    141                          }
    142                          else if(FTMx==1)
    143                          {
    144                            FTM_MOD1=mod;
    145                          }
    146                          else if(FTMx==2)
    147                          {
    148                            FTM_MOD2=mod;  
    149                          }
    150                          else
    151                            return 0;
    152                          if((mod=bus_clk_hz/(freq*1)) < 0xFFFFu)     //如果要分频1，即 /1，不变。预分频因子为1
   \                     ??FTM_PWM_Init_17:
   \   0000011C   0xFBB2 0xF3F1      UDIV     R3,R2,R1
   \   00000120   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000124   0x428B             CMP      R3,R1
   \   00000126   0xD20A             BCS.N    ??FTM_PWM_Init_5
    153                          {
    154                            ps = 0;                                   //ps赋为0，000，对应预分频因子0  
   \   00000128   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   0000012C   0x2200             MOVS     R2,#+0
   \   0000012E   0x700A             STRB     R2,[R1, #+0]
    155                            if(FTMx==0)
   \   00000130   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000132   0x2800             CMP      R0,#+0
   \   00000134   0xF040 0x8096      BNE.W    ??FTM_PWM_Init_18
    156                            {
    157                              FTM_MOD0= mod;
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   0000013C   0x600B             STR      R3,[R1, #+0]
    158                            }
    159                            else if(FTMx==1)
    160                            {
    161                              FTM_MOD1=mod;
    162                            }
    163                            else if(FTMx==2)
    164                            {
    165                              FTM_MOD2=mod;  
    166                            }
    167                            else
    168                              return 0;
    169                          }
    170                        }
    171                      }
    172                    }
    173                  }  
    174                }
    175              }
    176            }
    177            else
    178            {
    179              return 0;
    180            }
    181            
    182            if(FTMx==0)
   \                     ??FTM_PWM_Init_5:
   \   0000013E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000140   0x2800             CMP      R0,#+0
   \   00000142   0xF040 0x809F      BNE.W    ??FTM_PWM_Init_19
    183              {
    184                // 使能FTM时钟模块
    185                SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable2_3  ;; 0x4004803c
   \   0000014A   0x6800             LDR      R0,[R0, #+0]
   \   0000014C   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable2_3  ;; 0x4004803c
   \   00000154   0x6008             STR      R0,[R1, #+0]
    186            
    187                // 配置FTM控制寄存器
    188                // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    189                // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    190                FTM0_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);            //总线时钟由系统时钟分频得到，所以时钟源选择系统时钟
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   0000015A   0x7800             LDRB     R0,[R0, #+0]
   \   0000015C   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   00000160   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable2_4  ;; 0x40038000
   \   00000168   0x6008             STR      R0,[R1, #+0]
    191            
    192                // 设置PWM周期及占空比
    193                // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    194                // 配置FTM计数初始值
    195                FTM0_CNT = 0;
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable2_5  ;; 0x40038004
   \   0000016E   0x2100             MOVS     R1,#+0
   \   00000170   0x6001             STR      R1,[R0, #+0]
    196                FTM0_CNTIN = 0;
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable2_6  ;; 0x4003804c
   \   00000176   0x2100             MOVS     R1,#+0
   \   00000178   0x6001             STR      R1,[R0, #+0]
    197                
    198                // 配置FTM计数MOD值
    199                FTM0_MOD = FTM_MOD0;
   \   0000017A   0x.... 0x....      LDR.W    R0,??DataTable2_7  ;; 0x40038008
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   00000182   0x6809             LDR      R1,[R1, #+0]
   \   00000184   0x6001             STR      R1,[R0, #+0]
    200              }
    201            else if(FTMx==1)
    202              {
    203                // 使能FTM时钟模块
    204                SIM_SCGC6 |= SIM_SCGC6_FTM1_MASK;
    205            
    206                // 配置FTM控制寄存器
    207                // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    208                // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz 
    209                FTM1_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    210            
    211                // 设置PWM周期及占空比
    212                // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    213                // 配置FTM计数初始值
    214                FTM1_CNT = 0;
    215                FTM1_CNTIN = 0;
    216                
    217                // 配置FTM计数MOD值
    218                FTM1_MOD = FTM_MOD1;
    219              } 
    220            else if(FTMx==2)
    221              {
    222                // 使能FTM时钟模块
    223                SIM_SCGC3 |= SIM_SCGC3_FTM2_MASK;
    224            
    225                // 配置FTM控制寄存器
    226                // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    227                // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    228                FTM2_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
    229            
    230                // 设置PWM周期及占空比
    231                // PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    232                // 配置FTM计数初始值
    233                FTM2_CNT = 0;
    234                FTM2_CNTIN = 0;
    235                
    236                // 配置FTM计数MOD值
    237                FTM2_MOD = FTM_MOD2;
    238              }  
    239            else
    240              return 0;
    241          
    242            return 1;
   \                     ??FTM_PWM_Init_20:
   \   00000186   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_Init_1:
   \   00000188   0xBC30             POP      {R4,R5}
   \   0000018A   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_Init_3:
   \   0000018C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018E   0x2801             CMP      R0,#+1
   \   00000190   0xD103             BNE.N    ??FTM_PWM_Init_21
   \   00000192   0x.... 0x....      LDR.W    R4,??DataTable2_8
   \   00000196   0x6023             STR      R3,[R4, #+0]
   \   00000198   0xE752             B.N      ??FTM_PWM_Init_4
   \                     ??FTM_PWM_Init_21:
   \   0000019A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019C   0x2802             CMP      R0,#+2
   \   0000019E   0xD103             BNE.N    ??FTM_PWM_Init_22
   \   000001A0   0x.... 0x....      LDR.W    R4,??DataTable2_9
   \   000001A4   0x6023             STR      R3,[R4, #+0]
   \   000001A6   0xE74B             B.N      ??FTM_PWM_Init_4
   \                     ??FTM_PWM_Init_22:
   \   000001A8   0x2000             MOVS     R0,#+0
   \   000001AA   0xE7ED             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_6:
   \   000001AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001AE   0x2801             CMP      R0,#+1
   \   000001B0   0xD103             BNE.N    ??FTM_PWM_Init_23
   \   000001B2   0x.... 0x....      LDR.W    R4,??DataTable2_8
   \   000001B6   0x6023             STR      R3,[R4, #+0]
   \   000001B8   0xE756             B.N      ??FTM_PWM_Init_7
   \                     ??FTM_PWM_Init_23:
   \   000001BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BC   0x2802             CMP      R0,#+2
   \   000001BE   0xD103             BNE.N    ??FTM_PWM_Init_24
   \   000001C0   0x.... 0x....      LDR.W    R4,??DataTable2_9
   \   000001C4   0x6023             STR      R3,[R4, #+0]
   \   000001C6   0xE74F             B.N      ??FTM_PWM_Init_7
   \                     ??FTM_PWM_Init_24:
   \   000001C8   0x2000             MOVS     R0,#+0
   \   000001CA   0xE7DD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_8:
   \   000001CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CE   0x2801             CMP      R0,#+1
   \   000001D0   0xD103             BNE.N    ??FTM_PWM_Init_25
   \   000001D2   0x.... 0x....      LDR.W    R4,??DataTable2_8
   \   000001D6   0x6023             STR      R3,[R4, #+0]
   \   000001D8   0xE758             B.N      ??FTM_PWM_Init_9
   \                     ??FTM_PWM_Init_25:
   \   000001DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001DC   0x2802             CMP      R0,#+2
   \   000001DE   0xD103             BNE.N    ??FTM_PWM_Init_26
   \   000001E0   0x.... 0x....      LDR.W    R4,??DataTable2_9
   \   000001E4   0x6023             STR      R3,[R4, #+0]
   \   000001E6   0xE751             B.N      ??FTM_PWM_Init_9
   \                     ??FTM_PWM_Init_26:
   \   000001E8   0x2000             MOVS     R0,#+0
   \   000001EA   0xE7CD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_10:
   \   000001EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EE   0x2801             CMP      R0,#+1
   \   000001F0   0xD103             BNE.N    ??FTM_PWM_Init_27
   \   000001F2   0x.... 0x....      LDR.W    R4,??DataTable2_8
   \   000001F6   0x6023             STR      R3,[R4, #+0]
   \   000001F8   0xE75A             B.N      ??FTM_PWM_Init_11
   \                     ??FTM_PWM_Init_27:
   \   000001FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001FC   0x2802             CMP      R0,#+2
   \   000001FE   0xD103             BNE.N    ??FTM_PWM_Init_28
   \   00000200   0x.... 0x....      LDR.W    R4,??DataTable2_9
   \   00000204   0x6023             STR      R3,[R4, #+0]
   \   00000206   0xE753             B.N      ??FTM_PWM_Init_11
   \                     ??FTM_PWM_Init_28:
   \   00000208   0x2000             MOVS     R0,#+0
   \   0000020A   0xE7BD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_12:
   \   0000020C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000020E   0x2801             CMP      R0,#+1
   \   00000210   0xD103             BNE.N    ??FTM_PWM_Init_29
   \   00000212   0x.... 0x....      LDR.W    R4,??DataTable2_8
   \   00000216   0x6023             STR      R3,[R4, #+0]
   \   00000218   0xE75C             B.N      ??FTM_PWM_Init_13
   \                     ??FTM_PWM_Init_29:
   \   0000021A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000021C   0x2802             CMP      R0,#+2
   \   0000021E   0xD103             BNE.N    ??FTM_PWM_Init_30
   \   00000220   0x.... 0x....      LDR.W    R4,??DataTable2_9
   \   00000224   0x6023             STR      R3,[R4, #+0]
   \   00000226   0xE755             B.N      ??FTM_PWM_Init_13
   \                     ??FTM_PWM_Init_30:
   \   00000228   0x2000             MOVS     R0,#+0
   \   0000022A   0xE7AD             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_14:
   \   0000022C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000022E   0x2801             CMP      R0,#+1
   \   00000230   0xD102             BNE.N    ??FTM_PWM_Init_31
   \   00000232   0x....             LDR.N    R4,??DataTable2_8
   \   00000234   0x6023             STR      R3,[R4, #+0]
   \   00000236   0xE75F             B.N      ??FTM_PWM_Init_15
   \                     ??FTM_PWM_Init_31:
   \   00000238   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023A   0x2802             CMP      R0,#+2
   \   0000023C   0xD102             BNE.N    ??FTM_PWM_Init_32
   \   0000023E   0x....             LDR.N    R4,??DataTable2_9
   \   00000240   0x6023             STR      R3,[R4, #+0]
   \   00000242   0xE759             B.N      ??FTM_PWM_Init_15
   \                     ??FTM_PWM_Init_32:
   \   00000244   0x2000             MOVS     R0,#+0
   \   00000246   0xE79F             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_16:
   \   00000248   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000024A   0x2801             CMP      R0,#+1
   \   0000024C   0xD102             BNE.N    ??FTM_PWM_Init_33
   \   0000024E   0x....             LDR.N    R4,??DataTable2_8
   \   00000250   0x6023             STR      R3,[R4, #+0]
   \   00000252   0xE763             B.N      ??FTM_PWM_Init_17
   \                     ??FTM_PWM_Init_33:
   \   00000254   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000256   0x2802             CMP      R0,#+2
   \   00000258   0xD102             BNE.N    ??FTM_PWM_Init_34
   \   0000025A   0x....             LDR.N    R4,??DataTable2_9
   \   0000025C   0x6023             STR      R3,[R4, #+0]
   \   0000025E   0xE75D             B.N      ??FTM_PWM_Init_17
   \                     ??FTM_PWM_Init_34:
   \   00000260   0x2000             MOVS     R0,#+0
   \   00000262   0xE791             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_18:
   \   00000264   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000266   0x2801             CMP      R0,#+1
   \   00000268   0xD102             BNE.N    ??FTM_PWM_Init_35
   \   0000026A   0x....             LDR.N    R1,??DataTable2_8
   \   0000026C   0x600B             STR      R3,[R1, #+0]
   \   0000026E   0xE766             B.N      ??FTM_PWM_Init_5
   \                     ??FTM_PWM_Init_35:
   \   00000270   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000272   0x2802             CMP      R0,#+2
   \   00000274   0xD102             BNE.N    ??FTM_PWM_Init_36
   \   00000276   0x....             LDR.N    R1,??DataTable2_9
   \   00000278   0x600B             STR      R3,[R1, #+0]
   \   0000027A   0xE760             B.N      ??FTM_PWM_Init_5
   \                     ??FTM_PWM_Init_36:
   \   0000027C   0x2000             MOVS     R0,#+0
   \   0000027E   0xE783             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_2:
   \   00000280   0x2000             MOVS     R0,#+0
   \   00000282   0xE781             B.N      ??FTM_PWM_Init_1
   \                     ??FTM_PWM_Init_19:
   \   00000284   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000286   0x2801             CMP      R0,#+1
   \   00000288   0xD118             BNE.N    ??FTM_PWM_Init_37
   \   0000028A   0x....             LDR.N    R0,??DataTable2_3  ;; 0x4004803c
   \   0000028C   0x6800             LDR      R0,[R0, #+0]
   \   0000028E   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000292   0x....             LDR.N    R1,??DataTable2_3  ;; 0x4004803c
   \   00000294   0x6008             STR      R0,[R1, #+0]
   \   00000296   0x....             LDR.N    R0,??DataTable2_1
   \   00000298   0x7800             LDRB     R0,[R0, #+0]
   \   0000029A   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   0000029E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000002A2   0x....             LDR.N    R1,??DataTable2_10  ;; 0x40039000
   \   000002A4   0x6008             STR      R0,[R1, #+0]
   \   000002A6   0x....             LDR.N    R0,??DataTable2_11  ;; 0x40039004
   \   000002A8   0x2100             MOVS     R1,#+0
   \   000002AA   0x6001             STR      R1,[R0, #+0]
   \   000002AC   0x....             LDR.N    R0,??DataTable2_12  ;; 0x4003904c
   \   000002AE   0x2100             MOVS     R1,#+0
   \   000002B0   0x6001             STR      R1,[R0, #+0]
   \   000002B2   0x....             LDR.N    R0,??DataTable2_13  ;; 0x40039008
   \   000002B4   0x....             LDR.N    R1,??DataTable2_8
   \   000002B6   0x6809             LDR      R1,[R1, #+0]
   \   000002B8   0x6001             STR      R1,[R0, #+0]
   \   000002BA   0xE764             B.N      ??FTM_PWM_Init_20
   \                     ??FTM_PWM_Init_37:
   \   000002BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002BE   0x2802             CMP      R0,#+2
   \   000002C0   0xD118             BNE.N    ??FTM_PWM_Init_38
   \   000002C2   0x....             LDR.N    R0,??DataTable2_14  ;; 0x40048030
   \   000002C4   0x6800             LDR      R0,[R0, #+0]
   \   000002C6   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   000002CA   0x....             LDR.N    R1,??DataTable2_14  ;; 0x40048030
   \   000002CC   0x6008             STR      R0,[R1, #+0]
   \   000002CE   0x....             LDR.N    R0,??DataTable2_1
   \   000002D0   0x7800             LDRB     R0,[R0, #+0]
   \   000002D2   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   000002D6   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000002DA   0x....             LDR.N    R1,??DataTable2_15  ;; 0x400b8000
   \   000002DC   0x6008             STR      R0,[R1, #+0]
   \   000002DE   0x....             LDR.N    R0,??DataTable2_16  ;; 0x400b8004
   \   000002E0   0x2100             MOVS     R1,#+0
   \   000002E2   0x6001             STR      R1,[R0, #+0]
   \   000002E4   0x....             LDR.N    R0,??DataTable2_17  ;; 0x400b804c
   \   000002E6   0x2100             MOVS     R1,#+0
   \   000002E8   0x6001             STR      R1,[R0, #+0]
   \   000002EA   0x....             LDR.N    R0,??DataTable2_18  ;; 0x400b8008
   \   000002EC   0x....             LDR.N    R1,??DataTable2_9
   \   000002EE   0x6809             LDR      R1,[R1, #+0]
   \   000002F0   0x6001             STR      R1,[R0, #+0]
   \   000002F2   0xE748             B.N      ??FTM_PWM_Init_20
   \                     ??FTM_PWM_Init_38:
   \   000002F4   0x2000             MOVS     R0,#+0
   \   000002F6   0xE747             B.N      ??FTM_PWM_Init_1
    243          }
    244          
    245          
    246          /***************************************************************
    247          *函数名：uint8 FTM_PWM_Open(uint8 FTMx,uint8 channel, uint32 duty)
    248          *功能：  打开PWM通道，设置占空比
    249          *入口参数：(1)FTMx : 0
    250                               1
    251                               2
    252                     
    253                    (2)channel  通道号 
    254          
    255                    (3)duty     占空比
    256          *出口参数：无
    257          *说明：无
    258          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    259          uint8 FTM_PWM_Open(uint8 FTMx,uint8 channel, uint32 duty)
    260          {
   \                     FTM_PWM_Open:
   \   00000000   0xB418             PUSH     {R3,R4}
    261            //uint32 cv;
    262            volatile uint32 mod;               //设定一个32位不优化，无符号整型数mod
    263            
    264            if(duty>10000) return 0;           //设置占空比的值最大为10000
   \   00000002   0xF242 0x7311      MOVW     R3,#+10001
   \   00000006   0x429A             CMP      R2,R3
   \   00000008   0xD301             BCC.N    ??FTM_PWM_Open_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE069             B.N      ??FTM_PWM_Open_1
    265                                               //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    266            if(FTMx==0)
   \                     ??FTM_PWM_Open_0:
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD168             BNE.N    ??FTM_PWM_Open_2
    267            {
    268              mod = FTM_MOD0;                  //对应模块号，把相应模数值变量的值赋给mod
   \   00000014   0x....             LDR.N    R3,??DataTable2_2
   \   00000016   0x681B             LDR      R3,[R3, #+0]
   \   00000018   0x9300             STR      R3,[SP, #+0]
    269            }
    270            else if(FTMx==1)
    271            {
    272              mod==FTM_MOD1;
    273            }
    274            else if(FTMx==2)
    275            {
    276              mod==FTM_MOD2;
    277            }
    278            else
    279              return 0;
    280                                                                                                                             
    281            cv = (duty*(mod-0+1)+0)/10000;              //由 duty = CV/(MOD-CNTIN+1),cv为高电平持续时间所对应的数值，10000是为了提高精度
   \                     ??FTM_PWM_Open_3:
   \   0000001A   0x9B00             LDR      R3,[SP, #+0]
   \   0000001C   0x1C5B             ADDS     R3,R3,#+1
   \   0000001E   0x435A             MULS     R2,R3,R2
   \   00000020   0xF242 0x7310      MOVW     R3,#+10000
   \   00000024   0xFBB2 0xF2F3      UDIV     R2,R2,R3
   \   00000028   0x....             LDR.N    R3,??DataTable2_19
   \   0000002A   0x601A             STR      R2,[R3, #+0]
    282                                                        //原公式duty=cv/(mod+1),占空比duty赋值范围<1,而如果duty=cv*10000/(mod+1),赋值范围<10000,故提高精度
    283            if(FTMx==0)
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD126             BNE.N    ??FTM_PWM_Open_4
    284            {
    285              //选择并开启通道
    286              switch(channel)
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0x000A             MOVS     R2,R1
   \   00000036   0x2A00             CMP      R2,#+0
   \   00000038   0x2A02             CMP      R2,#+2
   \   0000003A   0xD905             BLS.N    ??FTM_PWM_Open_5
   \   0000003C   0x1ED2             SUBS     R2,R2,#+3
   \   0000003E   0xD06E             BEQ.N    ??FTM_PWM_Open_6
   \   00000040   0x1E52             SUBS     R2,R2,#+1
   \   00000042   0x2A03             CMP      R2,#+3
   \   00000044   0xD97B             BLS.N    ??FTM_PWM_Open_7
   \   00000046   0xE087             B.N      ??FTM_PWM_Open_8
    287                {
    288                  case 0:
    289                  case 1:
    290                  case 2:
    291                    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;                                    
   \                     ??FTM_PWM_Open_5:
   \   00000048   0x....             LDR.N    R2,??DataTable2_20  ;; 0x40048038
   \   0000004A   0x6812             LDR      R2,[R2, #+0]
   \   0000004C   0xF44F 0x7300      MOV      R3,#+512
   \   00000050   0x431A             ORRS     R2,R3,R2
   \   00000052   0x....             LDR.N    R3,??DataTable2_20  ;; 0x40048038
   \   00000054   0x601A             STR      R2,[R3, #+0]
    292                    PORT_PCR_REG(PORTA_BASE_PTR, channel+3) = PORT_PCR_MUX(3);   //设置A5引脚为FTM0_CH2功能
   \   00000056   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000058   0x008A             LSLS     R2,R1,#+2
   \   0000005A   0xF102 0x4280      ADD      R2,R2,#+1073741824
   \   0000005E   0xF512 0x2292      ADDS     R2,R2,#+299008
   \   00000062   0xF44F 0x7340      MOV      R3,#+768
   \   00000066   0x60D3             STR      R3,[R2, #+12]
    293                    break;
    294                  case 3:
    295                    SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
    296                    PORT_PCR_REG(PORTC_BASE_PTR, channel+1) = PORT_PCR_MUX(4);   //设置C4引脚为FTM0_CH3功能
    297                    break;
    298                  case 4:
    299                  case 5:
    300                  case 6:
    301                  case 7:
    302                    SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    303                    PORT_PCR_REG(PORTD_BASE_PTR, channel) = PORT_PCR_MUX(4);     //设置D7引脚为FTM0_CH7功能
    304                    break;
    305                  default:
    306                    return 0;
    307                }  
    308            
    309              // 配置FTM通道控制寄存器 
    310              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10  (FTM_CnSC_ELSA未设置。默认为0)                                    
    311              FTM_CnSC_REG(FTM0_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK; //选择边沿对齐PWM，正极性 
   \                     ??FTM_PWM_Open_9:
   \   00000068   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006A   0x....             LDR.N    R2,??DataTable2_21  ;; 0x4003800c
   \   0000006C   0x2328             MOVS     R3,#+40
   \   0000006E   0xF842 0x3031      STR      R3,[R2, R1, LSL #+3]
    312              // 配置FTM通道值
    313              FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv; //把CV（高电平对应的数值）赋给FTM0对应通道值
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0x....             LDR.N    R2,??DataTable2_21  ;; 0x4003800c
   \   00000076   0xEB12 0x02C1      ADDS     R2,R2,R1, LSL #+3
   \   0000007A   0x....             LDR.N    R3,??DataTable2_19
   \   0000007C   0x681B             LDR      R3,[R3, #+0]
   \   0000007E   0x6053             STR      R3,[R2, #+4]
    314            } 
    315            
    316            if(FTMx==1)
   \                     ??FTM_PWM_Open_4:
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x2801             CMP      R0,#+1
   \   00000084   0xD11A             BNE.N    ??FTM_PWM_Open_10
    317            {
    318              //选择并开启通道
    319              switch(channel)
   \   00000086   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000088   0x2900             CMP      R1,#+0
   \   0000008A   0xD167             BNE.N    ??FTM_PWM_Open_11
    320                {
    321                  case 0:
    322                        SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;                                   
   \   0000008C   0x....             LDR.N    R2,??DataTable2_20  ;; 0x40048038
   \   0000008E   0x6812             LDR      R2,[R2, #+0]
   \   00000090   0xF452 0x6280      ORRS     R2,R2,#0x400
   \   00000094   0x....             LDR.N    R3,??DataTable2_20  ;; 0x40048038
   \   00000096   0x601A             STR      R2,[R3, #+0]
    323                        PORT_PCR_REG(PORTB_BASE_PTR, channel) = PORT_PCR_MUX(3);     //设置引脚B0为FTM1_CH0功能
   \   00000098   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009A   0x....             LDR.N    R2,??DataTable2_22  ;; 0x4004a000
   \   0000009C   0xF44F 0x7340      MOV      R3,#+768
   \   000000A0   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
    324                         //SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    325                         //PORTB_PCR0= PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK;
    326                         break;
    327                  case 1:
    328                  case 2:
    329                  case 3:
    330                  case 4:
    331                  case 5:
    332                  case 6:
    333                  case 7:
    334                  default:
    335                    return 0;
    336                }  
    337            
    338              // 配置FTM通道控制寄存器 
    339              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    340              FTM_CnSC_REG(FTM1_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   000000A4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A6   0x....             LDR.N    R2,??DataTable2_23  ;; 0x4003900c
   \   000000A8   0x2328             MOVS     R3,#+40
   \   000000AA   0xF842 0x3031      STR      R3,[R2, R1, LSL #+3]
    341              // 配置FTM通道值
    342              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
   \   000000AE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B0   0x....             LDR.N    R2,??DataTable2_23  ;; 0x4003900c
   \   000000B2   0xEB12 0x02C1      ADDS     R2,R2,R1, LSL #+3
   \   000000B6   0x....             LDR.N    R3,??DataTable2_19
   \   000000B8   0x681B             LDR      R3,[R3, #+0]
   \   000000BA   0x6053             STR      R3,[R2, #+4]
    343            } 
    344            
    345            if(FTMx==2)
   \                     ??FTM_PWM_Open_10:
   \   000000BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BE   0x2802             CMP      R0,#+2
   \   000000C0   0xD10E             BNE.N    ??FTM_PWM_Open_12
    346            {
    347              //选择并开启通道
    348              switch(channel)
   \   000000C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C4   0x2900             CMP      R1,#+0
   \   000000C6   0xD14B             BNE.N    ??FTM_PWM_Open_13
    349                {
    350                  case 0:
    351                    break;
    352                  case 1:
    353                  case 2:
    354                  case 3:
    355                  case 4:
    356                  case 5:
    357                  case 6:
    358                  case 7:
    359                  default:
    360                    return 0;
    361                }  
    362            
    363              // 配置FTM通道控制寄存器 
    364              // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    365              FTM_CnSC_REG(FTM2_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   000000C8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CA   0x....             LDR.N    R0,??DataTable2_24  ;; 0x400b800c
   \   000000CC   0x2228             MOVS     R2,#+40
   \   000000CE   0xF840 0x2031      STR      R2,[R0, R1, LSL #+3]
    366              // 配置FTM通道值
    367              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
   \   000000D2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D4   0x....             LDR.N    R0,??DataTable2_24  ;; 0x400b800c
   \   000000D6   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000000DA   0x....             LDR.N    R1,??DataTable2_19
   \   000000DC   0x6809             LDR      R1,[R1, #+0]
   \   000000DE   0x6041             STR      R1,[R0, #+4]
    368            } 
    369            return 1;
   \                     ??FTM_PWM_Open_12:
   \   000000E0   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_Open_1:
   \   000000E2   0xBC12             POP      {R1,R4}
   \   000000E4   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_Open_2:
   \   000000E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   0x2801             CMP      R0,#+1
   \   000000EA   0xD109             BNE.N    ??FTM_PWM_Open_14
   \   000000EC   0x9B00             LDR      R3,[SP, #+0]
   \   000000EE   0x....             LDR.N    R4,??DataTable2_8
   \   000000F0   0x6824             LDR      R4,[R4, #+0]
   \   000000F2   0x42A3             CMP      R3,R4
   \   000000F4   0xD101             BNE.N    ??FTM_PWM_Open_15
   \   000000F6   0x2301             MOVS     R3,#+1
   \   000000F8   0xE000             B.N      ??FTM_PWM_Open_16
   \                     ??FTM_PWM_Open_15:
   \   000000FA   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_Open_16:
   \   000000FC   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000FE   0xE78C             B.N      ??FTM_PWM_Open_3
   \                     ??FTM_PWM_Open_14:
   \   00000100   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000102   0x2802             CMP      R0,#+2
   \   00000104   0xD109             BNE.N    ??FTM_PWM_Open_17
   \   00000106   0x9B00             LDR      R3,[SP, #+0]
   \   00000108   0x....             LDR.N    R4,??DataTable2_9
   \   0000010A   0x6824             LDR      R4,[R4, #+0]
   \   0000010C   0x42A3             CMP      R3,R4
   \   0000010E   0xD101             BNE.N    ??FTM_PWM_Open_18
   \   00000110   0x2301             MOVS     R3,#+1
   \   00000112   0xE000             B.N      ??FTM_PWM_Open_19
   \                     ??FTM_PWM_Open_18:
   \   00000114   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_Open_19:
   \   00000116   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000118   0xE77F             B.N      ??FTM_PWM_Open_3
   \                     ??FTM_PWM_Open_17:
   \   0000011A   0x2000             MOVS     R0,#+0
   \   0000011C   0xE7E1             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_6:
   \   0000011E   0x....             LDR.N    R2,??DataTable2_20  ;; 0x40048038
   \   00000120   0x6812             LDR      R2,[R2, #+0]
   \   00000122   0xF452 0x6200      ORRS     R2,R2,#0x800
   \   00000126   0x....             LDR.N    R3,??DataTable2_20  ;; 0x40048038
   \   00000128   0x601A             STR      R2,[R3, #+0]
   \   0000012A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000012C   0x008A             LSLS     R2,R1,#+2
   \   0000012E   0xF102 0x4280      ADD      R2,R2,#+1073741824
   \   00000132   0xF512 0x2296      ADDS     R2,R2,#+307200
   \   00000136   0xF44F 0x6380      MOV      R3,#+1024
   \   0000013A   0x6053             STR      R3,[R2, #+4]
   \   0000013C   0xE794             B.N      ??FTM_PWM_Open_9
   \                     ??FTM_PWM_Open_7:
   \   0000013E   0x....             LDR.N    R2,??DataTable2_20  ;; 0x40048038
   \   00000140   0x6812             LDR      R2,[R2, #+0]
   \   00000142   0xF452 0x5280      ORRS     R2,R2,#0x1000
   \   00000146   0x....             LDR.N    R3,??DataTable2_20  ;; 0x40048038
   \   00000148   0x601A             STR      R2,[R3, #+0]
   \   0000014A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014C   0x....             LDR.N    R2,??DataTable2_25  ;; 0x4004c000
   \   0000014E   0xF44F 0x6380      MOV      R3,#+1024
   \   00000152   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
   \   00000156   0xE787             B.N      ??FTM_PWM_Open_9
   \                     ??FTM_PWM_Open_8:
   \   00000158   0x2000             MOVS     R0,#+0
   \   0000015A   0xE7C2             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_11:
   \   0000015C   0x2000             MOVS     R0,#+0
   \   0000015E   0xE7C0             B.N      ??FTM_PWM_Open_1
   \                     ??FTM_PWM_Open_13:
   \   00000160   0x2000             MOVS     R0,#+0
   \   00000162   0xE7BE             B.N      ??FTM_PWM_Open_1
    370          }
    371          
    372          /***************************************************************
    373          *函数名：uint8 FTM_PWM_ChangeDuty(uint8 FTMx,uint8 channel, uint32 duty)
    374          *功能：  PWM通道已打开，改变占空比
    375          *入口参数：(1)FTMx : 0
    376                               1
    377                               2
    378                     
    379                    (2)channel  通道号 
    380          
    381                    (3)duty     占空比
    382          *出口参数：无
    383          *说明：无
    384          ***************************************************************/

   \                                 In section .text, align 2, keep-with-next
    385          uint8 FTM_PWM_ChangeDuty(uint8 FTMx,uint8 channel, uint32 duty)
    386          {
   \                     FTM_PWM_ChangeDuty:
   \   00000000   0xB418             PUSH     {R3,R4}
    387            //uint32 cv;
    388            volatile uint32 mod;
    389            
    390            if(duty>10000) return 0;
   \   00000002   0xF242 0x7311      MOVW     R3,#+10001
   \   00000006   0x429A             CMP      R2,R3
   \   00000008   0xD301             BCC.N    ??FTM_PWM_ChangeDuty_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE019             B.N      ??FTM_PWM_ChangeDuty_1
    391            //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    392            if(FTMx==0)
   \                     ??FTM_PWM_ChangeDuty_0:
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD118             BNE.N    ??FTM_PWM_ChangeDuty_2
    393            {
    394              mod =FTM_MOD0;
   \   00000014   0x....             LDR.N    R3,??DataTable2_2
   \   00000016   0x681B             LDR      R3,[R3, #+0]
   \   00000018   0x9300             STR      R3,[SP, #+0]
    395            }
    396            else if(FTMx==1)
    397            {
    398              mod==FTM_MOD1;
    399            }
    400            else if(FTMx==2)
    401            {
    402              mod==FTM_MOD2;
    403            }
    404            else
    405              return 0;
    406            
    407            cv = (duty*(mod-0+1)+0)/10000;
   \                     ??FTM_PWM_ChangeDuty_3:
   \   0000001A   0x9B00             LDR      R3,[SP, #+0]
   \   0000001C   0x1C5B             ADDS     R3,R3,#+1
   \   0000001E   0x435A             MULS     R2,R3,R2
   \   00000020   0xF242 0x7310      MOVW     R3,#+10000
   \   00000024   0xFBB2 0xF2F3      UDIV     R2,R2,R3
   \   00000028   0x....             LDR.N    R3,??DataTable2_19
   \   0000002A   0x601A             STR      R2,[R3, #+0]
    408            
    409            if(FTMx==0)
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD125             BNE.N    ??FTM_PWM_ChangeDuty_4
    410            {
    411              // 配置FTM通道值
    412              FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv;
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0x....             LDR.N    R0,??DataTable2_21  ;; 0x4003800c
   \   00000036   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   0000003A   0x....             LDR.N    R1,??DataTable2_19
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x6041             STR      R1,[R0, #+4]
    413            }
    414            else if(FTMx==1)
    415            {
    416              // 配置FTM通道值
    417              FTM_CnV_REG(FTM1_BASE_PTR, channel) = cv;
    418            }
    419            else if(FTMx==2)
    420            {
    421              // 配置FTM通道值
    422              FTM_CnV_REG(FTM2_BASE_PTR, channel) = cv;
    423            }
    424            else
    425              return 0;
    426            return 1;
   \                     ??FTM_PWM_ChangeDuty_5:
   \   00000040   0x2001             MOVS     R0,#+1
   \                     ??FTM_PWM_ChangeDuty_1:
   \   00000042   0xBC12             POP      {R1,R4}
   \   00000044   0x4770             BX       LR               ;; return
   \                     ??FTM_PWM_ChangeDuty_2:
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xD109             BNE.N    ??FTM_PWM_ChangeDuty_6
   \   0000004C   0x9B00             LDR      R3,[SP, #+0]
   \   0000004E   0x....             LDR.N    R4,??DataTable2_8
   \   00000050   0x6824             LDR      R4,[R4, #+0]
   \   00000052   0x42A3             CMP      R3,R4
   \   00000054   0xD101             BNE.N    ??FTM_PWM_ChangeDuty_7
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0xE000             B.N      ??FTM_PWM_ChangeDuty_8
   \                     ??FTM_PWM_ChangeDuty_7:
   \   0000005A   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_ChangeDuty_8:
   \   0000005C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000005E   0xE7DC             B.N      ??FTM_PWM_ChangeDuty_3
   \                     ??FTM_PWM_ChangeDuty_6:
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0x2802             CMP      R0,#+2
   \   00000064   0xD109             BNE.N    ??FTM_PWM_ChangeDuty_9
   \   00000066   0x9B00             LDR      R3,[SP, #+0]
   \   00000068   0x....             LDR.N    R4,??DataTable2_9
   \   0000006A   0x6824             LDR      R4,[R4, #+0]
   \   0000006C   0x42A3             CMP      R3,R4
   \   0000006E   0xD101             BNE.N    ??FTM_PWM_ChangeDuty_10
   \   00000070   0x2301             MOVS     R3,#+1
   \   00000072   0xE000             B.N      ??FTM_PWM_ChangeDuty_11
   \                     ??FTM_PWM_ChangeDuty_10:
   \   00000074   0x2300             MOVS     R3,#+0
   \                     ??FTM_PWM_ChangeDuty_11:
   \   00000076   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000078   0xE7CF             B.N      ??FTM_PWM_ChangeDuty_3
   \                     ??FTM_PWM_ChangeDuty_9:
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0xE7E1             B.N      ??FTM_PWM_ChangeDuty_1
   \                     ??FTM_PWM_ChangeDuty_4:
   \   0000007E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000080   0x2801             CMP      R0,#+1
   \   00000082   0xD107             BNE.N    ??FTM_PWM_ChangeDuty_12
   \   00000084   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000086   0x....             LDR.N    R0,??DataTable2_23  ;; 0x4003900c
   \   00000088   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   0000008C   0x....             LDR.N    R1,??DataTable2_19
   \   0000008E   0x6809             LDR      R1,[R1, #+0]
   \   00000090   0x6041             STR      R1,[R0, #+4]
   \   00000092   0xE7D5             B.N      ??FTM_PWM_ChangeDuty_5
   \                     ??FTM_PWM_ChangeDuty_12:
   \   00000094   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000096   0x2802             CMP      R0,#+2
   \   00000098   0xD107             BNE.N    ??FTM_PWM_ChangeDuty_13
   \   0000009A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009C   0x....             LDR.N    R0,??DataTable2_24  ;; 0x400b800c
   \   0000009E   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000000A2   0x....             LDR.N    R1,??DataTable2_19
   \   000000A4   0x6809             LDR      R1,[R1, #+0]
   \   000000A6   0x6041             STR      R1,[R0, #+4]
   \   000000A8   0xE7CA             B.N      ??FTM_PWM_ChangeDuty_5
   \                     ??FTM_PWM_ChangeDuty_13:
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0xE7C9             B.N      ??FTM_PWM_ChangeDuty_1
    427          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     ps

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     FTM_MOD0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x40038004         DC32     0x40038004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x4003804C         DC32     0x4003804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x40038008         DC32     0x40038008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     FTM_MOD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     FTM_MOD2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x40039004         DC32     0x40039004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x4003904C         DC32     0x4003904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x40039008         DC32     0x40039008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x400B804C         DC32     0x400b804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x400B8008         DC32     0x400b8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     cv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x4003800C         DC32     0x4003800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x4003900C         DC32     0x4003900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x400B800C         DC32     0x400b800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x4004C000         DC32     0x4004c000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  FTM_PWM_ChangeDuty
        8  FTM_PWM_Init
        8  FTM_PWM_Open


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  FTM_MOD0
       4  FTM_MOD1
       4  FTM_MOD2
     174  FTM_PWM_ChangeDuty
     760  FTM_PWM_Init
     356  FTM_PWM_Open
       4  cv
       1  ps

 
    17 bytes in section .bss
 1 394 bytes in section .text
 
 1 394 bytes of CODE memory
    17 bytes of DATA memory

Errors: none
Warnings: 2
